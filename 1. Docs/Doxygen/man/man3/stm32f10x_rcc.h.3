.TH "C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_rcc.h" 3 "Sun Apr 16 2017" "STM32_CMSIS" \" -*- nroff -*-
.ad l
.nh
.SH NAME
C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_rcc.h \- This file contains all the functions prototypes for the RCC firmware library\&.  

.SH SYNOPSIS
.br
.PP
\fC#include 'stm32f10x\&.h'\fP
.br

.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBRCC_ClocksTypeDef\fP"
.br
.in -1c
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBRCC_HSE_OFF\fP   ((uint32_t)0x00000000)"
.br
.ti -1c
.RI "#define \fBRCC_HSE_ON\fP   ((uint32_t)0x00010000)"
.br
.ti -1c
.RI "#define \fBRCC_HSE_Bypass\fP   ((uint32_t)0x00040000)"
.br
.ti -1c
.RI "#define \fBIS_RCC_HSE\fP(HSE)"
.br
.ti -1c
.RI "#define \fBRCC_PLLSource_HSI_Div2\fP   ((uint32_t)0x00000000)"
.br
.ti -1c
.RI "#define \fBRCC_PLLSource_HSE_Div1\fP   ((uint32_t)0x00010000)"
.br
.ti -1c
.RI "#define \fBRCC_PLLSource_HSE_Div2\fP   ((uint32_t)0x00030000)"
.br
.ti -1c
.RI "#define \fBIS_RCC_PLL_SOURCE\fP(SOURCE)"
.br
.ti -1c
.RI "#define \fBRCC_PLLMul_2\fP   ((uint32_t)0x00000000)"
.br
.ti -1c
.RI "#define \fBRCC_PLLMul_3\fP   ((uint32_t)0x00040000)"
.br
.ti -1c
.RI "#define \fBRCC_PLLMul_4\fP   ((uint32_t)0x00080000)"
.br
.ti -1c
.RI "#define \fBRCC_PLLMul_5\fP   ((uint32_t)0x000C0000)"
.br
.ti -1c
.RI "#define \fBRCC_PLLMul_6\fP   ((uint32_t)0x00100000)"
.br
.ti -1c
.RI "#define \fBRCC_PLLMul_7\fP   ((uint32_t)0x00140000)"
.br
.ti -1c
.RI "#define \fBRCC_PLLMul_8\fP   ((uint32_t)0x00180000)"
.br
.ti -1c
.RI "#define \fBRCC_PLLMul_9\fP   ((uint32_t)0x001C0000)"
.br
.ti -1c
.RI "#define \fBRCC_PLLMul_10\fP   ((uint32_t)0x00200000)"
.br
.ti -1c
.RI "#define \fBRCC_PLLMul_11\fP   ((uint32_t)0x00240000)"
.br
.ti -1c
.RI "#define \fBRCC_PLLMul_12\fP   ((uint32_t)0x00280000)"
.br
.ti -1c
.RI "#define \fBRCC_PLLMul_13\fP   ((uint32_t)0x002C0000)"
.br
.ti -1c
.RI "#define \fBRCC_PLLMul_14\fP   ((uint32_t)0x00300000)"
.br
.ti -1c
.RI "#define \fBRCC_PLLMul_15\fP   ((uint32_t)0x00340000)"
.br
.ti -1c
.RI "#define \fBRCC_PLLMul_16\fP   ((uint32_t)0x00380000)"
.br
.ti -1c
.RI "#define \fBIS_RCC_PLL_MUL\fP(MUL)"
.br
.ti -1c
.RI "#define \fBRCC_SYSCLKSource_HSI\fP   ((uint32_t)0x00000000)"
.br
.ti -1c
.RI "#define \fBRCC_SYSCLKSource_HSE\fP   ((uint32_t)0x00000001)"
.br
.ti -1c
.RI "#define \fBRCC_SYSCLKSource_PLLCLK\fP   ((uint32_t)0x00000002)"
.br
.ti -1c
.RI "#define \fBIS_RCC_SYSCLK_SOURCE\fP(SOURCE)"
.br
.ti -1c
.RI "#define \fBRCC_SYSCLK_Div1\fP   ((uint32_t)0x00000000)"
.br
.ti -1c
.RI "#define \fBRCC_SYSCLK_Div2\fP   ((uint32_t)0x00000080)"
.br
.ti -1c
.RI "#define \fBRCC_SYSCLK_Div4\fP   ((uint32_t)0x00000090)"
.br
.ti -1c
.RI "#define \fBRCC_SYSCLK_Div8\fP   ((uint32_t)0x000000A0)"
.br
.ti -1c
.RI "#define \fBRCC_SYSCLK_Div16\fP   ((uint32_t)0x000000B0)"
.br
.ti -1c
.RI "#define \fBRCC_SYSCLK_Div64\fP   ((uint32_t)0x000000C0)"
.br
.ti -1c
.RI "#define \fBRCC_SYSCLK_Div128\fP   ((uint32_t)0x000000D0)"
.br
.ti -1c
.RI "#define \fBRCC_SYSCLK_Div256\fP   ((uint32_t)0x000000E0)"
.br
.ti -1c
.RI "#define \fBRCC_SYSCLK_Div512\fP   ((uint32_t)0x000000F0)"
.br
.ti -1c
.RI "#define \fBIS_RCC_HCLK\fP(HCLK)"
.br
.ti -1c
.RI "#define \fBRCC_HCLK_Div1\fP   ((uint32_t)0x00000000)"
.br
.ti -1c
.RI "#define \fBRCC_HCLK_Div2\fP   ((uint32_t)0x00000400)"
.br
.ti -1c
.RI "#define \fBRCC_HCLK_Div4\fP   ((uint32_t)0x00000500)"
.br
.ti -1c
.RI "#define \fBRCC_HCLK_Div8\fP   ((uint32_t)0x00000600)"
.br
.ti -1c
.RI "#define \fBRCC_HCLK_Div16\fP   ((uint32_t)0x00000700)"
.br
.ti -1c
.RI "#define \fBIS_RCC_PCLK\fP(PCLK)"
.br
.ti -1c
.RI "#define \fBRCC_IT_LSIRDY\fP   ((uint8_t)0x01)"
.br
.ti -1c
.RI "#define \fBRCC_IT_LSERDY\fP   ((uint8_t)0x02)"
.br
.ti -1c
.RI "#define \fBRCC_IT_HSIRDY\fP   ((uint8_t)0x04)"
.br
.ti -1c
.RI "#define \fBRCC_IT_HSERDY\fP   ((uint8_t)0x08)"
.br
.ti -1c
.RI "#define \fBRCC_IT_PLLRDY\fP   ((uint8_t)0x10)"
.br
.ti -1c
.RI "#define \fBRCC_IT_CSS\fP   ((uint8_t)0x80)"
.br
.ti -1c
.RI "#define \fBIS_RCC_IT\fP(IT)   ((((IT) & (uint8_t)0xE0) == 0x00) && ((IT) != 0x00))"
.br
.ti -1c
.RI "#define \fBIS_RCC_GET_IT\fP(IT)"
.br
.ti -1c
.RI "#define \fBIS_RCC_CLEAR_IT\fP(IT)   ((((IT) & (uint8_t)0x60) == 0x00) && ((IT) != 0x00))"
.br
.ti -1c
.RI "#define \fBRCC_USBCLKSource_PLLCLK_1Div5\fP   ((uint8_t)0x00)"
.br
.ti -1c
.RI "#define \fBRCC_USBCLKSource_PLLCLK_Div1\fP   ((uint8_t)0x01)"
.br
.ti -1c
.RI "#define \fBIS_RCC_USBCLK_SOURCE\fP(SOURCE)"
.br
.ti -1c
.RI "#define \fBRCC_PCLK2_Div2\fP   ((uint32_t)0x00000000)"
.br
.ti -1c
.RI "#define \fBRCC_PCLK2_Div4\fP   ((uint32_t)0x00004000)"
.br
.ti -1c
.RI "#define \fBRCC_PCLK2_Div6\fP   ((uint32_t)0x00008000)"
.br
.ti -1c
.RI "#define \fBRCC_PCLK2_Div8\fP   ((uint32_t)0x0000C000)"
.br
.ti -1c
.RI "#define \fBIS_RCC_ADCCLK\fP(ADCCLK)"
.br
.ti -1c
.RI "#define \fBRCC_LSE_OFF\fP   ((uint8_t)0x00)"
.br
.ti -1c
.RI "#define \fBRCC_LSE_ON\fP   ((uint8_t)0x01)"
.br
.ti -1c
.RI "#define \fBRCC_LSE_Bypass\fP   ((uint8_t)0x04)"
.br
.ti -1c
.RI "#define \fBIS_RCC_LSE\fP(LSE)"
.br
.ti -1c
.RI "#define \fBRCC_RTCCLKSource_LSE\fP   ((uint32_t)0x00000100)"
.br
.ti -1c
.RI "#define \fBRCC_RTCCLKSource_LSI\fP   ((uint32_t)0x00000200)"
.br
.ti -1c
.RI "#define \fBRCC_RTCCLKSource_HSE_Div128\fP   ((uint32_t)0x00000300)"
.br
.ti -1c
.RI "#define \fBIS_RCC_RTCCLK_SOURCE\fP(SOURCE)"
.br
.ti -1c
.RI "#define \fBRCC_AHBPeriph_DMA1\fP   ((uint32_t)0x00000001)"
.br
.ti -1c
.RI "#define \fBRCC_AHBPeriph_DMA2\fP   ((uint32_t)0x00000002)"
.br
.ti -1c
.RI "#define \fBRCC_AHBPeriph_SRAM\fP   ((uint32_t)0x00000004)"
.br
.ti -1c
.RI "#define \fBRCC_AHBPeriph_FLITF\fP   ((uint32_t)0x00000010)"
.br
.ti -1c
.RI "#define \fBRCC_AHBPeriph_CRC\fP   ((uint32_t)0x00000040)"
.br
.ti -1c
.RI "#define \fBRCC_AHBPeriph_FSMC\fP   ((uint32_t)0x00000100)"
.br
.ti -1c
.RI "#define \fBRCC_AHBPeriph_SDIO\fP   ((uint32_t)0x00000400)"
.br
.ti -1c
.RI "#define \fBIS_RCC_AHB_PERIPH\fP(PERIPH)   ((((PERIPH) & 0xFFFFFAA8) == 0x00) && ((PERIPH) != 0x00))"
.br
.ti -1c
.RI "#define \fBRCC_APB2Periph_AFIO\fP   ((uint32_t)0x00000001)"
.br
.ti -1c
.RI "#define \fBRCC_APB2Periph_GPIOA\fP   ((uint32_t)0x00000004)"
.br
.ti -1c
.RI "#define \fBRCC_APB2Periph_GPIOB\fP   ((uint32_t)0x00000008)"
.br
.ti -1c
.RI "#define \fBRCC_APB2Periph_GPIOC\fP   ((uint32_t)0x00000010)"
.br
.ti -1c
.RI "#define \fBRCC_APB2Periph_GPIOD\fP   ((uint32_t)0x00000020)"
.br
.ti -1c
.RI "#define \fBRCC_APB2Periph_GPIOE\fP   ((uint32_t)0x00000040)"
.br
.ti -1c
.RI "#define \fBRCC_APB2Periph_GPIOF\fP   ((uint32_t)0x00000080)"
.br
.ti -1c
.RI "#define \fBRCC_APB2Periph_GPIOG\fP   ((uint32_t)0x00000100)"
.br
.ti -1c
.RI "#define \fBRCC_APB2Periph_ADC1\fP   ((uint32_t)0x00000200)"
.br
.ti -1c
.RI "#define \fBRCC_APB2Periph_ADC2\fP   ((uint32_t)0x00000400)"
.br
.ti -1c
.RI "#define \fBRCC_APB2Periph_TIM1\fP   ((uint32_t)0x00000800)"
.br
.ti -1c
.RI "#define \fBRCC_APB2Periph_SPI1\fP   ((uint32_t)0x00001000)"
.br
.ti -1c
.RI "#define \fBRCC_APB2Periph_TIM8\fP   ((uint32_t)0x00002000)"
.br
.ti -1c
.RI "#define \fBRCC_APB2Periph_USART1\fP   ((uint32_t)0x00004000)"
.br
.ti -1c
.RI "#define \fBRCC_APB2Periph_ADC3\fP   ((uint32_t)0x00008000)"
.br
.ti -1c
.RI "#define \fBRCC_APB2Periph_TIM15\fP   ((uint32_t)0x00010000)"
.br
.ti -1c
.RI "#define \fBRCC_APB2Periph_TIM16\fP   ((uint32_t)0x00020000)"
.br
.ti -1c
.RI "#define \fBRCC_APB2Periph_TIM17\fP   ((uint32_t)0x00040000)"
.br
.ti -1c
.RI "#define \fBRCC_APB2Periph_TIM9\fP   ((uint32_t)0x00080000)"
.br
.ti -1c
.RI "#define \fBRCC_APB2Periph_TIM10\fP   ((uint32_t)0x00100000)"
.br
.ti -1c
.RI "#define \fBRCC_APB2Periph_TIM11\fP   ((uint32_t)0x00200000)"
.br
.ti -1c
.RI "#define \fBIS_RCC_APB2_PERIPH\fP(PERIPH)   ((((PERIPH) & 0xFFC00002) == 0x00) && ((PERIPH) != 0x00))"
.br
.ti -1c
.RI "#define \fBRCC_APB1Periph_TIM2\fP   ((uint32_t)0x00000001)"
.br
.ti -1c
.RI "#define \fBRCC_APB1Periph_TIM3\fP   ((uint32_t)0x00000002)"
.br
.ti -1c
.RI "#define \fBRCC_APB1Periph_TIM4\fP   ((uint32_t)0x00000004)"
.br
.ti -1c
.RI "#define \fBRCC_APB1Periph_TIM5\fP   ((uint32_t)0x00000008)"
.br
.ti -1c
.RI "#define \fBRCC_APB1Periph_TIM6\fP   ((uint32_t)0x00000010)"
.br
.ti -1c
.RI "#define \fBRCC_APB1Periph_TIM7\fP   ((uint32_t)0x00000020)"
.br
.ti -1c
.RI "#define \fBRCC_APB1Periph_TIM12\fP   ((uint32_t)0x00000040)"
.br
.ti -1c
.RI "#define \fBRCC_APB1Periph_TIM13\fP   ((uint32_t)0x00000080)"
.br
.ti -1c
.RI "#define \fBRCC_APB1Periph_TIM14\fP   ((uint32_t)0x00000100)"
.br
.ti -1c
.RI "#define \fBRCC_APB1Periph_WWDG\fP   ((uint32_t)0x00000800)"
.br
.ti -1c
.RI "#define \fBRCC_APB1Periph_SPI2\fP   ((uint32_t)0x00004000)"
.br
.ti -1c
.RI "#define \fBRCC_APB1Periph_SPI3\fP   ((uint32_t)0x00008000)"
.br
.ti -1c
.RI "#define \fBRCC_APB1Periph_USART2\fP   ((uint32_t)0x00020000)"
.br
.ti -1c
.RI "#define \fBRCC_APB1Periph_USART3\fP   ((uint32_t)0x00040000)"
.br
.ti -1c
.RI "#define \fBRCC_APB1Periph_UART4\fP   ((uint32_t)0x00080000)"
.br
.ti -1c
.RI "#define \fBRCC_APB1Periph_UART5\fP   ((uint32_t)0x00100000)"
.br
.ti -1c
.RI "#define \fBRCC_APB1Periph_I2C1\fP   ((uint32_t)0x00200000)"
.br
.ti -1c
.RI "#define \fBRCC_APB1Periph_I2C2\fP   ((uint32_t)0x00400000)"
.br
.ti -1c
.RI "#define \fBRCC_APB1Periph_USB\fP   ((uint32_t)0x00800000)"
.br
.ti -1c
.RI "#define \fBRCC_APB1Periph_CAN1\fP   ((uint32_t)0x02000000)"
.br
.ti -1c
.RI "#define \fBRCC_APB1Periph_CAN2\fP   ((uint32_t)0x04000000)"
.br
.ti -1c
.RI "#define \fBRCC_APB1Periph_BKP\fP   ((uint32_t)0x08000000)"
.br
.ti -1c
.RI "#define \fBRCC_APB1Periph_PWR\fP   ((uint32_t)0x10000000)"
.br
.ti -1c
.RI "#define \fBRCC_APB1Periph_DAC\fP   ((uint32_t)0x20000000)"
.br
.ti -1c
.RI "#define \fBRCC_APB1Periph_CEC\fP   ((uint32_t)0x40000000)"
.br
.ti -1c
.RI "#define \fBIS_RCC_APB1_PERIPH\fP(PERIPH)   ((((PERIPH) & 0x81013600) == 0x00) && ((PERIPH) != 0x00))"
.br
.ti -1c
.RI "#define \fBRCC_MCO_NoClock\fP   ((uint8_t)0x00)"
.br
.ti -1c
.RI "#define \fBRCC_MCO_SYSCLK\fP   ((uint8_t)0x04)"
.br
.ti -1c
.RI "#define \fBRCC_MCO_HSI\fP   ((uint8_t)0x05)"
.br
.ti -1c
.RI "#define \fBRCC_MCO_HSE\fP   ((uint8_t)0x06)"
.br
.ti -1c
.RI "#define \fBRCC_MCO_PLLCLK_Div2\fP   ((uint8_t)0x07)"
.br
.ti -1c
.RI "#define \fBIS_RCC_MCO\fP(MCO)"
.br
.ti -1c
.RI "#define \fBRCC_FLAG_HSIRDY\fP   ((uint8_t)0x21)"
.br
.ti -1c
.RI "#define \fBRCC_FLAG_HSERDY\fP   ((uint8_t)0x31)"
.br
.ti -1c
.RI "#define \fBRCC_FLAG_PLLRDY\fP   ((uint8_t)0x39)"
.br
.ti -1c
.RI "#define \fBRCC_FLAG_LSERDY\fP   ((uint8_t)0x41)"
.br
.ti -1c
.RI "#define \fBRCC_FLAG_LSIRDY\fP   ((uint8_t)0x61)"
.br
.ti -1c
.RI "#define \fBRCC_FLAG_PINRST\fP   ((uint8_t)0x7A)"
.br
.ti -1c
.RI "#define \fBRCC_FLAG_PORRST\fP   ((uint8_t)0x7B)"
.br
.ti -1c
.RI "#define \fBRCC_FLAG_SFTRST\fP   ((uint8_t)0x7C)"
.br
.ti -1c
.RI "#define \fBRCC_FLAG_IWDGRST\fP   ((uint8_t)0x7D)"
.br
.ti -1c
.RI "#define \fBRCC_FLAG_WWDGRST\fP   ((uint8_t)0x7E)"
.br
.ti -1c
.RI "#define \fBRCC_FLAG_LPWRRST\fP   ((uint8_t)0x7F)"
.br
.ti -1c
.RI "#define \fBIS_RCC_FLAG\fP(FLAG)"
.br
.ti -1c
.RI "#define \fBIS_RCC_CALIBRATION_VALUE\fP(VALUE)   ((VALUE) <= 0x1F)"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBRCC_DeInit\fP (void)"
.br
.RI "Resets the RCC clock configuration to the default reset state\&. "
.ti -1c
.RI "void \fBRCC_HSEConfig\fP (uint32_t RCC_HSE)"
.br
.RI "Configures the External High Speed oscillator (HSE)\&. "
.ti -1c
.RI "\fBErrorStatus\fP \fBRCC_WaitForHSEStartUp\fP (void)"
.br
.RI "Waits for HSE start-up\&. "
.ti -1c
.RI "void \fBRCC_AdjustHSICalibrationValue\fP (uint8_t HSICalibrationValue)"
.br
.RI "Adjusts the Internal High Speed oscillator (HSI) calibration value\&. "
.ti -1c
.RI "void \fBRCC_HSICmd\fP (\fBFunctionalState\fP NewState)"
.br
.RI "Enables or disables the Internal High Speed oscillator (HSI)\&. "
.ti -1c
.RI "void \fBRCC_PLLConfig\fP (uint32_t RCC_PLLSource, uint32_t RCC_PLLMul)"
.br
.RI "Configures the PLL clock source and multiplication factor\&. "
.ti -1c
.RI "void \fBRCC_PLLCmd\fP (\fBFunctionalState\fP NewState)"
.br
.RI "Enables or disables the PLL\&. "
.ti -1c
.RI "void \fBRCC_SYSCLKConfig\fP (uint32_t RCC_SYSCLKSource)"
.br
.RI "Configures the system clock (SYSCLK)\&. "
.ti -1c
.RI "uint8_t \fBRCC_GetSYSCLKSource\fP (void)"
.br
.RI "Returns the clock source used as system clock\&. "
.ti -1c
.RI "void \fBRCC_HCLKConfig\fP (uint32_t RCC_SYSCLK)"
.br
.RI "Configures the AHB clock (HCLK)\&. "
.ti -1c
.RI "void \fBRCC_PCLK1Config\fP (uint32_t RCC_HCLK)"
.br
.RI "Configures the Low Speed APB clock (PCLK1)\&. "
.ti -1c
.RI "void \fBRCC_PCLK2Config\fP (uint32_t RCC_HCLK)"
.br
.RI "Configures the High Speed APB clock (PCLK2)\&. "
.ti -1c
.RI "void \fBRCC_ITConfig\fP (uint8_t RCC_IT, \fBFunctionalState\fP NewState)"
.br
.RI "Enables or disables the specified RCC interrupts\&. "
.ti -1c
.RI "void \fBRCC_USBCLKConfig\fP (uint32_t RCC_USBCLKSource)"
.br
.RI "Configures the USB clock (USBCLK)\&. "
.ti -1c
.RI "void \fBRCC_ADCCLKConfig\fP (uint32_t RCC_PCLK2)"
.br
.RI "Configures the ADC clock (ADCCLK)\&. "
.ti -1c
.RI "void \fBRCC_LSEConfig\fP (uint8_t RCC_LSE)"
.br
.RI "Configures the External Low Speed oscillator (LSE)\&. "
.ti -1c
.RI "void \fBRCC_LSICmd\fP (\fBFunctionalState\fP NewState)"
.br
.RI "Enables or disables the Internal Low Speed oscillator (LSI)\&. "
.ti -1c
.RI "void \fBRCC_RTCCLKConfig\fP (uint32_t RCC_RTCCLKSource)"
.br
.RI "Configures the RTC clock (RTCCLK)\&. "
.ti -1c
.RI "void \fBRCC_RTCCLKCmd\fP (\fBFunctionalState\fP NewState)"
.br
.RI "Enables or disables the RTC clock\&. "
.ti -1c
.RI "void \fBRCC_GetClocksFreq\fP (\fBRCC_ClocksTypeDef\fP *RCC_Clocks)"
.br
.RI "Returns the frequencies of different on chip clocks\&. "
.ti -1c
.RI "void \fBRCC_AHBPeriphClockCmd\fP (uint32_t RCC_AHBPeriph, \fBFunctionalState\fP NewState)"
.br
.RI "Enables or disables the AHB peripheral clock\&. "
.ti -1c
.RI "void \fBRCC_APB2PeriphClockCmd\fP (uint32_t RCC_APB2Periph, \fBFunctionalState\fP NewState)"
.br
.RI "Enables or disables the High Speed APB (APB2) peripheral clock\&. "
.ti -1c
.RI "void \fBRCC_APB1PeriphClockCmd\fP (uint32_t RCC_APB1Periph, \fBFunctionalState\fP NewState)"
.br
.RI "Enables or disables the Low Speed APB (APB1) peripheral clock\&. "
.ti -1c
.RI "void \fBRCC_APB2PeriphResetCmd\fP (uint32_t RCC_APB2Periph, \fBFunctionalState\fP NewState)"
.br
.RI "Forces or releases High Speed APB (APB2) peripheral reset\&. "
.ti -1c
.RI "void \fBRCC_APB1PeriphResetCmd\fP (uint32_t RCC_APB1Periph, \fBFunctionalState\fP NewState)"
.br
.RI "Forces or releases Low Speed APB (APB1) peripheral reset\&. "
.ti -1c
.RI "void \fBRCC_BackupResetCmd\fP (\fBFunctionalState\fP NewState)"
.br
.RI "Forces or releases the Backup domain reset\&. "
.ti -1c
.RI "void \fBRCC_ClockSecuritySystemCmd\fP (\fBFunctionalState\fP NewState)"
.br
.RI "Enables or disables the Clock Security System\&. "
.ti -1c
.RI "void \fBRCC_MCOConfig\fP (uint8_t RCC_MCO)"
.br
.RI "Selects the clock source to output on MCO pin\&. "
.ti -1c
.RI "\fBFlagStatus\fP \fBRCC_GetFlagStatus\fP (uint8_t RCC_FLAG)"
.br
.RI "Checks whether the specified RCC flag is set or not\&. "
.ti -1c
.RI "void \fBRCC_ClearFlag\fP (void)"
.br
.RI "Clears the RCC reset flags\&. "
.ti -1c
.RI "\fBITStatus\fP \fBRCC_GetITStatus\fP (uint8_t RCC_IT)"
.br
.RI "Checks whether the specified RCC interrupt has occurred or not\&. "
.ti -1c
.RI "void \fBRCC_ClearITPendingBit\fP (uint8_t RCC_IT)"
.br
.RI "Clears the RCC's interrupt pending bits\&. "
.in -1c
.SH "Detailed Description"
.PP 
This file contains all the functions prototypes for the RCC firmware library\&. 


.PP
\fBAuthor:\fP
.RS 4
MCD Application Team 
.RE
.PP
\fBVersion:\fP
.RS 4
V3\&.5\&.0 
.RE
.PP
\fBDate:\fP
.RS 4
11-March-2011 
.RE
.PP
\fBAttention:\fP
.RS 4
.RE
.PP
THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE TIME\&. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS\&.
.PP
.SS "(C) COPYRIGHT 2011 STMicroelectronics"

.PP
Definition in file \fBstm32f10x_rcc\&.h\fP\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for STM32_CMSIS from the source code\&.
