.TH "USART_Private_Functions" 3 "Sun Apr 16 2017" "STM32_CMSIS" \" -*- nroff -*-
.ad l
.nh
.SH NAME
USART_Private_Functions
.SH SYNOPSIS
.br
.PP
.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBUSART_DeInit\fP (\fBUSART_TypeDef\fP *USARTx)"
.br
.RI "Deinitializes the USARTx peripheral registers to their default reset values\&. "
.ti -1c
.RI "void \fBUSART_Init\fP (\fBUSART_TypeDef\fP *USARTx, \fBUSART_InitTypeDef\fP *USART_InitStruct)"
.br
.RI "Initializes the USARTx peripheral according to the specified parameters in the USART_InitStruct \&. "
.ti -1c
.RI "void \fBUSART_StructInit\fP (\fBUSART_InitTypeDef\fP *USART_InitStruct)"
.br
.RI "Fills each USART_InitStruct member with its default value\&. "
.ti -1c
.RI "void \fBUSART_ClockInit\fP (\fBUSART_TypeDef\fP *USARTx, \fBUSART_ClockInitTypeDef\fP *USART_ClockInitStruct)"
.br
.RI "Initializes the USARTx peripheral Clock according to the specified parameters in the USART_ClockInitStruct \&. "
.ti -1c
.RI "void \fBUSART_ClockStructInit\fP (\fBUSART_ClockInitTypeDef\fP *USART_ClockInitStruct)"
.br
.RI "Fills each USART_ClockInitStruct member with its default value\&. "
.ti -1c
.RI "void \fBUSART_Cmd\fP (\fBUSART_TypeDef\fP *USARTx, \fBFunctionalState\fP NewState)"
.br
.RI "Enables or disables the specified USART peripheral\&. "
.ti -1c
.RI "void \fBUSART_ITConfig\fP (\fBUSART_TypeDef\fP *USARTx, uint16_t USART_IT, \fBFunctionalState\fP NewState)"
.br
.RI "Enables or disables the specified USART interrupts\&. "
.ti -1c
.RI "void \fBUSART_DMACmd\fP (\fBUSART_TypeDef\fP *USARTx, uint16_t USART_DMAReq, \fBFunctionalState\fP NewState)"
.br
.RI "Enables or disables the USART�s DMA interface\&. "
.ti -1c
.RI "void \fBUSART_SetAddress\fP (\fBUSART_TypeDef\fP *USARTx, uint8_t USART_Address)"
.br
.RI "Sets the address of the USART node\&. "
.ti -1c
.RI "void \fBUSART_WakeUpConfig\fP (\fBUSART_TypeDef\fP *USARTx, uint16_t USART_WakeUp)"
.br
.RI "Selects the USART WakeUp method\&. "
.ti -1c
.RI "void \fBUSART_ReceiverWakeUpCmd\fP (\fBUSART_TypeDef\fP *USARTx, \fBFunctionalState\fP NewState)"
.br
.RI "Determines if the USART is in mute mode or not\&. "
.ti -1c
.RI "void \fBUSART_LINBreakDetectLengthConfig\fP (\fBUSART_TypeDef\fP *USARTx, uint16_t USART_LINBreakDetectLength)"
.br
.RI "Sets the USART LIN Break detection length\&. "
.ti -1c
.RI "void \fBUSART_LINCmd\fP (\fBUSART_TypeDef\fP *USARTx, \fBFunctionalState\fP NewState)"
.br
.RI "Enables or disables the USART�s LIN mode\&. "
.ti -1c
.RI "void \fBUSART_SendData\fP (\fBUSART_TypeDef\fP *USARTx, uint16_t Data)"
.br
.RI "Transmits single data through the USARTx peripheral\&. "
.ti -1c
.RI "uint16_t \fBUSART_ReceiveData\fP (\fBUSART_TypeDef\fP *USARTx)"
.br
.RI "Returns the most recent received data by the USARTx peripheral\&. "
.ti -1c
.RI "void \fBUSART_SendBreak\fP (\fBUSART_TypeDef\fP *USARTx)"
.br
.RI "Transmits break characters\&. "
.ti -1c
.RI "void \fBUSART_SetGuardTime\fP (\fBUSART_TypeDef\fP *USARTx, uint8_t USART_GuardTime)"
.br
.RI "Sets the specified USART guard time\&. "
.ti -1c
.RI "void \fBUSART_SetPrescaler\fP (\fBUSART_TypeDef\fP *USARTx, uint8_t USART_Prescaler)"
.br
.RI "Sets the system clock prescaler\&. "
.ti -1c
.RI "void \fBUSART_SmartCardCmd\fP (\fBUSART_TypeDef\fP *USARTx, \fBFunctionalState\fP NewState)"
.br
.RI "Enables or disables the USART�s Smart Card mode\&. "
.ti -1c
.RI "void \fBUSART_SmartCardNACKCmd\fP (\fBUSART_TypeDef\fP *USARTx, \fBFunctionalState\fP NewState)"
.br
.RI "Enables or disables NACK transmission\&. "
.ti -1c
.RI "void \fBUSART_HalfDuplexCmd\fP (\fBUSART_TypeDef\fP *USARTx, \fBFunctionalState\fP NewState)"
.br
.RI "Enables or disables the USART�s Half Duplex communication\&. "
.ti -1c
.RI "void \fBUSART_OverSampling8Cmd\fP (\fBUSART_TypeDef\fP *USARTx, \fBFunctionalState\fP NewState)"
.br
.RI "Enables or disables the USART's 8x oversampling mode\&. "
.ti -1c
.RI "void \fBUSART_OneBitMethodCmd\fP (\fBUSART_TypeDef\fP *USARTx, \fBFunctionalState\fP NewState)"
.br
.RI "Enables or disables the USART's one bit sampling method\&. "
.ti -1c
.RI "void \fBUSART_IrDAConfig\fP (\fBUSART_TypeDef\fP *USARTx, uint16_t USART_IrDAMode)"
.br
.RI "Configures the USART's IrDA interface\&. "
.ti -1c
.RI "void \fBUSART_IrDACmd\fP (\fBUSART_TypeDef\fP *USARTx, \fBFunctionalState\fP NewState)"
.br
.RI "Enables or disables the USART's IrDA interface\&. "
.ti -1c
.RI "\fBFlagStatus\fP \fBUSART_GetFlagStatus\fP (\fBUSART_TypeDef\fP *USARTx, uint16_t USART_FLAG)"
.br
.RI "Checks whether the specified USART flag is set or not\&. "
.ti -1c
.RI "void \fBUSART_ClearFlag\fP (\fBUSART_TypeDef\fP *USARTx, uint16_t USART_FLAG)"
.br
.RI "Clears the USARTx's pending flags\&. "
.ti -1c
.RI "\fBITStatus\fP \fBUSART_GetITStatus\fP (\fBUSART_TypeDef\fP *USARTx, uint16_t USART_IT)"
.br
.RI "Checks whether the specified USART interrupt has occurred or not\&. "
.ti -1c
.RI "void \fBUSART_ClearITPendingBit\fP (\fBUSART_TypeDef\fP *USARTx, uint16_t USART_IT)"
.br
.RI "Clears the USARTx's interrupt pending bits\&. "
.in -1c
.SH "Detailed Description"
.PP 

.SH "Function Documentation"
.PP 
.SS "void USART_ClearFlag (\fBUSART_TypeDef\fP * USARTx, uint16_t USART_FLAG)"

.PP
Clears the USARTx's pending flags\&. 
.PP
\fBParameters:\fP
.RS 4
\fIUSARTx\fP Select the USART or the UART peripheral\&. This parameter can be one of the following values: USART1, USART2, USART3, UART4 or UART5\&. 
.br
\fIUSART_FLAG\fP specifies the flag to clear\&. This parameter can be any combination of the following values: 
.PD 0

.IP "\(bu" 2
USART_FLAG_CTS: CTS Change flag (not available for UART4 and UART5)\&. 
.IP "\(bu" 2
USART_FLAG_LBD: LIN Break detection flag\&. 
.IP "\(bu" 2
USART_FLAG_TC: Transmission Complete flag\&. 
.IP "\(bu" 2
USART_FLAG_RXNE: Receive data register not empty flag\&.
.PP
.RE
.PP
\fBNote:\fP
.RS 4
.IP "\(bu" 2
PE (Parity error), FE (Framing error), NE (Noise error), ORE (OverRun error) and IDLE (Idle line detected) flags are cleared by software sequence: a read operation to USART_SR register (\fBUSART_GetFlagStatus()\fP) followed by a read operation to USART_DR register (\fBUSART_ReceiveData()\fP)\&.
.IP "\(bu" 2
RXNE flag can be also cleared by a read to the USART_DR register (\fBUSART_ReceiveData()\fP)\&.
.IP "\(bu" 2
TC flag can be also cleared by software sequence: a read operation to USART_SR register (\fBUSART_GetFlagStatus()\fP) followed by a write operation to USART_DR register (\fBUSART_SendData()\fP)\&.
.IP "\(bu" 2
TXE flag is cleared only by a write to the USART_DR register (\fBUSART_SendData()\fP)\&. 
.PP
.RE
.PP
\fBReturn values:\fP
.RS 4
\fINone\fP 
.RE
.PP

.PP
Definition at line 947 of file stm32f10x_usart\&.c\&.
.SS "void USART_ClearITPendingBit (\fBUSART_TypeDef\fP * USARTx, uint16_t USART_IT)"

.PP
Clears the USARTx's interrupt pending bits\&. 
.PP
\fBParameters:\fP
.RS 4
\fIUSARTx\fP Select the USART or the UART peripheral\&. This parameter can be one of the following values: USART1, USART2, USART3, UART4 or UART5\&. 
.br
\fIUSART_IT\fP specifies the interrupt pending bit to clear\&. This parameter can be one of the following values: 
.PD 0

.IP "\(bu" 2
USART_IT_CTS: CTS change interrupt (not available for UART4 and UART5) 
.IP "\(bu" 2
USART_IT_LBD: LIN Break detection interrupt 
.IP "\(bu" 2
USART_IT_TC: Transmission complete interrupt\&. 
.IP "\(bu" 2
USART_IT_RXNE: Receive Data register not empty interrupt\&.
.PP
.RE
.PP
\fBNote:\fP
.RS 4
.IP "\(bu" 2
PE (Parity error), FE (Framing error), NE (Noise error), ORE (OverRun error) and IDLE (Idle line detected) pending bits are cleared by software sequence: a read operation to USART_SR register (\fBUSART_GetITStatus()\fP) followed by a read operation to USART_DR register (\fBUSART_ReceiveData()\fP)\&.
.IP "\(bu" 2
RXNE pending bit can be also cleared by a read to the USART_DR register (\fBUSART_ReceiveData()\fP)\&.
.IP "\(bu" 2
TC pending bit can be also cleared by software sequence: a read operation to USART_SR register (\fBUSART_GetITStatus()\fP) followed by a write operation to USART_DR register (\fBUSART_SendData()\fP)\&.
.IP "\(bu" 2
TXE pending bit is cleared only by a write to the USART_DR register (\fBUSART_SendData()\fP)\&. 
.PP
.RE
.PP
\fBReturn values:\fP
.RS 4
\fINone\fP 
.RE
.PP

.PP
Definition at line 1054 of file stm32f10x_usart\&.c\&.
.SS "void USART_ClockInit (\fBUSART_TypeDef\fP * USARTx, \fBUSART_ClockInitTypeDef\fP * USART_ClockInitStruct)"

.PP
Initializes the USARTx peripheral Clock according to the specified parameters in the USART_ClockInitStruct \&. 
.PP
\fBParameters:\fP
.RS 4
\fIUSARTx\fP where x can be 1, 2, 3 to select the USART peripheral\&. 
.br
\fIUSART_ClockInitStruct\fP pointer to a \fBUSART_ClockInitTypeDef\fP structure that contains the configuration information for the specified USART peripheral\&. 
.RE
.PP
\fBNote:\fP
.RS 4
The Smart Card and Synchronous modes are not available for UART4 and UART5\&. 
.RE
.PP
\fBReturn values:\fP
.RS 4
\fINone\fP 
.RE
.PP

.PP
Definition at line 302 of file stm32f10x_usart\&.c\&.
.SS "void USART_ClockStructInit (\fBUSART_ClockInitTypeDef\fP * USART_ClockInitStruct)"

.PP
Fills each USART_ClockInitStruct member with its default value\&. 
.PP
\fBParameters:\fP
.RS 4
\fIUSART_ClockInitStruct\fP pointer to a \fBUSART_ClockInitTypeDef\fP structure which will be initialized\&. 
.RE
.PP
\fBReturn values:\fP
.RS 4
\fINone\fP 
.RE
.PP

.PP
Definition at line 333 of file stm32f10x_usart\&.c\&.
.SS "void USART_Cmd (\fBUSART_TypeDef\fP * USARTx, \fBFunctionalState\fP NewState)"

.PP
Enables or disables the specified USART peripheral\&. 
.PP
\fBParameters:\fP
.RS 4
\fIUSARTx\fP Select the USART or the UART peripheral\&. This parameter can be one of the following values: USART1, USART2, USART3, UART4 or UART5\&. 
.br
\fINewState\fP new state of the USARTx peripheral\&. This parameter can be: ENABLE or DISABLE\&. 
.RE
.PP
\fBReturn values:\fP
.RS 4
\fINone\fP 
.RE
.PP

.PP
Definition at line 351 of file stm32f10x_usart\&.c\&.
.SS "void USART_DeInit (\fBUSART_TypeDef\fP * USARTx)"

.PP
Deinitializes the USARTx peripheral registers to their default reset values\&. 
.PP
\fBParameters:\fP
.RS 4
\fIUSARTx\fP Select the USART or the UART peripheral\&. This parameter can be one of the following values: USART1, USART2, USART3, UART4 or UART5\&. 
.RE
.PP
\fBReturn values:\fP
.RS 4
\fINone\fP 
.RE
.PP

.PP
Definition at line 130 of file stm32f10x_usart\&.c\&.
.SS "void USART_DMACmd (\fBUSART_TypeDef\fP * USARTx, uint16_t USART_DMAReq, \fBFunctionalState\fP NewState)"

.PP
Enables or disables the USART�s DMA interface\&. 
.PP
\fBParameters:\fP
.RS 4
\fIUSARTx\fP Select the USART or the UART peripheral\&. This parameter can be one of the following values: USART1, USART2, USART3, UART4 or UART5\&. 
.br
\fIUSART_DMAReq\fP specifies the DMA request\&. This parameter can be any combination of the following values: 
.PD 0

.IP "\(bu" 2
USART_DMAReq_Tx: USART DMA transmit request 
.IP "\(bu" 2
USART_DMAReq_Rx: USART DMA receive request 
.PP
.br
\fINewState\fP new state of the DMA Request sources\&. This parameter can be: ENABLE or DISABLE\&. 
.RE
.PP
\fBNote:\fP
.RS 4
The DMA mode is not available for UART5 except in the STM32 High density value line devices(STM32F10X_HD_VL)\&. 
.RE
.PP
\fBReturn values:\fP
.RS 4
\fINone\fP 
.RE
.PP

.PP
Definition at line 448 of file stm32f10x_usart\&.c\&.
.SS "\fBFlagStatus\fP USART_GetFlagStatus (\fBUSART_TypeDef\fP * USARTx, uint16_t USART_FLAG)"

.PP
Checks whether the specified USART flag is set or not\&. 
.PP
\fBParameters:\fP
.RS 4
\fIUSARTx\fP Select the USART or the UART peripheral\&. This parameter can be one of the following values: USART1, USART2, USART3, UART4 or UART5\&. 
.br
\fIUSART_FLAG\fP specifies the flag to check\&. This parameter can be one of the following values: 
.PD 0

.IP "\(bu" 2
USART_FLAG_CTS: CTS Change flag (not available for UART4 and UART5) 
.IP "\(bu" 2
USART_FLAG_LBD: LIN Break detection flag 
.IP "\(bu" 2
USART_FLAG_TXE: Transmit data register empty flag 
.IP "\(bu" 2
USART_FLAG_TC: Transmission Complete flag 
.IP "\(bu" 2
USART_FLAG_RXNE: Receive data register not empty flag 
.IP "\(bu" 2
USART_FLAG_IDLE: Idle Line detection flag 
.IP "\(bu" 2
USART_FLAG_ORE: OverRun Error flag 
.IP "\(bu" 2
USART_FLAG_NE: Noise Error flag 
.IP "\(bu" 2
USART_FLAG_FE: Framing Error flag 
.IP "\(bu" 2
USART_FLAG_PE: Parity Error flag 
.PP
.RE
.PP
\fBReturn values:\fP
.RS 4
\fIThe\fP new state of USART_FLAG (SET or RESET)\&. 
.RE
.PP

.PP
Definition at line 898 of file stm32f10x_usart\&.c\&.
.SS "\fBITStatus\fP USART_GetITStatus (\fBUSART_TypeDef\fP * USARTx, uint16_t USART_IT)"

.PP
Checks whether the specified USART interrupt has occurred or not\&. 
.PP
\fBParameters:\fP
.RS 4
\fIUSARTx\fP Select the USART or the UART peripheral\&. This parameter can be one of the following values: USART1, USART2, USART3, UART4 or UART5\&. 
.br
\fIUSART_IT\fP specifies the USART interrupt source to check\&. This parameter can be one of the following values: 
.PD 0

.IP "\(bu" 2
USART_IT_CTS: CTS change interrupt (not available for UART4 and UART5) 
.IP "\(bu" 2
USART_IT_LBD: LIN Break detection interrupt 
.IP "\(bu" 2
USART_IT_TXE: Tansmit Data Register empty interrupt 
.IP "\(bu" 2
USART_IT_TC: Transmission complete interrupt 
.IP "\(bu" 2
USART_IT_RXNE: Receive Data register not empty interrupt 
.IP "\(bu" 2
USART_IT_IDLE: Idle line detection interrupt 
.IP "\(bu" 2
USART_IT_ORE: OverRun Error interrupt 
.IP "\(bu" 2
USART_IT_NE: Noise Error interrupt 
.IP "\(bu" 2
USART_IT_FE: Framing Error interrupt 
.IP "\(bu" 2
USART_IT_PE: Parity Error interrupt 
.PP
.RE
.PP
\fBReturn values:\fP
.RS 4
\fIThe\fP new state of USART_IT (SET or RESET)\&. 
.RE
.PP

.PP
Definition at line 980 of file stm32f10x_usart\&.c\&.
.SS "void USART_HalfDuplexCmd (\fBUSART_TypeDef\fP * USARTx, \fBFunctionalState\fP NewState)"

.PP
Enables or disables the USART�s Half Duplex communication\&. 
.PP
\fBParameters:\fP
.RS 4
\fIUSARTx\fP Select the USART or the UART peripheral\&. This parameter can be one of the following values: USART1, USART2, USART3, UART4 or UART5\&. 
.br
\fINewState\fP new state of the USART Communication\&. This parameter can be: ENABLE or DISABLE\&. 
.RE
.PP
\fBReturn values:\fP
.RS 4
\fINone\fP 
.RE
.PP

.PP
Definition at line 755 of file stm32f10x_usart\&.c\&.
.SS "void USART_Init (\fBUSART_TypeDef\fP * USARTx, \fBUSART_InitTypeDef\fP * USART_InitStruct)"

.PP
Initializes the USARTx peripheral according to the specified parameters in the USART_InitStruct \&. 
.PP
\fBParameters:\fP
.RS 4
\fIUSARTx\fP Select the USART or the UART peripheral\&. This parameter can be one of the following values: USART1, USART2, USART3, UART4 or UART5\&. 
.br
\fIUSART_InitStruct\fP pointer to a \fBUSART_InitTypeDef\fP structure that contains the configuration information for the specified USART peripheral\&. 
.RE
.PP
\fBReturn values:\fP
.RS 4
\fINone\fP 
.RE
.PP

.PP
Definition at line 176 of file stm32f10x_usart\&.c\&.
.SS "void USART_IrDACmd (\fBUSART_TypeDef\fP * USARTx, \fBFunctionalState\fP NewState)"

.PP
Enables or disables the USART's IrDA interface\&. 
.PP
\fBParameters:\fP
.RS 4
\fIUSARTx\fP Select the USART or the UART peripheral\&. This parameter can be one of the following values: USART1, USART2, USART3, UART4 or UART5\&. 
.br
\fINewState\fP new state of the IrDA mode\&. This parameter can be: ENABLE or DISABLE\&. 
.RE
.PP
\fBReturn values:\fP
.RS 4
\fINone\fP 
.RE
.PP

.PP
Definition at line 861 of file stm32f10x_usart\&.c\&.
.SS "void USART_IrDAConfig (\fBUSART_TypeDef\fP * USARTx, uint16_t USART_IrDAMode)"

.PP
Configures the USART's IrDA interface\&. 
.PP
\fBParameters:\fP
.RS 4
\fIUSARTx\fP Select the USART or the UART peripheral\&. This parameter can be one of the following values: USART1, USART2, USART3, UART4 or UART5\&. 
.br
\fIUSART_IrDAMode\fP specifies the IrDA mode\&. This parameter can be one of the following values: 
.PD 0

.IP "\(bu" 2
USART_IrDAMode_LowPower 
.IP "\(bu" 2
USART_IrDAMode_Normal 
.PP
.RE
.PP
\fBReturn values:\fP
.RS 4
\fINone\fP 
.RE
.PP

.PP
Definition at line 842 of file stm32f10x_usart\&.c\&.
.SS "void USART_ITConfig (\fBUSART_TypeDef\fP * USARTx, uint16_t USART_IT, \fBFunctionalState\fP NewState)"

.PP
Enables or disables the specified USART interrupts\&. 
.PP
\fBParameters:\fP
.RS 4
\fIUSARTx\fP Select the USART or the UART peripheral\&. This parameter can be one of the following values: USART1, USART2, USART3, UART4 or UART5\&. 
.br
\fIUSART_IT\fP specifies the USART interrupt sources to be enabled or disabled\&. This parameter can be one of the following values: 
.PD 0

.IP "\(bu" 2
USART_IT_CTS: CTS change interrupt (not available for UART4 and UART5) 
.IP "\(bu" 2
USART_IT_LBD: LIN Break detection interrupt 
.IP "\(bu" 2
USART_IT_TXE: Transmit Data Register empty interrupt 
.IP "\(bu" 2
USART_IT_TC: Transmission complete interrupt 
.IP "\(bu" 2
USART_IT_RXNE: Receive Data register not empty interrupt 
.IP "\(bu" 2
USART_IT_IDLE: Idle line detection interrupt 
.IP "\(bu" 2
USART_IT_PE: Parity Error interrupt 
.IP "\(bu" 2
USART_IT_ERR: Error interrupt(Frame error, noise error, overrun error) 
.PP
.br
\fINewState\fP new state of the specified USARTx interrupts\&. This parameter can be: ENABLE or DISABLE\&. 
.RE
.PP
\fBReturn values:\fP
.RS 4
\fINone\fP 
.RE
.PP

.PP
Definition at line 388 of file stm32f10x_usart\&.c\&.
.SS "void USART_LINBreakDetectLengthConfig (\fBUSART_TypeDef\fP * USARTx, uint16_t USART_LINBreakDetectLength)"

.PP
Sets the USART LIN Break detection length\&. 
.PP
\fBParameters:\fP
.RS 4
\fIUSARTx\fP Select the USART or the UART peripheral\&. This parameter can be one of the following values: USART1, USART2, USART3, UART4 or UART5\&. 
.br
\fIUSART_LINBreakDetectLength\fP specifies the LIN break detection length\&. This parameter can be one of the following values: 
.PD 0

.IP "\(bu" 2
USART_LINBreakDetectLength_10b: 10-bit break detection 
.IP "\(bu" 2
USART_LINBreakDetectLength_11b: 11-bit break detection 
.PP
.RE
.PP
\fBReturn values:\fP
.RS 4
\fINone\fP 
.RE
.PP

.PP
Definition at line 559 of file stm32f10x_usart\&.c\&.
.SS "void USART_LINCmd (\fBUSART_TypeDef\fP * USARTx, \fBFunctionalState\fP NewState)"

.PP
Enables or disables the USART�s LIN mode\&. 
.PP
\fBParameters:\fP
.RS 4
\fIUSARTx\fP Select the USART or the UART peripheral\&. This parameter can be one of the following values: USART1, USART2, USART3, UART4 or UART5\&. 
.br
\fINewState\fP new state of the USART LIN mode\&. This parameter can be: ENABLE or DISABLE\&. 
.RE
.PP
\fBReturn values:\fP
.RS 4
\fINone\fP 
.RE
.PP

.PP
Definition at line 578 of file stm32f10x_usart\&.c\&.
.SS "void USART_OneBitMethodCmd (\fBUSART_TypeDef\fP * USARTx, \fBFunctionalState\fP NewState)"

.PP
Enables or disables the USART's one bit sampling method\&. 
.PP
\fBParameters:\fP
.RS 4
\fIUSARTx\fP Select the USART or the UART peripheral\&. This parameter can be one of the following values: USART1, USART2, USART3, UART4 or UART5\&. 
.br
\fINewState\fP new state of the USART one bit sampling method\&. This parameter can be: ENABLE or DISABLE\&. 
.RE
.PP
\fBReturn values:\fP
.RS 4
\fINone\fP 
.RE
.PP

.PP
Definition at line 813 of file stm32f10x_usart\&.c\&.
.SS "void USART_OverSampling8Cmd (\fBUSART_TypeDef\fP * USARTx, \fBFunctionalState\fP NewState)"

.PP
Enables or disables the USART's 8x oversampling mode\&. 
.PP
\fBParameters:\fP
.RS 4
\fIUSARTx\fP Select the USART or the UART peripheral\&. This parameter can be one of the following values: USART1, USART2, USART3, UART4 or UART5\&. 
.br
\fINewState\fP new state of the USART one bit sampling method\&. This parameter can be: ENABLE or DISABLE\&. 
.RE
.PP
\fBNote:\fP
.RS 4
This function has to be called before calling \fBUSART_Init()\fP function in order to have correct baudrate Divider value\&. 
.RE
.PP
\fBReturn values:\fP
.RS 4
\fINone\fP 
.RE
.PP

.PP
Definition at line 786 of file stm32f10x_usart\&.c\&.
.SS "uint16_t USART_ReceiveData (\fBUSART_TypeDef\fP * USARTx)"

.PP
Returns the most recent received data by the USARTx peripheral\&. 
.PP
\fBParameters:\fP
.RS 4
\fIUSARTx\fP Select the USART or the UART peripheral\&. This parameter can be one of the following values: USART1, USART2, USART3, UART4 or UART5\&. 
.RE
.PP
\fBReturn values:\fP
.RS 4
\fIThe\fP received data\&. 
.RE
.PP

.PP
Definition at line 621 of file stm32f10x_usart\&.c\&.
.SS "void USART_ReceiverWakeUpCmd (\fBUSART_TypeDef\fP * USARTx, \fBFunctionalState\fP NewState)"

.PP
Determines if the USART is in mute mode or not\&. 
.PP
\fBParameters:\fP
.RS 4
\fIUSARTx\fP Select the USART or the UART peripheral\&. This parameter can be one of the following values: USART1, USART2, USART3, UART4 or UART5\&. 
.br
\fINewState\fP new state of the USART mute mode\&. This parameter can be: ENABLE or DISABLE\&. 
.RE
.PP
\fBReturn values:\fP
.RS 4
\fINone\fP 
.RE
.PP

.PP
Definition at line 530 of file stm32f10x_usart\&.c\&.
.SS "void USART_SendBreak (\fBUSART_TypeDef\fP * USARTx)"

.PP
Transmits break characters\&. 
.PP
\fBParameters:\fP
.RS 4
\fIUSARTx\fP Select the USART or the UART peripheral\&. This parameter can be one of the following values: USART1, USART2, USART3, UART4 or UART5\&. 
.RE
.PP
\fBReturn values:\fP
.RS 4
\fINone\fP 
.RE
.PP

.PP
Definition at line 637 of file stm32f10x_usart\&.c\&.
.SS "void USART_SendData (\fBUSART_TypeDef\fP * USARTx, uint16_t Data)"

.PP
Transmits single data through the USARTx peripheral\&. 
.PP
\fBParameters:\fP
.RS 4
\fIUSARTx\fP Select the USART or the UART peripheral\&. This parameter can be one of the following values: USART1, USART2, USART3, UART4 or UART5\&. 
.br
\fIData\fP the data to transmit\&. 
.RE
.PP
\fBReturn values:\fP
.RS 4
\fINone\fP 
.RE
.PP

.PP
Definition at line 604 of file stm32f10x_usart\&.c\&.
.SS "void USART_SetAddress (\fBUSART_TypeDef\fP * USARTx, uint8_t USART_Address)"

.PP
Sets the address of the USART node\&. 
.PP
\fBParameters:\fP
.RS 4
\fIUSARTx\fP Select the USART or the UART peripheral\&. This parameter can be one of the following values: USART1, USART2, USART3, UART4 or UART5\&. 
.br
\fIUSART_Address\fP Indicates the address of the USART node\&. 
.RE
.PP
\fBReturn values:\fP
.RS 4
\fINone\fP 
.RE
.PP

.PP
Definition at line 476 of file stm32f10x_usart\&.c\&.
.SS "void USART_SetGuardTime (\fBUSART_TypeDef\fP * USARTx, uint8_t USART_GuardTime)"

.PP
Sets the specified USART guard time\&. 
.PP
\fBParameters:\fP
.RS 4
\fIUSARTx\fP where x can be 1, 2 or 3 to select the USART peripheral\&. 
.br
\fIUSART_GuardTime\fP specifies the guard time\&. 
.RE
.PP
\fBNote:\fP
.RS 4
The guard time bits are not available for UART4 and UART5\&. 
.RE
.PP
\fBReturn values:\fP
.RS 4
\fINone\fP 
.RE
.PP

.PP
Definition at line 653 of file stm32f10x_usart\&.c\&.
.SS "void USART_SetPrescaler (\fBUSART_TypeDef\fP * USARTx, uint8_t USART_Prescaler)"

.PP
Sets the system clock prescaler\&. 
.PP
\fBParameters:\fP
.RS 4
\fIUSARTx\fP Select the USART or the UART peripheral\&. This parameter can be one of the following values: USART1, USART2, USART3, UART4 or UART5\&. 
.br
\fIUSART_Prescaler\fP specifies the prescaler clock\&. 
.RE
.PP
\fBNote:\fP
.RS 4
The function is used for IrDA mode with UART4 and UART5\&. 
.RE
.PP
\fBReturn values:\fP
.RS 4
\fINone\fP 
.RE
.PP

.PP
Definition at line 673 of file stm32f10x_usart\&.c\&.
.SS "void USART_SmartCardCmd (\fBUSART_TypeDef\fP * USARTx, \fBFunctionalState\fP NewState)"

.PP
Enables or disables the USART�s Smart Card mode\&. 
.PP
\fBParameters:\fP
.RS 4
\fIUSARTx\fP where x can be 1, 2 or 3 to select the USART peripheral\&. 
.br
\fINewState\fP new state of the Smart Card mode\&. This parameter can be: ENABLE or DISABLE\&. 
.RE
.PP
\fBNote:\fP
.RS 4
The Smart Card mode is not available for UART4 and UART5\&. 
.RE
.PP
\fBReturn values:\fP
.RS 4
\fINone\fP 
.RE
.PP

.PP
Definition at line 704 of file stm32f10x_usart\&.c\&.
.SS "void USART_SmartCardNACKCmd (\fBUSART_TypeDef\fP * USARTx, \fBFunctionalState\fP NewState)"

.PP
Enables or disables NACK transmission\&. 
.PP
\fBParameters:\fP
.RS 4
\fIUSARTx\fP where x can be 1, 2 or 3 to select the USART peripheral\&. 
.br
\fINewState\fP new state of the NACK transmission\&. This parameter can be: ENABLE or DISABLE\&. 
.RE
.PP
\fBNote:\fP
.RS 4
The Smart Card mode is not available for UART4 and UART5\&. 
.RE
.PP
\fBReturn values:\fP
.RS 4
\fINone\fP 
.RE
.PP

.PP
Definition at line 729 of file stm32f10x_usart\&.c\&.
.SS "void USART_StructInit (\fBUSART_InitTypeDef\fP * USART_InitStruct)"

.PP
Fills each USART_InitStruct member with its default value\&. 
.PP
\fBParameters:\fP
.RS 4
\fIUSART_InitStruct\fP pointer to a \fBUSART_InitTypeDef\fP structure which will be initialized\&. 
.RE
.PP
\fBReturn values:\fP
.RS 4
\fINone\fP 
.RE
.PP

.PP
Definition at line 281 of file stm32f10x_usart\&.c\&.
.SS "void USART_WakeUpConfig (\fBUSART_TypeDef\fP * USARTx, uint16_t USART_WakeUp)"

.PP
Selects the USART WakeUp method\&. 
.PP
\fBParameters:\fP
.RS 4
\fIUSARTx\fP Select the USART or the UART peripheral\&. This parameter can be one of the following values: USART1, USART2, USART3, UART4 or UART5\&. 
.br
\fIUSART_WakeUp\fP specifies the USART wakeup method\&. This parameter can be one of the following values: 
.PD 0

.IP "\(bu" 2
USART_WakeUp_IdleLine: WakeUp by an idle line detection 
.IP "\(bu" 2
USART_WakeUp_AddressMark: WakeUp by an address mark 
.PP
.RE
.PP
\fBReturn values:\fP
.RS 4
\fINone\fP 
.RE
.PP

.PP
Definition at line 511 of file stm32f10x_usart\&.c\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for STM32_CMSIS from the source code\&.
