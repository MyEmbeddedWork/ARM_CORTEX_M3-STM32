.TH "RTC_Private_Functions" 3 "Sun Apr 16 2017" "STM32_CMSIS" \" -*- nroff -*-
.ad l
.nh
.SH NAME
RTC_Private_Functions
.SH SYNOPSIS
.br
.PP
.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBRTC_ITConfig\fP (uint16_t RTC_IT, \fBFunctionalState\fP NewState)"
.br
.RI "Enables or disables the specified RTC interrupts\&. "
.ti -1c
.RI "void \fBRTC_EnterConfigMode\fP (void)"
.br
.RI "Enters the RTC configuration mode\&. "
.ti -1c
.RI "void \fBRTC_ExitConfigMode\fP (void)"
.br
.RI "Exits from the RTC configuration mode\&. "
.ti -1c
.RI "uint32_t \fBRTC_GetCounter\fP (void)"
.br
.RI "Gets the RTC counter value\&. "
.ti -1c
.RI "void \fBRTC_SetCounter\fP (uint32_t CounterValue)"
.br
.RI "Sets the RTC counter value\&. "
.ti -1c
.RI "void \fBRTC_SetPrescaler\fP (uint32_t PrescalerValue)"
.br
.RI "Sets the RTC prescaler value\&. "
.ti -1c
.RI "void \fBRTC_SetAlarm\fP (uint32_t AlarmValue)"
.br
.RI "Sets the RTC alarm value\&. "
.ti -1c
.RI "uint32_t \fBRTC_GetDivider\fP (void)"
.br
.RI "Gets the RTC divider value\&. "
.ti -1c
.RI "void \fBRTC_WaitForLastTask\fP (void)"
.br
.RI "Waits until last write operation on RTC registers has finished\&. "
.ti -1c
.RI "void \fBRTC_WaitForSynchro\fP (void)"
.br
.RI "Waits until the RTC registers (RTC_CNT, RTC_ALR and RTC_PRL) are synchronized with RTC APB clock\&. "
.ti -1c
.RI "\fBFlagStatus\fP \fBRTC_GetFlagStatus\fP (uint16_t RTC_FLAG)"
.br
.RI "Checks whether the specified RTC flag is set or not\&. "
.ti -1c
.RI "void \fBRTC_ClearFlag\fP (uint16_t RTC_FLAG)"
.br
.RI "Clears the RTC's pending flags\&. "
.ti -1c
.RI "\fBITStatus\fP \fBRTC_GetITStatus\fP (uint16_t RTC_IT)"
.br
.RI "Checks whether the specified RTC interrupt has occurred or not\&. "
.ti -1c
.RI "void \fBRTC_ClearITPendingBit\fP (uint16_t RTC_IT)"
.br
.RI "Clears the RTC's interrupt pending bits\&. "
.in -1c
.SH "Detailed Description"
.PP 

.SH "Function Documentation"
.PP 
.SS "void RTC_ClearFlag (uint16_t RTC_FLAG)"

.PP
Clears the RTC's pending flags\&. 
.PP
\fBParameters:\fP
.RS 4
\fIRTC_FLAG\fP specifies the flag to clear\&. This parameter can be any combination of the following values: 
.PD 0

.IP "\(bu" 2
RTC_FLAG_RSF: Registers Synchronized flag\&. This flag is cleared only after an APB reset or an APB Clock stop\&. 
.IP "\(bu" 2
RTC_FLAG_OW: Overflow flag 
.IP "\(bu" 2
RTC_FLAG_ALR: Alarm flag 
.IP "\(bu" 2
RTC_FLAG_SEC: Second flag 
.PP
.RE
.PP
\fBReturn values:\fP
.RS 4
\fINone\fP 
.RE
.PP

.PP
Definition at line 284 of file stm32f10x_rtc\&.c\&.
.SS "void RTC_ClearITPendingBit (uint16_t RTC_IT)"

.PP
Clears the RTC's interrupt pending bits\&. 
.PP
\fBParameters:\fP
.RS 4
\fIRTC_IT\fP specifies the interrupt pending bit to clear\&. This parameter can be any combination of the following values: 
.PD 0

.IP "\(bu" 2
RTC_IT_OW: Overflow interrupt 
.IP "\(bu" 2
RTC_IT_ALR: Alarm interrupt 
.IP "\(bu" 2
RTC_IT_SEC: Second interrupt 
.PP
.RE
.PP
\fBReturn values:\fP
.RS 4
\fINone\fP 
.RE
.PP

.PP
Definition at line 329 of file stm32f10x_rtc\&.c\&.
.SS "void RTC_EnterConfigMode (void)"

.PP
Enters the RTC configuration mode\&. 
.PP
\fBParameters:\fP
.RS 4
\fINone\fP 
.RE
.PP
\fBReturn values:\fP
.RS 4
\fINone\fP 
.RE
.PP

.PP
Definition at line 111 of file stm32f10x_rtc\&.c\&.
.SS "void RTC_ExitConfigMode (void)"

.PP
Exits from the RTC configuration mode\&. 
.PP
\fBParameters:\fP
.RS 4
\fINone\fP 
.RE
.PP
\fBReturn values:\fP
.RS 4
\fINone\fP 
.RE
.PP

.PP
Definition at line 122 of file stm32f10x_rtc\&.c\&.
.SS "uint32_t RTC_GetCounter (void)"

.PP
Gets the RTC counter value\&. 
.PP
\fBParameters:\fP
.RS 4
\fINone\fP 
.RE
.PP
\fBReturn values:\fP
.RS 4
\fIRTC\fP counter value\&. 
.RE
.PP

.PP
Definition at line 133 of file stm32f10x_rtc\&.c\&.
.SS "uint32_t RTC_GetDivider (void)"

.PP
Gets the RTC divider value\&. 
.PP
\fBParameters:\fP
.RS 4
\fINone\fP 
.RE
.PP
\fBReturn values:\fP
.RS 4
\fIRTC\fP Divider value\&. 
.RE
.PP

.PP
Definition at line 204 of file stm32f10x_rtc\&.c\&.
.SS "\fBFlagStatus\fP RTC_GetFlagStatus (uint16_t RTC_FLAG)"

.PP
Checks whether the specified RTC flag is set or not\&. 
.PP
\fBParameters:\fP
.RS 4
\fIRTC_FLAG\fP specifies the flag to check\&. This parameter can be one the following values: 
.PD 0

.IP "\(bu" 2
RTC_FLAG_RTOFF: RTC Operation OFF flag 
.IP "\(bu" 2
RTC_FLAG_RSF: Registers Synchronized flag 
.IP "\(bu" 2
RTC_FLAG_OW: Overflow flag 
.IP "\(bu" 2
RTC_FLAG_ALR: Alarm flag 
.IP "\(bu" 2
RTC_FLAG_SEC: Second flag 
.PP
.RE
.PP
\fBReturn values:\fP
.RS 4
\fIThe\fP new state of RTC_FLAG (SET or RESET)\&. 
.RE
.PP

.PP
Definition at line 255 of file stm32f10x_rtc\&.c\&.
.SS "\fBITStatus\fP RTC_GetITStatus (uint16_t RTC_IT)"

.PP
Checks whether the specified RTC interrupt has occurred or not\&. 
.PP
\fBParameters:\fP
.RS 4
\fIRTC_IT\fP specifies the RTC interrupts sources to check\&. This parameter can be one of the following values: 
.PD 0

.IP "\(bu" 2
RTC_IT_OW: Overflow interrupt 
.IP "\(bu" 2
RTC_IT_ALR: Alarm interrupt 
.IP "\(bu" 2
RTC_IT_SEC: Second interrupt 
.PP
.RE
.PP
\fBReturn values:\fP
.RS 4
\fIThe\fP new state of the RTC_IT (SET or RESET)\&. 
.RE
.PP

.PP
Definition at line 302 of file stm32f10x_rtc\&.c\&.
.SS "void RTC_ITConfig (uint16_t RTC_IT, \fBFunctionalState\fP NewState)"

.PP
Enables or disables the specified RTC interrupts\&. 
.PP
\fBParameters:\fP
.RS 4
\fIRTC_IT\fP specifies the RTC interrupts sources to be enabled or disabled\&. This parameter can be any combination of the following values: 
.PD 0

.IP "\(bu" 2
RTC_IT_OW: Overflow interrupt 
.IP "\(bu" 2
RTC_IT_ALR: Alarm interrupt 
.IP "\(bu" 2
RTC_IT_SEC: Second interrupt 
.PP
.br
\fINewState\fP new state of the specified RTC interrupts\&. This parameter can be: ENABLE or DISABLE\&. 
.RE
.PP
\fBReturn values:\fP
.RS 4
\fINone\fP 
.RE
.PP

.PP
Definition at line 90 of file stm32f10x_rtc\&.c\&.
.SS "void RTC_SetAlarm (uint32_t AlarmValue)"

.PP
Sets the RTC alarm value\&. 
.PP
\fBParameters:\fP
.RS 4
\fIAlarmValue\fP RTC alarm new value\&. 
.RE
.PP
\fBReturn values:\fP
.RS 4
\fINone\fP 
.RE
.PP

.PP
Definition at line 184 of file stm32f10x_rtc\&.c\&.
.SS "void RTC_SetCounter (uint32_t CounterValue)"

.PP
Sets the RTC counter value\&. 
.PP
\fBParameters:\fP
.RS 4
\fICounterValue\fP RTC counter new value\&. 
.RE
.PP
\fBReturn values:\fP
.RS 4
\fINone\fP 
.RE
.PP

.PP
Definition at line 151 of file stm32f10x_rtc\&.c\&.
.SS "void RTC_SetPrescaler (uint32_t PrescalerValue)"

.PP
Sets the RTC prescaler value\&. 
.PP
\fBParameters:\fP
.RS 4
\fIPrescalerValue\fP RTC prescaler new value\&. 
.RE
.PP
\fBReturn values:\fP
.RS 4
\fINone\fP 
.RE
.PP

.PP
Definition at line 166 of file stm32f10x_rtc\&.c\&.
.SS "void RTC_WaitForLastTask (void)"

.PP
Waits until last write operation on RTC registers has finished\&. 
.PP
\fBNote:\fP
.RS 4
This function must be called before any write to RTC registers\&. 
.RE
.PP
\fBParameters:\fP
.RS 4
\fINone\fP 
.RE
.PP
\fBReturn values:\fP
.RS 4
\fINone\fP 
.RE
.PP

.PP
Definition at line 218 of file stm32f10x_rtc\&.c\&.
.SS "void RTC_WaitForSynchro (void)"

.PP
Waits until the RTC registers (RTC_CNT, RTC_ALR and RTC_PRL) are synchronized with RTC APB clock\&. 
.PP
\fBNote:\fP
.RS 4
This function must be called before any read operation after an APB reset or an APB clock stop\&. 
.RE
.PP
\fBParameters:\fP
.RS 4
\fINone\fP 
.RE
.PP
\fBReturn values:\fP
.RS 4
\fINone\fP 
.RE
.PP

.PP
Definition at line 234 of file stm32f10x_rtc\&.c\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for STM32_CMSIS from the source code\&.
