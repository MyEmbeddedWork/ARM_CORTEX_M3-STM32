<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="stm32f10x__adc_8h" kind="file" language="C++">
    <compoundname>stm32f10x_adc.h</compoundname>
    <includes refid="stm32f10x_8h" local="yes">stm32f10x.h</includes>
    <includedby refid="stm32f10x__conf_8h" local="yes">C:/Users/anilj/Desktop/cmsis/sorc/include/stm32f10x_conf.h</includedby>
    <includedby refid="stm32f10x__adc_8c" local="yes">C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_adc.c</includedby>
    <incdepgraph>
      <node id="517">
        <label>system_stm32f10x.h</label>
        <link refid="system__stm32f10x_8h"/>
      </node>
      <node id="514">
        <label>stdint.h</label>
      </node>
      <node id="513">
        <label>core_cm3.h</label>
        <link refid="core__cm3_8h"/>
        <childnode refid="514" relation="include">
        </childnode>
        <childnode refid="515" relation="include">
        </childnode>
        <childnode refid="516" relation="include">
        </childnode>
      </node>
      <node id="516">
        <label>core_cmFunc.h</label>
        <link refid="core__cm_func_8h"/>
      </node>
      <node id="511">
        <label>C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h</label>
        <link refid="stm32f10x__adc_8h"/>
        <childnode refid="512" relation="include">
        </childnode>
      </node>
      <node id="515">
        <label>core_cmInstr.h</label>
        <link refid="core__cm_instr_8h"/>
      </node>
      <node id="512">
        <label>stm32f10x.h</label>
        <link refid="stm32f10x_8h"/>
        <childnode refid="513" relation="include">
        </childnode>
        <childnode refid="517" relation="include">
        </childnode>
        <childnode refid="514" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="520">
        <label>C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_adc.c</label>
        <link refid="stm32f10x__adc_8c"/>
      </node>
      <node id="519">
        <label>C:/Users/anilj/Desktop/cmsis/sorc/include/stm32f10x_conf.h</label>
        <link refid="stm32f10x__conf_8h"/>
      </node>
      <node id="518">
        <label>C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h</label>
        <link refid="stm32f10x__adc_8h"/>
        <childnode refid="519" relation="include">
        </childnode>
        <childnode refid="520" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_a_d_c___init_type_def" prot="public">ADC_InitTypeDef</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="group___a_d_c___exported___constants_1gaf5d6bd0153464912e0eaccb1af1aefb2" prot="public" static="no">
        <name>IS_ADC_ALL_PERIPH</name>
        <param><defname>PERIPH</defname></param>
        <initializer>(((PERIPH) == <ref refid="group___peripheral__declaration_1ga90d2d5c526ce5c0a551f533eccbee71a" kindref="member">ADC1</ref>) || \
                                   ((PERIPH) == <ref refid="group___peripheral__declaration_1gac5503ae96c26b4475226f96715a1bf1e" kindref="member">ADC2</ref>) || \
                                   ((PERIPH) == <ref refid="group___peripheral__declaration_1gae917784606daf6b04c9b7b96b40c2f74" kindref="member">ADC3</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="89" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_c___exported___constants_1ga56ce1703cee9a93969fc507b985ee949" prot="public" static="no">
        <name>IS_ADC_DMA_PERIPH</name>
        <param><defname>PERIPH</defname></param>
        <initializer>(((PERIPH) == <ref refid="group___peripheral__declaration_1ga90d2d5c526ce5c0a551f533eccbee71a" kindref="member">ADC1</ref>) || \
                                   ((PERIPH) == <ref refid="group___peripheral__declaration_1gae917784606daf6b04c9b7b96b40c2f74" kindref="member">ADC3</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="93" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_c__mode_1ga2754d3a35559dc10e3d6a7d920e83432" prot="public" static="no">
        <name>ADC_Mode_Independent</name>
        <initializer>((uint32_t)0x00000000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="100" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_c__mode_1ga487d5f0c506291c5d37b53198396fd1c" prot="public" static="no">
        <name>ADC_Mode_RegInjecSimult</name>
        <initializer>((uint32_t)0x00010000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="101" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_c__mode_1gae3d5fbf93f60d75534364bf9db78f632" prot="public" static="no">
        <name>ADC_Mode_RegSimult_AlterTrig</name>
        <initializer>((uint32_t)0x00020000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="102" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_c__mode_1ga2fc8a737f7b2375309bccbcb7fdbbfeb" prot="public" static="no">
        <name>ADC_Mode_InjecSimult_FastInterl</name>
        <initializer>((uint32_t)0x00030000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="103" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_c__mode_1gacb72230cb48a577907729d426be69c22" prot="public" static="no">
        <name>ADC_Mode_InjecSimult_SlowInterl</name>
        <initializer>((uint32_t)0x00040000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="104" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_c__mode_1ga2339cc471aaf2db02daa4aeb49e9f0d9" prot="public" static="no">
        <name>ADC_Mode_InjecSimult</name>
        <initializer>((uint32_t)0x00050000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="105" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_c__mode_1ga71298f7453c2b4392a9c622328b3c93d" prot="public" static="no">
        <name>ADC_Mode_RegSimult</name>
        <initializer>((uint32_t)0x00060000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="106" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_c__mode_1ga843ecdd53625e2088e91819e43106a7a" prot="public" static="no">
        <name>ADC_Mode_FastInterl</name>
        <initializer>((uint32_t)0x00070000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="107" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_c__mode_1ga8b81e27e98dbc3d1e31452dbad167cd5" prot="public" static="no">
        <name>ADC_Mode_SlowInterl</name>
        <initializer>((uint32_t)0x00080000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="108" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_c__mode_1ga5595f12dc485e301ba3bad0e165586c1" prot="public" static="no">
        <name>ADC_Mode_AlterTrig</name>
        <initializer>((uint32_t)0x00090000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="109" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_c__mode_1ga4abf4c7de28a42d7b124c9e403a6e537" prot="public" static="no">
        <name>IS_ADC_MODE</name>
        <param><defname>MODE</defname></param>
        <initializer>(((MODE) == <ref refid="group___a_d_c__mode_1ga2754d3a35559dc10e3d6a7d920e83432" kindref="member">ADC_Mode_Independent</ref>) || \
                           ((MODE) == <ref refid="group___a_d_c__mode_1ga487d5f0c506291c5d37b53198396fd1c" kindref="member">ADC_Mode_RegInjecSimult</ref>) || \
                           ((MODE) == <ref refid="group___a_d_c__mode_1gae3d5fbf93f60d75534364bf9db78f632" kindref="member">ADC_Mode_RegSimult_AlterTrig</ref>) || \
                           ((MODE) == <ref refid="group___a_d_c__mode_1ga2fc8a737f7b2375309bccbcb7fdbbfeb" kindref="member">ADC_Mode_InjecSimult_FastInterl</ref>) || \
                           ((MODE) == <ref refid="group___a_d_c__mode_1gacb72230cb48a577907729d426be69c22" kindref="member">ADC_Mode_InjecSimult_SlowInterl</ref>) || \
                           ((MODE) == <ref refid="group___a_d_c__mode_1ga2339cc471aaf2db02daa4aeb49e9f0d9" kindref="member">ADC_Mode_InjecSimult</ref>) || \
                           ((MODE) == <ref refid="group___a_d_c__mode_1ga71298f7453c2b4392a9c622328b3c93d" kindref="member">ADC_Mode_RegSimult</ref>) || \
                           ((MODE) == <ref refid="group___a_d_c__mode_1ga843ecdd53625e2088e91819e43106a7a" kindref="member">ADC_Mode_FastInterl</ref>) || \
                           ((MODE) == <ref refid="group___a_d_c__mode_1ga8b81e27e98dbc3d1e31452dbad167cd5" kindref="member">ADC_Mode_SlowInterl</ref>) || \
                           ((MODE) == <ref refid="group___a_d_c__mode_1ga5595f12dc485e301ba3bad0e165586c1" kindref="member">ADC_Mode_AlterTrig</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="111" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_c__external__trigger__sources__for__regular__channels__conversion_1ga303f24361ea930f8214e9e68b63b244e" prot="public" static="no">
        <name>ADC_ExternalTrigConv_T1_CC1</name>
        <initializer>((uint32_t)0x00000000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>For ADC1 and ADC2 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="129" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_c__external__trigger__sources__for__regular__channels__conversion_1ga8bf9fd9ad4e4c12ef41520ded2c3c332" prot="public" static="no">
        <name>ADC_ExternalTrigConv_T1_CC2</name>
        <initializer>((uint32_t)0x00020000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>For ADC1 and ADC2 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="130" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" bodystart="130" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_c__external__trigger__sources__for__regular__channels__conversion_1gadfeb40c1735b0ee50f8a5aafdd840cc6" prot="public" static="no">
        <name>ADC_ExternalTrigConv_T2_CC2</name>
        <initializer>((uint32_t)0x00060000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>For ADC1 and ADC2 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="131" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" bodystart="131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_c__external__trigger__sources__for__regular__channels__conversion_1ga1cf4549534a00fe2f5527ad783204098" prot="public" static="no">
        <name>ADC_ExternalTrigConv_T3_TRGO</name>
        <initializer>((uint32_t)0x00080000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>For ADC1 and ADC2 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="132" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" bodystart="132" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_c__external__trigger__sources__for__regular__channels__conversion_1ga8f6a764b7de878c2e09bbb0d1061d69c" prot="public" static="no">
        <name>ADC_ExternalTrigConv_T4_CC4</name>
        <initializer>((uint32_t)0x000A0000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>For ADC1 and ADC2 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="133" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" bodystart="133" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_c__external__trigger__sources__for__regular__channels__conversion_1ga640de59aeac8cc3d96b6db3497975d02" prot="public" static="no">
        <name>ADC_ExternalTrigConv_Ext_IT11_TIM8_TRGO</name>
        <initializer>((uint32_t)0x000C0000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>For ADC1 and ADC2 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="134" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" bodystart="134" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_c__external__trigger__sources__for__regular__channels__conversion_1ga41ad03e2921f6de0fb75ae06d6046e63" prot="public" static="no">
        <name>ADC_ExternalTrigConv_T1_CC3</name>
        <initializer>((uint32_t)0x00040000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>For ADC1, ADC2 and ADC3 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="136" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" bodystart="136" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_c__external__trigger__sources__for__regular__channels__conversion_1ga433a3845ed1792fa6359b763c955e9c2" prot="public" static="no">
        <name>ADC_ExternalTrigConv_None</name>
        <initializer>((uint32_t)0x000E0000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>For ADC1, ADC2 and ADC3 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="137" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" bodystart="137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_c__external__trigger__sources__for__regular__channels__conversion_1ga3c73d5c8bb0f898dbbc74bcc536f6ec1" prot="public" static="no">
        <name>ADC_ExternalTrigConv_T3_CC1</name>
        <initializer>((uint32_t)0x00000000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>For ADC3 only </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="139" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" bodystart="139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_c__external__trigger__sources__for__regular__channels__conversion_1ga16ae1b335f2c2b4facf3d4bedc2ce27f" prot="public" static="no">
        <name>ADC_ExternalTrigConv_T2_CC3</name>
        <initializer>((uint32_t)0x00020000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>For ADC3 only </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="140" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" bodystart="140" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_c__external__trigger__sources__for__regular__channels__conversion_1ga97af875d12e77a67e84f3aaf1f8033ed" prot="public" static="no">
        <name>ADC_ExternalTrigConv_T8_CC1</name>
        <initializer>((uint32_t)0x00060000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>For ADC3 only </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="141" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" bodystart="141" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_c__external__trigger__sources__for__regular__channels__conversion_1gab26d94590d47ae6ec46841652741abf3" prot="public" static="no">
        <name>ADC_ExternalTrigConv_T8_TRGO</name>
        <initializer>((uint32_t)0x00080000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>For ADC3 only </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="142" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" bodystart="142" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_c__external__trigger__sources__for__regular__channels__conversion_1ga6bd1ad69cb455afeabf6759b640378d3" prot="public" static="no">
        <name>ADC_ExternalTrigConv_T5_CC1</name>
        <initializer>((uint32_t)0x000A0000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>For ADC3 only </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="143" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" bodystart="143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_c__external__trigger__sources__for__regular__channels__conversion_1ga95b58981aff35d6d5fa229925cd6315d" prot="public" static="no">
        <name>ADC_ExternalTrigConv_T5_CC3</name>
        <initializer>((uint32_t)0x000C0000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>For ADC3 only </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="144" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" bodystart="144" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_c__external__trigger__sources__for__regular__channels__conversion_1gac74e6054adbedd72822cacde69105318" prot="public" static="no">
        <name>IS_ADC_EXT_TRIG</name>
        <param><defname>REGTRIG</defname></param>
        <initializer>(((REGTRIG) == <ref refid="group___a_d_c__external__trigger__sources__for__regular__channels__conversion_1ga303f24361ea930f8214e9e68b63b244e" kindref="member">ADC_ExternalTrigConv_T1_CC1</ref>) || \
                                  ((REGTRIG) == <ref refid="group___a_d_c__external__trigger__sources__for__regular__channels__conversion_1ga8bf9fd9ad4e4c12ef41520ded2c3c332" kindref="member">ADC_ExternalTrigConv_T1_CC2</ref>) || \
                                  ((REGTRIG) == <ref refid="group___a_d_c__external__trigger__sources__for__regular__channels__conversion_1ga41ad03e2921f6de0fb75ae06d6046e63" kindref="member">ADC_ExternalTrigConv_T1_CC3</ref>) || \
                                  ((REGTRIG) == <ref refid="group___a_d_c__external__trigger__sources__for__regular__channels__conversion_1gadfeb40c1735b0ee50f8a5aafdd840cc6" kindref="member">ADC_ExternalTrigConv_T2_CC2</ref>) || \
                                  ((REGTRIG) == <ref refid="group___a_d_c__external__trigger__sources__for__regular__channels__conversion_1ga1cf4549534a00fe2f5527ad783204098" kindref="member">ADC_ExternalTrigConv_T3_TRGO</ref>) || \
                                  ((REGTRIG) == <ref refid="group___a_d_c__external__trigger__sources__for__regular__channels__conversion_1ga8f6a764b7de878c2e09bbb0d1061d69c" kindref="member">ADC_ExternalTrigConv_T4_CC4</ref>) || \
                                  ((REGTRIG) == <ref refid="group___a_d_c__external__trigger__sources__for__regular__channels__conversion_1ga640de59aeac8cc3d96b6db3497975d02" kindref="member">ADC_ExternalTrigConv_Ext_IT11_TIM8_TRGO</ref>) || \
                                  ((REGTRIG) == <ref refid="group___a_d_c__external__trigger__sources__for__regular__channels__conversion_1ga433a3845ed1792fa6359b763c955e9c2" kindref="member">ADC_ExternalTrigConv_None</ref>) || \
                                  ((REGTRIG) == <ref refid="group___a_d_c__external__trigger__sources__for__regular__channels__conversion_1ga3c73d5c8bb0f898dbbc74bcc536f6ec1" kindref="member">ADC_ExternalTrigConv_T3_CC1</ref>) || \
                                  ((REGTRIG) == <ref refid="group___a_d_c__external__trigger__sources__for__regular__channels__conversion_1ga16ae1b335f2c2b4facf3d4bedc2ce27f" kindref="member">ADC_ExternalTrigConv_T2_CC3</ref>) || \
                                  ((REGTRIG) == <ref refid="group___a_d_c__external__trigger__sources__for__regular__channels__conversion_1ga97af875d12e77a67e84f3aaf1f8033ed" kindref="member">ADC_ExternalTrigConv_T8_CC1</ref>) || \
                                  ((REGTRIG) == <ref refid="group___a_d_c__external__trigger__sources__for__regular__channels__conversion_1gab26d94590d47ae6ec46841652741abf3" kindref="member">ADC_ExternalTrigConv_T8_TRGO</ref>) || \
                                  ((REGTRIG) == <ref refid="group___a_d_c__external__trigger__sources__for__regular__channels__conversion_1ga6bd1ad69cb455afeabf6759b640378d3" kindref="member">ADC_ExternalTrigConv_T5_CC1</ref>) || \
                                  ((REGTRIG) == <ref refid="group___a_d_c__external__trigger__sources__for__regular__channels__conversion_1ga95b58981aff35d6d5fa229925cd6315d" kindref="member">ADC_ExternalTrigConv_T5_CC3</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="146" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" bodystart="146" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_c__data__align_1ga80b5d2f2b6b058bc498f58e0a92ad035" prot="public" static="no">
        <name>ADC_DataAlign_Right</name>
        <initializer>((uint32_t)0x00000000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="168" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" bodystart="168" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_c__data__align_1ga87c2b7021bc288174d5d6175dc267251" prot="public" static="no">
        <name>ADC_DataAlign_Left</name>
        <initializer>((uint32_t)0x00000800)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="169" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" bodystart="169" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_c__data__align_1ga2903b620e3c61dc47ed8c0fbf4197801" prot="public" static="no">
        <name>IS_ADC_DATA_ALIGN</name>
        <param><defname>ALIGN</defname></param>
        <initializer>(((ALIGN) == <ref refid="group___a_d_c__data__align_1ga80b5d2f2b6b058bc498f58e0a92ad035" kindref="member">ADC_DataAlign_Right</ref>) || \
                                  ((ALIGN) == <ref refid="group___a_d_c__data__align_1ga87c2b7021bc288174d5d6175dc267251" kindref="member">ADC_DataAlign_Left</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="170" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" bodystart="170" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_c__channels_1ga40ec353803e9470a5721ef5bf0b1ab24" prot="public" static="no">
        <name>ADC_Channel_0</name>
        <initializer>((uint8_t)0x00)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="180" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" bodystart="180" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_c__channels_1ga0b04cebf8d62085eca6dc7daa3d5d3f0" prot="public" static="no">
        <name>ADC_Channel_1</name>
        <initializer>((uint8_t)0x01)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="181" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" bodystart="181" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_c__channels_1gabc66e2529583e11b591efd2df7070571" prot="public" static="no">
        <name>ADC_Channel_2</name>
        <initializer>((uint8_t)0x02)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="182" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" bodystart="182" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_c__channels_1ga9f93cbacd030f1c79f96f8889b0cdee6" prot="public" static="no">
        <name>ADC_Channel_3</name>
        <initializer>((uint8_t)0x03)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="183" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" bodystart="183" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_c__channels_1gafc7218417f729659dd8f06185cc2eafa" prot="public" static="no">
        <name>ADC_Channel_4</name>
        <initializer>((uint8_t)0x04)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="184" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" bodystart="184" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_c__channels_1ga42822abae41faabde2a2da877e0cc854" prot="public" static="no">
        <name>ADC_Channel_5</name>
        <initializer>((uint8_t)0x05)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="185" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" bodystart="185" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_c__channels_1ga7e24a73eec4aeb7d8e2f9008825ceacb" prot="public" static="no">
        <name>ADC_Channel_6</name>
        <initializer>((uint8_t)0x06)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="186" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" bodystart="186" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_c__channels_1ga9723aa5fe6b9f4af1ffd3b90e6eef8d1" prot="public" static="no">
        <name>ADC_Channel_7</name>
        <initializer>((uint8_t)0x07)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="187" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" bodystart="187" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_c__channels_1ga99b2c662d4068152e0e80a048036cc48" prot="public" static="no">
        <name>ADC_Channel_8</name>
        <initializer>((uint8_t)0x08)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="188" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" bodystart="188" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_c__channels_1ga01a61c428be0cb69327e428e32a42aa1" prot="public" static="no">
        <name>ADC_Channel_9</name>
        <initializer>((uint8_t)0x09)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="189" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" bodystart="189" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_c__channels_1gabfa98b580f49a82a83dcb1df32efceca" prot="public" static="no">
        <name>ADC_Channel_10</name>
        <initializer>((uint8_t)0x0A)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="190" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" bodystart="190" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_c__channels_1ga5bfc40d938f384f22665f6e2dd945cfd" prot="public" static="no">
        <name>ADC_Channel_11</name>
        <initializer>((uint8_t)0x0B)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="191" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" bodystart="191" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_c__channels_1gaa1e35f7870ae8f05013a681293175299" prot="public" static="no">
        <name>ADC_Channel_12</name>
        <initializer>((uint8_t)0x0C)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="192" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" bodystart="192" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_c__channels_1ga517cda911256f722eb067d7140663230" prot="public" static="no">
        <name>ADC_Channel_13</name>
        <initializer>((uint8_t)0x0D)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="193" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" bodystart="193" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_c__channels_1gaf1830a03fe4a3820fde4f41ba907c394" prot="public" static="no">
        <name>ADC_Channel_14</name>
        <initializer>((uint8_t)0x0E)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="194" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" bodystart="194" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_c__channels_1ga01431a7b4e388beb241328874abdf88c" prot="public" static="no">
        <name>ADC_Channel_15</name>
        <initializer>((uint8_t)0x0F)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="195" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" bodystart="195" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_c__channels_1ga52fb09ae9a0333a0e071da106466c659" prot="public" static="no">
        <name>ADC_Channel_16</name>
        <initializer>((uint8_t)0x10)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="196" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" bodystart="196" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_c__channels_1ga58cdfe3a5625f198116d163b09698cea" prot="public" static="no">
        <name>ADC_Channel_17</name>
        <initializer>((uint8_t)0x11)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="197" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" bodystart="197" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_c__channels_1ga1efc096b8d4a8d15c4a7d91f5c03c6c7" prot="public" static="no">
        <name>ADC_Channel_TempSensor</name>
        <initializer>((uint8_t)<ref refid="group___a_d_c__channels_1ga52fb09ae9a0333a0e071da106466c659" kindref="member">ADC_Channel_16</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="199" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" bodystart="199" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_c__channels_1ga5d48ded5138e6f1efe3a7634eff4d125" prot="public" static="no">
        <name>ADC_Channel_Vrefint</name>
        <initializer>((uint8_t)<ref refid="group___a_d_c__channels_1ga58cdfe3a5625f198116d163b09698cea" kindref="member">ADC_Channel_17</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="200" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" bodystart="200" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_c__channels_1gaba41910dcb2b449c613a5ef638862e77" prot="public" static="no">
        <name>IS_ADC_CHANNEL</name>
        <param><defname>CHANNEL</defname></param>
        <initializer>(((CHANNEL) == <ref refid="group___a_d_c__channels_1ga40ec353803e9470a5721ef5bf0b1ab24" kindref="member">ADC_Channel_0</ref>) || ((CHANNEL) == <ref refid="group___a_d_c__channels_1ga0b04cebf8d62085eca6dc7daa3d5d3f0" kindref="member">ADC_Channel_1</ref>) || \
                                 ((CHANNEL) == <ref refid="group___a_d_c__channels_1gabc66e2529583e11b591efd2df7070571" kindref="member">ADC_Channel_2</ref>) || ((CHANNEL) == <ref refid="group___a_d_c__channels_1ga9f93cbacd030f1c79f96f8889b0cdee6" kindref="member">ADC_Channel_3</ref>) || \
                                 ((CHANNEL) == <ref refid="group___a_d_c__channels_1gafc7218417f729659dd8f06185cc2eafa" kindref="member">ADC_Channel_4</ref>) || ((CHANNEL) == <ref refid="group___a_d_c__channels_1ga42822abae41faabde2a2da877e0cc854" kindref="member">ADC_Channel_5</ref>) || \
                                 ((CHANNEL) == <ref refid="group___a_d_c__channels_1ga7e24a73eec4aeb7d8e2f9008825ceacb" kindref="member">ADC_Channel_6</ref>) || ((CHANNEL) == <ref refid="group___a_d_c__channels_1ga9723aa5fe6b9f4af1ffd3b90e6eef8d1" kindref="member">ADC_Channel_7</ref>) || \
                                 ((CHANNEL) == <ref refid="group___a_d_c__channels_1ga99b2c662d4068152e0e80a048036cc48" kindref="member">ADC_Channel_8</ref>) || ((CHANNEL) == <ref refid="group___a_d_c__channels_1ga01a61c428be0cb69327e428e32a42aa1" kindref="member">ADC_Channel_9</ref>) || \
                                 ((CHANNEL) == <ref refid="group___a_d_c__channels_1gabfa98b580f49a82a83dcb1df32efceca" kindref="member">ADC_Channel_10</ref>) || ((CHANNEL) == <ref refid="group___a_d_c__channels_1ga5bfc40d938f384f22665f6e2dd945cfd" kindref="member">ADC_Channel_11</ref>) || \
                                 ((CHANNEL) == <ref refid="group___a_d_c__channels_1gaa1e35f7870ae8f05013a681293175299" kindref="member">ADC_Channel_12</ref>) || ((CHANNEL) == <ref refid="group___a_d_c__channels_1ga517cda911256f722eb067d7140663230" kindref="member">ADC_Channel_13</ref>) || \
                                 ((CHANNEL) == <ref refid="group___a_d_c__channels_1gaf1830a03fe4a3820fde4f41ba907c394" kindref="member">ADC_Channel_14</ref>) || ((CHANNEL) == <ref refid="group___a_d_c__channels_1ga01431a7b4e388beb241328874abdf88c" kindref="member">ADC_Channel_15</ref>) || \
                                 ((CHANNEL) == <ref refid="group___a_d_c__channels_1ga52fb09ae9a0333a0e071da106466c659" kindref="member">ADC_Channel_16</ref>) || ((CHANNEL) == <ref refid="group___a_d_c__channels_1ga58cdfe3a5625f198116d163b09698cea" kindref="member">ADC_Channel_17</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="202" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" bodystart="202" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_c__sampling__time_1gad085065e48857ada890863a7db575c6e" prot="public" static="no">
        <name>ADC_SampleTime_1Cycles5</name>
        <initializer>((uint8_t)0x00)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="219" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" bodystart="219" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_c__sampling__time_1gac4101073619c4d79efa28a477696b3f5" prot="public" static="no">
        <name>ADC_SampleTime_7Cycles5</name>
        <initializer>((uint8_t)0x01)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="220" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" bodystart="220" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_c__sampling__time_1gaef37e223e826ac5e6ee5ef30881f9b27" prot="public" static="no">
        <name>ADC_SampleTime_13Cycles5</name>
        <initializer>((uint8_t)0x02)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="221" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" bodystart="221" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_c__sampling__time_1ga6251e64783f7a6562e17e71f7edd68d8" prot="public" static="no">
        <name>ADC_SampleTime_28Cycles5</name>
        <initializer>((uint8_t)0x03)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="222" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" bodystart="222" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_c__sampling__time_1gadc3d26f9bf5fa6589889cc938c66e0e7" prot="public" static="no">
        <name>ADC_SampleTime_41Cycles5</name>
        <initializer>((uint8_t)0x04)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="223" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" bodystart="223" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_c__sampling__time_1ga6a6fbbadc0e35a719fb749bf6b0704d6" prot="public" static="no">
        <name>ADC_SampleTime_55Cycles5</name>
        <initializer>((uint8_t)0x05)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="224" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" bodystart="224" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_c__sampling__time_1gae46e8978ac3160969156739ddb867dae" prot="public" static="no">
        <name>ADC_SampleTime_71Cycles5</name>
        <initializer>((uint8_t)0x06)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="225" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" bodystart="225" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_c__sampling__time_1ga93117dc4090dc4e3e84e0eef6d6ab073" prot="public" static="no">
        <name>ADC_SampleTime_239Cycles5</name>
        <initializer>((uint8_t)0x07)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="226" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" bodystart="226" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_c__sampling__time_1ga30e0307fa009e1c383d3047b48e94644" prot="public" static="no">
        <name>IS_ADC_SAMPLE_TIME</name>
        <param><defname>TIME</defname></param>
        <initializer>(((TIME) == <ref refid="group___a_d_c__sampling__time_1gad085065e48857ada890863a7db575c6e" kindref="member">ADC_SampleTime_1Cycles5</ref>) || \
                                  ((TIME) == <ref refid="group___a_d_c__sampling__time_1gac4101073619c4d79efa28a477696b3f5" kindref="member">ADC_SampleTime_7Cycles5</ref>) || \
                                  ((TIME) == <ref refid="group___a_d_c__sampling__time_1gaef37e223e826ac5e6ee5ef30881f9b27" kindref="member">ADC_SampleTime_13Cycles5</ref>) || \
                                  ((TIME) == <ref refid="group___a_d_c__sampling__time_1ga6251e64783f7a6562e17e71f7edd68d8" kindref="member">ADC_SampleTime_28Cycles5</ref>) || \
                                  ((TIME) == <ref refid="group___a_d_c__sampling__time_1gadc3d26f9bf5fa6589889cc938c66e0e7" kindref="member">ADC_SampleTime_41Cycles5</ref>) || \
                                  ((TIME) == <ref refid="group___a_d_c__sampling__time_1ga6a6fbbadc0e35a719fb749bf6b0704d6" kindref="member">ADC_SampleTime_55Cycles5</ref>) || \
                                  ((TIME) == <ref refid="group___a_d_c__sampling__time_1gae46e8978ac3160969156739ddb867dae" kindref="member">ADC_SampleTime_71Cycles5</ref>) || \
                                  ((TIME) == <ref refid="group___a_d_c__sampling__time_1ga93117dc4090dc4e3e84e0eef6d6ab073" kindref="member">ADC_SampleTime_239Cycles5</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="227" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" bodystart="227" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_c__external__trigger__sources__for__injected__channels__conversion_1gaaad112b2b035dfd77c9743197c51b16f" prot="public" static="no">
        <name>ADC_ExternalTrigInjecConv_T2_TRGO</name>
        <initializer>((uint32_t)0x00002000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>For ADC1 and ADC2 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="243" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" bodystart="243" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_c__external__trigger__sources__for__injected__channels__conversion_1ga49089501c5bf2a2c22019fbca4b688e9" prot="public" static="no">
        <name>ADC_ExternalTrigInjecConv_T2_CC1</name>
        <initializer>((uint32_t)0x00003000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>For ADC1 and ADC2 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="244" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" bodystart="244" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_c__external__trigger__sources__for__injected__channels__conversion_1ga6c9ddf9bba0cefe77dbcd601aed24f7b" prot="public" static="no">
        <name>ADC_ExternalTrigInjecConv_T3_CC4</name>
        <initializer>((uint32_t)0x00004000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>For ADC1 and ADC2 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="245" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" bodystart="245" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_c__external__trigger__sources__for__injected__channels__conversion_1gab12e5503085cdb9dde4a59614e421284" prot="public" static="no">
        <name>ADC_ExternalTrigInjecConv_T4_TRGO</name>
        <initializer>((uint32_t)0x00005000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>For ADC1 and ADC2 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="246" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" bodystart="246" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_c__external__trigger__sources__for__injected__channels__conversion_1gaa23965b742e08142e5d1c453166dbcc2" prot="public" static="no">
        <name>ADC_ExternalTrigInjecConv_Ext_IT15_TIM8_CC4</name>
        <initializer>((uint32_t)0x00006000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>For ADC1 and ADC2 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="247" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" bodystart="247" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_c__external__trigger__sources__for__injected__channels__conversion_1gabf47f66e60c166f6b63b805f72ad94b0" prot="public" static="no">
        <name>ADC_ExternalTrigInjecConv_T1_TRGO</name>
        <initializer>((uint32_t)0x00000000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>For ADC1, ADC2 and ADC3 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="249" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" bodystart="249" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_c__external__trigger__sources__for__injected__channels__conversion_1gabd27bcc6ff5af6713a124b3801759bcf" prot="public" static="no">
        <name>ADC_ExternalTrigInjecConv_T1_CC4</name>
        <initializer>((uint32_t)0x00001000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>For ADC1, ADC2 and ADC3 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="250" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" bodystart="250" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_c__external__trigger__sources__for__injected__channels__conversion_1gaad11a68fca76d97b97dc2554dac5cb16" prot="public" static="no">
        <name>ADC_ExternalTrigInjecConv_None</name>
        <initializer>((uint32_t)0x00007000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>For ADC1, ADC2 and ADC3 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="251" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" bodystart="251" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_c__external__trigger__sources__for__injected__channels__conversion_1gae342ca48595f0b2bf866943969026581" prot="public" static="no">
        <name>ADC_ExternalTrigInjecConv_T4_CC3</name>
        <initializer>((uint32_t)0x00002000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>For ADC3 only </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="253" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" bodystart="253" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_c__external__trigger__sources__for__injected__channels__conversion_1gac0320df9aa5e2d378b05f8e4dcc1616a" prot="public" static="no">
        <name>ADC_ExternalTrigInjecConv_T8_CC2</name>
        <initializer>((uint32_t)0x00003000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>For ADC3 only </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="254" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" bodystart="254" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_c__external__trigger__sources__for__injected__channels__conversion_1ga6724679fe75f87c029f268ef47841a3e" prot="public" static="no">
        <name>ADC_ExternalTrigInjecConv_T8_CC4</name>
        <initializer>((uint32_t)0x00004000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>For ADC3 only </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="255" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" bodystart="255" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_c__external__trigger__sources__for__injected__channels__conversion_1ga1d92236e9eb9f3adf69371f3f698192e" prot="public" static="no">
        <name>ADC_ExternalTrigInjecConv_T5_TRGO</name>
        <initializer>((uint32_t)0x00005000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>For ADC3 only </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="256" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" bodystart="256" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_c__external__trigger__sources__for__injected__channels__conversion_1gade68a960ba05714e5f0a1f11a086884e" prot="public" static="no">
        <name>ADC_ExternalTrigInjecConv_T5_CC4</name>
        <initializer>((uint32_t)0x00006000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>For ADC3 only </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="257" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" bodystart="257" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_c__external__trigger__sources__for__injected__channels__conversion_1ga3cb8cadbff46e432b5e000c3a7489a0b" prot="public" static="no">
        <name>IS_ADC_EXT_INJEC_TRIG</name>
        <param><defname>INJTRIG</defname></param>
        <initializer>(((INJTRIG) == <ref refid="group___a_d_c__external__trigger__sources__for__injected__channels__conversion_1gabf47f66e60c166f6b63b805f72ad94b0" kindref="member">ADC_ExternalTrigInjecConv_T1_TRGO</ref>) || \
                                        ((INJTRIG) == <ref refid="group___a_d_c__external__trigger__sources__for__injected__channels__conversion_1gabd27bcc6ff5af6713a124b3801759bcf" kindref="member">ADC_ExternalTrigInjecConv_T1_CC4</ref>) || \
                                        ((INJTRIG) == <ref refid="group___a_d_c__external__trigger__sources__for__injected__channels__conversion_1gaaad112b2b035dfd77c9743197c51b16f" kindref="member">ADC_ExternalTrigInjecConv_T2_TRGO</ref>) || \
                                        ((INJTRIG) == <ref refid="group___a_d_c__external__trigger__sources__for__injected__channels__conversion_1ga49089501c5bf2a2c22019fbca4b688e9" kindref="member">ADC_ExternalTrigInjecConv_T2_CC1</ref>) || \
                                        ((INJTRIG) == <ref refid="group___a_d_c__external__trigger__sources__for__injected__channels__conversion_1ga6c9ddf9bba0cefe77dbcd601aed24f7b" kindref="member">ADC_ExternalTrigInjecConv_T3_CC4</ref>) || \
                                        ((INJTRIG) == <ref refid="group___a_d_c__external__trigger__sources__for__injected__channels__conversion_1gab12e5503085cdb9dde4a59614e421284" kindref="member">ADC_ExternalTrigInjecConv_T4_TRGO</ref>) || \
                                        ((INJTRIG) == <ref refid="group___a_d_c__external__trigger__sources__for__injected__channels__conversion_1gaa23965b742e08142e5d1c453166dbcc2" kindref="member">ADC_ExternalTrigInjecConv_Ext_IT15_TIM8_CC4</ref>) || \
                                        ((INJTRIG) == <ref refid="group___a_d_c__external__trigger__sources__for__injected__channels__conversion_1gaad11a68fca76d97b97dc2554dac5cb16" kindref="member">ADC_ExternalTrigInjecConv_None</ref>) || \
                                        ((INJTRIG) == <ref refid="group___a_d_c__external__trigger__sources__for__injected__channels__conversion_1gae342ca48595f0b2bf866943969026581" kindref="member">ADC_ExternalTrigInjecConv_T4_CC3</ref>) || \
                                        ((INJTRIG) == <ref refid="group___a_d_c__external__trigger__sources__for__injected__channels__conversion_1gac0320df9aa5e2d378b05f8e4dcc1616a" kindref="member">ADC_ExternalTrigInjecConv_T8_CC2</ref>) || \
                                        ((INJTRIG) == <ref refid="group___a_d_c__external__trigger__sources__for__injected__channels__conversion_1ga6724679fe75f87c029f268ef47841a3e" kindref="member">ADC_ExternalTrigInjecConv_T8_CC4</ref>) || \
                                        ((INJTRIG) == <ref refid="group___a_d_c__external__trigger__sources__for__injected__channels__conversion_1ga1d92236e9eb9f3adf69371f3f698192e" kindref="member">ADC_ExternalTrigInjecConv_T5_TRGO</ref>) || \
                                        ((INJTRIG) == <ref refid="group___a_d_c__external__trigger__sources__for__injected__channels__conversion_1gade68a960ba05714e5f0a1f11a086884e" kindref="member">ADC_ExternalTrigInjecConv_T5_CC4</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="259" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" bodystart="259" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_c__injected__channel__selection_1ga8792d4ae0fa82dd317252c72815684ba" prot="public" static="no">
        <name>ADC_InjectedChannel_1</name>
        <initializer>((uint8_t)0x14)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="280" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" bodystart="280" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_c__injected__channel__selection_1ga2e322fccc7de16a0e79be573f5b1211c" prot="public" static="no">
        <name>ADC_InjectedChannel_2</name>
        <initializer>((uint8_t)0x18)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="281" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" bodystart="281" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_c__injected__channel__selection_1ga6bf03d805645b942bdcc53504e772cf1" prot="public" static="no">
        <name>ADC_InjectedChannel_3</name>
        <initializer>((uint8_t)0x1C)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="282" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" bodystart="282" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_c__injected__channel__selection_1ga31d18bbcfa7b685e90c3a1313d9c6406" prot="public" static="no">
        <name>ADC_InjectedChannel_4</name>
        <initializer>((uint8_t)0x20)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="283" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" bodystart="283" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_c__injected__channel__selection_1gae0bbfb5dbad0fbac8b672db6f63cf8d0" prot="public" static="no">
        <name>IS_ADC_INJECTED_CHANNEL</name>
        <param><defname>CHANNEL</defname></param>
        <initializer>(((CHANNEL) == <ref refid="group___a_d_c__injected__channel__selection_1ga8792d4ae0fa82dd317252c72815684ba" kindref="member">ADC_InjectedChannel_1</ref>) || \
                                          ((CHANNEL) == <ref refid="group___a_d_c__injected__channel__selection_1ga2e322fccc7de16a0e79be573f5b1211c" kindref="member">ADC_InjectedChannel_2</ref>) || \
                                          ((CHANNEL) == <ref refid="group___a_d_c__injected__channel__selection_1ga6bf03d805645b942bdcc53504e772cf1" kindref="member">ADC_InjectedChannel_3</ref>) || \
                                          ((CHANNEL) == <ref refid="group___a_d_c__injected__channel__selection_1ga31d18bbcfa7b685e90c3a1313d9c6406" kindref="member">ADC_InjectedChannel_4</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="284" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" bodystart="284" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_c__analog__watchdog__selection_1ga2975552a752f44085d9da54b4e76121e" prot="public" static="no">
        <name>ADC_AnalogWatchdog_SingleRegEnable</name>
        <initializer>((uint32_t)0x00800200)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="296" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" bodystart="296" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_c__analog__watchdog__selection_1gaa9904271617ab69593ac68ae540047fb" prot="public" static="no">
        <name>ADC_AnalogWatchdog_SingleInjecEnable</name>
        <initializer>((uint32_t)0x00400200)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="297" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" bodystart="297" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_c__analog__watchdog__selection_1gaffd35fc6ceb226ec3fb61fb52227820c" prot="public" static="no">
        <name>ADC_AnalogWatchdog_SingleRegOrInjecEnable</name>
        <initializer>((uint32_t)0x00C00200)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="298" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" bodystart="298" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_c__analog__watchdog__selection_1ga37f08e1a4a452a2c148341b3cfcdeb1e" prot="public" static="no">
        <name>ADC_AnalogWatchdog_AllRegEnable</name>
        <initializer>((uint32_t)0x00800000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="299" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" bodystart="299" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_c__analog__watchdog__selection_1gae4d6a7ebb136d924f0c8bad2cbac0574" prot="public" static="no">
        <name>ADC_AnalogWatchdog_AllInjecEnable</name>
        <initializer>((uint32_t)0x00400000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="300" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" bodystart="300" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_c__analog__watchdog__selection_1ga25a299f4493aaae316521351198df084" prot="public" static="no">
        <name>ADC_AnalogWatchdog_AllRegAllInjecEnable</name>
        <initializer>((uint32_t)0x00C00000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="301" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" bodystart="301" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_c__analog__watchdog__selection_1ga91f69979e0e449fef5a8b225a21e3eb9" prot="public" static="no">
        <name>ADC_AnalogWatchdog_None</name>
        <initializer>((uint32_t)0x00000000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="302" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" bodystart="302" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_c__analog__watchdog__selection_1ga53ffa30f756569194342bfba80165544" prot="public" static="no">
        <name>IS_ADC_ANALOG_WATCHDOG</name>
        <param><defname>WATCHDOG</defname></param>
        <initializer>(((WATCHDOG) == <ref refid="group___a_d_c__analog__watchdog__selection_1ga2975552a752f44085d9da54b4e76121e" kindref="member">ADC_AnalogWatchdog_SingleRegEnable</ref>) || \
                                          ((WATCHDOG) == <ref refid="group___a_d_c__analog__watchdog__selection_1gaa9904271617ab69593ac68ae540047fb" kindref="member">ADC_AnalogWatchdog_SingleInjecEnable</ref>) || \
                                          ((WATCHDOG) == <ref refid="group___a_d_c__analog__watchdog__selection_1gaffd35fc6ceb226ec3fb61fb52227820c" kindref="member">ADC_AnalogWatchdog_SingleRegOrInjecEnable</ref>) || \
                                          ((WATCHDOG) == <ref refid="group___a_d_c__analog__watchdog__selection_1ga37f08e1a4a452a2c148341b3cfcdeb1e" kindref="member">ADC_AnalogWatchdog_AllRegEnable</ref>) || \
                                          ((WATCHDOG) == <ref refid="group___a_d_c__analog__watchdog__selection_1gae4d6a7ebb136d924f0c8bad2cbac0574" kindref="member">ADC_AnalogWatchdog_AllInjecEnable</ref>) || \
                                          ((WATCHDOG) == <ref refid="group___a_d_c__analog__watchdog__selection_1ga25a299f4493aaae316521351198df084" kindref="member">ADC_AnalogWatchdog_AllRegAllInjecEnable</ref>) || \
                                          ((WATCHDOG) == <ref refid="group___a_d_c__analog__watchdog__selection_1ga91f69979e0e449fef5a8b225a21e3eb9" kindref="member">ADC_AnalogWatchdog_None</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="304" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" bodystart="304" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_c__interrupts__definition_1ga0ad335d835f54415194d448019569e00" prot="public" static="no">
        <name>ADC_IT_EOC</name>
        <initializer>((uint16_t)0x0220)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="319" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" bodystart="319" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_c__interrupts__definition_1ga2f5c7f9900c24250a0c6ccaa7cbca946" prot="public" static="no">
        <name>ADC_IT_AWD</name>
        <initializer>((uint16_t)0x0140)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="320" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" bodystart="320" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_c__interrupts__definition_1gad439fc0cd69706704d47aeabfeddb631" prot="public" static="no">
        <name>ADC_IT_JEOC</name>
        <initializer>((uint16_t)0x0480)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="321" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" bodystart="321" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_c__interrupts__definition_1gaf5f8d35930becff402eeb8220641432f" prot="public" static="no">
        <name>IS_ADC_IT</name>
        <param><defname>IT</defname></param>
        <initializer>((((IT) &amp; (uint16_t)0xF81F) == 0x00) &amp;&amp; ((IT) != 0x00))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="323" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" bodystart="323" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_c__interrupts__definition_1gacae69f04de1a0033f065864d868c006e" prot="public" static="no">
        <name>IS_ADC_GET_IT</name>
        <param><defname>IT</defname></param>
        <initializer>(((IT) == <ref refid="group___a_d_c__interrupts__definition_1ga0ad335d835f54415194d448019569e00" kindref="member">ADC_IT_EOC</ref>) || ((IT) == <ref refid="group___a_d_c__interrupts__definition_1ga2f5c7f9900c24250a0c6ccaa7cbca946" kindref="member">ADC_IT_AWD</ref>) || \
                           ((IT) == <ref refid="group___a_d_c__interrupts__definition_1gad439fc0cd69706704d47aeabfeddb631" kindref="member">ADC_IT_JEOC</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="325" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" bodystart="325" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_c__flags__definition_1gadb75a4b430fb84950232b7a8f3a6a877" prot="public" static="no">
        <name>ADC_FLAG_AWD</name>
        <initializer>((uint8_t)0x01)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="335" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" bodystart="335" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_c__flags__definition_1gaf2c6fdf7e9ab63b778149e5fb56413d4" prot="public" static="no">
        <name>ADC_FLAG_EOC</name>
        <initializer>((uint8_t)0x02)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="336" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" bodystart="336" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_c__flags__definition_1ga4df8eea8ab83d98104ee15a339743a4e" prot="public" static="no">
        <name>ADC_FLAG_JEOC</name>
        <initializer>((uint8_t)0x04)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="337" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" bodystart="337" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_c__flags__definition_1ga278f4e866f4322c1120bf0db5301c432" prot="public" static="no">
        <name>ADC_FLAG_JSTRT</name>
        <initializer>((uint8_t)0x08)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="338" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" bodystart="338" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_c__flags__definition_1gad0c59ae7749c69b5b91f2c533db1b619" prot="public" static="no">
        <name>ADC_FLAG_STRT</name>
        <initializer>((uint8_t)0x10)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="339" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" bodystart="339" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_c__flags__definition_1gac5b6fb60ec921255b05261ec04573470" prot="public" static="no">
        <name>IS_ADC_CLEAR_FLAG</name>
        <param><defname>FLAG</defname></param>
        <initializer>((((FLAG) &amp; (uint8_t)0xE0) == 0x00) &amp;&amp; ((FLAG) != 0x00))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="340" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" bodystart="340" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_c__flags__definition_1ga597eb68dfef9dbe0928ed14a1aedc710" prot="public" static="no">
        <name>IS_ADC_GET_FLAG</name>
        <param><defname>FLAG</defname></param>
        <initializer>(((FLAG) == <ref refid="group___a_d_c__flags__definition_1gadb75a4b430fb84950232b7a8f3a6a877" kindref="member">ADC_FLAG_AWD</ref>) || ((FLAG) == <ref refid="group___a_d_c__flags__definition_1gaf2c6fdf7e9ab63b778149e5fb56413d4" kindref="member">ADC_FLAG_EOC</ref>) || \
                               ((FLAG) == <ref refid="group___a_d_c__flags__definition_1ga4df8eea8ab83d98104ee15a339743a4e" kindref="member">ADC_FLAG_JEOC</ref>) || ((FLAG)== <ref refid="group___a_d_c__flags__definition_1ga278f4e866f4322c1120bf0db5301c432" kindref="member">ADC_FLAG_JSTRT</ref>) || \
                               ((FLAG) == <ref refid="group___a_d_c__flags__definition_1gad0c59ae7749c69b5b91f2c533db1b619" kindref="member">ADC_FLAG_STRT</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="341" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" bodystart="341" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_c__thresholds_1gaa71cdff6dafddfccff8a7e88768bfb54" prot="public" static="no">
        <name>IS_ADC_THRESHOLD</name>
        <param><defname>THRESHOLD</defname></param>
        <initializer>((THRESHOLD) &lt;= 0xFFF)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="352" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" bodystart="352" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_c__injected__offset_1ga252eaf5d2552f0d11b1bcca7dc48950a" prot="public" static="no">
        <name>IS_ADC_OFFSET</name>
        <param><defname>OFFSET</defname></param>
        <initializer>((OFFSET) &lt;= 0xFFF)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="362" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" bodystart="362" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_c__injected__length_1gaecdddab7424a697722683296ca70e176" prot="public" static="no">
        <name>IS_ADC_INJECTED_LENGTH</name>
        <param><defname>LENGTH</defname></param>
        <initializer>(((LENGTH) &gt;= 0x1) &amp;&amp; ((LENGTH) &lt;= 0x4))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="372" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" bodystart="372" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_c__injected__rank_1ga63f95f9a45f4d718aabc9e429d860e9d" prot="public" static="no">
        <name>IS_ADC_INJECTED_RANK</name>
        <param><defname>RANK</defname></param>
        <initializer>(((RANK) &gt;= 0x1) &amp;&amp; ((RANK) &lt;= 0x4))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="382" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" bodystart="382" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_c__regular__length_1ga1ea82167f6dccdef1d160675f4534584" prot="public" static="no">
        <name>IS_ADC_REGULAR_LENGTH</name>
        <param><defname>LENGTH</defname></param>
        <initializer>(((LENGTH) &gt;= 0x1) &amp;&amp; ((LENGTH) &lt;= 0x10))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="393" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" bodystart="393" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_c__regular__rank_1ga5928a1e9315f798e27220b91f1bae7f2" prot="public" static="no">
        <name>IS_ADC_REGULAR_RANK</name>
        <param><defname>RANK</defname></param>
        <initializer>(((RANK) &gt;= 0x1) &amp;&amp; ((RANK) &lt;= 0x10))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="402" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" bodystart="402" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_c__regular__discontinuous__mode__number_1gab8dfaacb2f25e65ca755de71050ff270" prot="public" static="no">
        <name>IS_ADC_REGULAR_DISC_NUMBER</name>
        <param><defname>NUMBER</defname></param>
        <initializer>(((NUMBER) &gt;= 0x1) &amp;&amp; ((NUMBER) &lt;= 0x8))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="412" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" bodystart="412" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group___a_d_c___exported___functions_1ga31fa6bc09de17125e9db2830ce77c09b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ADC_DeInit</definition>
        <argsstring>(ADC_TypeDef *ADCx)</argsstring>
        <name>ADC_DeInit</name>
        <param>
          <type><ref refid="struct_a_d_c___type_def" kindref="compound">ADC_TypeDef</ref> *</type>
          <declname>ADCx</declname>
        </param>
        <briefdescription>
<para>Deinitializes the ADCx peripheral registers to their default reset values. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ADCx</parametername>
</parameternamelist>
<parameterdescription>
<para>where x can be 1, 2 or 3 to select the ADC peripheral. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="434" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_adc.c" bodystart="185" bodyend="214"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___a_d_c___exported___constants_1gaf5d6bd0153464912e0eaccb1af1aefb2" compoundref="stm32f10x__adc_8h" startline="89">IS_ADC_ALL_PERIPH</references>
        <references refid="group___peripheral__declaration_1ga90d2d5c526ce5c0a551f533eccbee71a" compoundref="stm32f10x_8h" startline="1415">ADC1</references>
        <references refid="group___r_c_c___exported___functions_1gad94553850ac07106a27ee85fec37efdf" compoundref="stm32f10x__rcc_8c" startline="1185" endline="1198">RCC_APB2PeriphResetCmd</references>
        <references refid="group___a_p_b2__peripheral_1gacd24acb2cd5ca208652157f6c13d3145" compoundref="stm32f10x__rcc_8h" startline="505">RCC_APB2Periph_ADC1</references>
        <references refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1a7d46875fa3ebd2c34d2756950eda83bf" compoundref="stm32f10x_8h" startline="521">ENABLE</references>
        <references refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1ad3a9df141be0ccf10389b640f492b26d" compoundref="stm32f10x_8h" startline="521">DISABLE</references>
        <references refid="group___peripheral__declaration_1gac5503ae96c26b4475226f96715a1bf1e" compoundref="stm32f10x_8h" startline="1416">ADC2</references>
        <references refid="group___a_p_b2__peripheral_1ga4fd76e573e827702568d6064e33448b5" compoundref="stm32f10x__rcc_8h" startline="506">RCC_APB2Periph_ADC2</references>
        <references refid="group___peripheral__declaration_1gae917784606daf6b04c9b7b96b40c2f74" compoundref="stm32f10x_8h" startline="1421">ADC3</references>
        <references refid="group___a_p_b2__peripheral_1ga371d55bbf17bf965a213c59f2d276d72" compoundref="stm32f10x__rcc_8h" startline="511">RCC_APB2Periph_ADC3</references>
      </memberdef>
      <memberdef kind="function" id="group___a_d_c___exported___functions_1gabbab6038cf8691404350625e477254f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ADC_Init</definition>
        <argsstring>(ADC_TypeDef *ADCx, ADC_InitTypeDef *ADC_InitStruct)</argsstring>
        <name>ADC_Init</name>
        <param>
          <type><ref refid="struct_a_d_c___type_def" kindref="compound">ADC_TypeDef</ref> *</type>
          <declname>ADCx</declname>
        </param>
        <param>
          <type><ref refid="struct_a_d_c___init_type_def" kindref="compound">ADC_InitTypeDef</ref> *</type>
          <declname>ADC_InitStruct</declname>
        </param>
        <briefdescription>
<para>Initializes the ADCx peripheral according to the specified parameters in the ADC_InitStruct. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ADCx</parametername>
</parameternamelist>
<parameterdescription>
<para>where x can be 1, 2 or 3 to select the ADC peripheral. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ADC_InitStruct</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an <ref refid="struct_a_d_c___init_type_def" kindref="compound">ADC_InitTypeDef</ref> structure that contains the configuration information for the specified ADC peripheral. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="435" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_adc.c" bodystart="224" bodyend="274"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___a_d_c___exported___constants_1gaf5d6bd0153464912e0eaccb1af1aefb2" compoundref="stm32f10x__adc_8h" startline="89">IS_ADC_ALL_PERIPH</references>
        <references refid="group___a_d_c__mode_1ga4abf4c7de28a42d7b124c9e403a6e537" compoundref="stm32f10x__adc_8h" startline="111">IS_ADC_MODE</references>
        <references refid="struct_a_d_c___init_type_def_1a0f9ec17ad585d66a54625213062c9260" compoundref="stm32f10x__adc_8h" startline="58">ADC_InitTypeDef::ADC_Mode</references>
        <references refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" compoundref="stm32f10x_8h" startline="522">IS_FUNCTIONAL_STATE</references>
        <references refid="struct_a_d_c___init_type_def_1aaf44f54f22ab40bf8fae01f075aa4c87" compoundref="stm32f10x__adc_8h" startline="62">ADC_InitTypeDef::ADC_ScanConvMode</references>
        <references refid="struct_a_d_c___init_type_def_1a2149036a332281e70a36879a2396b8d1" compoundref="stm32f10x__adc_8h" startline="66">ADC_InitTypeDef::ADC_ContinuousConvMode</references>
        <references refid="group___a_d_c__external__trigger__sources__for__regular__channels__conversion_1gac74e6054adbedd72822cacde69105318" compoundref="stm32f10x__adc_8h" startline="146">IS_ADC_EXT_TRIG</references>
        <references refid="struct_a_d_c___init_type_def_1ae5d0c48e70c2a39355b7ab0cc1df8310" compoundref="stm32f10x__adc_8h" startline="70">ADC_InitTypeDef::ADC_ExternalTrigConv</references>
        <references refid="group___a_d_c__data__align_1ga2903b620e3c61dc47ed8c0fbf4197801" compoundref="stm32f10x__adc_8h" startline="170">IS_ADC_DATA_ALIGN</references>
        <references refid="struct_a_d_c___init_type_def_1a622e89d8fba3900f20aaf40d5560ab7b" compoundref="stm32f10x__adc_8h" startline="74">ADC_InitTypeDef::ADC_DataAlign</references>
        <references refid="group___a_d_c__regular__length_1ga1ea82167f6dccdef1d160675f4534584" compoundref="stm32f10x__adc_8h" startline="393">IS_ADC_REGULAR_LENGTH</references>
        <references refid="struct_a_d_c___init_type_def_1ad6f39a12ac32a2767085ac94e9338bc3" compoundref="stm32f10x__adc_8h" startline="77">ADC_InitTypeDef::ADC_NbrOfChannel</references>
        <references refid="struct_a_d_c___type_def_1a89b1ff4376683dd2896ea8b32ded05b2" compoundref="stm32f10x_8h" startline="545">ADC_TypeDef::CR1</references>
        <references refid="group___a_d_c___private___defines_1ga67f7dd35ea3d1296677e5fc50b88fa90" compoundref="stm32f10x__adc_8c" startline="75">CR1_CLEAR_Mask</references>
        <references refid="struct_a_d_c___type_def_1a1053a65a21af0d27afe1bf9cf7b7aca7" compoundref="stm32f10x_8h" startline="546">ADC_TypeDef::CR2</references>
        <references refid="group___a_d_c___private___defines_1ga49192361afb92aee0e3f1124ef1131a0" compoundref="stm32f10x__adc_8c" startline="121">CR2_CLEAR_Mask</references>
        <references refid="struct_a_d_c___type_def_1a0185aa54962ba987f192154fb7a2d673" compoundref="stm32f10x_8h" startline="555">ADC_TypeDef::SQR1</references>
        <references refid="group___a_d_c___private___defines_1ga6e3e238f38d7ff17939cbd5417fc51cc" compoundref="stm32f10x__adc_8c" startline="129">SQR1_CLEAR_Mask</references>
      </memberdef>
      <memberdef kind="function" id="group___a_d_c___exported___functions_1ga6c6e754d1d0a98d56e465efaf73272ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ADC_StructInit</definition>
        <argsstring>(ADC_InitTypeDef *ADC_InitStruct)</argsstring>
        <name>ADC_StructInit</name>
        <param>
          <type><ref refid="struct_a_d_c___init_type_def" kindref="compound">ADC_InitTypeDef</ref> *</type>
          <declname>ADC_InitStruct</declname>
        </param>
        <briefdescription>
<para>Fills each ADC_InitStruct member with its default value. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ADC_InitStruct</parametername>
</parameternamelist>
<parameterdescription>
<para>: pointer to an <ref refid="struct_a_d_c___init_type_def" kindref="compound">ADC_InitTypeDef</ref> structure which will be initialized. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="436" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_adc.c" bodystart="281" bodyend="296"/>
        <references refid="struct_a_d_c___init_type_def_1a0f9ec17ad585d66a54625213062c9260" compoundref="stm32f10x__adc_8h" startline="58">ADC_InitTypeDef::ADC_Mode</references>
        <references refid="group___a_d_c__mode_1ga2754d3a35559dc10e3d6a7d920e83432" compoundref="stm32f10x__adc_8h" startline="100">ADC_Mode_Independent</references>
        <references refid="struct_a_d_c___init_type_def_1aaf44f54f22ab40bf8fae01f075aa4c87" compoundref="stm32f10x__adc_8h" startline="62">ADC_InitTypeDef::ADC_ScanConvMode</references>
        <references refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1ad3a9df141be0ccf10389b640f492b26d" compoundref="stm32f10x_8h" startline="521">DISABLE</references>
        <references refid="struct_a_d_c___init_type_def_1a2149036a332281e70a36879a2396b8d1" compoundref="stm32f10x__adc_8h" startline="66">ADC_InitTypeDef::ADC_ContinuousConvMode</references>
        <references refid="struct_a_d_c___init_type_def_1ae5d0c48e70c2a39355b7ab0cc1df8310" compoundref="stm32f10x__adc_8h" startline="70">ADC_InitTypeDef::ADC_ExternalTrigConv</references>
        <references refid="group___a_d_c__external__trigger__sources__for__regular__channels__conversion_1ga303f24361ea930f8214e9e68b63b244e" compoundref="stm32f10x__adc_8h" startline="129">ADC_ExternalTrigConv_T1_CC1</references>
        <references refid="struct_a_d_c___init_type_def_1a622e89d8fba3900f20aaf40d5560ab7b" compoundref="stm32f10x__adc_8h" startline="74">ADC_InitTypeDef::ADC_DataAlign</references>
        <references refid="group___a_d_c__data__align_1ga80b5d2f2b6b058bc498f58e0a92ad035" compoundref="stm32f10x__adc_8h" startline="168">ADC_DataAlign_Right</references>
        <references refid="struct_a_d_c___init_type_def_1ad6f39a12ac32a2767085ac94e9338bc3" compoundref="stm32f10x__adc_8h" startline="77">ADC_InitTypeDef::ADC_NbrOfChannel</references>
      </memberdef>
      <memberdef kind="function" id="group___a_d_c___exported___functions_1ga40882d399e3371755ed610c1134e634e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ADC_Cmd</definition>
        <argsstring>(ADC_TypeDef *ADCx, FunctionalState NewState)</argsstring>
        <name>ADC_Cmd</name>
        <param>
          <type><ref refid="struct_a_d_c___type_def" kindref="compound">ADC_TypeDef</ref> *</type>
          <declname>ADCx</declname>
        </param>
        <param>
          <type><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref></type>
          <declname>NewState</declname>
        </param>
        <briefdescription>
<para>Enables or disables the specified ADC peripheral. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ADCx</parametername>
</parameternamelist>
<parameterdescription>
<para>where x can be 1, 2 or 3 to select the ADC peripheral. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NewState</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of the ADCx peripheral. This parameter can be: ENABLE or DISABLE. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="437" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_adc.c" bodystart="305" bodyend="320"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___a_d_c___exported___constants_1gaf5d6bd0153464912e0eaccb1af1aefb2" compoundref="stm32f10x__adc_8h" startline="89">IS_ADC_ALL_PERIPH</references>
        <references refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" compoundref="stm32f10x_8h" startline="522">IS_FUNCTIONAL_STATE</references>
        <references refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1ad3a9df141be0ccf10389b640f492b26d" compoundref="stm32f10x_8h" startline="521">DISABLE</references>
        <references refid="struct_a_d_c___type_def_1a1053a65a21af0d27afe1bf9cf7b7aca7" compoundref="stm32f10x_8h" startline="546">ADC_TypeDef::CR2</references>
        <references refid="group___a_d_c___private___defines_1ga21779759f3d5d1389b114d7a1bb6fca1" compoundref="stm32f10x__adc_8c" startline="78">CR2_ADON_Set</references>
        <references refid="group___a_d_c___private___defines_1gaa3eb5d77998387159508a57d7e09f459" compoundref="stm32f10x__adc_8c" startline="79">CR2_ADON_Reset</references>
      </memberdef>
      <memberdef kind="function" id="group___a_d_c___exported___functions_1gac5881d5995818001584b27b137a8dbcb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ADC_DMACmd</definition>
        <argsstring>(ADC_TypeDef *ADCx, FunctionalState NewState)</argsstring>
        <name>ADC_DMACmd</name>
        <param>
          <type><ref refid="struct_a_d_c___type_def" kindref="compound">ADC_TypeDef</ref> *</type>
          <declname>ADCx</declname>
        </param>
        <param>
          <type><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref></type>
          <declname>NewState</declname>
        </param>
        <briefdescription>
<para>Enables or disables the specified ADC DMA request. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ADCx</parametername>
</parameternamelist>
<parameterdescription>
<para>where x can be 1 or 3 to select the ADC peripheral. Note: ADC2 hasn&apos;t a DMA capability. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NewState</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of the selected ADC DMA transfer. This parameter can be: ENABLE or DISABLE. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="438" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_adc.c" bodystart="330" bodyend="345"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___a_d_c___exported___constants_1ga56ce1703cee9a93969fc507b985ee949" compoundref="stm32f10x__adc_8h" startline="93">IS_ADC_DMA_PERIPH</references>
        <references refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" compoundref="stm32f10x_8h" startline="522">IS_FUNCTIONAL_STATE</references>
        <references refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1ad3a9df141be0ccf10389b640f492b26d" compoundref="stm32f10x_8h" startline="521">DISABLE</references>
        <references refid="struct_a_d_c___type_def_1a1053a65a21af0d27afe1bf9cf7b7aca7" compoundref="stm32f10x_8h" startline="546">ADC_TypeDef::CR2</references>
        <references refid="group___a_d_c___private___defines_1ga7fa8ba27f5b249dd7cb0b6e53a25d6e2" compoundref="stm32f10x__adc_8c" startline="82">CR2_DMA_Set</references>
        <references refid="group___a_d_c___private___defines_1ga8e674886185af86bc17d9266ddbdca7c" compoundref="stm32f10x__adc_8c" startline="83">CR2_DMA_Reset</references>
      </memberdef>
      <memberdef kind="function" id="group___a_d_c___exported___functions_1gad4c84b54b539944f555488bf979f82b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ADC_ITConfig</definition>
        <argsstring>(ADC_TypeDef *ADCx, uint16_t ADC_IT, FunctionalState NewState)</argsstring>
        <name>ADC_ITConfig</name>
        <param>
          <type><ref refid="struct_a_d_c___type_def" kindref="compound">ADC_TypeDef</ref> *</type>
          <declname>ADCx</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>ADC_IT</declname>
        </param>
        <param>
          <type><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref></type>
          <declname>NewState</declname>
        </param>
        <briefdescription>
<para>Enables or disables the specified ADC interrupts. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ADCx</parametername>
</parameternamelist>
<parameterdescription>
<para>where x can be 1, 2 or 3 to select the ADC peripheral. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ADC_IT</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the ADC interrupt sources to be enabled or disabled. This parameter can be any combination of the following values: <itemizedlist>
<listitem><para>ADC_IT_EOC: End of conversion interrupt mask </para></listitem>
<listitem><para>ADC_IT_AWD: Analog watchdog interrupt mask </para></listitem>
<listitem><para>ADC_IT_JEOC: End of injected conversion interrupt mask </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NewState</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of the specified ADC interrupts. This parameter can be: ENABLE or DISABLE. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="439" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_adc.c" bodystart="359" bodyend="378"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___a_d_c___exported___constants_1gaf5d6bd0153464912e0eaccb1af1aefb2" compoundref="stm32f10x__adc_8h" startline="89">IS_ADC_ALL_PERIPH</references>
        <references refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" compoundref="stm32f10x_8h" startline="522">IS_FUNCTIONAL_STATE</references>
        <references refid="group___a_d_c__interrupts__definition_1gaf5f8d35930becff402eeb8220641432f" compoundref="stm32f10x__adc_8h" startline="323">IS_ADC_IT</references>
        <references refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1ad3a9df141be0ccf10389b640f492b26d" compoundref="stm32f10x_8h" startline="521">DISABLE</references>
        <references refid="struct_a_d_c___type_def_1a89b1ff4376683dd2896ea8b32ded05b2" compoundref="stm32f10x_8h" startline="545">ADC_TypeDef::CR1</references>
      </memberdef>
      <memberdef kind="function" id="group___a_d_c___exported___functions_1ga3d542020ba28c1d16238a0defbee6d8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ADC_ResetCalibration</definition>
        <argsstring>(ADC_TypeDef *ADCx)</argsstring>
        <name>ADC_ResetCalibration</name>
        <param>
          <type><ref refid="struct_a_d_c___type_def" kindref="compound">ADC_TypeDef</ref> *</type>
          <declname>ADCx</declname>
        </param>
        <briefdescription>
<para>Resets the selected ADC calibration registers. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ADCx</parametername>
</parameternamelist>
<parameterdescription>
<para>where x can be 1, 2 or 3 to select the ADC peripheral. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="440" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_adc.c" bodystart="385" bodyend="391"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___a_d_c___exported___constants_1gaf5d6bd0153464912e0eaccb1af1aefb2" compoundref="stm32f10x__adc_8h" startline="89">IS_ADC_ALL_PERIPH</references>
        <references refid="struct_a_d_c___type_def_1a1053a65a21af0d27afe1bf9cf7b7aca7" compoundref="stm32f10x_8h" startline="546">ADC_TypeDef::CR2</references>
        <references refid="group___a_d_c___private___defines_1gaf256d4606fbe82d7e4cdc8d177653b53" compoundref="stm32f10x__adc_8c" startline="86">CR2_RSTCAL_Set</references>
      </memberdef>
      <memberdef kind="function" id="group___a_d_c___exported___functions_1ga113be9fe25add8d7496bed659c68e02b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___exported__types_1ga89136caac2e14c55151f527ac02daaff" kindref="member">FlagStatus</ref></type>
        <definition>FlagStatus ADC_GetResetCalibrationStatus</definition>
        <argsstring>(ADC_TypeDef *ADCx)</argsstring>
        <name>ADC_GetResetCalibrationStatus</name>
        <param>
          <type><ref refid="struct_a_d_c___type_def" kindref="compound">ADC_TypeDef</ref> *</type>
          <declname>ADCx</declname>
        </param>
        <briefdescription>
<para>Gets the selected ADC reset calibration registers status. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ADCx</parametername>
</parameternamelist>
<parameterdescription>
<para>where x can be 1, 2 or 3 to select the ADC peripheral. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of ADC reset calibration registers (SET or RESET). </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="441" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_adc.c" bodystart="398" bodyend="416"/>
        <references refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffa589b7d94a3d91d145720e2fed0eb3a05" compoundref="stm32f10x_8h" startline="519">RESET</references>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___a_d_c___exported___constants_1gaf5d6bd0153464912e0eaccb1af1aefb2" compoundref="stm32f10x__adc_8h" startline="89">IS_ADC_ALL_PERIPH</references>
        <references refid="struct_a_d_c___type_def_1a1053a65a21af0d27afe1bf9cf7b7aca7" compoundref="stm32f10x_8h" startline="546">ADC_TypeDef::CR2</references>
        <references refid="group___a_d_c___private___defines_1gaf256d4606fbe82d7e4cdc8d177653b53" compoundref="stm32f10x__adc_8c" startline="86">CR2_RSTCAL_Set</references>
        <references refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffab44c8101cc294c074709ec1b14211792" compoundref="stm32f10x_8h" startline="519">SET</references>
      </memberdef>
      <memberdef kind="function" id="group___a_d_c___exported___functions_1gadcba6341124a6aabfd2dd885ca8e5f14" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ADC_StartCalibration</definition>
        <argsstring>(ADC_TypeDef *ADCx)</argsstring>
        <name>ADC_StartCalibration</name>
        <param>
          <type><ref refid="struct_a_d_c___type_def" kindref="compound">ADC_TypeDef</ref> *</type>
          <declname>ADCx</declname>
        </param>
        <briefdescription>
<para>Starts the selected ADC calibration process. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ADCx</parametername>
</parameternamelist>
<parameterdescription>
<para>where x can be 1, 2 or 3 to select the ADC peripheral. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="442" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_adc.c" bodystart="423" bodyend="429"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___a_d_c___exported___constants_1gaf5d6bd0153464912e0eaccb1af1aefb2" compoundref="stm32f10x__adc_8h" startline="89">IS_ADC_ALL_PERIPH</references>
        <references refid="struct_a_d_c___type_def_1a1053a65a21af0d27afe1bf9cf7b7aca7" compoundref="stm32f10x_8h" startline="546">ADC_TypeDef::CR2</references>
        <references refid="group___a_d_c___private___defines_1ga6705aae168367a2d961e64dd9137ae3a" compoundref="stm32f10x__adc_8c" startline="89">CR2_CAL_Set</references>
      </memberdef>
      <memberdef kind="function" id="group___a_d_c___exported___functions_1ga7a728f699b487c7fa1694d7424967122" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___exported__types_1ga89136caac2e14c55151f527ac02daaff" kindref="member">FlagStatus</ref></type>
        <definition>FlagStatus ADC_GetCalibrationStatus</definition>
        <argsstring>(ADC_TypeDef *ADCx)</argsstring>
        <name>ADC_GetCalibrationStatus</name>
        <param>
          <type><ref refid="struct_a_d_c___type_def" kindref="compound">ADC_TypeDef</ref> *</type>
          <declname>ADCx</declname>
        </param>
        <briefdescription>
<para>Gets the selected ADC calibration status. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ADCx</parametername>
</parameternamelist>
<parameterdescription>
<para>where x can be 1, 2 or 3 to select the ADC peripheral. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of ADC calibration (SET or RESET). </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="443" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_adc.c" bodystart="436" bodyend="454"/>
        <references refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffa589b7d94a3d91d145720e2fed0eb3a05" compoundref="stm32f10x_8h" startline="519">RESET</references>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___a_d_c___exported___constants_1gaf5d6bd0153464912e0eaccb1af1aefb2" compoundref="stm32f10x__adc_8h" startline="89">IS_ADC_ALL_PERIPH</references>
        <references refid="struct_a_d_c___type_def_1a1053a65a21af0d27afe1bf9cf7b7aca7" compoundref="stm32f10x_8h" startline="546">ADC_TypeDef::CR2</references>
        <references refid="group___a_d_c___private___defines_1ga6705aae168367a2d961e64dd9137ae3a" compoundref="stm32f10x__adc_8c" startline="89">CR2_CAL_Set</references>
        <references refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffab44c8101cc294c074709ec1b14211792" compoundref="stm32f10x_8h" startline="519">SET</references>
      </memberdef>
      <memberdef kind="function" id="group___a_d_c___exported___functions_1ga694130a8d1ad3c8877b7eddb29611b30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ADC_SoftwareStartConvCmd</definition>
        <argsstring>(ADC_TypeDef *ADCx, FunctionalState NewState)</argsstring>
        <name>ADC_SoftwareStartConvCmd</name>
        <param>
          <type><ref refid="struct_a_d_c___type_def" kindref="compound">ADC_TypeDef</ref> *</type>
          <declname>ADCx</declname>
        </param>
        <param>
          <type><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref></type>
          <declname>NewState</declname>
        </param>
        <briefdescription>
<para>Enables or disables the selected ADC software start conversion . </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ADCx</parametername>
</parameternamelist>
<parameterdescription>
<para>where x can be 1, 2 or 3 to select the ADC peripheral. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NewState</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of the selected ADC software start conversion. This parameter can be: ENABLE or DISABLE. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="444" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_adc.c" bodystart="463" bodyend="480"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___a_d_c___exported___constants_1gaf5d6bd0153464912e0eaccb1af1aefb2" compoundref="stm32f10x__adc_8h" startline="89">IS_ADC_ALL_PERIPH</references>
        <references refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" compoundref="stm32f10x_8h" startline="522">IS_FUNCTIONAL_STATE</references>
        <references refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1ad3a9df141be0ccf10389b640f492b26d" compoundref="stm32f10x_8h" startline="521">DISABLE</references>
        <references refid="struct_a_d_c___type_def_1a1053a65a21af0d27afe1bf9cf7b7aca7" compoundref="stm32f10x_8h" startline="546">ADC_TypeDef::CR2</references>
        <references refid="group___a_d_c___private___defines_1gad9bed838631a650428d2318694a66094" compoundref="stm32f10x__adc_8c" startline="99">CR2_EXTTRIG_SWSTART_Set</references>
        <references refid="group___a_d_c___private___defines_1gad0a6e5cf09868318178434340ade2fe1" compoundref="stm32f10x__adc_8c" startline="100">CR2_EXTTRIG_SWSTART_Reset</references>
      </memberdef>
      <memberdef kind="function" id="group___a_d_c___exported___functions_1gaf1119583782ecbcec380efcb7eb74883" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___exported__types_1ga89136caac2e14c55151f527ac02daaff" kindref="member">FlagStatus</ref></type>
        <definition>FlagStatus ADC_GetSoftwareStartConvStatus</definition>
        <argsstring>(ADC_TypeDef *ADCx)</argsstring>
        <name>ADC_GetSoftwareStartConvStatus</name>
        <param>
          <type><ref refid="struct_a_d_c___type_def" kindref="compound">ADC_TypeDef</ref> *</type>
          <declname>ADCx</declname>
        </param>
        <briefdescription>
<para>Gets the selected ADC Software start conversion Status. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ADCx</parametername>
</parameternamelist>
<parameterdescription>
<para>where x can be 1, 2 or 3 to select the ADC peripheral. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of ADC software start conversion (SET or RESET). </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="445" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_adc.c" bodystart="487" bodyend="505"/>
        <references refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffa589b7d94a3d91d145720e2fed0eb3a05" compoundref="stm32f10x_8h" startline="519">RESET</references>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___a_d_c___exported___constants_1gaf5d6bd0153464912e0eaccb1af1aefb2" compoundref="stm32f10x__adc_8h" startline="89">IS_ADC_ALL_PERIPH</references>
        <references refid="struct_a_d_c___type_def_1a1053a65a21af0d27afe1bf9cf7b7aca7" compoundref="stm32f10x_8h" startline="546">ADC_TypeDef::CR2</references>
        <references refid="group___a_d_c___private___defines_1gac40733c6a8918c16cd52fcade75a6de6" compoundref="stm32f10x__adc_8c" startline="92">CR2_SWSTART_Set</references>
        <references refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffab44c8101cc294c074709ec1b14211792" compoundref="stm32f10x_8h" startline="519">SET</references>
      </memberdef>
      <memberdef kind="function" id="group___a_d_c___exported___functions_1ga6eb241ba82d67d1371136c9132083937" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ADC_DiscModeChannelCountConfig</definition>
        <argsstring>(ADC_TypeDef *ADCx, uint8_t Number)</argsstring>
        <name>ADC_DiscModeChannelCountConfig</name>
        <param>
          <type><ref refid="struct_a_d_c___type_def" kindref="compound">ADC_TypeDef</ref> *</type>
          <declname>ADCx</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>Number</declname>
        </param>
        <briefdescription>
<para>Configures the discontinuous mode for the selected ADC regular group channel. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ADCx</parametername>
</parameternamelist>
<parameterdescription>
<para>where x can be 1, 2 or 3 to select the ADC peripheral. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Number</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the discontinuous mode regular channel count value. This number must be between 1 and 8. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="446" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_adc.c" bodystart="515" bodyend="531"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___a_d_c___exported___constants_1gaf5d6bd0153464912e0eaccb1af1aefb2" compoundref="stm32f10x__adc_8h" startline="89">IS_ADC_ALL_PERIPH</references>
        <references refid="group___a_d_c__regular__discontinuous__mode__number_1gab8dfaacb2f25e65ca755de71050ff270" compoundref="stm32f10x__adc_8h" startline="412">IS_ADC_REGULAR_DISC_NUMBER</references>
        <references refid="struct_a_d_c___type_def_1a89b1ff4376683dd2896ea8b32ded05b2" compoundref="stm32f10x_8h" startline="545">ADC_TypeDef::CR1</references>
        <references refid="group___a_d_c___private___defines_1ga88cecf0c336d950115d7a52d599de816" compoundref="stm32f10x__adc_8c" startline="54">CR1_DISCNUM_Reset</references>
      </memberdef>
      <memberdef kind="function" id="group___a_d_c___exported___functions_1ga1909649d10253ce88d986ffbb94a4be6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ADC_DiscModeCmd</definition>
        <argsstring>(ADC_TypeDef *ADCx, FunctionalState NewState)</argsstring>
        <name>ADC_DiscModeCmd</name>
        <param>
          <type><ref refid="struct_a_d_c___type_def" kindref="compound">ADC_TypeDef</ref> *</type>
          <declname>ADCx</declname>
        </param>
        <param>
          <type><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref></type>
          <declname>NewState</declname>
        </param>
        <briefdescription>
<para>Enables or disables the discontinuous mode on regular group channel for the specified ADC. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ADCx</parametername>
</parameternamelist>
<parameterdescription>
<para>where x can be 1, 2 or 3 to select the ADC peripheral. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NewState</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of the selected ADC discontinuous mode on regular group channel. This parameter can be: ENABLE or DISABLE. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="447" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_adc.c" bodystart="542" bodyend="557"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___a_d_c___exported___constants_1gaf5d6bd0153464912e0eaccb1af1aefb2" compoundref="stm32f10x__adc_8h" startline="89">IS_ADC_ALL_PERIPH</references>
        <references refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" compoundref="stm32f10x_8h" startline="522">IS_FUNCTIONAL_STATE</references>
        <references refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1ad3a9df141be0ccf10389b640f492b26d" compoundref="stm32f10x_8h" startline="521">DISABLE</references>
        <references refid="struct_a_d_c___type_def_1a89b1ff4376683dd2896ea8b32ded05b2" compoundref="stm32f10x_8h" startline="545">ADC_TypeDef::CR1</references>
        <references refid="group___a_d_c___private___defines_1ga95f4f653adde3407c116919c2b7d9c74" compoundref="stm32f10x__adc_8c" startline="57">CR1_DISCEN_Set</references>
        <references refid="group___a_d_c___private___defines_1ga959f617e77853bff85ca5e8d6fba6611" compoundref="stm32f10x__adc_8c" startline="58">CR1_DISCEN_Reset</references>
      </memberdef>
      <memberdef kind="function" id="group___a_d_c___exported___functions_1gac531adb577b648d4bb8881f2ed627d52" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ADC_RegularChannelConfig</definition>
        <argsstring>(ADC_TypeDef *ADCx, uint8_t ADC_Channel, uint8_t Rank, uint8_t ADC_SampleTime)</argsstring>
        <name>ADC_RegularChannelConfig</name>
        <param>
          <type><ref refid="struct_a_d_c___type_def" kindref="compound">ADC_TypeDef</ref> *</type>
          <declname>ADCx</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ADC_Channel</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>Rank</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ADC_SampleTime</declname>
        </param>
        <briefdescription>
<para>Configures for the selected ADC regular channel its corresponding rank in the sequencer and its sample time. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ADCx</parametername>
</parameternamelist>
<parameterdescription>
<para>where x can be 1, 2 or 3 to select the ADC peripheral. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ADC_Channel</parametername>
</parameternamelist>
<parameterdescription>
<para>the ADC channel to configure. This parameter can be one of the following values: <itemizedlist>
<listitem><para>ADC_Channel_0: ADC Channel0 selected </para></listitem>
<listitem><para>ADC_Channel_1: ADC Channel1 selected </para></listitem>
<listitem><para>ADC_Channel_2: ADC Channel2 selected </para></listitem>
<listitem><para>ADC_Channel_3: ADC Channel3 selected </para></listitem>
<listitem><para>ADC_Channel_4: ADC Channel4 selected </para></listitem>
<listitem><para>ADC_Channel_5: ADC Channel5 selected </para></listitem>
<listitem><para>ADC_Channel_6: ADC Channel6 selected </para></listitem>
<listitem><para>ADC_Channel_7: ADC Channel7 selected </para></listitem>
<listitem><para>ADC_Channel_8: ADC Channel8 selected </para></listitem>
<listitem><para>ADC_Channel_9: ADC Channel9 selected </para></listitem>
<listitem><para>ADC_Channel_10: ADC Channel10 selected </para></listitem>
<listitem><para>ADC_Channel_11: ADC Channel11 selected </para></listitem>
<listitem><para>ADC_Channel_12: ADC Channel12 selected </para></listitem>
<listitem><para>ADC_Channel_13: ADC Channel13 selected </para></listitem>
<listitem><para>ADC_Channel_14: ADC Channel14 selected </para></listitem>
<listitem><para>ADC_Channel_15: ADC Channel15 selected </para></listitem>
<listitem><para>ADC_Channel_16: ADC Channel16 selected </para></listitem>
<listitem><para>ADC_Channel_17: ADC Channel17 selected </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Rank</parametername>
</parameternamelist>
<parameterdescription>
<para>The rank in the regular group sequencer. This parameter must be between 1 to 16. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ADC_SampleTime</parametername>
</parameternamelist>
<parameterdescription>
<para>The sample time value to be set for the selected channel. This parameter can be one of the following values: <itemizedlist>
<listitem><para>ADC_SampleTime_1Cycles5: Sample time equal to 1.5 cycles </para></listitem>
<listitem><para>ADC_SampleTime_7Cycles5: Sample time equal to 7.5 cycles </para></listitem>
<listitem><para>ADC_SampleTime_13Cycles5: Sample time equal to 13.5 cycles </para></listitem>
<listitem><para>ADC_SampleTime_28Cycles5: Sample time equal to 28.5 cycles </para></listitem>
<listitem><para>ADC_SampleTime_41Cycles5: Sample time equal to 41.5 cycles </para></listitem>
<listitem><para>ADC_SampleTime_55Cycles5: Sample time equal to 55.5 cycles </para></listitem>
<listitem><para>ADC_SampleTime_71Cycles5: Sample time equal to 71.5 cycles </para></listitem>
<listitem><para>ADC_SampleTime_239Cycles5: Sample time equal to 239.5 cycles </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="448" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_adc.c" bodystart="596" bodyend="683"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___a_d_c___exported___constants_1gaf5d6bd0153464912e0eaccb1af1aefb2" compoundref="stm32f10x__adc_8h" startline="89">IS_ADC_ALL_PERIPH</references>
        <references refid="group___a_d_c__channels_1gaba41910dcb2b449c613a5ef638862e77" compoundref="stm32f10x__adc_8h" startline="202">IS_ADC_CHANNEL</references>
        <references refid="group___a_d_c__regular__rank_1ga5928a1e9315f798e27220b91f1bae7f2" compoundref="stm32f10x__adc_8h" startline="402">IS_ADC_REGULAR_RANK</references>
        <references refid="group___a_d_c__sampling__time_1ga30e0307fa009e1c383d3047b48e94644" compoundref="stm32f10x__adc_8h" startline="227">IS_ADC_SAMPLE_TIME</references>
        <references refid="group___a_d_c__channels_1ga01a61c428be0cb69327e428e32a42aa1" compoundref="stm32f10x__adc_8h" startline="189">ADC_Channel_9</references>
        <references refid="struct_a_d_c___type_def_1a73009a8122fcc628f467a4e997109347" compoundref="stm32f10x_8h" startline="547">ADC_TypeDef::SMPR1</references>
        <references refid="group___a_d_c___private___defines_1ga244048ec3ba9461a6609942def9a15ba" compoundref="stm32f10x__adc_8c" startline="139">SMPR1_SMP_Set</references>
        <references refid="struct_a_d_c___type_def_1a9e68fe36c4c8fbbac294b5496ccf7130" compoundref="stm32f10x_8h" startline="548">ADC_TypeDef::SMPR2</references>
        <references refid="group___a_d_c___private___defines_1ga6555beb1970c42125678d80530bba4d3" compoundref="stm32f10x__adc_8c" startline="140">SMPR2_SMP_Set</references>
        <references refid="struct_a_d_c___type_def_1a51dbdba74c4d3559157392109af68fc6" compoundref="stm32f10x_8h" startline="557">ADC_TypeDef::SQR3</references>
        <references refid="group___a_d_c___private___defines_1ga8a04f115021dc5261562b4dc04c01109" compoundref="stm32f10x__adc_8c" startline="124">SQR3_SQ_Set</references>
        <references refid="struct_a_d_c___type_def_1a6b6e55e6c667042e5a46a76518b73d5a" compoundref="stm32f10x_8h" startline="556">ADC_TypeDef::SQR2</references>
        <references refid="group___a_d_c___private___defines_1ga2329f779aee00e5990d6430a01de8cb0" compoundref="stm32f10x__adc_8c" startline="125">SQR2_SQ_Set</references>
        <references refid="struct_a_d_c___type_def_1a0185aa54962ba987f192154fb7a2d673" compoundref="stm32f10x_8h" startline="555">ADC_TypeDef::SQR1</references>
        <references refid="group___a_d_c___private___defines_1ga91fb5f63b765a543dfa419ea0219351b" compoundref="stm32f10x__adc_8c" startline="126">SQR1_SQ_Set</references>
      </memberdef>
      <memberdef kind="function" id="group___a_d_c___exported___functions_1ga3ae92d7940a16c898223374a5857f509" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ADC_ExternalTrigConvCmd</definition>
        <argsstring>(ADC_TypeDef *ADCx, FunctionalState NewState)</argsstring>
        <name>ADC_ExternalTrigConvCmd</name>
        <param>
          <type><ref refid="struct_a_d_c___type_def" kindref="compound">ADC_TypeDef</ref> *</type>
          <declname>ADCx</declname>
        </param>
        <param>
          <type><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref></type>
          <declname>NewState</declname>
        </param>
        <briefdescription>
<para>Enables or disables the ADCx conversion through external trigger. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ADCx</parametername>
</parameternamelist>
<parameterdescription>
<para>where x can be 1, 2 or 3 to select the ADC peripheral. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NewState</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of the selected ADC external trigger start of conversion. This parameter can be: ENABLE or DISABLE. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="449" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_adc.c" bodystart="692" bodyend="707"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___a_d_c___exported___constants_1gaf5d6bd0153464912e0eaccb1af1aefb2" compoundref="stm32f10x__adc_8h" startline="89">IS_ADC_ALL_PERIPH</references>
        <references refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" compoundref="stm32f10x_8h" startline="522">IS_FUNCTIONAL_STATE</references>
        <references refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1ad3a9df141be0ccf10389b640f492b26d" compoundref="stm32f10x_8h" startline="521">DISABLE</references>
        <references refid="struct_a_d_c___type_def_1a1053a65a21af0d27afe1bf9cf7b7aca7" compoundref="stm32f10x_8h" startline="546">ADC_TypeDef::CR2</references>
        <references refid="group___a_d_c___private___defines_1gaf39824995dbcbabf76697cd7116352d6" compoundref="stm32f10x__adc_8c" startline="95">CR2_EXTTRIG_Set</references>
        <references refid="group___a_d_c___private___defines_1ga8a96cb9aac77bab199f3dff54da230a6" compoundref="stm32f10x__adc_8c" startline="96">CR2_EXTTRIG_Reset</references>
      </memberdef>
      <memberdef kind="function" id="group___a_d_c___exported___functions_1gaaf74221c285ec5dab5e66baf7bec6bd3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t ADC_GetConversionValue</definition>
        <argsstring>(ADC_TypeDef *ADCx)</argsstring>
        <name>ADC_GetConversionValue</name>
        <param>
          <type><ref refid="struct_a_d_c___type_def" kindref="compound">ADC_TypeDef</ref> *</type>
          <declname>ADCx</declname>
        </param>
        <briefdescription>
<para>Returns the last ADCx conversion result data for regular channel. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ADCx</parametername>
</parameternamelist>
<parameterdescription>
<para>where x can be 1, 2 or 3 to select the ADC peripheral. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>Data conversion value. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="450" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_adc.c" bodystart="714" bodyend="720"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___a_d_c___exported___constants_1gaf5d6bd0153464912e0eaccb1af1aefb2" compoundref="stm32f10x__adc_8h" startline="89">IS_ADC_ALL_PERIPH</references>
        <references refid="struct_a_d_c___type_def_1a84114accead82bd11a0e12a429cdfed9" compoundref="stm32f10x_8h" startline="563">ADC_TypeDef::DR</references>
      </memberdef>
      <memberdef kind="function" id="group___a_d_c___exported___functions_1gac5a4792dc29ef7ff6bfbce9f37e8a668" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t ADC_GetDualModeConversionValue</definition>
        <argsstring>(void)</argsstring>
        <name>ADC_GetDualModeConversionValue</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Returns the last ADC1 and ADC2 conversion result data in dual mode. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>Data conversion value. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="451" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_adc.c" bodystart="726" bodyend="730"/>
        <references refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" compoundref="core__cm0_8h" startline="221">__IO</references>
        <references refid="group___a_d_c___private___defines_1ga35ecb1c96cfae175f5f00490e5e91e88" compoundref="stm32f10x__adc_8c" startline="146">DR_ADDRESS</references>
      </memberdef>
      <memberdef kind="function" id="group___a_d_c___exported___functions_1ga1ff9c3b8e4bbdd2addfd227f1a506a66" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ADC_AutoInjectedConvCmd</definition>
        <argsstring>(ADC_TypeDef *ADCx, FunctionalState NewState)</argsstring>
        <name>ADC_AutoInjectedConvCmd</name>
        <param>
          <type><ref refid="struct_a_d_c___type_def" kindref="compound">ADC_TypeDef</ref> *</type>
          <declname>ADCx</declname>
        </param>
        <param>
          <type><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref></type>
          <declname>NewState</declname>
        </param>
        <briefdescription>
<para>Enables or disables the selected ADC automatic injected group conversion after regular one. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ADCx</parametername>
</parameternamelist>
<parameterdescription>
<para>where x can be 1, 2 or 3 to select the ADC peripheral. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NewState</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of the selected ADC auto injected conversion This parameter can be: ENABLE or DISABLE. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="452" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_adc.c" bodystart="740" bodyend="755"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___a_d_c___exported___constants_1gaf5d6bd0153464912e0eaccb1af1aefb2" compoundref="stm32f10x__adc_8h" startline="89">IS_ADC_ALL_PERIPH</references>
        <references refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" compoundref="stm32f10x_8h" startline="522">IS_FUNCTIONAL_STATE</references>
        <references refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1ad3a9df141be0ccf10389b640f492b26d" compoundref="stm32f10x_8h" startline="521">DISABLE</references>
        <references refid="struct_a_d_c___type_def_1a89b1ff4376683dd2896ea8b32ded05b2" compoundref="stm32f10x_8h" startline="545">ADC_TypeDef::CR1</references>
        <references refid="group___a_d_c___private___defines_1gaa8478f12e212738e249a7fafb69d4dd4" compoundref="stm32f10x__adc_8c" startline="61">CR1_JAUTO_Set</references>
        <references refid="group___a_d_c___private___defines_1gab6c4a9f0a661bf7c5add35ea3a90b756" compoundref="stm32f10x__adc_8c" startline="62">CR1_JAUTO_Reset</references>
      </memberdef>
      <memberdef kind="function" id="group___a_d_c___exported___functions_1ga0b583b94183fa4ff287177b9ee808092" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ADC_InjectedDiscModeCmd</definition>
        <argsstring>(ADC_TypeDef *ADCx, FunctionalState NewState)</argsstring>
        <name>ADC_InjectedDiscModeCmd</name>
        <param>
          <type><ref refid="struct_a_d_c___type_def" kindref="compound">ADC_TypeDef</ref> *</type>
          <declname>ADCx</declname>
        </param>
        <param>
          <type><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref></type>
          <declname>NewState</declname>
        </param>
        <briefdescription>
<para>Enables or disables the discontinuous mode for injected group channel for the specified ADC. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ADCx</parametername>
</parameternamelist>
<parameterdescription>
<para>where x can be 1, 2 or 3 to select the ADC peripheral. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NewState</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of the selected ADC discontinuous mode on injected group channel. This parameter can be: ENABLE or DISABLE. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="453" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_adc.c" bodystart="766" bodyend="781"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___a_d_c___exported___constants_1gaf5d6bd0153464912e0eaccb1af1aefb2" compoundref="stm32f10x__adc_8h" startline="89">IS_ADC_ALL_PERIPH</references>
        <references refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" compoundref="stm32f10x_8h" startline="522">IS_FUNCTIONAL_STATE</references>
        <references refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1ad3a9df141be0ccf10389b640f492b26d" compoundref="stm32f10x_8h" startline="521">DISABLE</references>
        <references refid="struct_a_d_c___type_def_1a89b1ff4376683dd2896ea8b32ded05b2" compoundref="stm32f10x_8h" startline="545">ADC_TypeDef::CR1</references>
        <references refid="group___a_d_c___private___defines_1gafef4d16c890bf5e6eb381ad01c829309" compoundref="stm32f10x__adc_8c" startline="65">CR1_JDISCEN_Set</references>
        <references refid="group___a_d_c___private___defines_1gab6ffba92495342bd5f0a8b1fa216526b" compoundref="stm32f10x__adc_8c" startline="66">CR1_JDISCEN_Reset</references>
      </memberdef>
      <memberdef kind="function" id="group___a_d_c___exported___functions_1gafc02ce1e84e96b692adf085f61a0bca6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ADC_ExternalTrigInjectedConvConfig</definition>
        <argsstring>(ADC_TypeDef *ADCx, uint32_t ADC_ExternalTrigInjecConv)</argsstring>
        <name>ADC_ExternalTrigInjectedConvConfig</name>
        <param>
          <type><ref refid="struct_a_d_c___type_def" kindref="compound">ADC_TypeDef</ref> *</type>
          <declname>ADCx</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>ADC_ExternalTrigInjecConv</declname>
        </param>
        <briefdescription>
<para>Configures the ADCx external trigger for injected channels conversion. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ADCx</parametername>
</parameternamelist>
<parameterdescription>
<para>where x can be 1, 2 or 3 to select the ADC peripheral. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ADC_ExternalTrigInjecConv</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the ADC trigger to start injected conversion. This parameter can be one of the following values: <itemizedlist>
<listitem><para>ADC_ExternalTrigInjecConv_T1_TRGO: Timer1 TRGO event selected (for ADC1, ADC2 and ADC3) </para></listitem>
<listitem><para>ADC_ExternalTrigInjecConv_T1_CC4: Timer1 capture compare4 selected (for ADC1, ADC2 and ADC3) </para></listitem>
<listitem><para>ADC_ExternalTrigInjecConv_T2_TRGO: Timer2 TRGO event selected (for ADC1 and ADC2) </para></listitem>
<listitem><para>ADC_ExternalTrigInjecConv_T2_CC1: Timer2 capture compare1 selected (for ADC1 and ADC2) </para></listitem>
<listitem><para>ADC_ExternalTrigInjecConv_T3_CC4: Timer3 capture compare4 selected (for ADC1 and ADC2) </para></listitem>
<listitem><para>ADC_ExternalTrigInjecConv_T4_TRGO: Timer4 TRGO event selected (for ADC1 and ADC2) </para></listitem>
<listitem><para>ADC_ExternalTrigInjecConv_Ext_IT15_TIM8_CC4: External interrupt line 15 or Timer8 capture compare4 event selected (for ADC1 and ADC2) </para></listitem>
<listitem><para>ADC_ExternalTrigInjecConv_T4_CC3: Timer4 capture compare3 selected (for ADC3 only) </para></listitem>
<listitem><para>ADC_ExternalTrigInjecConv_T8_CC2: Timer8 capture compare2 selected (for ADC3 only) </para></listitem>
<listitem><para>ADC_ExternalTrigInjecConv_T8_CC4: Timer8 capture compare4 selected (for ADC3 only) </para></listitem>
<listitem><para>ADC_ExternalTrigInjecConv_T5_TRGO: Timer5 TRGO event selected (for ADC3 only) </para></listitem>
<listitem><para>ADC_ExternalTrigInjecConv_T5_CC4: Timer5 capture compare4 selected (for ADC3 only) </para></listitem>
<listitem><para>ADC_ExternalTrigInjecConv_None: Injected conversion started by software and not by external trigger (for ADC1, ADC2 and ADC3) </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="454" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_adc.c" bodystart="805" bodyend="819"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___a_d_c___exported___constants_1gaf5d6bd0153464912e0eaccb1af1aefb2" compoundref="stm32f10x__adc_8h" startline="89">IS_ADC_ALL_PERIPH</references>
        <references refid="group___a_d_c__external__trigger__sources__for__injected__channels__conversion_1ga3cb8cadbff46e432b5e000c3a7489a0b" compoundref="stm32f10x__adc_8h" startline="259">IS_ADC_EXT_INJEC_TRIG</references>
        <references refid="struct_a_d_c___type_def_1a1053a65a21af0d27afe1bf9cf7b7aca7" compoundref="stm32f10x_8h" startline="546">ADC_TypeDef::CR2</references>
        <references refid="group___a_d_c___private___defines_1gafa78c11893aa39ad2c0117414ae1704d" compoundref="stm32f10x__adc_8c" startline="103">CR2_JEXTSEL_Reset</references>
      </memberdef>
      <memberdef kind="function" id="group___a_d_c___exported___functions_1gad81d134c083d8f407c819e6f4722d553" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ADC_ExternalTrigInjectedConvCmd</definition>
        <argsstring>(ADC_TypeDef *ADCx, FunctionalState NewState)</argsstring>
        <name>ADC_ExternalTrigInjectedConvCmd</name>
        <param>
          <type><ref refid="struct_a_d_c___type_def" kindref="compound">ADC_TypeDef</ref> *</type>
          <declname>ADCx</declname>
        </param>
        <param>
          <type><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref></type>
          <declname>NewState</declname>
        </param>
        <briefdescription>
<para>Enables or disables the ADCx injected channels conversion through external trigger. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ADCx</parametername>
</parameternamelist>
<parameterdescription>
<para>where x can be 1, 2 or 3 to select the ADC peripheral. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NewState</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of the selected ADC external trigger start of injected conversion. This parameter can be: ENABLE or DISABLE. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="455" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_adc.c" bodystart="830" bodyend="845"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___a_d_c___exported___constants_1gaf5d6bd0153464912e0eaccb1af1aefb2" compoundref="stm32f10x__adc_8h" startline="89">IS_ADC_ALL_PERIPH</references>
        <references refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" compoundref="stm32f10x_8h" startline="522">IS_FUNCTIONAL_STATE</references>
        <references refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1ad3a9df141be0ccf10389b640f492b26d" compoundref="stm32f10x_8h" startline="521">DISABLE</references>
        <references refid="struct_a_d_c___type_def_1a1053a65a21af0d27afe1bf9cf7b7aca7" compoundref="stm32f10x_8h" startline="546">ADC_TypeDef::CR2</references>
        <references refid="group___a_d_c___private___defines_1ga20a54958799c567e9efaa0635aa18a99" compoundref="stm32f10x__adc_8c" startline="106">CR2_JEXTTRIG_Set</references>
        <references refid="group___a_d_c___private___defines_1ga94404d5a0103c5e2d7ffa45956356931" compoundref="stm32f10x__adc_8c" startline="107">CR2_JEXTTRIG_Reset</references>
      </memberdef>
      <memberdef kind="function" id="group___a_d_c___exported___functions_1ga5b141d5dbf5f417a11dfa622c8c149d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ADC_SoftwareStartInjectedConvCmd</definition>
        <argsstring>(ADC_TypeDef *ADCx, FunctionalState NewState)</argsstring>
        <name>ADC_SoftwareStartInjectedConvCmd</name>
        <param>
          <type><ref refid="struct_a_d_c___type_def" kindref="compound">ADC_TypeDef</ref> *</type>
          <declname>ADCx</declname>
        </param>
        <param>
          <type><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref></type>
          <declname>NewState</declname>
        </param>
        <briefdescription>
<para>Enables or disables the selected ADC start of the injected channels conversion. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ADCx</parametername>
</parameternamelist>
<parameterdescription>
<para>where x can be 1, 2 or 3 to select the ADC peripheral. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NewState</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of the selected ADC software start injected conversion. This parameter can be: ENABLE or DISABLE. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="456" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_adc.c" bodystart="855" bodyend="872"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___a_d_c___exported___constants_1gaf5d6bd0153464912e0eaccb1af1aefb2" compoundref="stm32f10x__adc_8h" startline="89">IS_ADC_ALL_PERIPH</references>
        <references refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" compoundref="stm32f10x_8h" startline="522">IS_FUNCTIONAL_STATE</references>
        <references refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1ad3a9df141be0ccf10389b640f492b26d" compoundref="stm32f10x_8h" startline="521">DISABLE</references>
        <references refid="struct_a_d_c___type_def_1a1053a65a21af0d27afe1bf9cf7b7aca7" compoundref="stm32f10x_8h" startline="546">ADC_TypeDef::CR2</references>
        <references refid="group___a_d_c___private___defines_1gaac5989ccf10d806f2f6a70f925d6b130" compoundref="stm32f10x__adc_8c" startline="113">CR2_JEXTTRIG_JSWSTART_Set</references>
        <references refid="group___a_d_c___private___defines_1gaaa2fb01c1649fde61115602559942ee2" compoundref="stm32f10x__adc_8c" startline="114">CR2_JEXTTRIG_JSWSTART_Reset</references>
      </memberdef>
      <memberdef kind="function" id="group___a_d_c___exported___functions_1ga8765f8835b8cfed13dce3d8d71767dcc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___exported__types_1ga89136caac2e14c55151f527ac02daaff" kindref="member">FlagStatus</ref></type>
        <definition>FlagStatus ADC_GetSoftwareStartInjectedConvCmdStatus</definition>
        <argsstring>(ADC_TypeDef *ADCx)</argsstring>
        <name>ADC_GetSoftwareStartInjectedConvCmdStatus</name>
        <param>
          <type><ref refid="struct_a_d_c___type_def" kindref="compound">ADC_TypeDef</ref> *</type>
          <declname>ADCx</declname>
        </param>
        <briefdescription>
<para>Gets the selected ADC Software start injected conversion Status. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ADCx</parametername>
</parameternamelist>
<parameterdescription>
<para>where x can be 1, 2 or 3 to select the ADC peripheral. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of ADC software start injected conversion (SET or RESET). </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="457" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_adc.c" bodystart="879" bodyend="897"/>
        <references refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffa589b7d94a3d91d145720e2fed0eb3a05" compoundref="stm32f10x_8h" startline="519">RESET</references>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___a_d_c___exported___constants_1gaf5d6bd0153464912e0eaccb1af1aefb2" compoundref="stm32f10x__adc_8h" startline="89">IS_ADC_ALL_PERIPH</references>
        <references refid="struct_a_d_c___type_def_1a1053a65a21af0d27afe1bf9cf7b7aca7" compoundref="stm32f10x_8h" startline="546">ADC_TypeDef::CR2</references>
        <references refid="group___a_d_c___private___defines_1ga5292617782f3327f2e1ed0bd9461704e" compoundref="stm32f10x__adc_8c" startline="110">CR2_JSWSTART_Set</references>
        <references refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffab44c8101cc294c074709ec1b14211792" compoundref="stm32f10x_8h" startline="519">SET</references>
      </memberdef>
      <memberdef kind="function" id="group___a_d_c___exported___functions_1gae2b44bff080184e1cf6f2cb6b9bb3e59" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ADC_InjectedChannelConfig</definition>
        <argsstring>(ADC_TypeDef *ADCx, uint8_t ADC_Channel, uint8_t Rank, uint8_t ADC_SampleTime)</argsstring>
        <name>ADC_InjectedChannelConfig</name>
        <param>
          <type><ref refid="struct_a_d_c___type_def" kindref="compound">ADC_TypeDef</ref> *</type>
          <declname>ADCx</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ADC_Channel</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>Rank</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ADC_SampleTime</declname>
        </param>
        <briefdescription>
<para>Configures for the selected ADC injected channel its corresponding rank in the sequencer and its sample time. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ADCx</parametername>
</parameternamelist>
<parameterdescription>
<para>where x can be 1, 2 or 3 to select the ADC peripheral. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ADC_Channel</parametername>
</parameternamelist>
<parameterdescription>
<para>the ADC channel to configure. This parameter can be one of the following values: <itemizedlist>
<listitem><para>ADC_Channel_0: ADC Channel0 selected </para></listitem>
<listitem><para>ADC_Channel_1: ADC Channel1 selected </para></listitem>
<listitem><para>ADC_Channel_2: ADC Channel2 selected </para></listitem>
<listitem><para>ADC_Channel_3: ADC Channel3 selected </para></listitem>
<listitem><para>ADC_Channel_4: ADC Channel4 selected </para></listitem>
<listitem><para>ADC_Channel_5: ADC Channel5 selected </para></listitem>
<listitem><para>ADC_Channel_6: ADC Channel6 selected </para></listitem>
<listitem><para>ADC_Channel_7: ADC Channel7 selected </para></listitem>
<listitem><para>ADC_Channel_8: ADC Channel8 selected </para></listitem>
<listitem><para>ADC_Channel_9: ADC Channel9 selected </para></listitem>
<listitem><para>ADC_Channel_10: ADC Channel10 selected </para></listitem>
<listitem><para>ADC_Channel_11: ADC Channel11 selected </para></listitem>
<listitem><para>ADC_Channel_12: ADC Channel12 selected </para></listitem>
<listitem><para>ADC_Channel_13: ADC Channel13 selected </para></listitem>
<listitem><para>ADC_Channel_14: ADC Channel14 selected </para></listitem>
<listitem><para>ADC_Channel_15: ADC Channel15 selected </para></listitem>
<listitem><para>ADC_Channel_16: ADC Channel16 selected </para></listitem>
<listitem><para>ADC_Channel_17: ADC Channel17 selected </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Rank</parametername>
</parameternamelist>
<parameterdescription>
<para>The rank in the injected group sequencer. This parameter must be between 1 and 4. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ADC_SampleTime</parametername>
</parameternamelist>
<parameterdescription>
<para>The sample time value to be set for the selected channel. This parameter can be one of the following values: <itemizedlist>
<listitem><para>ADC_SampleTime_1Cycles5: Sample time equal to 1.5 cycles </para></listitem>
<listitem><para>ADC_SampleTime_7Cycles5: Sample time equal to 7.5 cycles </para></listitem>
<listitem><para>ADC_SampleTime_13Cycles5: Sample time equal to 13.5 cycles </para></listitem>
<listitem><para>ADC_SampleTime_28Cycles5: Sample time equal to 28.5 cycles </para></listitem>
<listitem><para>ADC_SampleTime_41Cycles5: Sample time equal to 41.5 cycles </para></listitem>
<listitem><para>ADC_SampleTime_55Cycles5: Sample time equal to 55.5 cycles </para></listitem>
<listitem><para>ADC_SampleTime_71Cycles5: Sample time equal to 71.5 cycles </para></listitem>
<listitem><para>ADC_SampleTime_239Cycles5: Sample time equal to 239.5 cycles </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="458" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_adc.c" bodystart="936" bodyend="990"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___a_d_c___exported___constants_1gaf5d6bd0153464912e0eaccb1af1aefb2" compoundref="stm32f10x__adc_8h" startline="89">IS_ADC_ALL_PERIPH</references>
        <references refid="group___a_d_c__channels_1gaba41910dcb2b449c613a5ef638862e77" compoundref="stm32f10x__adc_8h" startline="202">IS_ADC_CHANNEL</references>
        <references refid="group___a_d_c__injected__rank_1ga63f95f9a45f4d718aabc9e429d860e9d" compoundref="stm32f10x__adc_8h" startline="382">IS_ADC_INJECTED_RANK</references>
        <references refid="group___a_d_c__sampling__time_1ga30e0307fa009e1c383d3047b48e94644" compoundref="stm32f10x__adc_8h" startline="227">IS_ADC_SAMPLE_TIME</references>
        <references refid="group___a_d_c__channels_1ga01a61c428be0cb69327e428e32a42aa1" compoundref="stm32f10x__adc_8h" startline="189">ADC_Channel_9</references>
        <references refid="struct_a_d_c___type_def_1a73009a8122fcc628f467a4e997109347" compoundref="stm32f10x_8h" startline="547">ADC_TypeDef::SMPR1</references>
        <references refid="group___a_d_c___private___defines_1ga244048ec3ba9461a6609942def9a15ba" compoundref="stm32f10x__adc_8c" startline="139">SMPR1_SMP_Set</references>
        <references refid="struct_a_d_c___type_def_1a9e68fe36c4c8fbbac294b5496ccf7130" compoundref="stm32f10x_8h" startline="548">ADC_TypeDef::SMPR2</references>
        <references refid="group___a_d_c___private___defines_1ga6555beb1970c42125678d80530bba4d3" compoundref="stm32f10x__adc_8c" startline="140">SMPR2_SMP_Set</references>
        <references refid="struct_a_d_c___type_def_1a5438a76a93ac1bd2526e92ef298dc193" compoundref="stm32f10x_8h" startline="558">ADC_TypeDef::JSQR</references>
        <references refid="group___a_d_c___private___defines_1ga46af9e738702305be0127f6c15c4f7b0" compoundref="stm32f10x__adc_8c" startline="135">JSQR_JL_Set</references>
        <references refid="group___a_d_c___private___defines_1ga5d460390dbe3b400b5e0fdf1e94929f0" compoundref="stm32f10x__adc_8c" startline="132">JSQR_JSQ_Set</references>
      </memberdef>
      <memberdef kind="function" id="group___a_d_c___exported___functions_1ga24eba90bc3ee955e07659a605011710d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ADC_InjectedSequencerLengthConfig</definition>
        <argsstring>(ADC_TypeDef *ADCx, uint8_t Length)</argsstring>
        <name>ADC_InjectedSequencerLengthConfig</name>
        <param>
          <type><ref refid="struct_a_d_c___type_def" kindref="compound">ADC_TypeDef</ref> *</type>
          <declname>ADCx</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>Length</declname>
        </param>
        <briefdescription>
<para>Configures the sequencer length for injected channels. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ADCx</parametername>
</parameternamelist>
<parameterdescription>
<para>where x can be 1, 2 or 3 to select the ADC peripheral. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Length</parametername>
</parameternamelist>
<parameterdescription>
<para>The sequencer length. This parameter must be a number between 1 to 4. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="459" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_adc.c" bodystart="999" bodyend="1016"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___a_d_c___exported___constants_1gaf5d6bd0153464912e0eaccb1af1aefb2" compoundref="stm32f10x__adc_8h" startline="89">IS_ADC_ALL_PERIPH</references>
        <references refid="group___a_d_c__injected__length_1gaecdddab7424a697722683296ca70e176" compoundref="stm32f10x__adc_8h" startline="372">IS_ADC_INJECTED_LENGTH</references>
        <references refid="struct_a_d_c___type_def_1a5438a76a93ac1bd2526e92ef298dc193" compoundref="stm32f10x_8h" startline="558">ADC_TypeDef::JSQR</references>
        <references refid="group___a_d_c___private___defines_1gac8d1173791ea10bac7c53a368d593a16" compoundref="stm32f10x__adc_8c" startline="136">JSQR_JL_Reset</references>
      </memberdef>
      <memberdef kind="function" id="group___a_d_c___exported___functions_1ga07a942613088ab3ecfc3d97a20475920" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ADC_SetInjectedOffset</definition>
        <argsstring>(ADC_TypeDef *ADCx, uint8_t ADC_InjectedChannel, uint16_t Offset)</argsstring>
        <name>ADC_SetInjectedOffset</name>
        <param>
          <type><ref refid="struct_a_d_c___type_def" kindref="compound">ADC_TypeDef</ref> *</type>
          <declname>ADCx</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ADC_InjectedChannel</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>Offset</declname>
        </param>
        <briefdescription>
<para>Set the injected channels conversion value offset. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ADCx</parametername>
</parameternamelist>
<parameterdescription>
<para>where x can be 1, 2 or 3 to select the ADC peripheral. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ADC_InjectedChannel</parametername>
</parameternamelist>
<parameterdescription>
<para>the ADC injected channel to set its offset. This parameter can be one of the following values: <itemizedlist>
<listitem><para>ADC_InjectedChannel_1: Injected Channel1 selected </para></listitem>
<listitem><para>ADC_InjectedChannel_2: Injected Channel2 selected </para></listitem>
<listitem><para>ADC_InjectedChannel_3: Injected Channel3 selected </para></listitem>
<listitem><para>ADC_InjectedChannel_4: Injected Channel4 selected </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Offset</parametername>
</parameternamelist>
<parameterdescription>
<para>the offset value for the selected ADC injected channel This parameter must be a 12bit value. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="460" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_adc.c" bodystart="1031" bodyend="1045"/>
        <references refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" compoundref="core__cm0_8h" startline="221">__IO</references>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___a_d_c___exported___constants_1gaf5d6bd0153464912e0eaccb1af1aefb2" compoundref="stm32f10x__adc_8h" startline="89">IS_ADC_ALL_PERIPH</references>
        <references refid="group___a_d_c__injected__channel__selection_1gae0bbfb5dbad0fbac8b672db6f63cf8d0" compoundref="stm32f10x__adc_8h" startline="284">IS_ADC_INJECTED_CHANNEL</references>
        <references refid="group___a_d_c__injected__offset_1ga252eaf5d2552f0d11b1bcca7dc48950a" compoundref="stm32f10x__adc_8h" startline="362">IS_ADC_OFFSET</references>
      </memberdef>
      <memberdef kind="function" id="group___a_d_c___exported___functions_1ga1dea5ed24571a2e0ce4cbd41c9c1ec46" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t ADC_GetInjectedConversionValue</definition>
        <argsstring>(ADC_TypeDef *ADCx, uint8_t ADC_InjectedChannel)</argsstring>
        <name>ADC_GetInjectedConversionValue</name>
        <param>
          <type><ref refid="struct_a_d_c___type_def" kindref="compound">ADC_TypeDef</ref> *</type>
          <declname>ADCx</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ADC_InjectedChannel</declname>
        </param>
        <briefdescription>
<para>Returns the ADC injected channel conversion result. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ADCx</parametername>
</parameternamelist>
<parameterdescription>
<para>where x can be 1, 2 or 3 to select the ADC peripheral. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ADC_InjectedChannel</parametername>
</parameternamelist>
<parameterdescription>
<para>the converted ADC injected channel. This parameter can be one of the following values: <itemizedlist>
<listitem><para>ADC_InjectedChannel_1: Injected Channel1 selected </para></listitem>
<listitem><para>ADC_InjectedChannel_2: Injected Channel2 selected </para></listitem>
<listitem><para>ADC_InjectedChannel_3: Injected Channel3 selected </para></listitem>
<listitem><para>ADC_InjectedChannel_4: Injected Channel4 selected </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>Data conversion value. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="461" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_adc.c" bodystart="1058" bodyend="1071"/>
        <references refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" compoundref="core__cm0_8h" startline="221">__IO</references>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___a_d_c___exported___constants_1gaf5d6bd0153464912e0eaccb1af1aefb2" compoundref="stm32f10x__adc_8h" startline="89">IS_ADC_ALL_PERIPH</references>
        <references refid="group___a_d_c__injected__channel__selection_1gae0bbfb5dbad0fbac8b672db6f63cf8d0" compoundref="stm32f10x__adc_8h" startline="284">IS_ADC_INJECTED_CHANNEL</references>
        <references refid="group___a_d_c___private___defines_1ga5671a68d6f0d01c6c465ee7a3a8f3eea" compoundref="stm32f10x__adc_8c" startline="143">JDR_Offset</references>
      </memberdef>
      <memberdef kind="function" id="group___a_d_c___exported___functions_1gad017d69bec6e497afd35ba25ea22d86e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ADC_AnalogWatchdogCmd</definition>
        <argsstring>(ADC_TypeDef *ADCx, uint32_t ADC_AnalogWatchdog)</argsstring>
        <name>ADC_AnalogWatchdogCmd</name>
        <param>
          <type><ref refid="struct_a_d_c___type_def" kindref="compound">ADC_TypeDef</ref> *</type>
          <declname>ADCx</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>ADC_AnalogWatchdog</declname>
        </param>
        <briefdescription>
<para>Enables or disables the analog watchdog on single/all regular or injected channels. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ADCx</parametername>
</parameternamelist>
<parameterdescription>
<para>where x can be 1, 2 or 3 to select the ADC peripheral. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ADC_AnalogWatchdog</parametername>
</parameternamelist>
<parameterdescription>
<para>the ADC analog watchdog configuration. This parameter can be one of the following values: <itemizedlist>
<listitem><para>ADC_AnalogWatchdog_SingleRegEnable: Analog watchdog on a single regular channel </para></listitem>
<listitem><para>ADC_AnalogWatchdog_SingleInjecEnable: Analog watchdog on a single injected channel </para></listitem>
<listitem><para>ADC_AnalogWatchdog_SingleRegOrInjecEnable: Analog watchdog on a single regular or injected channel </para></listitem>
<listitem><para>ADC_AnalogWatchdog_AllRegEnable: Analog watchdog on all regular channel </para></listitem>
<listitem><para>ADC_AnalogWatchdog_AllInjecEnable: Analog watchdog on all injected channel </para></listitem>
<listitem><para>ADC_AnalogWatchdog_AllRegAllInjecEnable: Analog watchdog on all regular and injected channels </para></listitem>
<listitem><para>ADC_AnalogWatchdog_None: No channel guarded by the analog watchdog </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="462" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_adc.c" bodystart="1088" bodyend="1102"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___a_d_c___exported___constants_1gaf5d6bd0153464912e0eaccb1af1aefb2" compoundref="stm32f10x__adc_8h" startline="89">IS_ADC_ALL_PERIPH</references>
        <references refid="group___a_d_c__analog__watchdog__selection_1ga53ffa30f756569194342bfba80165544" compoundref="stm32f10x__adc_8h" startline="304">IS_ADC_ANALOG_WATCHDOG</references>
        <references refid="struct_a_d_c___type_def_1a89b1ff4376683dd2896ea8b32ded05b2" compoundref="stm32f10x_8h" startline="545">ADC_TypeDef::CR1</references>
        <references refid="group___a_d_c___private___defines_1gae53703f0c718ecc5b3e1a69c60af3697" compoundref="stm32f10x__adc_8c" startline="72">CR1_AWDMode_Reset</references>
      </memberdef>
      <memberdef kind="function" id="group___a_d_c___exported___functions_1ga79588d02aa8e4147f21cb90a4708366d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ADC_AnalogWatchdogThresholdsConfig</definition>
        <argsstring>(ADC_TypeDef *ADCx, uint16_t HighThreshold, uint16_t LowThreshold)</argsstring>
        <name>ADC_AnalogWatchdogThresholdsConfig</name>
        <param>
          <type><ref refid="struct_a_d_c___type_def" kindref="compound">ADC_TypeDef</ref> *</type>
          <declname>ADCx</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>HighThreshold</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>LowThreshold</declname>
        </param>
        <briefdescription>
<para>Configures the high and low thresholds of the analog watchdog. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ADCx</parametername>
</parameternamelist>
<parameterdescription>
<para>where x can be 1, 2 or 3 to select the ADC peripheral. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>HighThreshold</parametername>
</parameternamelist>
<parameterdescription>
<para>the ADC analog watchdog High threshold value. This parameter must be a 12bit value. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>LowThreshold</parametername>
</parameternamelist>
<parameterdescription>
<para>the ADC analog watchdog Low threshold value. This parameter must be a 12bit value. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="463" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_adc.c" bodystart="1113" bodyend="1124"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___a_d_c___exported___constants_1gaf5d6bd0153464912e0eaccb1af1aefb2" compoundref="stm32f10x__adc_8h" startline="89">IS_ADC_ALL_PERIPH</references>
        <references refid="group___a_d_c__thresholds_1gaa71cdff6dafddfccff8a7e88768bfb54" compoundref="stm32f10x__adc_8h" startline="352">IS_ADC_THRESHOLD</references>
        <references refid="struct_a_d_c___type_def_1a297ac2d83a1837bfdc0333474b977de0" compoundref="stm32f10x_8h" startline="553">ADC_TypeDef::HTR</references>
        <references refid="struct_a_d_c___type_def_1afdaf8050fb01739206a92c9ad610f396" compoundref="stm32f10x_8h" startline="554">ADC_TypeDef::LTR</references>
      </memberdef>
      <memberdef kind="function" id="group___a_d_c___exported___functions_1ga03cef3d12292ffa2b8520524d5b0226c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ADC_AnalogWatchdogSingleChannelConfig</definition>
        <argsstring>(ADC_TypeDef *ADCx, uint8_t ADC_Channel)</argsstring>
        <name>ADC_AnalogWatchdogSingleChannelConfig</name>
        <param>
          <type><ref refid="struct_a_d_c___type_def" kindref="compound">ADC_TypeDef</ref> *</type>
          <declname>ADCx</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ADC_Channel</declname>
        </param>
        <briefdescription>
<para>Configures the analog watchdog guarded single channel. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ADCx</parametername>
</parameternamelist>
<parameterdescription>
<para>where x can be 1, 2 or 3 to select the ADC peripheral. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ADC_Channel</parametername>
</parameternamelist>
<parameterdescription>
<para>the ADC channel to configure for the analog watchdog. This parameter can be one of the following values: <itemizedlist>
<listitem><para>ADC_Channel_0: ADC Channel0 selected </para></listitem>
<listitem><para>ADC_Channel_1: ADC Channel1 selected </para></listitem>
<listitem><para>ADC_Channel_2: ADC Channel2 selected </para></listitem>
<listitem><para>ADC_Channel_3: ADC Channel3 selected </para></listitem>
<listitem><para>ADC_Channel_4: ADC Channel4 selected </para></listitem>
<listitem><para>ADC_Channel_5: ADC Channel5 selected </para></listitem>
<listitem><para>ADC_Channel_6: ADC Channel6 selected </para></listitem>
<listitem><para>ADC_Channel_7: ADC Channel7 selected </para></listitem>
<listitem><para>ADC_Channel_8: ADC Channel8 selected </para></listitem>
<listitem><para>ADC_Channel_9: ADC Channel9 selected </para></listitem>
<listitem><para>ADC_Channel_10: ADC Channel10 selected </para></listitem>
<listitem><para>ADC_Channel_11: ADC Channel11 selected </para></listitem>
<listitem><para>ADC_Channel_12: ADC Channel12 selected </para></listitem>
<listitem><para>ADC_Channel_13: ADC Channel13 selected </para></listitem>
<listitem><para>ADC_Channel_14: ADC Channel14 selected </para></listitem>
<listitem><para>ADC_Channel_15: ADC Channel15 selected </para></listitem>
<listitem><para>ADC_Channel_16: ADC Channel16 selected </para></listitem>
<listitem><para>ADC_Channel_17: ADC Channel17 selected </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="464" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_adc.c" bodystart="1151" bodyend="1165"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___a_d_c___exported___constants_1gaf5d6bd0153464912e0eaccb1af1aefb2" compoundref="stm32f10x__adc_8h" startline="89">IS_ADC_ALL_PERIPH</references>
        <references refid="group___a_d_c__channels_1gaba41910dcb2b449c613a5ef638862e77" compoundref="stm32f10x__adc_8h" startline="202">IS_ADC_CHANNEL</references>
        <references refid="struct_a_d_c___type_def_1a89b1ff4376683dd2896ea8b32ded05b2" compoundref="stm32f10x_8h" startline="545">ADC_TypeDef::CR1</references>
        <references refid="group___a_d_c___private___defines_1gabe7e68383d281e58707a1cd749a3374e" compoundref="stm32f10x__adc_8c" startline="69">CR1_AWDCH_Reset</references>
      </memberdef>
      <memberdef kind="function" id="group___a_d_c___exported___functions_1ga848682e2d7d3de9f8cf03ffa4c11f0b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ADC_TempSensorVrefintCmd</definition>
        <argsstring>(FunctionalState NewState)</argsstring>
        <name>ADC_TempSensorVrefintCmd</name>
        <param>
          <type><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref></type>
          <declname>NewState</declname>
        </param>
        <briefdescription>
<para>Enables or disables the temperature sensor and Vrefint channel. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>NewState</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of the temperature sensor. This parameter can be: ENABLE or DISABLE. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="465" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_adc.c" bodystart="1173" bodyend="1187"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" compoundref="stm32f10x_8h" startline="522">IS_FUNCTIONAL_STATE</references>
        <references refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1ad3a9df141be0ccf10389b640f492b26d" compoundref="stm32f10x_8h" startline="521">DISABLE</references>
        <references refid="group___peripheral__declaration_1ga90d2d5c526ce5c0a551f533eccbee71a" compoundref="stm32f10x_8h" startline="1415">ADC1</references>
        <references refid="group___a_d_c___private___defines_1ga7f5e0f807edebbfcef4883f3ec42b9e8" compoundref="stm32f10x__adc_8c" startline="117">CR2_TSVREFE_Set</references>
        <references refid="group___a_d_c___private___defines_1gaa207bc0eeed8b546dc9536b02df633b5" compoundref="stm32f10x__adc_8c" startline="118">CR2_TSVREFE_Reset</references>
      </memberdef>
      <memberdef kind="function" id="group___a_d_c___exported___functions_1gaa12546e51ec905c90a3aada432bd4633" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___exported__types_1ga89136caac2e14c55151f527ac02daaff" kindref="member">FlagStatus</ref></type>
        <definition>FlagStatus ADC_GetFlagStatus</definition>
        <argsstring>(ADC_TypeDef *ADCx, uint8_t ADC_FLAG)</argsstring>
        <name>ADC_GetFlagStatus</name>
        <param>
          <type><ref refid="struct_a_d_c___type_def" kindref="compound">ADC_TypeDef</ref> *</type>
          <declname>ADCx</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ADC_FLAG</declname>
        </param>
        <briefdescription>
<para>Checks whether the specified ADC flag is set or not. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ADCx</parametername>
</parameternamelist>
<parameterdescription>
<para>where x can be 1, 2 or 3 to select the ADC peripheral. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ADC_FLAG</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the flag to check. This parameter can be one of the following values: <itemizedlist>
<listitem><para>ADC_FLAG_AWD: Analog watchdog flag </para></listitem>
<listitem><para>ADC_FLAG_EOC: End of conversion flag </para></listitem>
<listitem><para>ADC_FLAG_JEOC: End of injected group conversion flag </para></listitem>
<listitem><para>ADC_FLAG_JSTRT: Start of injected group conversion flag </para></listitem>
<listitem><para>ADC_FLAG_STRT: Start of regular group conversion flag </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of ADC_FLAG (SET or RESET). </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="466" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_adc.c" bodystart="1201" bodyend="1220"/>
        <references refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffa589b7d94a3d91d145720e2fed0eb3a05" compoundref="stm32f10x_8h" startline="519">RESET</references>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___a_d_c___exported___constants_1gaf5d6bd0153464912e0eaccb1af1aefb2" compoundref="stm32f10x__adc_8h" startline="89">IS_ADC_ALL_PERIPH</references>
        <references refid="group___a_d_c__flags__definition_1ga597eb68dfef9dbe0928ed14a1aedc710" compoundref="stm32f10x__adc_8h" startline="341">IS_ADC_GET_FLAG</references>
        <references refid="struct_a_d_c___type_def_1a9745df96e98f3cdc2d05ccefce681f64" compoundref="stm32f10x_8h" startline="544">ADC_TypeDef::SR</references>
        <references refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffab44c8101cc294c074709ec1b14211792" compoundref="stm32f10x_8h" startline="519">SET</references>
      </memberdef>
      <memberdef kind="function" id="group___a_d_c___exported___functions_1gaf34f36798f811b4a41321ea2d12118d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ADC_ClearFlag</definition>
        <argsstring>(ADC_TypeDef *ADCx, uint8_t ADC_FLAG)</argsstring>
        <name>ADC_ClearFlag</name>
        <param>
          <type><ref refid="struct_a_d_c___type_def" kindref="compound">ADC_TypeDef</ref> *</type>
          <declname>ADCx</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ADC_FLAG</declname>
        </param>
        <briefdescription>
<para>Clears the ADCx&apos;s pending flags. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ADCx</parametername>
</parameternamelist>
<parameterdescription>
<para>where x can be 1, 2 or 3 to select the ADC peripheral. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ADC_FLAG</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the flag to clear. This parameter can be any combination of the following values: <itemizedlist>
<listitem><para>ADC_FLAG_AWD: Analog watchdog flag </para></listitem>
<listitem><para>ADC_FLAG_EOC: End of conversion flag </para></listitem>
<listitem><para>ADC_FLAG_JEOC: End of injected group conversion flag </para></listitem>
<listitem><para>ADC_FLAG_JSTRT: Start of injected group conversion flag </para></listitem>
<listitem><para>ADC_FLAG_STRT: Start of regular group conversion flag </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="467" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_adc.c" bodystart="1234" bodyend="1241"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___a_d_c___exported___constants_1gaf5d6bd0153464912e0eaccb1af1aefb2" compoundref="stm32f10x__adc_8h" startline="89">IS_ADC_ALL_PERIPH</references>
        <references refid="group___a_d_c__flags__definition_1gac5b6fb60ec921255b05261ec04573470" compoundref="stm32f10x__adc_8h" startline="340">IS_ADC_CLEAR_FLAG</references>
        <references refid="struct_a_d_c___type_def_1a9745df96e98f3cdc2d05ccefce681f64" compoundref="stm32f10x_8h" startline="544">ADC_TypeDef::SR</references>
      </memberdef>
      <memberdef kind="function" id="group___a_d_c___exported___functions_1gaa1d3b910a83dbf14d4f68c8eef058612" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___exported__types_1gaacbd7ed539db0aacd973a0f6eca34074" kindref="member">ITStatus</ref></type>
        <definition>ITStatus ADC_GetITStatus</definition>
        <argsstring>(ADC_TypeDef *ADCx, uint16_t ADC_IT)</argsstring>
        <name>ADC_GetITStatus</name>
        <param>
          <type><ref refid="struct_a_d_c___type_def" kindref="compound">ADC_TypeDef</ref> *</type>
          <declname>ADCx</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>ADC_IT</declname>
        </param>
        <briefdescription>
<para>Checks whether the specified ADC interrupt has occurred or not. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ADCx</parametername>
</parameternamelist>
<parameterdescription>
<para>where x can be 1, 2 or 3 to select the ADC peripheral. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ADC_IT</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the ADC interrupt source to check. This parameter can be one of the following values: <itemizedlist>
<listitem><para>ADC_IT_EOC: End of conversion interrupt mask </para></listitem>
<listitem><para>ADC_IT_AWD: Analog watchdog interrupt mask </para></listitem>
<listitem><para>ADC_IT_JEOC: End of injected conversion interrupt mask </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of ADC_IT (SET or RESET). </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="468" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_adc.c" bodystart="1253" bodyend="1277"/>
        <references refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffa589b7d94a3d91d145720e2fed0eb3a05" compoundref="stm32f10x_8h" startline="519">RESET</references>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___a_d_c___exported___constants_1gaf5d6bd0153464912e0eaccb1af1aefb2" compoundref="stm32f10x__adc_8h" startline="89">IS_ADC_ALL_PERIPH</references>
        <references refid="group___a_d_c__interrupts__definition_1gacae69f04de1a0033f065864d868c006e" compoundref="stm32f10x__adc_8h" startline="325">IS_ADC_GET_IT</references>
        <references refid="struct_a_d_c___type_def_1a89b1ff4376683dd2896ea8b32ded05b2" compoundref="stm32f10x_8h" startline="545">ADC_TypeDef::CR1</references>
        <references refid="struct_a_d_c___type_def_1a9745df96e98f3cdc2d05ccefce681f64" compoundref="stm32f10x_8h" startline="544">ADC_TypeDef::SR</references>
        <references refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffab44c8101cc294c074709ec1b14211792" compoundref="stm32f10x_8h" startline="519">SET</references>
      </memberdef>
      <memberdef kind="function" id="group___a_d_c___exported___functions_1ga601c6a67bd883eb631ecc7aa5e999b9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ADC_ClearITPendingBit</definition>
        <argsstring>(ADC_TypeDef *ADCx, uint16_t ADC_IT)</argsstring>
        <name>ADC_ClearITPendingBit</name>
        <param>
          <type><ref refid="struct_a_d_c___type_def" kindref="compound">ADC_TypeDef</ref> *</type>
          <declname>ADCx</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>ADC_IT</declname>
        </param>
        <briefdescription>
<para>Clears the ADCx&apos;s interrupt pending bits. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ADCx</parametername>
</parameternamelist>
<parameterdescription>
<para>where x can be 1, 2 or 3 to select the ADC peripheral. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ADC_IT</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the ADC interrupt pending bit to clear. This parameter can be any combination of the following values: <itemizedlist>
<listitem><para>ADC_IT_EOC: End of conversion interrupt mask </para></listitem>
<listitem><para>ADC_IT_AWD: Analog watchdog interrupt mask </para></listitem>
<listitem><para>ADC_IT_JEOC: End of injected conversion interrupt mask </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h" line="469" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_adc.c" bodystart="1289" bodyend="1299"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___a_d_c___exported___constants_1gaf5d6bd0153464912e0eaccb1af1aefb2" compoundref="stm32f10x__adc_8h" startline="89">IS_ADC_ALL_PERIPH</references>
        <references refid="group___a_d_c__interrupts__definition_1gaf5f8d35930becff402eeb8220641432f" compoundref="stm32f10x__adc_8h" startline="323">IS_ADC_IT</references>
        <references refid="struct_a_d_c___type_def_1a9745df96e98f3cdc2d05ccefce681f64" compoundref="stm32f10x_8h" startline="544">ADC_TypeDef::SR</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This file contains all the functions prototypes for the ADC firmware library. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>MCD Application Team </para></simplesect>
<simplesect kind="version"><para>V3.5.0 </para></simplesect>
<simplesect kind="date"><para>11-March-2011 </para></simplesect>
<simplesect kind="attention"><para></para></simplesect>
THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.</para><para><heading level="2"><center><copy/> COPYRIGHT 2011 STMicroelectronics</center></heading>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="23"><highlight class="comment">/*<sp/>Define<sp/>to<sp/>prevent<sp/>recursive<sp/>inclusion<sp/>-------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__STM32F10x_ADC_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__STM32F10x_ADC_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/>[ILG]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>(<sp/>__GNUC__<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>GCC<sp/>diagnostic<sp/>push</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>GCC<sp/>diagnostic<sp/>ignored<sp/>&quot;-Wpadded&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Includes<sp/>------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="stm32f10x_8h" kindref="compound">stm32f10x.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="struct_a_d_c___init_type_def" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal">{</highlight></codeline>
<codeline lineno="58" refid="struct_a_d_c___init_type_def_1a0f9ec17ad585d66a54625213062c9260" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="struct_a_d_c___init_type_def_1a0f9ec17ad585d66a54625213062c9260" kindref="member">ADC_Mode</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="62" refid="struct_a_d_c___init_type_def_1aaf44f54f22ab40bf8fae01f075aa4c87" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref><sp/><ref refid="struct_a_d_c___init_type_def_1aaf44f54f22ab40bf8fae01f075aa4c87" kindref="member">ADC_ScanConvMode</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="66" refid="struct_a_d_c___init_type_def_1a2149036a332281e70a36879a2396b8d1" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref><sp/><ref refid="struct_a_d_c___init_type_def_1a2149036a332281e70a36879a2396b8d1" kindref="member">ADC_ContinuousConvMode</ref>;<sp/></highlight></codeline>
<codeline lineno="70" refid="struct_a_d_c___init_type_def_1ae5d0c48e70c2a39355b7ab0cc1df8310" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="struct_a_d_c___init_type_def_1ae5d0c48e70c2a39355b7ab0cc1df8310" kindref="member">ADC_ExternalTrigConv</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="74" refid="struct_a_d_c___init_type_def_1a622e89d8fba3900f20aaf40d5560ab7b" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="struct_a_d_c___init_type_def_1a622e89d8fba3900f20aaf40d5560ab7b" kindref="member">ADC_DataAlign</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="77" refid="struct_a_d_c___init_type_def_1ad6f39a12ac32a2767085ac94e9338bc3" refkind="member"><highlight class="normal"><sp/><sp/>uint8_t<sp/><ref refid="struct_a_d_c___init_type_def_1ad6f39a12ac32a2767085ac94e9338bc3" kindref="member">ADC_NbrOfChannel</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="80"><highlight class="normal">}<ref refid="struct_a_d_c___init_type_def" kindref="compound">ADC_InitTypeDef</ref>;</highlight></codeline>
<codeline lineno="89" refid="group___a_d_c___exported___constants_1gaf5d6bd0153464912e0eaccb1af1aefb2" refkind="member"><highlight class="preprocessor">#define<sp/>IS_ADC_ALL_PERIPH(PERIPH)<sp/>(((PERIPH)<sp/>==<sp/>ADC1)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="90"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((PERIPH)<sp/>==<sp/>ADC2)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="91"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((PERIPH)<sp/>==<sp/>ADC3))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93" refid="group___a_d_c___exported___constants_1ga56ce1703cee9a93969fc507b985ee949" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_ADC_DMA_PERIPH(PERIPH)<sp/>(((PERIPH)<sp/>==<sp/>ADC1)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="94"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((PERIPH)<sp/>==<sp/>ADC3))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="100" refid="group___a_d_c__mode_1ga2754d3a35559dc10e3d6a7d920e83432" refkind="member"><highlight class="preprocessor">#define<sp/>ADC_Mode_Independent<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101" refid="group___a_d_c__mode_1ga487d5f0c506291c5d37b53198396fd1c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_Mode_RegInjecSimult<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00010000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102" refid="group___a_d_c__mode_1gae3d5fbf93f60d75534364bf9db78f632" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_Mode_RegSimult_AlterTrig<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00020000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103" refid="group___a_d_c__mode_1ga2fc8a737f7b2375309bccbcb7fdbbfeb" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_Mode_InjecSimult_FastInterl<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00030000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104" refid="group___a_d_c__mode_1gacb72230cb48a577907729d426be69c22" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_Mode_InjecSimult_SlowInterl<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00040000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105" refid="group___a_d_c__mode_1ga2339cc471aaf2db02daa4aeb49e9f0d9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_Mode_InjecSimult<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00050000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106" refid="group___a_d_c__mode_1ga71298f7453c2b4392a9c622328b3c93d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_Mode_RegSimult<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00060000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107" refid="group___a_d_c__mode_1ga843ecdd53625e2088e91819e43106a7a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_Mode_FastInterl<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00070000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108" refid="group___a_d_c__mode_1ga8b81e27e98dbc3d1e31452dbad167cd5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_Mode_SlowInterl<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00080000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109" refid="group___a_d_c__mode_1ga5595f12dc485e301ba3bad0e165586c1" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_Mode_AlterTrig<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00090000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111" refid="group___a_d_c__mode_1ga4abf4c7de28a42d7b124c9e403a6e537" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_ADC_MODE(MODE)<sp/>(((MODE)<sp/>==<sp/>ADC_Mode_Independent)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="112"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((MODE)<sp/>==<sp/>ADC_Mode_RegInjecSimult)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="113"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((MODE)<sp/>==<sp/>ADC_Mode_RegSimult_AlterTrig)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="114"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((MODE)<sp/>==<sp/>ADC_Mode_InjecSimult_FastInterl)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="115"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((MODE)<sp/>==<sp/>ADC_Mode_InjecSimult_SlowInterl)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="116"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((MODE)<sp/>==<sp/>ADC_Mode_InjecSimult)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="117"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((MODE)<sp/>==<sp/>ADC_Mode_RegSimult)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="118"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((MODE)<sp/>==<sp/>ADC_Mode_FastInterl)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="119"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((MODE)<sp/>==<sp/>ADC_Mode_SlowInterl)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="120"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((MODE)<sp/>==<sp/>ADC_Mode_AlterTrig))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="129" refid="group___a_d_c__external__trigger__sources__for__regular__channels__conversion_1ga303f24361ea930f8214e9e68b63b244e" refkind="member"><highlight class="preprocessor">#define<sp/>ADC_ExternalTrigConv_T1_CC1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000000)<sp/></highlight></codeline>
<codeline lineno="130" refid="group___a_d_c__external__trigger__sources__for__regular__channels__conversion_1ga8bf9fd9ad4e4c12ef41520ded2c3c332" refkind="member"><highlight class="preprocessor">#define<sp/>ADC_ExternalTrigConv_T1_CC2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00020000)<sp/></highlight></codeline>
<codeline lineno="131" refid="group___a_d_c__external__trigger__sources__for__regular__channels__conversion_1gadfeb40c1735b0ee50f8a5aafdd840cc6" refkind="member"><highlight class="preprocessor">#define<sp/>ADC_ExternalTrigConv_T2_CC2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00060000)<sp/></highlight></codeline>
<codeline lineno="132" refid="group___a_d_c__external__trigger__sources__for__regular__channels__conversion_1ga1cf4549534a00fe2f5527ad783204098" refkind="member"><highlight class="preprocessor">#define<sp/>ADC_ExternalTrigConv_T3_TRGO<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00080000)<sp/></highlight></codeline>
<codeline lineno="133" refid="group___a_d_c__external__trigger__sources__for__regular__channels__conversion_1ga8f6a764b7de878c2e09bbb0d1061d69c" refkind="member"><highlight class="preprocessor">#define<sp/>ADC_ExternalTrigConv_T4_CC4<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x000A0000)<sp/></highlight></codeline>
<codeline lineno="134" refid="group___a_d_c__external__trigger__sources__for__regular__channels__conversion_1ga640de59aeac8cc3d96b6db3497975d02" refkind="member"><highlight class="preprocessor">#define<sp/>ADC_ExternalTrigConv_Ext_IT11_TIM8_TRGO<sp/><sp/><sp/><sp/>((uint32_t)0x000C0000)<sp/></highlight></codeline>
<codeline lineno="136" refid="group___a_d_c__external__trigger__sources__for__regular__channels__conversion_1ga41ad03e2921f6de0fb75ae06d6046e63" refkind="member"><highlight class="preprocessor">#define<sp/>ADC_ExternalTrigConv_T1_CC3<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00040000)<sp/></highlight></codeline>
<codeline lineno="137" refid="group___a_d_c__external__trigger__sources__for__regular__channels__conversion_1ga433a3845ed1792fa6359b763c955e9c2" refkind="member"><highlight class="preprocessor">#define<sp/>ADC_ExternalTrigConv_None<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x000E0000)<sp/></highlight></codeline>
<codeline lineno="139" refid="group___a_d_c__external__trigger__sources__for__regular__channels__conversion_1ga3c73d5c8bb0f898dbbc74bcc536f6ec1" refkind="member"><highlight class="preprocessor">#define<sp/>ADC_ExternalTrigConv_T3_CC1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000000)<sp/></highlight></codeline>
<codeline lineno="140" refid="group___a_d_c__external__trigger__sources__for__regular__channels__conversion_1ga16ae1b335f2c2b4facf3d4bedc2ce27f" refkind="member"><highlight class="preprocessor">#define<sp/>ADC_ExternalTrigConv_T2_CC3<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00020000)<sp/></highlight></codeline>
<codeline lineno="141" refid="group___a_d_c__external__trigger__sources__for__regular__channels__conversion_1ga97af875d12e77a67e84f3aaf1f8033ed" refkind="member"><highlight class="preprocessor">#define<sp/>ADC_ExternalTrigConv_T8_CC1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00060000)<sp/></highlight></codeline>
<codeline lineno="142" refid="group___a_d_c__external__trigger__sources__for__regular__channels__conversion_1gab26d94590d47ae6ec46841652741abf3" refkind="member"><highlight class="preprocessor">#define<sp/>ADC_ExternalTrigConv_T8_TRGO<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00080000)<sp/></highlight></codeline>
<codeline lineno="143" refid="group___a_d_c__external__trigger__sources__for__regular__channels__conversion_1ga6bd1ad69cb455afeabf6759b640378d3" refkind="member"><highlight class="preprocessor">#define<sp/>ADC_ExternalTrigConv_T5_CC1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x000A0000)<sp/></highlight></codeline>
<codeline lineno="144" refid="group___a_d_c__external__trigger__sources__for__regular__channels__conversion_1ga95b58981aff35d6d5fa229925cd6315d" refkind="member"><highlight class="preprocessor">#define<sp/>ADC_ExternalTrigConv_T5_CC3<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x000C0000)<sp/></highlight></codeline>
<codeline lineno="146" refid="group___a_d_c__external__trigger__sources__for__regular__channels__conversion_1gac74e6054adbedd72822cacde69105318" refkind="member"><highlight class="preprocessor">#define<sp/>IS_ADC_EXT_TRIG(REGTRIG)<sp/>(((REGTRIG)<sp/>==<sp/>ADC_ExternalTrigConv_T1_CC1)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="147"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((REGTRIG)<sp/>==<sp/>ADC_ExternalTrigConv_T1_CC2)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="148"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((REGTRIG)<sp/>==<sp/>ADC_ExternalTrigConv_T1_CC3)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="149"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((REGTRIG)<sp/>==<sp/>ADC_ExternalTrigConv_T2_CC2)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="150"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((REGTRIG)<sp/>==<sp/>ADC_ExternalTrigConv_T3_TRGO)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="151"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((REGTRIG)<sp/>==<sp/>ADC_ExternalTrigConv_T4_CC4)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="152"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((REGTRIG)<sp/>==<sp/>ADC_ExternalTrigConv_Ext_IT11_TIM8_TRGO)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="153"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((REGTRIG)<sp/>==<sp/>ADC_ExternalTrigConv_None)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="154"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((REGTRIG)<sp/>==<sp/>ADC_ExternalTrigConv_T3_CC1)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="155"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((REGTRIG)<sp/>==<sp/>ADC_ExternalTrigConv_T2_CC3)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="156"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((REGTRIG)<sp/>==<sp/>ADC_ExternalTrigConv_T8_CC1)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="157"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((REGTRIG)<sp/>==<sp/>ADC_ExternalTrigConv_T8_TRGO)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="158"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((REGTRIG)<sp/>==<sp/>ADC_ExternalTrigConv_T5_CC1)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="159"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((REGTRIG)<sp/>==<sp/>ADC_ExternalTrigConv_T5_CC3))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="168" refid="group___a_d_c__data__align_1ga80b5d2f2b6b058bc498f58e0a92ad035" refkind="member"><highlight class="preprocessor">#define<sp/>ADC_DataAlign_Right<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169" refid="group___a_d_c__data__align_1ga87c2b7021bc288174d5d6175dc267251" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_DataAlign_Left<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000800)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170" refid="group___a_d_c__data__align_1ga2903b620e3c61dc47ed8c0fbf4197801" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_ADC_DATA_ALIGN(ALIGN)<sp/>(((ALIGN)<sp/>==<sp/>ADC_DataAlign_Right)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="171"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((ALIGN)<sp/>==<sp/>ADC_DataAlign_Left))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="180" refid="group___a_d_c__channels_1ga40ec353803e9470a5721ef5bf0b1ab24" refkind="member"><highlight class="preprocessor">#define<sp/>ADC_Channel_0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)0x00)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181" refid="group___a_d_c__channels_1ga0b04cebf8d62085eca6dc7daa3d5d3f0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_Channel_1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)0x01)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182" refid="group___a_d_c__channels_1gabc66e2529583e11b591efd2df7070571" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_Channel_2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)0x02)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183" refid="group___a_d_c__channels_1ga9f93cbacd030f1c79f96f8889b0cdee6" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_Channel_3<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)0x03)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184" refid="group___a_d_c__channels_1gafc7218417f729659dd8f06185cc2eafa" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_Channel_4<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)0x04)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185" refid="group___a_d_c__channels_1ga42822abae41faabde2a2da877e0cc854" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_Channel_5<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)0x05)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186" refid="group___a_d_c__channels_1ga7e24a73eec4aeb7d8e2f9008825ceacb" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_Channel_6<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)0x06)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187" refid="group___a_d_c__channels_1ga9723aa5fe6b9f4af1ffd3b90e6eef8d1" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_Channel_7<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)0x07)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188" refid="group___a_d_c__channels_1ga99b2c662d4068152e0e80a048036cc48" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_Channel_8<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)0x08)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189" refid="group___a_d_c__channels_1ga01a61c428be0cb69327e428e32a42aa1" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_Channel_9<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)0x09)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190" refid="group___a_d_c__channels_1gabfa98b580f49a82a83dcb1df32efceca" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_Channel_10<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)0x0A)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191" refid="group___a_d_c__channels_1ga5bfc40d938f384f22665f6e2dd945cfd" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_Channel_11<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)0x0B)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192" refid="group___a_d_c__channels_1gaa1e35f7870ae8f05013a681293175299" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_Channel_12<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)0x0C)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193" refid="group___a_d_c__channels_1ga517cda911256f722eb067d7140663230" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_Channel_13<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)0x0D)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194" refid="group___a_d_c__channels_1gaf1830a03fe4a3820fde4f41ba907c394" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_Channel_14<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)0x0E)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195" refid="group___a_d_c__channels_1ga01431a7b4e388beb241328874abdf88c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_Channel_15<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)0x0F)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196" refid="group___a_d_c__channels_1ga52fb09ae9a0333a0e071da106466c659" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_Channel_16<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)0x10)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197" refid="group___a_d_c__channels_1ga58cdfe3a5625f198116d163b09698cea" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_Channel_17<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)0x11)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199" refid="group___a_d_c__channels_1ga1efc096b8d4a8d15c4a7d91f5c03c6c7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_Channel_TempSensor<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)ADC_Channel_16)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200" refid="group___a_d_c__channels_1ga5d48ded5138e6f1efe3a7634eff4d125" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_Channel_Vrefint<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)ADC_Channel_17)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202" refid="group___a_d_c__channels_1gaba41910dcb2b449c613a5ef638862e77" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_ADC_CHANNEL(CHANNEL)<sp/>(((CHANNEL)<sp/>==<sp/>ADC_Channel_0)<sp/>||<sp/>((CHANNEL)<sp/>==<sp/>ADC_Channel_1)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="203"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((CHANNEL)<sp/>==<sp/>ADC_Channel_2)<sp/>||<sp/>((CHANNEL)<sp/>==<sp/>ADC_Channel_3)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="204"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((CHANNEL)<sp/>==<sp/>ADC_Channel_4)<sp/>||<sp/>((CHANNEL)<sp/>==<sp/>ADC_Channel_5)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="205"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((CHANNEL)<sp/>==<sp/>ADC_Channel_6)<sp/>||<sp/>((CHANNEL)<sp/>==<sp/>ADC_Channel_7)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="206"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((CHANNEL)<sp/>==<sp/>ADC_Channel_8)<sp/>||<sp/>((CHANNEL)<sp/>==<sp/>ADC_Channel_9)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="207"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((CHANNEL)<sp/>==<sp/>ADC_Channel_10)<sp/>||<sp/>((CHANNEL)<sp/>==<sp/>ADC_Channel_11)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="208"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((CHANNEL)<sp/>==<sp/>ADC_Channel_12)<sp/>||<sp/>((CHANNEL)<sp/>==<sp/>ADC_Channel_13)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="209"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((CHANNEL)<sp/>==<sp/>ADC_Channel_14)<sp/>||<sp/>((CHANNEL)<sp/>==<sp/>ADC_Channel_15)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="210"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((CHANNEL)<sp/>==<sp/>ADC_Channel_16)<sp/>||<sp/>((CHANNEL)<sp/>==<sp/>ADC_Channel_17))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="219" refid="group___a_d_c__sampling__time_1gad085065e48857ada890863a7db575c6e" refkind="member"><highlight class="preprocessor">#define<sp/>ADC_SampleTime_1Cycles5<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)0x00)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220" refid="group___a_d_c__sampling__time_1gac4101073619c4d79efa28a477696b3f5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_SampleTime_7Cycles5<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)0x01)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221" refid="group___a_d_c__sampling__time_1gaef37e223e826ac5e6ee5ef30881f9b27" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_SampleTime_13Cycles5<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)0x02)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222" refid="group___a_d_c__sampling__time_1ga6251e64783f7a6562e17e71f7edd68d8" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_SampleTime_28Cycles5<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)0x03)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223" refid="group___a_d_c__sampling__time_1gadc3d26f9bf5fa6589889cc938c66e0e7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_SampleTime_41Cycles5<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)0x04)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224" refid="group___a_d_c__sampling__time_1ga6a6fbbadc0e35a719fb749bf6b0704d6" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_SampleTime_55Cycles5<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)0x05)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225" refid="group___a_d_c__sampling__time_1gae46e8978ac3160969156739ddb867dae" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_SampleTime_71Cycles5<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)0x06)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226" refid="group___a_d_c__sampling__time_1ga93117dc4090dc4e3e84e0eef6d6ab073" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_SampleTime_239Cycles5<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)0x07)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227" refid="group___a_d_c__sampling__time_1ga30e0307fa009e1c383d3047b48e94644" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_ADC_SAMPLE_TIME(TIME)<sp/>(((TIME)<sp/>==<sp/>ADC_SampleTime_1Cycles5)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="228"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((TIME)<sp/>==<sp/>ADC_SampleTime_7Cycles5)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="229"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((TIME)<sp/>==<sp/>ADC_SampleTime_13Cycles5)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="230"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((TIME)<sp/>==<sp/>ADC_SampleTime_28Cycles5)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="231"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((TIME)<sp/>==<sp/>ADC_SampleTime_41Cycles5)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="232"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((TIME)<sp/>==<sp/>ADC_SampleTime_55Cycles5)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="233"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((TIME)<sp/>==<sp/>ADC_SampleTime_71Cycles5)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="234"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((TIME)<sp/>==<sp/>ADC_SampleTime_239Cycles5))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="243" refid="group___a_d_c__external__trigger__sources__for__injected__channels__conversion_1gaaad112b2b035dfd77c9743197c51b16f" refkind="member"><highlight class="preprocessor">#define<sp/>ADC_ExternalTrigInjecConv_T2_TRGO<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00002000)<sp/></highlight></codeline>
<codeline lineno="244" refid="group___a_d_c__external__trigger__sources__for__injected__channels__conversion_1ga49089501c5bf2a2c22019fbca4b688e9" refkind="member"><highlight class="preprocessor">#define<sp/>ADC_ExternalTrigInjecConv_T2_CC1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00003000)<sp/></highlight></codeline>
<codeline lineno="245" refid="group___a_d_c__external__trigger__sources__for__injected__channels__conversion_1ga6c9ddf9bba0cefe77dbcd601aed24f7b" refkind="member"><highlight class="preprocessor">#define<sp/>ADC_ExternalTrigInjecConv_T3_CC4<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00004000)<sp/></highlight></codeline>
<codeline lineno="246" refid="group___a_d_c__external__trigger__sources__for__injected__channels__conversion_1gab12e5503085cdb9dde4a59614e421284" refkind="member"><highlight class="preprocessor">#define<sp/>ADC_ExternalTrigInjecConv_T4_TRGO<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00005000)<sp/></highlight></codeline>
<codeline lineno="247" refid="group___a_d_c__external__trigger__sources__for__injected__channels__conversion_1gaa23965b742e08142e5d1c453166dbcc2" refkind="member"><highlight class="preprocessor">#define<sp/>ADC_ExternalTrigInjecConv_Ext_IT15_TIM8_CC4<sp/>((uint32_t)0x00006000)<sp/></highlight></codeline>
<codeline lineno="249" refid="group___a_d_c__external__trigger__sources__for__injected__channels__conversion_1gabf47f66e60c166f6b63b805f72ad94b0" refkind="member"><highlight class="preprocessor">#define<sp/>ADC_ExternalTrigInjecConv_T1_TRGO<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000000)<sp/></highlight></codeline>
<codeline lineno="250" refid="group___a_d_c__external__trigger__sources__for__injected__channels__conversion_1gabd27bcc6ff5af6713a124b3801759bcf" refkind="member"><highlight class="preprocessor">#define<sp/>ADC_ExternalTrigInjecConv_T1_CC4<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00001000)<sp/></highlight></codeline>
<codeline lineno="251" refid="group___a_d_c__external__trigger__sources__for__injected__channels__conversion_1gaad11a68fca76d97b97dc2554dac5cb16" refkind="member"><highlight class="preprocessor">#define<sp/>ADC_ExternalTrigInjecConv_None<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00007000)<sp/></highlight></codeline>
<codeline lineno="253" refid="group___a_d_c__external__trigger__sources__for__injected__channels__conversion_1gae342ca48595f0b2bf866943969026581" refkind="member"><highlight class="preprocessor">#define<sp/>ADC_ExternalTrigInjecConv_T4_CC3<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00002000)<sp/></highlight></codeline>
<codeline lineno="254" refid="group___a_d_c__external__trigger__sources__for__injected__channels__conversion_1gac0320df9aa5e2d378b05f8e4dcc1616a" refkind="member"><highlight class="preprocessor">#define<sp/>ADC_ExternalTrigInjecConv_T8_CC2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00003000)<sp/></highlight></codeline>
<codeline lineno="255" refid="group___a_d_c__external__trigger__sources__for__injected__channels__conversion_1ga6724679fe75f87c029f268ef47841a3e" refkind="member"><highlight class="preprocessor">#define<sp/>ADC_ExternalTrigInjecConv_T8_CC4<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00004000)<sp/></highlight></codeline>
<codeline lineno="256" refid="group___a_d_c__external__trigger__sources__for__injected__channels__conversion_1ga1d92236e9eb9f3adf69371f3f698192e" refkind="member"><highlight class="preprocessor">#define<sp/>ADC_ExternalTrigInjecConv_T5_TRGO<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00005000)<sp/></highlight></codeline>
<codeline lineno="257" refid="group___a_d_c__external__trigger__sources__for__injected__channels__conversion_1gade68a960ba05714e5f0a1f11a086884e" refkind="member"><highlight class="preprocessor">#define<sp/>ADC_ExternalTrigInjecConv_T5_CC4<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00006000)<sp/></highlight></codeline>
<codeline lineno="259" refid="group___a_d_c__external__trigger__sources__for__injected__channels__conversion_1ga3cb8cadbff46e432b5e000c3a7489a0b" refkind="member"><highlight class="preprocessor">#define<sp/>IS_ADC_EXT_INJEC_TRIG(INJTRIG)<sp/>(((INJTRIG)<sp/>==<sp/>ADC_ExternalTrigInjecConv_T1_TRGO)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="260"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((INJTRIG)<sp/>==<sp/>ADC_ExternalTrigInjecConv_T1_CC4)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="261"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((INJTRIG)<sp/>==<sp/>ADC_ExternalTrigInjecConv_T2_TRGO)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="262"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((INJTRIG)<sp/>==<sp/>ADC_ExternalTrigInjecConv_T2_CC1)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="263"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((INJTRIG)<sp/>==<sp/>ADC_ExternalTrigInjecConv_T3_CC4)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="264"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((INJTRIG)<sp/>==<sp/>ADC_ExternalTrigInjecConv_T4_TRGO)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="265"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((INJTRIG)<sp/>==<sp/>ADC_ExternalTrigInjecConv_Ext_IT15_TIM8_CC4)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="266"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((INJTRIG)<sp/>==<sp/>ADC_ExternalTrigInjecConv_None)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="267"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((INJTRIG)<sp/>==<sp/>ADC_ExternalTrigInjecConv_T4_CC3)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="268"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((INJTRIG)<sp/>==<sp/>ADC_ExternalTrigInjecConv_T8_CC2)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="269"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((INJTRIG)<sp/>==<sp/>ADC_ExternalTrigInjecConv_T8_CC4)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="270"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((INJTRIG)<sp/>==<sp/>ADC_ExternalTrigInjecConv_T5_TRGO)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="271"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((INJTRIG)<sp/>==<sp/>ADC_ExternalTrigInjecConv_T5_CC4))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="280" refid="group___a_d_c__injected__channel__selection_1ga8792d4ae0fa82dd317252c72815684ba" refkind="member"><highlight class="preprocessor">#define<sp/>ADC_InjectedChannel_1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)0x14)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281" refid="group___a_d_c__injected__channel__selection_1ga2e322fccc7de16a0e79be573f5b1211c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_InjectedChannel_2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)0x18)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282" refid="group___a_d_c__injected__channel__selection_1ga6bf03d805645b942bdcc53504e772cf1" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_InjectedChannel_3<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)0x1C)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283" refid="group___a_d_c__injected__channel__selection_1ga31d18bbcfa7b685e90c3a1313d9c6406" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_InjectedChannel_4<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)0x20)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284" refid="group___a_d_c__injected__channel__selection_1gae0bbfb5dbad0fbac8b672db6f63cf8d0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_ADC_INJECTED_CHANNEL(CHANNEL)<sp/>(((CHANNEL)<sp/>==<sp/>ADC_InjectedChannel_1)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="285"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((CHANNEL)<sp/>==<sp/>ADC_InjectedChannel_2)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="286"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((CHANNEL)<sp/>==<sp/>ADC_InjectedChannel_3)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="287"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((CHANNEL)<sp/>==<sp/>ADC_InjectedChannel_4))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="296" refid="group___a_d_c__analog__watchdog__selection_1ga2975552a752f44085d9da54b4e76121e" refkind="member"><highlight class="preprocessor">#define<sp/>ADC_AnalogWatchdog_SingleRegEnable<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00800200)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297" refid="group___a_d_c__analog__watchdog__selection_1gaa9904271617ab69593ac68ae540047fb" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_AnalogWatchdog_SingleInjecEnable<sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00400200)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298" refid="group___a_d_c__analog__watchdog__selection_1gaffd35fc6ceb226ec3fb61fb52227820c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_AnalogWatchdog_SingleRegOrInjecEnable<sp/><sp/>((uint32_t)0x00C00200)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299" refid="group___a_d_c__analog__watchdog__selection_1ga37f08e1a4a452a2c148341b3cfcdeb1e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_AnalogWatchdog_AllRegEnable<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00800000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300" refid="group___a_d_c__analog__watchdog__selection_1gae4d6a7ebb136d924f0c8bad2cbac0574" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_AnalogWatchdog_AllInjecEnable<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00400000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301" refid="group___a_d_c__analog__watchdog__selection_1ga25a299f4493aaae316521351198df084" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_AnalogWatchdog_AllRegAllInjecEnable<sp/><sp/><sp/><sp/>((uint32_t)0x00C00000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302" refid="group___a_d_c__analog__watchdog__selection_1ga91f69979e0e449fef5a8b225a21e3eb9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_AnalogWatchdog_None<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304" refid="group___a_d_c__analog__watchdog__selection_1ga53ffa30f756569194342bfba80165544" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_ADC_ANALOG_WATCHDOG(WATCHDOG)<sp/>(((WATCHDOG)<sp/>==<sp/>ADC_AnalogWatchdog_SingleRegEnable)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="305"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((WATCHDOG)<sp/>==<sp/>ADC_AnalogWatchdog_SingleInjecEnable)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="306"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((WATCHDOG)<sp/>==<sp/>ADC_AnalogWatchdog_SingleRegOrInjecEnable)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="307"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((WATCHDOG)<sp/>==<sp/>ADC_AnalogWatchdog_AllRegEnable)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="308"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((WATCHDOG)<sp/>==<sp/>ADC_AnalogWatchdog_AllInjecEnable)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="309"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((WATCHDOG)<sp/>==<sp/>ADC_AnalogWatchdog_AllRegAllInjecEnable)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="310"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((WATCHDOG)<sp/>==<sp/>ADC_AnalogWatchdog_None))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="319" refid="group___a_d_c__interrupts__definition_1ga0ad335d835f54415194d448019569e00" refkind="member"><highlight class="preprocessor">#define<sp/>ADC_IT_EOC<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint16_t)0x0220)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320" refid="group___a_d_c__interrupts__definition_1ga2f5c7f9900c24250a0c6ccaa7cbca946" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_IT_AWD<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint16_t)0x0140)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321" refid="group___a_d_c__interrupts__definition_1gad439fc0cd69706704d47aeabfeddb631" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_IT_JEOC<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint16_t)0x0480)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323" refid="group___a_d_c__interrupts__definition_1gaf5f8d35930becff402eeb8220641432f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_ADC_IT(IT)<sp/>((((IT)<sp/>&amp;<sp/>(uint16_t)0xF81F)<sp/>==<sp/>0x00)<sp/>&amp;&amp;<sp/>((IT)<sp/>!=<sp/>0x00))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325" refid="group___a_d_c__interrupts__definition_1gacae69f04de1a0033f065864d868c006e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_ADC_GET_IT(IT)<sp/>(((IT)<sp/>==<sp/>ADC_IT_EOC)<sp/>||<sp/>((IT)<sp/>==<sp/>ADC_IT_AWD)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="326"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((IT)<sp/>==<sp/>ADC_IT_JEOC))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="335" refid="group___a_d_c__flags__definition_1gadb75a4b430fb84950232b7a8f3a6a877" refkind="member"><highlight class="preprocessor">#define<sp/>ADC_FLAG_AWD<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)0x01)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336" refid="group___a_d_c__flags__definition_1gaf2c6fdf7e9ab63b778149e5fb56413d4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_FLAG_EOC<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)0x02)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337" refid="group___a_d_c__flags__definition_1ga4df8eea8ab83d98104ee15a339743a4e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_FLAG_JEOC<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)0x04)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338" refid="group___a_d_c__flags__definition_1ga278f4e866f4322c1120bf0db5301c432" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_FLAG_JSTRT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)0x08)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339" refid="group___a_d_c__flags__definition_1gad0c59ae7749c69b5b91f2c533db1b619" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_FLAG_STRT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)0x10)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340" refid="group___a_d_c__flags__definition_1gac5b6fb60ec921255b05261ec04573470" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_ADC_CLEAR_FLAG(FLAG)<sp/>((((FLAG)<sp/>&amp;<sp/>(uint8_t)0xE0)<sp/>==<sp/>0x00)<sp/>&amp;&amp;<sp/>((FLAG)<sp/>!=<sp/>0x00))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341" refid="group___a_d_c__flags__definition_1ga597eb68dfef9dbe0928ed14a1aedc710" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_ADC_GET_FLAG(FLAG)<sp/>(((FLAG)<sp/>==<sp/>ADC_FLAG_AWD)<sp/>||<sp/>((FLAG)<sp/>==<sp/>ADC_FLAG_EOC)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="342"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((FLAG)<sp/>==<sp/>ADC_FLAG_JEOC)<sp/>||<sp/>((FLAG)==<sp/>ADC_FLAG_JSTRT)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="343"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((FLAG)<sp/>==<sp/>ADC_FLAG_STRT))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="352" refid="group___a_d_c__thresholds_1gaa71cdff6dafddfccff8a7e88768bfb54" refkind="member"><highlight class="preprocessor">#define<sp/>IS_ADC_THRESHOLD(THRESHOLD)<sp/>((THRESHOLD)<sp/>&lt;=<sp/>0xFFF)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="362" refid="group___a_d_c__injected__offset_1ga252eaf5d2552f0d11b1bcca7dc48950a" refkind="member"><highlight class="preprocessor">#define<sp/>IS_ADC_OFFSET(OFFSET)<sp/>((OFFSET)<sp/>&lt;=<sp/>0xFFF)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="372" refid="group___a_d_c__injected__length_1gaecdddab7424a697722683296ca70e176" refkind="member"><highlight class="preprocessor">#define<sp/>IS_ADC_INJECTED_LENGTH(LENGTH)<sp/>(((LENGTH)<sp/>&gt;=<sp/>0x1)<sp/>&amp;&amp;<sp/>((LENGTH)<sp/>&lt;=<sp/>0x4))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="382" refid="group___a_d_c__injected__rank_1ga63f95f9a45f4d718aabc9e429d860e9d" refkind="member"><highlight class="preprocessor">#define<sp/>IS_ADC_INJECTED_RANK(RANK)<sp/>(((RANK)<sp/>&gt;=<sp/>0x1)<sp/>&amp;&amp;<sp/>((RANK)<sp/>&lt;=<sp/>0x4))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="393" refid="group___a_d_c__regular__length_1ga1ea82167f6dccdef1d160675f4534584" refkind="member"><highlight class="preprocessor">#define<sp/>IS_ADC_REGULAR_LENGTH(LENGTH)<sp/>(((LENGTH)<sp/>&gt;=<sp/>0x1)<sp/>&amp;&amp;<sp/>((LENGTH)<sp/>&lt;=<sp/>0x10))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="402" refid="group___a_d_c__regular__rank_1ga5928a1e9315f798e27220b91f1bae7f2" refkind="member"><highlight class="preprocessor">#define<sp/>IS_ADC_REGULAR_RANK(RANK)<sp/>(((RANK)<sp/>&gt;=<sp/>0x1)<sp/>&amp;&amp;<sp/>((RANK)<sp/>&lt;=<sp/>0x10))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="412" refid="group___a_d_c__regular__discontinuous__mode__number_1gab8dfaacb2f25e65ca755de71050ff270" refkind="member"><highlight class="preprocessor">#define<sp/>IS_ADC_REGULAR_DISC_NUMBER(NUMBER)<sp/>(((NUMBER)<sp/>&gt;=<sp/>0x1)<sp/>&amp;&amp;<sp/>((NUMBER)<sp/>&lt;=<sp/>0x8))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___a_d_c___exported___functions_1ga31fa6bc09de17125e9db2830ce77c09b" kindref="member">ADC_DeInit</ref>(<ref refid="struct_a_d_c___type_def" kindref="compound">ADC_TypeDef</ref>*<sp/>ADCx);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___a_d_c___exported___functions_1gabbab6038cf8691404350625e477254f9" kindref="member">ADC_Init</ref>(<ref refid="struct_a_d_c___type_def" kindref="compound">ADC_TypeDef</ref>*<sp/>ADCx,<sp/><ref refid="struct_a_d_c___init_type_def" kindref="compound">ADC_InitTypeDef</ref>*<sp/>ADC_InitStruct);</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___a_d_c___exported___functions_1ga6c6e754d1d0a98d56e465efaf73272ec" kindref="member">ADC_StructInit</ref>(<ref refid="struct_a_d_c___init_type_def" kindref="compound">ADC_InitTypeDef</ref>*<sp/>ADC_InitStruct);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___a_d_c___exported___functions_1ga40882d399e3371755ed610c1134e634e" kindref="member">ADC_Cmd</ref>(<ref refid="struct_a_d_c___type_def" kindref="compound">ADC_TypeDef</ref>*<sp/>ADCx,<sp/><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref><sp/>NewState);</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___a_d_c___exported___functions_1gac5881d5995818001584b27b137a8dbcb" kindref="member">ADC_DMACmd</ref>(<ref refid="struct_a_d_c___type_def" kindref="compound">ADC_TypeDef</ref>*<sp/>ADCx,<sp/><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref><sp/>NewState);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___a_d_c___exported___functions_1gad4c84b54b539944f555488bf979f82b6" kindref="member">ADC_ITConfig</ref>(<ref refid="struct_a_d_c___type_def" kindref="compound">ADC_TypeDef</ref>*<sp/>ADCx,<sp/>uint16_t<sp/>ADC_IT,<sp/><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref><sp/>NewState);</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___a_d_c___exported___functions_1ga3d542020ba28c1d16238a0defbee6d8f" kindref="member">ADC_ResetCalibration</ref>(<ref refid="struct_a_d_c___type_def" kindref="compound">ADC_TypeDef</ref>*<sp/>ADCx);</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><ref refid="group___exported__types_1ga89136caac2e14c55151f527ac02daaff" kindref="member">FlagStatus</ref><sp/><ref refid="group___a_d_c___exported___functions_1ga113be9fe25add8d7496bed659c68e02b" kindref="member">ADC_GetResetCalibrationStatus</ref>(<ref refid="struct_a_d_c___type_def" kindref="compound">ADC_TypeDef</ref>*<sp/>ADCx);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___a_d_c___exported___functions_1gadcba6341124a6aabfd2dd885ca8e5f14" kindref="member">ADC_StartCalibration</ref>(<ref refid="struct_a_d_c___type_def" kindref="compound">ADC_TypeDef</ref>*<sp/>ADCx);</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><ref refid="group___exported__types_1ga89136caac2e14c55151f527ac02daaff" kindref="member">FlagStatus</ref><sp/><ref refid="group___a_d_c___exported___functions_1ga7a728f699b487c7fa1694d7424967122" kindref="member">ADC_GetCalibrationStatus</ref>(<ref refid="struct_a_d_c___type_def" kindref="compound">ADC_TypeDef</ref>*<sp/>ADCx);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___a_d_c___exported___functions_1ga694130a8d1ad3c8877b7eddb29611b30" kindref="member">ADC_SoftwareStartConvCmd</ref>(<ref refid="struct_a_d_c___type_def" kindref="compound">ADC_TypeDef</ref>*<sp/>ADCx,<sp/><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref><sp/>NewState);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><ref refid="group___exported__types_1ga89136caac2e14c55151f527ac02daaff" kindref="member">FlagStatus</ref><sp/><ref refid="group___a_d_c___exported___functions_1gaf1119583782ecbcec380efcb7eb74883" kindref="member">ADC_GetSoftwareStartConvStatus</ref>(<ref refid="struct_a_d_c___type_def" kindref="compound">ADC_TypeDef</ref>*<sp/>ADCx);</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___a_d_c___exported___functions_1ga6eb241ba82d67d1371136c9132083937" kindref="member">ADC_DiscModeChannelCountConfig</ref>(<ref refid="struct_a_d_c___type_def" kindref="compound">ADC_TypeDef</ref>*<sp/>ADCx,<sp/>uint8_t<sp/>Number);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___a_d_c___exported___functions_1ga1909649d10253ce88d986ffbb94a4be6" kindref="member">ADC_DiscModeCmd</ref>(<ref refid="struct_a_d_c___type_def" kindref="compound">ADC_TypeDef</ref>*<sp/>ADCx,<sp/><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref><sp/>NewState);</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___a_d_c___exported___functions_1gac531adb577b648d4bb8881f2ed627d52" kindref="member">ADC_RegularChannelConfig</ref>(<ref refid="struct_a_d_c___type_def" kindref="compound">ADC_TypeDef</ref>*<sp/>ADCx,<sp/>uint8_t<sp/>ADC_Channel,<sp/>uint8_t<sp/>Rank,<sp/>uint8_t<sp/>ADC_SampleTime);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___a_d_c___exported___functions_1ga3ae92d7940a16c898223374a5857f509" kindref="member">ADC_ExternalTrigConvCmd</ref>(<ref refid="struct_a_d_c___type_def" kindref="compound">ADC_TypeDef</ref>*<sp/>ADCx,<sp/><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref><sp/>NewState);</highlight></codeline>
<codeline lineno="450"><highlight class="normal">uint16_t<sp/><ref refid="group___a_d_c___exported___functions_1gaaf74221c285ec5dab5e66baf7bec6bd3" kindref="member">ADC_GetConversionValue</ref>(<ref refid="struct_a_d_c___type_def" kindref="compound">ADC_TypeDef</ref>*<sp/>ADCx);</highlight></codeline>
<codeline lineno="451"><highlight class="normal">uint32_t<sp/><ref refid="group___a_d_c___exported___functions_1gac5a4792dc29ef7ff6bfbce9f37e8a668" kindref="member">ADC_GetDualModeConversionValue</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___a_d_c___exported___functions_1ga1ff9c3b8e4bbdd2addfd227f1a506a66" kindref="member">ADC_AutoInjectedConvCmd</ref>(<ref refid="struct_a_d_c___type_def" kindref="compound">ADC_TypeDef</ref>*<sp/>ADCx,<sp/><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref><sp/>NewState);</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___a_d_c___exported___functions_1ga0b583b94183fa4ff287177b9ee808092" kindref="member">ADC_InjectedDiscModeCmd</ref>(<ref refid="struct_a_d_c___type_def" kindref="compound">ADC_TypeDef</ref>*<sp/>ADCx,<sp/><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref><sp/>NewState);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___a_d_c___exported___functions_1gafc02ce1e84e96b692adf085f61a0bca6" kindref="member">ADC_ExternalTrigInjectedConvConfig</ref>(<ref refid="struct_a_d_c___type_def" kindref="compound">ADC_TypeDef</ref>*<sp/>ADCx,<sp/>uint32_t<sp/>ADC_ExternalTrigInjecConv);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___a_d_c___exported___functions_1gad81d134c083d8f407c819e6f4722d553" kindref="member">ADC_ExternalTrigInjectedConvCmd</ref>(<ref refid="struct_a_d_c___type_def" kindref="compound">ADC_TypeDef</ref>*<sp/>ADCx,<sp/><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref><sp/>NewState);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___a_d_c___exported___functions_1ga5b141d5dbf5f417a11dfa622c8c149d3" kindref="member">ADC_SoftwareStartInjectedConvCmd</ref>(<ref refid="struct_a_d_c___type_def" kindref="compound">ADC_TypeDef</ref>*<sp/>ADCx,<sp/><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref><sp/>NewState);</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><ref refid="group___exported__types_1ga89136caac2e14c55151f527ac02daaff" kindref="member">FlagStatus</ref><sp/><ref refid="group___a_d_c___exported___functions_1ga8765f8835b8cfed13dce3d8d71767dcc" kindref="member">ADC_GetSoftwareStartInjectedConvCmdStatus</ref>(<ref refid="struct_a_d_c___type_def" kindref="compound">ADC_TypeDef</ref>*<sp/>ADCx);</highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___a_d_c___exported___functions_1gae2b44bff080184e1cf6f2cb6b9bb3e59" kindref="member">ADC_InjectedChannelConfig</ref>(<ref refid="struct_a_d_c___type_def" kindref="compound">ADC_TypeDef</ref>*<sp/>ADCx,<sp/>uint8_t<sp/>ADC_Channel,<sp/>uint8_t<sp/>Rank,<sp/>uint8_t<sp/>ADC_SampleTime);</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___a_d_c___exported___functions_1ga24eba90bc3ee955e07659a605011710d" kindref="member">ADC_InjectedSequencerLengthConfig</ref>(<ref refid="struct_a_d_c___type_def" kindref="compound">ADC_TypeDef</ref>*<sp/>ADCx,<sp/>uint8_t<sp/>Length);</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___a_d_c___exported___functions_1ga07a942613088ab3ecfc3d97a20475920" kindref="member">ADC_SetInjectedOffset</ref>(<ref refid="struct_a_d_c___type_def" kindref="compound">ADC_TypeDef</ref>*<sp/>ADCx,<sp/>uint8_t<sp/>ADC_InjectedChannel,<sp/>uint16_t<sp/>Offset);</highlight></codeline>
<codeline lineno="461"><highlight class="normal">uint16_t<sp/><ref refid="group___a_d_c___exported___functions_1ga1dea5ed24571a2e0ce4cbd41c9c1ec46" kindref="member">ADC_GetInjectedConversionValue</ref>(<ref refid="struct_a_d_c___type_def" kindref="compound">ADC_TypeDef</ref>*<sp/>ADCx,<sp/>uint8_t<sp/>ADC_InjectedChannel);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___a_d_c___exported___functions_1gad017d69bec6e497afd35ba25ea22d86e" kindref="member">ADC_AnalogWatchdogCmd</ref>(<ref refid="struct_a_d_c___type_def" kindref="compound">ADC_TypeDef</ref>*<sp/>ADCx,<sp/>uint32_t<sp/>ADC_AnalogWatchdog);</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___a_d_c___exported___functions_1ga79588d02aa8e4147f21cb90a4708366d" kindref="member">ADC_AnalogWatchdogThresholdsConfig</ref>(<ref refid="struct_a_d_c___type_def" kindref="compound">ADC_TypeDef</ref>*<sp/>ADCx,<sp/>uint16_t<sp/>HighThreshold,<sp/>uint16_t<sp/>LowThreshold);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___a_d_c___exported___functions_1ga03cef3d12292ffa2b8520524d5b0226c" kindref="member">ADC_AnalogWatchdogSingleChannelConfig</ref>(<ref refid="struct_a_d_c___type_def" kindref="compound">ADC_TypeDef</ref>*<sp/>ADCx,<sp/>uint8_t<sp/>ADC_Channel);</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___a_d_c___exported___functions_1ga848682e2d7d3de9f8cf03ffa4c11f0b5" kindref="member">ADC_TempSensorVrefintCmd</ref>(<ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref><sp/>NewState);</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><ref refid="group___exported__types_1ga89136caac2e14c55151f527ac02daaff" kindref="member">FlagStatus</ref><sp/><ref refid="group___a_d_c___exported___functions_1gaa12546e51ec905c90a3aada432bd4633" kindref="member">ADC_GetFlagStatus</ref>(<ref refid="struct_a_d_c___type_def" kindref="compound">ADC_TypeDef</ref>*<sp/>ADCx,<sp/>uint8_t<sp/>ADC_FLAG);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___a_d_c___exported___functions_1gaf34f36798f811b4a41321ea2d12118d4" kindref="member">ADC_ClearFlag</ref>(<ref refid="struct_a_d_c___type_def" kindref="compound">ADC_TypeDef</ref>*<sp/>ADCx,<sp/>uint8_t<sp/>ADC_FLAG);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><ref refid="group___exported__types_1gaacbd7ed539db0aacd973a0f6eca34074" kindref="member">ITStatus</ref><sp/><ref refid="group___a_d_c___exported___functions_1gaa1d3b910a83dbf14d4f68c8eef058612" kindref="member">ADC_GetITStatus</ref>(<ref refid="struct_a_d_c___type_def" kindref="compound">ADC_TypeDef</ref>*<sp/>ADCx,<sp/>uint16_t<sp/>ADC_IT);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___a_d_c___exported___functions_1ga601c6a67bd883eb631ecc7aa5e999b9c" kindref="member">ADC_ClearITPendingBit</ref>(<ref refid="struct_a_d_c___type_def" kindref="compound">ADC_TypeDef</ref>*<sp/>ADCx,<sp/>uint16_t<sp/>ADC_IT);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal">}</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight><highlight class="comment">//<sp/>[ILG]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>(<sp/>__GNUC__<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>GCC<sp/>diagnostic<sp/>pop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*__STM32F10x_ADC_H<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="comment">/*******************<sp/>(C)<sp/>COPYRIGHT<sp/>2011<sp/>STMicroelectronics<sp/>*****END<sp/>OF<sp/>FILE****/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_adc.h"/>
  </compounddef>
</doxygen>
