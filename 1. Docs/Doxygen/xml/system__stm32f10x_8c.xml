<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="system__stm32f10x_8c" kind="file" language="C++">
    <compoundname>system_stm32f10x.c</compoundname>
    <includes refid="stm32f10x_8h" local="yes">stm32f10x.h</includes>
    <incdepgraph>
      <node id="752">
        <label>system_stm32f10x.h</label>
        <link refid="system__stm32f10x_8h"/>
      </node>
      <node id="749">
        <label>stdint.h</label>
      </node>
      <node id="746">
        <label>C:/Users/anilj/Desktop/cmsis/sorc/system/src/cmsis/system_stm32f10x.c</label>
        <link refid="system__stm32f10x_8c"/>
        <childnode refid="747" relation="include">
        </childnode>
      </node>
      <node id="748">
        <label>core_cm3.h</label>
        <link refid="core__cm3_8h"/>
        <childnode refid="749" relation="include">
        </childnode>
        <childnode refid="750" relation="include">
        </childnode>
        <childnode refid="751" relation="include">
        </childnode>
      </node>
      <node id="751">
        <label>core_cmFunc.h</label>
        <link refid="core__cm_func_8h"/>
      </node>
      <node id="750">
        <label>core_cmInstr.h</label>
        <link refid="core__cm_instr_8h"/>
      </node>
      <node id="747">
        <label>stm32f10x.h</label>
        <link refid="stm32f10x_8h"/>
        <childnode refid="748" relation="include">
        </childnode>
        <childnode refid="752" relation="include">
        </childnode>
        <childnode refid="749" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="group___s_t_m32_f10x___system___private___defines_1ga69649cc38f34627cfb48b51062ebd390" prot="public" static="no">
        <name>SYSCLK_FREQ_72MHz</name>
        <initializer>72000000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>&lt; Uncomment the line corresponding to the desired System clock (SYSCLK) frequency (after reset the HSI is used as SYSCLK source)</para><para><heading level="1">IMPORTANT NOTE: </heading>
</para><para><orderedlist>
<listitem><para>After each device reset the HSI is used as System clock source.</para></listitem><listitem><para>Please make sure that the selected System clock doesn&apos;t exceed your device&apos;s maximum frequency.</para></listitem><listitem><para>If none of the define below is enabled, the HSI is used as System clock source.</para></listitem><listitem><para>The System clock configuration functions provided within this file assume that:<itemizedlist>
<listitem><para>For Low, Medium and High density Value line devices an external 8MHz crystal is used to drive the System clock.</para></listitem><listitem><para>For Low, Medium and High density devices an external 8MHz crystal is used to drive the System clock.</para></listitem><listitem><para>For Connectivity line devices an external 25MHz crystal is used to drive the System clock. If you are using different crystal you have to adapt those functions accordingly.Uncomment the following line if you need to use external SRAM mounted on STM3210E-EVAL board (STM32 High density and XL-density devices) or on STM32100E-EVAL board (STM32 High-density value line devices) as data memory Uncomment the following line if you need to relocate your vector Table in Internal SRAM. </para></listitem></itemizedlist>
</para></listitem></orderedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/cmsis/system_stm32f10x.c" line="115" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/cmsis/system_stm32f10x.c" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_t_m32_f10x___system___private___defines_1ga40e1495541cbb4acbe3f1819bd87a9fe" prot="public" static="no">
        <name>VECT_TAB_OFFSET</name>
        <initializer>0x0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Vector Table base offset field. This value must be a multiple of 0x200. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/cmsis/system_stm32f10x.c" line="129" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/cmsis/system_stm32f10x.c" bodystart="128" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="group___s_t_m32_f10x___system___private___variables_1gaa3cd3e43291e81e795d642b79b6088e6" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t SystemCoreClock</definition>
        <argsstring></argsstring>
        <name>SystemCoreClock</name>
        <initializer>= <ref refid="group___s_t_m32_f10x___system___private___defines_1ga69649cc38f34627cfb48b51062ebd390" kindref="member">SYSCLK_FREQ_72MHz</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>System Clock Frequency (Core Clock) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/cmsis/system_stm32f10x.c" line="163" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/cmsis/system_stm32f10x.c" bodystart="163" bodyend="-1"/>
        <referencedby refid="class_timer_1abb13e798f6d89b09fdc9182d64c7558b" compoundref="_timer_8h" startline="27" endline="31">Timer::start</referencedby>
        <referencedby refid="__startup_8c_1a0ddf1224851353fc92bfbff6f499fa97" compoundref="main_8cpp" startline="64" endline="98">main</referencedby>
        <referencedby refid="group___s_t_m32_f10x___system___private___functions_1gae0c36a9591fe6e9c45ecb21a794f0f0f" compoundref="system__stm32f10x_8c" startline="307" endline="413">SystemCoreClockUpdate</referencedby>
      </memberdef>
      <memberdef kind="variable" id="group___s_t_m32_f10x___system___private___variables_1gacdc3ef54c0704c90e69a8a84fb2d970d" prot="public" static="no" mutable="no">
        <type><ref refid="core__sc300_8h_1af63697ed9952cc71e1225efe205f6cd3" kindref="member">__I</ref> uint8_t</type>
        <definition>__I uint8_t AHBPrescTable[16]</definition>
        <argsstring>[16]</argsstring>
        <name>AHBPrescTable</name>
        <initializer>= {0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 6, 7, 8, 9}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/cmsis/system_stm32f10x.c" line="168" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/cmsis/system_stm32f10x.c" bodystart="168" bodyend="-1"/>
        <referencedby refid="group___s_t_m32_f10x___system___private___functions_1gae0c36a9591fe6e9c45ecb21a794f0f0f" compoundref="system__stm32f10x_8c" startline="307" endline="413">SystemCoreClockUpdate</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group___s_t_m32_f10x___system___private___functions_1ga1ee14ac28e60198cc998586807b51e4c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void SetSysClock</definition>
        <argsstring>(void)</argsstring>
        <name>SetSysClock</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Configures the System clock frequency, HCLK, PCLK2 and PCLK1 prescalers. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/cmsis/system_stm32f10x.c" line="177" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/cmsis/system_stm32f10x.c" bodystart="420" bodyend="438"/>
      </memberdef>
      <memberdef kind="function" id="group___s_t_m32_f10x___system___private___functions_1ga33cc07ebcb658e015d1a4460dea5cf58" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void SetSysClockTo72</definition>
        <argsstring>(void)</argsstring>
        <name>SetSysClockTo72</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Setup the external memory controller. Called in startup_stm32f10x.s before jump to __main. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para>Sets System clock frequency to 72MHz and configure HCLK, PCLK2 and PCLK1 prescalers. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function should be used only after reset. </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/cmsis/system_stm32f10x.c" line="190" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/cmsis/system_stm32f10x.c" bodystart="988" bodyend="1081"/>
      </memberdef>
      <memberdef kind="function" id="group___s_t_m32_f10x___system___private___functions_1ga93f514700ccf00d08dbdcff7f1224eb2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SystemInit</definition>
        <argsstring>(void)</argsstring>
        <name>SystemInit</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Setup the microcontroller system Initialize the Embedded Flash Interface, the PLL and update the SystemCoreClock variable. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This function should be used only after reset. </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/cmsis/system_stm32f10x.c" line="213" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/cmsis/system_stm32f10x.c" bodystart="213" bodyend="270"/>
        <references refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" compoundref="stm32f10x_8h" startline="1443">RCC</references>
        <referencedby refid="__initialize__hardware_8c_1a201468129b483039afc5a619e2d31097" compoundref="__initialize__hardware_8c" startline="34" endline="68">__attribute__</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___s_t_m32_f10x___system___private___functions_1gae0c36a9591fe6e9c45ecb21a794f0f0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SystemCoreClockUpdate</definition>
        <argsstring>(void)</argsstring>
        <name>SystemCoreClockUpdate</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Update SystemCoreClock variable according to Clock Register Values. The SystemCoreClock variable contains the core clock (HCLK), it can be used by the user application to setup the SysTick timer or configure other parameters. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Each time the core clock (HCLK) changes, this function must be called to update SystemCoreClock variable value. Otherwise, any configuration based on this variable will be incorrect.</para></simplesect>
<simplesect kind="note"><para>- The system frequency computed by this function is not the real frequency in the chip. It is calculated based on the predefined constant and the selected clock source:</para></simplesect>
<itemizedlist>
<listitem><para>If SYSCLK source is HSI, SystemCoreClock will contain the <ref refid="group___library__configuration__section_1gaaa8c76e274d0f6dd2cefb5d0b17fbc37" kindref="member">HSI_VALUE(*)</ref></para></listitem><listitem><para>If SYSCLK source is HSE, SystemCoreClock will contain the <ref refid="group___library__configuration__section_1gaeafcff4f57440c60e64812dddd13e7cb" kindref="member">HSE_VALUE(**)</ref></para></listitem><listitem><para>If SYSCLK source is PLL, SystemCoreClock will contain the <ref refid="group___library__configuration__section_1gaeafcff4f57440c60e64812dddd13e7cb" kindref="member">HSE_VALUE(**)</ref> or <ref refid="group___library__configuration__section_1gaaa8c76e274d0f6dd2cefb5d0b17fbc37" kindref="member">HSI_VALUE(*)</ref> multiplied by the PLL factors.</para></listitem></itemizedlist>
</para><para>(*) HSI_VALUE is a constant defined in stm32f1xx.h file (default value 8 MHz) but the real value may vary depending on the variations in voltage and temperature.</para><para>(**) HSE_VALUE is a constant defined in stm32f1xx.h file (default value 8 MHz or 25 MHz, depedning on the product used), user has to ensure that HSE_VALUE is same as the real frequency of the crystal used. Otherwise, this function may have wrong result.</para><para><itemizedlist>
<listitem><para>The result of this function could be not correct when using fractional value for HSE crystal. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/cmsis/system_stm32f10x.c" line="307" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/cmsis/system_stm32f10x.c" bodystart="307" bodyend="413"/>
        <references refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" compoundref="stm32f10x_8h" startline="1443">RCC</references>
        <references refid="group___peripheral___registers___bits___definition_1ga15bf2269500dc97e137315f44aa015c9" compoundref="stm32f10x_8h" startline="1710">RCC_CFGR_SWS</references>
        <references refid="group___s_t_m32_f10x___system___private___variables_1gaa3cd3e43291e81e795d642b79b6088e6" compoundref="system__stm32f10x_8c" startline="163">SystemCoreClock</references>
        <references refid="group___library__configuration__section_1gaaa8c76e274d0f6dd2cefb5d0b17fbc37" compoundref="stm32f10x_8h" startline="130">HSI_VALUE</references>
        <references refid="group___library__configuration__section_1gaeafcff4f57440c60e64812dddd13e7cb" compoundref="stm32f10x_8h" startline="119">HSE_VALUE</references>
        <references refid="group___peripheral___registers___bits___definition_1ga9735c088436b547fff3baae2bbaa0426" compoundref="stm32f10x_8h" startline="1774">RCC_CFGR_PLLMULL</references>
        <references refid="group___peripheral___registers___bits___definition_1gaba4a5dbbd286f07a97f5aa6e6f3f6a57" compoundref="stm32f10x_8h" startline="1769">RCC_CFGR_PLLSRC</references>
        <references refid="group___peripheral___registers___bits___definition_1ga39cb6bd06fb93eed1e2fe9da0297810a" compoundref="stm32f10x_8h" startline="1771">RCC_CFGR_PLLXTPRE</references>
        <references refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffa589b7d94a3d91d145720e2fed0eb3a05" compoundref="stm32f10x_8h" startline="519">RESET</references>
        <references refid="group___s_t_m32_f10x___system___private___variables_1gacdc3ef54c0704c90e69a8a84fb2d970d" compoundref="system__stm32f10x_8c" startline="168">AHBPrescTable</references>
        <references refid="group___peripheral___registers___bits___definition_1gafe10e66938644ee8054a2426ff23efea" compoundref="stm32f10x_8h" startline="1719">RCC_CFGR_HPRE</references>
        <referencedby refid="__initialize__hardware_8c_1a201468129b483039afc5a619e2d31097" compoundref="__initialize__hardware_8c" startline="34" endline="68">__attribute__</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>CMSIS Cortex-M3 Device Peripheral Access Layer System Source File. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>MCD Application Team </para></simplesect>
<simplesect kind="version"><para>V3.5.0 </para></simplesect>
<simplesect kind="date"><para>11-March-2011<orderedlist>
<listitem><para>This file provides two functions and one global variable to be called from user application:<itemizedlist>
<listitem><para><ref refid="group___s_t_m32_f10x___system___private___functions_1ga93f514700ccf00d08dbdcff7f1224eb2" kindref="member">SystemInit()</ref>: Setups the system clock (System clock source, PLL Multiplier factors, AHB/APBx prescalers and Flash settings). This function is called at startup just after reset and before branch to main program. This call is made inside the &quot;startup_stm32f10x_xx.s&quot; file.</para></listitem><listitem><para>SystemCoreClock variable: Contains the core clock (HCLK), it can be used by the user application to setup the SysTick timer or configure other parameters.</para></listitem><listitem><para><ref refid="group___s_t_m32_f10x___system___private___functions_1gae0c36a9591fe6e9c45ecb21a794f0f0f" kindref="member">SystemCoreClockUpdate()</ref>: Updates the variable SystemCoreClock and must be called whenever the core clock is changed during program execution.</para></listitem></itemizedlist>
</para></listitem><listitem><para>After each device reset the HSI (8 MHz) is used as system clock source. Then <ref refid="group___s_t_m32_f10x___system___private___functions_1ga93f514700ccf00d08dbdcff7f1224eb2" kindref="member">SystemInit()</ref> function is called, in &quot;startup_stm32f10x_xx.s&quot; file, to configure the system clock before to branch to main program.</para></listitem><listitem><para>If the system clock source selected by user fails to startup, the <ref refid="group___s_t_m32_f10x___system___private___functions_1ga93f514700ccf00d08dbdcff7f1224eb2" kindref="member">SystemInit()</ref> function will do nothing and HSI still used as system clock source. User can add some code to deal with this issue inside the SetSysClock() function.</para></listitem><listitem><para>The default value of HSE crystal is set to 8 MHz (or 25 MHz, depedning on the product used), refer to &quot;HSE_VALUE&quot; define in &quot;stm32f10x.h&quot; file. When HSE is used as system clock source, directly or through PLL, and you are using different crystal you have to adapt the HSE value to your own configuration.</para></listitem></orderedlist>
</para></simplesect>
<simplesect kind="attention"><para></para></simplesect>
THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.</para><para><heading level="2"><center><copy/> COPYRIGHT 2011 STMicroelectronics</center></heading>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="65"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="stm32f10x_8h" kindref="compound">stm32f10x.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="preprocessor">#if<sp/>defined<sp/>(STM32F10X_LD_VL)<sp/>||<sp/>(defined<sp/>STM32F10X_MD_VL)<sp/>||<sp/>(defined<sp/>STM32F10X_HD_VL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>#define<sp/>SYSCLK_FREQ_HSE<sp/><sp/><sp/><sp/>HSE_VALUE<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#define<sp/>SYSCLK_FREQ_24MHz<sp/><sp/>24000000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>#define<sp/>SYSCLK_FREQ_HSE<sp/><sp/><sp/><sp/>HSE_VALUE<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>#define<sp/>SYSCLK_FREQ_24MHz<sp/><sp/>24000000<sp/>*/</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>#define<sp/>SYSCLK_FREQ_36MHz<sp/><sp/>36000000<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>#define<sp/>SYSCLK_FREQ_48MHz<sp/><sp/>48000000<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>#define<sp/>SYSCLK_FREQ_56MHz<sp/><sp/>56000000<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115" refid="group___s_t_m32_f10x___system___private___defines_1ga69649cc38f34627cfb48b51062ebd390" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SYSCLK_FREQ_72MHz<sp/><sp/>72000000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="preprocessor">#if<sp/>defined<sp/>(STM32F10X_HD)<sp/>||<sp/>(defined<sp/>STM32F10X_XL)<sp/>||<sp/>(defined<sp/>STM32F10X_HD_VL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>#define<sp/>DATA_IN_ExtSRAM<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="comment">/*<sp/>#define<sp/>VECT_TAB_SRAM<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128" refid="group___s_t_m32_f10x___system___private___defines_1ga40e1495541cbb4acbe3f1819bd87a9fe" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VECT_TAB_OFFSET<sp/><sp/>0x0<sp/></highlight></codeline>
<codeline lineno="148"><highlight class="preprocessor"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="149"><highlight class="comment">*<sp/><sp/>Clock<sp/>Definitions</highlight></codeline>
<codeline lineno="150"><highlight class="comment">*******************************************************************************/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SYSCLK_FREQ_HSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="group___s_t_m32_f10x___system___private___variables_1gaa3cd3e43291e81e795d642b79b6088e6" kindref="member">SystemCoreClock</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>SYSCLK_FREQ_HSE;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="153"><highlight class="preprocessor">#elif<sp/>defined<sp/>SYSCLK_FREQ_24MHz</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="group___s_t_m32_f10x___system___private___variables_1gaa3cd3e43291e81e795d642b79b6088e6" kindref="member">SystemCoreClock</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>SYSCLK_FREQ_24MHz;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="155"><highlight class="preprocessor">#elif<sp/>defined<sp/>SYSCLK_FREQ_36MHz</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="group___s_t_m32_f10x___system___private___variables_1gaa3cd3e43291e81e795d642b79b6088e6" kindref="member">SystemCoreClock</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>SYSCLK_FREQ_36MHz;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="157"><highlight class="preprocessor">#elif<sp/>defined<sp/>SYSCLK_FREQ_48MHz</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="group___s_t_m32_f10x___system___private___variables_1gaa3cd3e43291e81e795d642b79b6088e6" kindref="member">SystemCoreClock</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>SYSCLK_FREQ_48MHz;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="159"><highlight class="preprocessor">#elif<sp/>defined<sp/>SYSCLK_FREQ_56MHz</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="group___s_t_m32_f10x___system___private___variables_1gaa3cd3e43291e81e795d642b79b6088e6" kindref="member">SystemCoreClock</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>SYSCLK_FREQ_56MHz;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="161"><highlight class="preprocessor">#elif<sp/>defined<sp/>SYSCLK_FREQ_72MHz</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="group___s_t_m32_f10x___system___private___variables_1gaa3cd3e43291e81e795d642b79b6088e6" kindref="member">SystemCoreClock</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="group___s_t_m32_f10x___system___private___defines_1ga69649cc38f34627cfb48b51062ebd390" kindref="member">SYSCLK_FREQ_72MHz</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="163" refid="group___s_t_m32_f10x___system___private___variables_1gaa3cd3e43291e81e795d642b79b6088e6" refkind="member"><highlight class="preprocessor">#else<sp/></highlight></codeline>
<codeline lineno="164"><highlight class="preprocessor"><sp/><sp/>uint32_t<sp/>SystemCoreClock<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>HSI_VALUE;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="165"><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><ref refid="core__cm0_8h_1af63697ed9952cc71e1225efe205f6cd3" kindref="member">__I</ref><sp/>uint8_t<sp/><ref refid="group___s_t_m32_f10x___system___private___variables_1gacdc3ef54c0704c90e69a8a84fb2d970d" kindref="member">AHBPrescTable</ref>[16]<sp/>=<sp/>{0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>1,<sp/>2,<sp/>3,<sp/>4,<sp/>6,<sp/>7,<sp/>8,<sp/>9};</highlight></codeline>
<codeline lineno="176"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetSysClock(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SYSCLK_FREQ_HSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetSysClockToHSE(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined<sp/>SYSCLK_FREQ_24MHz</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetSysClockTo24(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined<sp/>SYSCLK_FREQ_36MHz</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetSysClockTo36(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined<sp/>SYSCLK_FREQ_48MHz</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetSysClockTo48(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined<sp/>SYSCLK_FREQ_56MHz</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetSysClockTo56(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);<sp/><sp/></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined<sp/>SYSCLK_FREQ_72MHz</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetSysClockTo72(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DATA_IN_ExtSRAM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SystemInit_ExtMemCtl(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);<sp/></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>DATA_IN_ExtSRAM<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___s_t_m32_f10x___system___private___functions_1ga93f514700ccf00d08dbdcff7f1224eb2" kindref="member">SystemInit</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="213" refid="group___s_t_m32_f10x___system___private___functions_1ga93f514700ccf00d08dbdcff7f1224eb2" refkind="member"><highlight class="normal">{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>the<sp/>RCC<sp/>clock<sp/>configuration<sp/>to<sp/>the<sp/>default<sp/>reset<sp/>state(for<sp/>debug<sp/>purpose)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>HSION<sp/>bit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CR<sp/>|=<sp/>(uint32_t)0x00000001;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>SW,<sp/>HPRE,<sp/>PPRE1,<sp/>PPRE2,<sp/>ADCPRE<sp/>and<sp/>MCO<sp/>bits<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>STM32F10X_CL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR<sp/>&amp;=<sp/>(uint32_t)0xF8FF0000;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR<sp/>&amp;=<sp/>(uint32_t)0xF0FF0000;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>STM32F10X_CL<sp/>*/</highlight><highlight class="preprocessor"><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>HSEON,<sp/>CSSON<sp/>and<sp/>PLLON<sp/>bits<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CR<sp/>&amp;=<sp/>(uint32_t)0xFEF6FFFF;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>HSEBYP<sp/>bit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CR<sp/>&amp;=<sp/>(uint32_t)0xFFFBFFFF;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>PLLSRC,<sp/>PLLXTPRE,<sp/>PLLMUL<sp/>and<sp/>USBPRE/OTGFSPRE<sp/>bits<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR<sp/>&amp;=<sp/>(uint32_t)0xFF80FFFF;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>STM32F10X_CL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>PLL2ON<sp/>and<sp/>PLL3ON<sp/>bits<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CR<sp/>&amp;=<sp/>(uint32_t)0xEBFFFFFF;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Disable<sp/>all<sp/>interrupts<sp/>and<sp/>clear<sp/>pending<sp/>bits<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CIR<sp/>=<sp/>0x00FF0000;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>CFGR2<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR2<sp/>=<sp/>0x00000000;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined<sp/>(STM32F10X_LD_VL)<sp/>||<sp/>defined<sp/>(STM32F10X_MD_VL)<sp/>||<sp/>(defined<sp/>STM32F10X_HD_VL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Disable<sp/>all<sp/>interrupts<sp/>and<sp/>clear<sp/>pending<sp/>bits<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CIR<sp/>=<sp/>0x009F0000;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>CFGR2<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR2<sp/>=<sp/>0x00000000;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Disable<sp/>all<sp/>interrupts<sp/>and<sp/>clear<sp/>pending<sp/>bits<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CIR<sp/>=<sp/>0x009F0000;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>STM32F10X_CL<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>(STM32F10X_HD)<sp/>||<sp/>(defined<sp/>STM32F10X_XL)<sp/>||<sp/>(defined<sp/>STM32F10X_HD_VL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#ifdef<sp/>DATA_IN_ExtSRAM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>SystemInit_ExtMemCtl();<sp/></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif<sp/></highlight><highlight class="comment">/*<sp/>DATA_IN_ExtSRAM<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Configure<sp/>the<sp/>System<sp/>clock<sp/>frequency,<sp/>HCLK,<sp/>PCLK2<sp/>and<sp/>PCLK1<sp/>prescalers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Configure<sp/>the<sp/>Flash<sp/>Latency<sp/>cycles<sp/>and<sp/>enable<sp/>prefetch<sp/>buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/>SetSysClock();</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>VECT_TAB_SRAM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><ref refid="group___c_m_s_i_s__core__base_1gaaaf6477c2bde2f00f99e3c2fd1060b01" kindref="member">SCB</ref>-&gt;VTOR<sp/>=<sp/><ref refid="group___peripheral__memory__map_1ga05e8f3d2e5868754a7cd88614955aecc" kindref="member">SRAM_BASE</ref><sp/>|<sp/><ref refid="group___s_t_m32_f10x___system___private___defines_1ga40e1495541cbb4acbe3f1819bd87a9fe" kindref="member">VECT_TAB_OFFSET</ref>;<sp/></highlight><highlight class="comment">/*<sp/>Vector<sp/>Table<sp/>Relocation<sp/>in<sp/>Internal<sp/>SRAM.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><ref refid="group___c_m_s_i_s__core__base_1gaaaf6477c2bde2f00f99e3c2fd1060b01" kindref="member">SCB</ref>-&gt;VTOR<sp/>=<sp/><ref refid="group___peripheral__memory__map_1ga23a9099a5f8fc9c6e253c0eecb2be8db" kindref="member">FLASH_BASE</ref><sp/>|<sp/><ref refid="group___s_t_m32_f10x___system___private___defines_1ga40e1495541cbb4acbe3f1819bd87a9fe" kindref="member">VECT_TAB_OFFSET</ref>;<sp/></highlight><highlight class="comment">/*<sp/>Vector<sp/>Table<sp/>Relocation<sp/>in<sp/>Internal<sp/>FLASH.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal">}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___s_t_m32_f10x___system___private___functions_1gae0c36a9591fe6e9c45ecb21a794f0f0f" kindref="member">SystemCoreClockUpdate</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="307" refid="group___s_t_m32_f10x___system___private___functions_1gae0c36a9591fe6e9c45ecb21a794f0f0f" refkind="member"><highlight class="normal">{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/>uint32_t<sp/>tmp<sp/>=<sp/>0,<sp/>pllmull<sp/>=<sp/>0,<sp/>pllsource<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/><sp/>STM32F10X_CL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/>uint32_t<sp/>prediv1source<sp/>=<sp/>0,<sp/>prediv1factor<sp/>=<sp/>0,<sp/>prediv2factor<sp/>=<sp/>0,<sp/>pll2mull<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>STM32F10X_CL<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>(STM32F10X_LD_VL)<sp/>||<sp/>defined<sp/>(STM32F10X_MD_VL)<sp/>||<sp/>(defined<sp/>STM32F10X_HD_VL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/>uint32_t<sp/>prediv1factor<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>STM32F10X_LD_VL<sp/>or<sp/>STM32F10X_MD_VL<sp/>or<sp/>STM32F10X_HD_VL<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>SYSCLK<sp/>source<sp/>-------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/>tmp<sp/>=<sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR<sp/>&amp;<sp/><ref refid="group___peripheral___registers___bits___definition_1ga15bf2269500dc97e137315f44aa015c9" kindref="member">RCC_CFGR_SWS</ref>;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(tmp)</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x00:<sp/><sp/></highlight><highlight class="comment">/*<sp/>HSI<sp/>used<sp/>as<sp/>system<sp/>clock<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___s_t_m32_f10x___system___private___variables_1gaa3cd3e43291e81e795d642b79b6088e6" kindref="member">SystemCoreClock</ref><sp/>=<sp/><ref refid="group___library__configuration__section_1gaaa8c76e274d0f6dd2cefb5d0b17fbc37" kindref="member">HSI_VALUE</ref>;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x04:<sp/><sp/></highlight><highlight class="comment">/*<sp/>HSE<sp/>used<sp/>as<sp/>system<sp/>clock<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___s_t_m32_f10x___system___private___variables_1gaa3cd3e43291e81e795d642b79b6088e6" kindref="member">SystemCoreClock</ref><sp/>=<sp/><ref refid="group___library__configuration__section_1gaeafcff4f57440c60e64812dddd13e7cb" kindref="member">HSE_VALUE</ref>;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x08:<sp/><sp/></highlight><highlight class="comment">/*<sp/>PLL<sp/>used<sp/>as<sp/>system<sp/>clock<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>PLL<sp/>clock<sp/>source<sp/>and<sp/>multiplication<sp/>factor<sp/>----------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pllmull<sp/>=<sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR<sp/>&amp;<sp/><ref refid="group___peripheral___registers___bits___definition_1ga9735c088436b547fff3baae2bbaa0426" kindref="member">RCC_CFGR_PLLMULL</ref>;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pllsource<sp/>=<sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR<sp/>&amp;<sp/><ref refid="group___peripheral___registers___bits___definition_1gaba4a5dbbd286f07a97f5aa6e6f3f6a57" kindref="member">RCC_CFGR_PLLSRC</ref>;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>STM32F10X_CL<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pllmull<sp/>=<sp/>(<sp/>pllmull<sp/>&gt;&gt;<sp/>18)<sp/>+<sp/>2;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pllsource<sp/>==<sp/>0x00)</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>HSI<sp/>oscillator<sp/>clock<sp/>divided<sp/>by<sp/>2<sp/>selected<sp/>as<sp/>PLL<sp/>clock<sp/>entry<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___s_t_m32_f10x___system___private___variables_1gaa3cd3e43291e81e795d642b79b6088e6" kindref="member">SystemCoreClock</ref><sp/>=<sp/>(<ref refid="group___library__configuration__section_1gaaa8c76e274d0f6dd2cefb5d0b17fbc37" kindref="member">HSI_VALUE</ref><sp/>&gt;&gt;<sp/>1)<sp/>*<sp/>pllmull;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#if<sp/>defined<sp/>(STM32F10X_LD_VL)<sp/>||<sp/>defined<sp/>(STM32F10X_MD_VL)<sp/>||<sp/>(defined<sp/>STM32F10X_HD_VL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prediv1factor<sp/>=<sp/>(<ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR2<sp/>&amp;<sp/>RCC_CFGR2_PREDIV1)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>HSE<sp/>oscillator<sp/>clock<sp/>selected<sp/>as<sp/>PREDIV1<sp/>clock<sp/>entry<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___s_t_m32_f10x___system___private___variables_1gaa3cd3e43291e81e795d642b79b6088e6" kindref="member">SystemCoreClock</ref><sp/>=<sp/>(<ref refid="group___library__configuration__section_1gaeafcff4f57440c60e64812dddd13e7cb" kindref="member">HSE_VALUE</ref><sp/>/<sp/>prediv1factor)<sp/>*<sp/>pllmull;<sp/></highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>HSE<sp/>selected<sp/>as<sp/>PLL<sp/>clock<sp/>entry<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR<sp/>&amp;<sp/><ref refid="group___peripheral___registers___bits___definition_1ga39cb6bd06fb93eed1e2fe9da0297810a" kindref="member">RCC_CFGR_PLLXTPRE</ref>)<sp/>!=<sp/>(uint32_t)<ref refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffa589b7d94a3d91d145720e2fed0eb3a05" kindref="member">RESET</ref>)</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="comment">/*<sp/>HSE<sp/>oscillator<sp/>clock<sp/>divided<sp/>by<sp/>2<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___s_t_m32_f10x___system___private___variables_1gaa3cd3e43291e81e795d642b79b6088e6" kindref="member">SystemCoreClock</ref><sp/>=<sp/>(<ref refid="group___library__configuration__section_1gaeafcff4f57440c60e64812dddd13e7cb" kindref="member">HSE_VALUE</ref><sp/>&gt;&gt;<sp/>1)<sp/>*<sp/>pllmull;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___s_t_m32_f10x___system___private___variables_1gaa3cd3e43291e81e795d642b79b6088e6" kindref="member">SystemCoreClock</ref><sp/>=<sp/><ref refid="group___library__configuration__section_1gaeafcff4f57440c60e64812dddd13e7cb" kindref="member">HSE_VALUE</ref><sp/>*<sp/>pllmull;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pllmull<sp/>=<sp/>pllmull<sp/>&gt;&gt;<sp/>18;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pllmull<sp/>!=<sp/>0x0D)</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pllmull<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">/*<sp/>PLL<sp/>multiplication<sp/>factor<sp/>=<sp/>PLL<sp/>input<sp/>clock<sp/>*<sp/>6.5<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pllmull<sp/>=<sp/>13<sp/>/<sp/>2;<sp/></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pllsource<sp/>==<sp/>0x00)</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>HSI<sp/>oscillator<sp/>clock<sp/>divided<sp/>by<sp/>2<sp/>selected<sp/>as<sp/>PLL<sp/>clock<sp/>entry<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___s_t_m32_f10x___system___private___variables_1gaa3cd3e43291e81e795d642b79b6088e6" kindref="member">SystemCoreClock</ref><sp/>=<sp/>(<ref refid="group___library__configuration__section_1gaaa8c76e274d0f6dd2cefb5d0b17fbc37" kindref="member">HSI_VALUE</ref><sp/>&gt;&gt;<sp/>1)<sp/>*<sp/>pllmull;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="comment">/*<sp/>PREDIV1<sp/>selected<sp/>as<sp/>PLL<sp/>clock<sp/>entry<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>PREDIV1<sp/>clock<sp/>source<sp/>and<sp/>division<sp/>factor<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prediv1source<sp/>=<sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR2<sp/>&amp;<sp/>RCC_CFGR2_PREDIV1SRC;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prediv1factor<sp/>=<sp/>(<ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR2<sp/>&amp;<sp/>RCC_CFGR2_PREDIV1)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(prediv1source<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>HSE<sp/>oscillator<sp/>clock<sp/>selected<sp/>as<sp/>PREDIV1<sp/>clock<sp/>entry<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___s_t_m32_f10x___system___private___variables_1gaa3cd3e43291e81e795d642b79b6088e6" kindref="member">SystemCoreClock</ref><sp/>=<sp/>(<ref refid="group___library__configuration__section_1gaeafcff4f57440c60e64812dddd13e7cb" kindref="member">HSE_VALUE</ref><sp/>/<sp/>prediv1factor)<sp/>*<sp/>pllmull;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="comment">/*<sp/>PLL2<sp/>clock<sp/>selected<sp/>as<sp/>PREDIV1<sp/>clock<sp/>entry<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>PREDIV2<sp/>division<sp/>factor<sp/>and<sp/>PLL2<sp/>multiplication<sp/>factor<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prediv2factor<sp/>=<sp/>((<ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR2<sp/>&amp;<sp/>RCC_CFGR2_PREDIV2)<sp/>&gt;&gt;<sp/>4)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pll2mull<sp/>=<sp/>((<ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR2<sp/>&amp;<sp/>RCC_CFGR2_PLL2MUL)<sp/>&gt;&gt;<sp/>8<sp/>)<sp/>+<sp/>2;<sp/></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___s_t_m32_f10x___system___private___variables_1gaa3cd3e43291e81e795d642b79b6088e6" kindref="member">SystemCoreClock</ref><sp/>=<sp/>(((<ref refid="group___library__configuration__section_1gaeafcff4f57440c60e64812dddd13e7cb" kindref="member">HSE_VALUE</ref><sp/>/<sp/>prediv2factor)<sp/>*<sp/>pll2mull)<sp/>/<sp/>prediv1factor)<sp/>*<sp/>pllmull;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>STM32F10X_CL<sp/>*/</highlight><highlight class="preprocessor"><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___s_t_m32_f10x___system___private___variables_1gaa3cd3e43291e81e795d642b79b6088e6" kindref="member">SystemCoreClock</ref><sp/>=<sp/><ref refid="group___library__configuration__section_1gaaa8c76e274d0f6dd2cefb5d0b17fbc37" kindref="member">HSI_VALUE</ref>;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Compute<sp/>HCLK<sp/>clock<sp/>frequency<sp/>----------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>HCLK<sp/>prescaler<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/>tmp<sp/>=<sp/><ref refid="group___s_t_m32_f10x___system___private___variables_1gacdc3ef54c0704c90e69a8a84fb2d970d" kindref="member">AHBPrescTable</ref>[((<ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR<sp/>&amp;<sp/><ref refid="group___peripheral___registers___bits___definition_1gafe10e66938644ee8054a2426ff23efea" kindref="member">RCC_CFGR_HPRE</ref>)<sp/>&gt;&gt;<sp/>4)];</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>HCLK<sp/>clock<sp/>frequency<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><ref refid="group___s_t_m32_f10x___system___private___variables_1gaa3cd3e43291e81e795d642b79b6088e6" kindref="member">SystemCoreClock</ref><sp/>&gt;&gt;=<sp/>tmp;<sp/><sp/></highlight></codeline>
<codeline lineno="412"><highlight class="normal">}</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetSysClock(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="420"><highlight class="normal">{</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SYSCLK_FREQ_HSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/>SetSysClockToHSE();</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined<sp/>SYSCLK_FREQ_24MHz</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/>SetSysClockTo24();</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined<sp/>SYSCLK_FREQ_36MHz</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/>SetSysClockTo36();</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined<sp/>SYSCLK_FREQ_48MHz</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/>SetSysClockTo48();</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined<sp/>SYSCLK_FREQ_56MHz</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/>SetSysClockTo56();<sp/><sp/></highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined<sp/>SYSCLK_FREQ_72MHz</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/>SetSysClockTo72();</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>none<sp/>of<sp/>the<sp/>define<sp/>above<sp/>is<sp/>enabled,<sp/>the<sp/>HSI<sp/>is<sp/>used<sp/>as<sp/>System<sp/>clock</highlight></codeline>
<codeline lineno="436"><highlight class="comment"><sp/><sp/><sp/><sp/>source<sp/>(default<sp/>after<sp/>reset)<sp/>*/</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="437"><highlight class="normal">}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="preprocessor">#ifdef<sp/>DATA_IN_ExtSRAM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SystemInit_ExtMemCtl(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/></highlight></codeline>
<codeline lineno="456"><highlight class="normal">{</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Enable<sp/>FSMC<sp/>clock<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;AHBENR<sp/>=<sp/>0x00000114;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Enable<sp/>GPIOD,<sp/>GPIOE,<sp/>GPIOF<sp/>and<sp/>GPIOG<sp/>clocks<sp/>*/</highlight><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;APB2ENR<sp/>=<sp/>0x000001E0;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>---------------<sp/><sp/>SRAM<sp/>Data<sp/>lines,<sp/>NOE<sp/>and<sp/>NWE<sp/>configuration<sp/>---------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight><highlight class="comment">/*----------------<sp/><sp/>SRAM<sp/>Address<sp/>lines<sp/>configuration<sp/>-------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight><highlight class="comment">/*----------------<sp/><sp/>NOE<sp/>and<sp/>NWE<sp/>configuration<sp/>--------------------------------*/</highlight><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight><highlight class="comment">/*----------------<sp/><sp/>NE3<sp/>configuration<sp/>----------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight><highlight class="comment">/*----------------<sp/><sp/>NBL0,<sp/>NBL1<sp/>configuration<sp/>---------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><ref refid="group___peripheral__declaration_1ga7580b1a929ea9df59725ba9c18eba6ac" kindref="member">GPIOD</ref>-&gt;CRL<sp/>=<sp/>0x44BB44BB;<sp/><sp/></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><ref refid="group___peripheral__declaration_1ga7580b1a929ea9df59725ba9c18eba6ac" kindref="member">GPIOD</ref>-&gt;CRH<sp/>=<sp/>0xBBBBBBBB;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><ref refid="group___peripheral__declaration_1gae04bdb5e8acc47cab1d0532e6b0d0763" kindref="member">GPIOE</ref>-&gt;CRL<sp/>=<sp/>0xB44444BB;<sp/><sp/></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><ref refid="group___peripheral__declaration_1gae04bdb5e8acc47cab1d0532e6b0d0763" kindref="member">GPIOE</ref>-&gt;CRH<sp/>=<sp/>0xBBBBBBBB;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><ref refid="group___peripheral__declaration_1ga43c3022dede7c9db7a58d3c3409dbc8d" kindref="member">GPIOF</ref>-&gt;CRL<sp/>=<sp/>0x44BBBBBB;<sp/><sp/></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><ref refid="group___peripheral__declaration_1ga43c3022dede7c9db7a58d3c3409dbc8d" kindref="member">GPIOF</ref>-&gt;CRH<sp/>=<sp/>0xBBBB4444;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><ref refid="group___peripheral__declaration_1ga02a2a23a32f9b02166a8c64012842414" kindref="member">GPIOG</ref>-&gt;CRL<sp/>=<sp/>0x44BBBBBB;<sp/><sp/></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><ref refid="group___peripheral__declaration_1ga02a2a23a32f9b02166a8c64012842414" kindref="member">GPIOG</ref>-&gt;CRH<sp/>=<sp/>0x44444B44;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight><highlight class="comment">/*----------------<sp/><sp/>FSMC<sp/>Configuration<sp/>---------------------------------------*/</highlight><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight><highlight class="comment">/*----------------<sp/><sp/>Enable<sp/>FSMC<sp/>Bank1_SRAM<sp/>Bank<sp/>------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><ref refid="group___peripheral__declaration_1ga2a759bad07fe730c99f9e1490e646220" kindref="member">FSMC_Bank1</ref>-&gt;BTCR[4]<sp/>=<sp/>0x00001011;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><ref refid="group___peripheral__declaration_1ga2a759bad07fe730c99f9e1490e646220" kindref="member">FSMC_Bank1</ref>-&gt;BTCR[5]<sp/>=<sp/>0x00000200;</highlight></codeline>
<codeline lineno="489"><highlight class="normal">}</highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>DATA_IN_ExtSRAM<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SYSCLK_FREQ_HSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetSysClockToHSE(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="501"><highlight class="normal">{</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><ref refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" kindref="member">__IO</ref><sp/>uint32_t<sp/>StartUpCounter<sp/>=<sp/>0,<sp/>HSEStatus<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>SYSCLK,<sp/>HCLK,<sp/>PCLK2<sp/>and<sp/>PCLK1<sp/>configuration<sp/>---------------------------*/</highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Enable<sp/>HSE<sp/>*/</highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CR<sp/>|=<sp/>((uint32_t)<ref refid="group___peripheral___registers___bits___definition_1gadb8228c9020595b4cf9995137b8c9a7d" kindref="member">RCC_CR_HSEON</ref>);</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Wait<sp/>till<sp/>HSE<sp/>is<sp/>ready<sp/>and<sp/>if<sp/>Time<sp/>out<sp/>is<sp/>reached<sp/>exit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/>HSEStatus<sp/>=<sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CR<sp/>&amp;<sp/><ref refid="group___peripheral___registers___bits___definition_1ga86a34e00182c83409d89ff566cb02cc4" kindref="member">RCC_CR_HSERDY</ref>;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/>StartUpCounter++;<sp/><sp/></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">((HSEStatus<sp/>==<sp/>0)<sp/>&amp;&amp;<sp/>(StartUpCounter<sp/>!=<sp/><ref refid="group___library__configuration__section_1ga68ecbc9b0a1a40a1ec9d18d5e9747c4f" kindref="member">HSE_STARTUP_TIMEOUT</ref>));</highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CR<sp/>&amp;<sp/><ref refid="group___peripheral___registers___bits___definition_1ga86a34e00182c83409d89ff566cb02cc4" kindref="member">RCC_CR_HSERDY</ref>)<sp/>!=<sp/><ref refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffa589b7d94a3d91d145720e2fed0eb3a05" kindref="member">RESET</ref>)</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/>HSEStatus<sp/>=<sp/>(uint32_t)0x01;</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/>HSEStatus<sp/>=<sp/>(uint32_t)0x00;</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/>}<sp/><sp/></highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(HSEStatus<sp/>==<sp/>(uint32_t)0x01)</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined<sp/>STM32F10X_LD_VL<sp/>&amp;&amp;<sp/>!defined<sp/>STM32F10X_MD_VL<sp/>&amp;&amp;<sp/>!defined<sp/>STM32F10X_HD_VL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Enable<sp/>Prefetch<sp/>Buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga844ea28ba1e0a5a0e497f16b61ea306b" kindref="member">FLASH</ref>-&gt;ACR<sp/>|=<sp/><ref refid="group___peripheral___registers___bits___definition_1ga5285ab198307213dce0629f9b7c6fc86" kindref="member">FLASH_ACR_PRFTBE</ref>;</highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Flash<sp/>0<sp/>wait<sp/>state<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga844ea28ba1e0a5a0e497f16b61ea306b" kindref="member">FLASH</ref>-&gt;ACR<sp/>&amp;=<sp/>(uint32_t)((uint32_t)~<ref refid="group___peripheral___registers___bits___definition_1gaef5e44cbb084160a6004ca9951ec7318" kindref="member">FLASH_ACR_LATENCY</ref>);</highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>STM32F10X_CL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga844ea28ba1e0a5a0e497f16b61ea306b" kindref="member">FLASH</ref>-&gt;ACR<sp/>|=<sp/>(uint32_t)<ref refid="group___peripheral___registers___bits___definition_1ga6560c1d58df18c8740d70591bf7bc1ad" kindref="member">FLASH_ACR_LATENCY_0</ref>;</highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group___library__configuration__section_1gaeafcff4f57440c60e64812dddd13e7cb" kindref="member">HSE_VALUE</ref><sp/>&lt;=<sp/>24000000)</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga844ea28ba1e0a5a0e497f16b61ea306b" kindref="member">FLASH</ref>-&gt;ACR<sp/>|=<sp/>(uint32_t)<ref refid="group___peripheral___registers___bits___definition_1ga6560c1d58df18c8740d70591bf7bc1ad" kindref="member">FLASH_ACR_LATENCY_0</ref>;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga844ea28ba1e0a5a0e497f16b61ea306b" kindref="member">FLASH</ref>-&gt;ACR<sp/>|=<sp/>(uint32_t)<ref refid="group___peripheral___registers___bits___definition_1ga85155f5d3f34ebe83989513793498c72" kindref="member">FLASH_ACR_LATENCY_1</ref>;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>STM32F10X_CL<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>HCLK<sp/>=<sp/>SYSCLK<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR<sp/>|=<sp/>(uint32_t)<ref refid="group___peripheral___registers___bits___definition_1ga2b7d7f29b09a49c31404fc0d44645c84" kindref="member">RCC_CFGR_HPRE_DIV1</ref>;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>PCLK2<sp/>=<sp/>HCLK<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR<sp/>|=<sp/>(uint32_t)<ref refid="group___peripheral___registers___bits___definition_1ga247aebf1999a38ea07785558d277bb1a" kindref="member">RCC_CFGR_PPRE2_DIV1</ref>;</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>PCLK1<sp/>=<sp/>HCLK<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR<sp/>|=<sp/>(uint32_t)<ref refid="group___peripheral___registers___bits___definition_1gac8f6562bb2ecf65055a2f42cbb48ef11" kindref="member">RCC_CFGR_PPRE1_DIV1</ref>;</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Select<sp/>HSE<sp/>as<sp/>system<sp/>clock<sp/>source<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR<sp/>&amp;=<sp/>(uint32_t)((uint32_t)~(<ref refid="group___peripheral___registers___bits___definition_1ga0eea5e5f7743a7e8995b8beeb18355c1" kindref="member">RCC_CFGR_SW</ref>));</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR<sp/>|=<sp/>(uint32_t)<ref refid="group___peripheral___registers___bits___definition_1gafb563f217242d969f4355d0818fde705" kindref="member">RCC_CFGR_SW_HSE</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Wait<sp/>till<sp/>HSE<sp/>is<sp/>used<sp/>as<sp/>system<sp/>clock<sp/>source<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((<ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR<sp/>&amp;<sp/>(uint32_t)<ref refid="group___peripheral___registers___bits___definition_1ga15bf2269500dc97e137315f44aa015c9" kindref="member">RCC_CFGR_SWS</ref>)<sp/>!=<sp/>(uint32_t)0x04)</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/>{<sp/></highlight><highlight class="comment">/*<sp/>If<sp/>HSE<sp/>fails<sp/>to<sp/>start-up,<sp/>the<sp/>application<sp/>will<sp/>have<sp/>wrong<sp/>clock<sp/></highlight></codeline>
<codeline lineno="568"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>configuration.<sp/>User<sp/>can<sp/>add<sp/>here<sp/>some<sp/>code<sp/>to<sp/>deal<sp/>with<sp/>this<sp/>error<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/>}<sp/><sp/></highlight></codeline>
<codeline lineno="570"><highlight class="normal">}</highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined<sp/>SYSCLK_FREQ_24MHz</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetSysClockTo24(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="580"><highlight class="normal">{</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><ref refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" kindref="member">__IO</ref><sp/>uint32_t<sp/>StartUpCounter<sp/>=<sp/>0,<sp/>HSEStatus<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>SYSCLK,<sp/>HCLK,<sp/>PCLK2<sp/>and<sp/>PCLK1<sp/>configuration<sp/>---------------------------*/</highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Enable<sp/>HSE<sp/>*/</highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CR<sp/>|=<sp/>((uint32_t)<ref refid="group___peripheral___registers___bits___definition_1gadb8228c9020595b4cf9995137b8c9a7d" kindref="member">RCC_CR_HSEON</ref>);</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Wait<sp/>till<sp/>HSE<sp/>is<sp/>ready<sp/>and<sp/>if<sp/>Time<sp/>out<sp/>is<sp/>reached<sp/>exit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/>HSEStatus<sp/>=<sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CR<sp/>&amp;<sp/><ref refid="group___peripheral___registers___bits___definition_1ga86a34e00182c83409d89ff566cb02cc4" kindref="member">RCC_CR_HSERDY</ref>;</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/>StartUpCounter++;<sp/><sp/></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">((HSEStatus<sp/>==<sp/>0)<sp/>&amp;&amp;<sp/>(StartUpCounter<sp/>!=<sp/><ref refid="group___library__configuration__section_1ga68ecbc9b0a1a40a1ec9d18d5e9747c4f" kindref="member">HSE_STARTUP_TIMEOUT</ref>));</highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CR<sp/>&amp;<sp/><ref refid="group___peripheral___registers___bits___definition_1ga86a34e00182c83409d89ff566cb02cc4" kindref="member">RCC_CR_HSERDY</ref>)<sp/>!=<sp/><ref refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffa589b7d94a3d91d145720e2fed0eb3a05" kindref="member">RESET</ref>)</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/>HSEStatus<sp/>=<sp/>(uint32_t)0x01;</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/>HSEStatus<sp/>=<sp/>(uint32_t)0x00;</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/>}<sp/><sp/></highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(HSEStatus<sp/>==<sp/>(uint32_t)0x01)</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined<sp/>STM32F10X_LD_VL<sp/>&amp;&amp;<sp/>!defined<sp/>STM32F10X_MD_VL<sp/>&amp;&amp;<sp/>!defined<sp/>STM32F10X_HD_VL<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Enable<sp/>Prefetch<sp/>Buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga844ea28ba1e0a5a0e497f16b61ea306b" kindref="member">FLASH</ref>-&gt;ACR<sp/>|=<sp/><ref refid="group___peripheral___registers___bits___definition_1ga5285ab198307213dce0629f9b7c6fc86" kindref="member">FLASH_ACR_PRFTBE</ref>;</highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Flash<sp/>0<sp/>wait<sp/>state<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga844ea28ba1e0a5a0e497f16b61ea306b" kindref="member">FLASH</ref>-&gt;ACR<sp/>&amp;=<sp/>(uint32_t)((uint32_t)~<ref refid="group___peripheral___registers___bits___definition_1gaef5e44cbb084160a6004ca9951ec7318" kindref="member">FLASH_ACR_LATENCY</ref>);</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga844ea28ba1e0a5a0e497f16b61ea306b" kindref="member">FLASH</ref>-&gt;ACR<sp/>|=<sp/>(uint32_t)<ref refid="group___peripheral___registers___bits___definition_1ga6560c1d58df18c8740d70591bf7bc1ad" kindref="member">FLASH_ACR_LATENCY_0</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>HCLK<sp/>=<sp/>SYSCLK<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR<sp/>|=<sp/>(uint32_t)<ref refid="group___peripheral___registers___bits___definition_1ga2b7d7f29b09a49c31404fc0d44645c84" kindref="member">RCC_CFGR_HPRE_DIV1</ref>;</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>PCLK2<sp/>=<sp/>HCLK<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR<sp/>|=<sp/>(uint32_t)<ref refid="group___peripheral___registers___bits___definition_1ga247aebf1999a38ea07785558d277bb1a" kindref="member">RCC_CFGR_PPRE2_DIV1</ref>;</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>PCLK1<sp/>=<sp/>HCLK<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR<sp/>|=<sp/>(uint32_t)<ref refid="group___peripheral___registers___bits___definition_1gac8f6562bb2ecf65055a2f42cbb48ef11" kindref="member">RCC_CFGR_PPRE1_DIV1</ref>;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>STM32F10X_CL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Configure<sp/>PLLs<sp/>------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>PLL<sp/>configuration:<sp/>PLLCLK<sp/>=<sp/>PREDIV1<sp/>*<sp/>6<sp/>=<sp/>24<sp/>MHz<sp/>*/</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR<sp/>&amp;=<sp/>(uint32_t)~(<ref refid="group___peripheral___registers___bits___definition_1ga39cb6bd06fb93eed1e2fe9da0297810a" kindref="member">RCC_CFGR_PLLXTPRE</ref><sp/>|<sp/><ref refid="group___peripheral___registers___bits___definition_1gaba4a5dbbd286f07a97f5aa6e6f3f6a57" kindref="member">RCC_CFGR_PLLSRC</ref><sp/>|<sp/><ref refid="group___peripheral___registers___bits___definition_1ga9735c088436b547fff3baae2bbaa0426" kindref="member">RCC_CFGR_PLLMULL</ref>);</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR<sp/>|=<sp/>(uint32_t)(RCC_CFGR_PLLXTPRE_PREDIV1<sp/>|<sp/>RCC_CFGR_PLLSRC_PREDIV1<sp/>|<sp/></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___peripheral___registers___bits___definition_1ga5ea3b717fd226bc6ff5a78b711c051eb" kindref="member">RCC_CFGR_PLLMULL6</ref>);<sp/></highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>PLL2<sp/>configuration:<sp/>PLL2CLK<sp/>=<sp/>(HSE<sp/>/<sp/>5)<sp/>*<sp/>8<sp/>=<sp/>40<sp/>MHz<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>PREDIV1<sp/>configuration:<sp/>PREDIV1CLK<sp/>=<sp/>PLL2<sp/>/<sp/>10<sp/>=<sp/>4<sp/>MHz<sp/>*/</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR2<sp/>&amp;=<sp/>(uint32_t)~(RCC_CFGR2_PREDIV2<sp/>|<sp/>RCC_CFGR2_PLL2MUL<sp/>|</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RCC_CFGR2_PREDIV1<sp/>|<sp/>RCC_CFGR2_PREDIV1SRC);</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR2<sp/>|=<sp/>(uint32_t)(RCC_CFGR2_PREDIV2_DIV5<sp/>|<sp/>RCC_CFGR2_PLL2MUL8<sp/>|</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RCC_CFGR2_PREDIV1SRC_PLL2<sp/>|<sp/>RCC_CFGR2_PREDIV1_DIV10);</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Enable<sp/>PLL2<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CR<sp/>|=<sp/>RCC_CR_PLL2ON;</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Wait<sp/>till<sp/>PLL2<sp/>is<sp/>ready<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">((<ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CR<sp/>&amp;<sp/>RCC_CR_PLL2RDY)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="643"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined<sp/>(STM32F10X_LD_VL)<sp/>||<sp/>defined<sp/>(STM32F10X_MD_VL)<sp/>||<sp/>defined<sp/>(STM32F10X_HD_VL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>PLL<sp/>configuration:<sp/><sp/>=<sp/>(HSE<sp/>/<sp/>2)<sp/>*<sp/>6<sp/>=<sp/>24<sp/>MHz<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR<sp/>&amp;=<sp/>(uint32_t)((uint32_t)~(<ref refid="group___peripheral___registers___bits___definition_1gaba4a5dbbd286f07a97f5aa6e6f3f6a57" kindref="member">RCC_CFGR_PLLSRC</ref><sp/>|<sp/><ref refid="group___peripheral___registers___bits___definition_1ga39cb6bd06fb93eed1e2fe9da0297810a" kindref="member">RCC_CFGR_PLLXTPRE</ref><sp/>|<sp/><ref refid="group___peripheral___registers___bits___definition_1ga9735c088436b547fff3baae2bbaa0426" kindref="member">RCC_CFGR_PLLMULL</ref>));</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR<sp/>|=<sp/>(uint32_t)(RCC_CFGR_PLLSRC_PREDIV1<sp/>|<sp/>RCC_CFGR_PLLXTPRE_PREDIV1_Div2<sp/>|<sp/><ref refid="group___peripheral___registers___bits___definition_1ga5ea3b717fd226bc6ff5a78b711c051eb" kindref="member">RCC_CFGR_PLLMULL6</ref>);</highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>PLL<sp/>configuration:<sp/><sp/>=<sp/>(HSE<sp/>/<sp/>2)<sp/>*<sp/>6<sp/>=<sp/>24<sp/>MHz<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR<sp/>&amp;=<sp/>(uint32_t)((uint32_t)~(<ref refid="group___peripheral___registers___bits___definition_1gaba4a5dbbd286f07a97f5aa6e6f3f6a57" kindref="member">RCC_CFGR_PLLSRC</ref><sp/>|<sp/><ref refid="group___peripheral___registers___bits___definition_1ga39cb6bd06fb93eed1e2fe9da0297810a" kindref="member">RCC_CFGR_PLLXTPRE</ref><sp/>|<sp/><ref refid="group___peripheral___registers___bits___definition_1ga9735c088436b547fff3baae2bbaa0426" kindref="member">RCC_CFGR_PLLMULL</ref>));</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR<sp/>|=<sp/>(uint32_t)(<ref refid="group___peripheral___registers___bits___definition_1ga5fd58409765f79b08b2b5d86a2c322f4" kindref="member">RCC_CFGR_PLLSRC_HSE</ref><sp/>|<sp/><ref refid="group___peripheral___registers___bits___definition_1ga08ff9511dabb7140e85b2b9260087ba8" kindref="member">RCC_CFGR_PLLXTPRE_HSE_Div2</ref><sp/>|<sp/><ref refid="group___peripheral___registers___bits___definition_1ga5ea3b717fd226bc6ff5a78b711c051eb" kindref="member">RCC_CFGR_PLLMULL6</ref>);</highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>STM32F10X_CL<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Enable<sp/>PLL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CR<sp/>|=<sp/><ref refid="group___peripheral___registers___bits___definition_1gad0e73d5b0a4883e074d40029b49ee47e" kindref="member">RCC_CR_PLLON</ref>;</highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Wait<sp/>till<sp/>PLL<sp/>is<sp/>ready<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">((<ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CR<sp/>&amp;<sp/><ref refid="group___peripheral___registers___bits___definition_1gafa12d7ac6a7f0f91d066aeb2c6071888" kindref="member">RCC_CR_PLLRDY</ref>)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Select<sp/>PLL<sp/>as<sp/>system<sp/>clock<sp/>source<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR<sp/>&amp;=<sp/>(uint32_t)((uint32_t)~(<ref refid="group___peripheral___registers___bits___definition_1ga0eea5e5f7743a7e8995b8beeb18355c1" kindref="member">RCC_CFGR_SW</ref>));</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR<sp/>|=<sp/>(uint32_t)<ref refid="group___peripheral___registers___bits___definition_1ga87389cacb2eaf53730da13a2a33cd487" kindref="member">RCC_CFGR_SW_PLL</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Wait<sp/>till<sp/>PLL<sp/>is<sp/>used<sp/>as<sp/>system<sp/>clock<sp/>source<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((<ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR<sp/>&amp;<sp/>(uint32_t)<ref refid="group___peripheral___registers___bits___definition_1ga15bf2269500dc97e137315f44aa015c9" kindref="member">RCC_CFGR_SWS</ref>)<sp/>!=<sp/>(uint32_t)0x08)</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/>{<sp/></highlight><highlight class="comment">/*<sp/>If<sp/>HSE<sp/>fails<sp/>to<sp/>start-up,<sp/>the<sp/>application<sp/>will<sp/>have<sp/>wrong<sp/>clock<sp/></highlight></codeline>
<codeline lineno="672"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>configuration.<sp/>User<sp/>can<sp/>add<sp/>here<sp/>some<sp/>code<sp/>to<sp/>deal<sp/>with<sp/>this<sp/>error<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="674"><highlight class="normal">}</highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined<sp/>SYSCLK_FREQ_36MHz</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetSysClockTo36(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="684"><highlight class="normal">{</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><ref refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" kindref="member">__IO</ref><sp/>uint32_t<sp/>StartUpCounter<sp/>=<sp/>0,<sp/>HSEStatus<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>SYSCLK,<sp/>HCLK,<sp/>PCLK2<sp/>and<sp/>PCLK1<sp/>configuration<sp/>---------------------------*/</highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Enable<sp/>HSE<sp/>*/</highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CR<sp/>|=<sp/>((uint32_t)<ref refid="group___peripheral___registers___bits___definition_1gadb8228c9020595b4cf9995137b8c9a7d" kindref="member">RCC_CR_HSEON</ref>);</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Wait<sp/>till<sp/>HSE<sp/>is<sp/>ready<sp/>and<sp/>if<sp/>Time<sp/>out<sp/>is<sp/>reached<sp/>exit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/>HSEStatus<sp/>=<sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CR<sp/>&amp;<sp/><ref refid="group___peripheral___registers___bits___definition_1ga86a34e00182c83409d89ff566cb02cc4" kindref="member">RCC_CR_HSERDY</ref>;</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/>StartUpCounter++;<sp/><sp/></highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">((HSEStatus<sp/>==<sp/>0)<sp/>&amp;&amp;<sp/>(StartUpCounter<sp/>!=<sp/><ref refid="group___library__configuration__section_1ga68ecbc9b0a1a40a1ec9d18d5e9747c4f" kindref="member">HSE_STARTUP_TIMEOUT</ref>));</highlight></codeline>
<codeline lineno="697"><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CR<sp/>&amp;<sp/><ref refid="group___peripheral___registers___bits___definition_1ga86a34e00182c83409d89ff566cb02cc4" kindref="member">RCC_CR_HSERDY</ref>)<sp/>!=<sp/><ref refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffa589b7d94a3d91d145720e2fed0eb3a05" kindref="member">RESET</ref>)</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/>HSEStatus<sp/>=<sp/>(uint32_t)0x01;</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/>HSEStatus<sp/>=<sp/>(uint32_t)0x00;</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/>}<sp/><sp/></highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(HSEStatus<sp/>==<sp/>(uint32_t)0x01)</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Enable<sp/>Prefetch<sp/>Buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga844ea28ba1e0a5a0e497f16b61ea306b" kindref="member">FLASH</ref>-&gt;ACR<sp/>|=<sp/><ref refid="group___peripheral___registers___bits___definition_1ga5285ab198307213dce0629f9b7c6fc86" kindref="member">FLASH_ACR_PRFTBE</ref>;</highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Flash<sp/>1<sp/>wait<sp/>state<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga844ea28ba1e0a5a0e497f16b61ea306b" kindref="member">FLASH</ref>-&gt;ACR<sp/>&amp;=<sp/>(uint32_t)((uint32_t)~<ref refid="group___peripheral___registers___bits___definition_1gaef5e44cbb084160a6004ca9951ec7318" kindref="member">FLASH_ACR_LATENCY</ref>);</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga844ea28ba1e0a5a0e497f16b61ea306b" kindref="member">FLASH</ref>-&gt;ACR<sp/>|=<sp/>(uint32_t)<ref refid="group___peripheral___registers___bits___definition_1ga85155f5d3f34ebe83989513793498c72" kindref="member">FLASH_ACR_LATENCY_1</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>HCLK<sp/>=<sp/>SYSCLK<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR<sp/>|=<sp/>(uint32_t)<ref refid="group___peripheral___registers___bits___definition_1ga2b7d7f29b09a49c31404fc0d44645c84" kindref="member">RCC_CFGR_HPRE_DIV1</ref>;</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>PCLK2<sp/>=<sp/>HCLK<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR<sp/>|=<sp/>(uint32_t)<ref refid="group___peripheral___registers___bits___definition_1ga247aebf1999a38ea07785558d277bb1a" kindref="member">RCC_CFGR_PPRE2_DIV1</ref>;</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>PCLK1<sp/>=<sp/>HCLK<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR<sp/>|=<sp/>(uint32_t)<ref refid="group___peripheral___registers___bits___definition_1gac8f6562bb2ecf65055a2f42cbb48ef11" kindref="member">RCC_CFGR_PPRE1_DIV1</ref>;</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="725"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>STM32F10X_CL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Configure<sp/>PLLs<sp/>------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>PLL<sp/>configuration:<sp/>PLLCLK<sp/>=<sp/>PREDIV1<sp/>*<sp/>9<sp/>=<sp/>36<sp/>MHz<sp/>*/</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR<sp/>&amp;=<sp/>(uint32_t)~(<ref refid="group___peripheral___registers___bits___definition_1ga39cb6bd06fb93eed1e2fe9da0297810a" kindref="member">RCC_CFGR_PLLXTPRE</ref><sp/>|<sp/><ref refid="group___peripheral___registers___bits___definition_1gaba4a5dbbd286f07a97f5aa6e6f3f6a57" kindref="member">RCC_CFGR_PLLSRC</ref><sp/>|<sp/><ref refid="group___peripheral___registers___bits___definition_1ga9735c088436b547fff3baae2bbaa0426" kindref="member">RCC_CFGR_PLLMULL</ref>);</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR<sp/>|=<sp/>(uint32_t)(RCC_CFGR_PLLXTPRE_PREDIV1<sp/>|<sp/>RCC_CFGR_PLLSRC_PREDIV1<sp/>|<sp/></highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___peripheral___registers___bits___definition_1ga384c396ec051b958c9a5781c13faf7e5" kindref="member">RCC_CFGR_PLLMULL9</ref>);<sp/></highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>PREDIV1<sp/>configuration:<sp/>PREDIV1CLK<sp/>=<sp/>PLL2<sp/>/<sp/>10<sp/>=<sp/>4<sp/>MHz<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR2<sp/>&amp;=<sp/>(uint32_t)~(RCC_CFGR2_PREDIV2<sp/>|<sp/>RCC_CFGR2_PLL2MUL<sp/>|</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RCC_CFGR2_PREDIV1<sp/>|<sp/>RCC_CFGR2_PREDIV1SRC);</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR2<sp/>|=<sp/>(uint32_t)(RCC_CFGR2_PREDIV2_DIV5<sp/>|<sp/>RCC_CFGR2_PLL2MUL8<sp/>|</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RCC_CFGR2_PREDIV1SRC_PLL2<sp/>|<sp/>RCC_CFGR2_PREDIV1_DIV10);</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Enable<sp/>PLL2<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CR<sp/>|=<sp/>RCC_CR_PLL2ON;</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Wait<sp/>till<sp/>PLL2<sp/>is<sp/>ready<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">((<ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CR<sp/>&amp;<sp/>RCC_CR_PLL2RDY)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>PLL<sp/>configuration:<sp/>PLLCLK<sp/>=<sp/>(HSE<sp/>/<sp/>2)<sp/>*<sp/>9<sp/>=<sp/>36<sp/>MHz<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR<sp/>&amp;=<sp/>(uint32_t)((uint32_t)~(<ref refid="group___peripheral___registers___bits___definition_1gaba4a5dbbd286f07a97f5aa6e6f3f6a57" kindref="member">RCC_CFGR_PLLSRC</ref><sp/>|<sp/><ref refid="group___peripheral___registers___bits___definition_1ga39cb6bd06fb93eed1e2fe9da0297810a" kindref="member">RCC_CFGR_PLLXTPRE</ref><sp/>|<sp/><ref refid="group___peripheral___registers___bits___definition_1ga9735c088436b547fff3baae2bbaa0426" kindref="member">RCC_CFGR_PLLMULL</ref>));</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR<sp/>|=<sp/>(uint32_t)(<ref refid="group___peripheral___registers___bits___definition_1ga5fd58409765f79b08b2b5d86a2c322f4" kindref="member">RCC_CFGR_PLLSRC_HSE</ref><sp/>|<sp/><ref refid="group___peripheral___registers___bits___definition_1ga08ff9511dabb7140e85b2b9260087ba8" kindref="member">RCC_CFGR_PLLXTPRE_HSE_Div2</ref><sp/>|<sp/><ref refid="group___peripheral___registers___bits___definition_1ga384c396ec051b958c9a5781c13faf7e5" kindref="member">RCC_CFGR_PLLMULL9</ref>);</highlight></codeline>
<codeline lineno="752"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>STM32F10X_CL<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="753"><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Enable<sp/>PLL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CR<sp/>|=<sp/><ref refid="group___peripheral___registers___bits___definition_1gad0e73d5b0a4883e074d40029b49ee47e" kindref="member">RCC_CR_PLLON</ref>;</highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Wait<sp/>till<sp/>PLL<sp/>is<sp/>ready<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">((<ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CR<sp/>&amp;<sp/><ref refid="group___peripheral___registers___bits___definition_1gafa12d7ac6a7f0f91d066aeb2c6071888" kindref="member">RCC_CR_PLLRDY</ref>)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="761"><highlight class="normal"></highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Select<sp/>PLL<sp/>as<sp/>system<sp/>clock<sp/>source<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR<sp/>&amp;=<sp/>(uint32_t)((uint32_t)~(<ref refid="group___peripheral___registers___bits___definition_1ga0eea5e5f7743a7e8995b8beeb18355c1" kindref="member">RCC_CFGR_SW</ref>));</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR<sp/>|=<sp/>(uint32_t)<ref refid="group___peripheral___registers___bits___definition_1ga87389cacb2eaf53730da13a2a33cd487" kindref="member">RCC_CFGR_SW_PLL</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="765"><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Wait<sp/>till<sp/>PLL<sp/>is<sp/>used<sp/>as<sp/>system<sp/>clock<sp/>source<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((<ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR<sp/>&amp;<sp/>(uint32_t)<ref refid="group___peripheral___registers___bits___definition_1ga15bf2269500dc97e137315f44aa015c9" kindref="member">RCC_CFGR_SWS</ref>)<sp/>!=<sp/>(uint32_t)0x08)</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/>{<sp/></highlight><highlight class="comment">/*<sp/>If<sp/>HSE<sp/>fails<sp/>to<sp/>start-up,<sp/>the<sp/>application<sp/>will<sp/>have<sp/>wrong<sp/>clock<sp/></highlight></codeline>
<codeline lineno="773"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>configuration.<sp/>User<sp/>can<sp/>add<sp/>here<sp/>some<sp/>code<sp/>to<sp/>deal<sp/>with<sp/>this<sp/>error<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="775"><highlight class="normal">}</highlight></codeline>
<codeline lineno="776"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined<sp/>SYSCLK_FREQ_48MHz</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"></highlight></codeline>
<codeline lineno="784"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetSysClockTo48(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="785"><highlight class="normal">{</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><ref refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" kindref="member">__IO</ref><sp/>uint32_t<sp/>StartUpCounter<sp/>=<sp/>0,<sp/>HSEStatus<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>SYSCLK,<sp/>HCLK,<sp/>PCLK2<sp/>and<sp/>PCLK1<sp/>configuration<sp/>---------------------------*/</highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Enable<sp/>HSE<sp/>*/</highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CR<sp/>|=<sp/>((uint32_t)<ref refid="group___peripheral___registers___bits___definition_1gadb8228c9020595b4cf9995137b8c9a7d" kindref="member">RCC_CR_HSEON</ref>);</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Wait<sp/>till<sp/>HSE<sp/>is<sp/>ready<sp/>and<sp/>if<sp/>Time<sp/>out<sp/>is<sp/>reached<sp/>exit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/>HSEStatus<sp/>=<sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CR<sp/>&amp;<sp/><ref refid="group___peripheral___registers___bits___definition_1ga86a34e00182c83409d89ff566cb02cc4" kindref="member">RCC_CR_HSERDY</ref>;</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/>StartUpCounter++;<sp/><sp/></highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">((HSEStatus<sp/>==<sp/>0)<sp/>&amp;&amp;<sp/>(StartUpCounter<sp/>!=<sp/><ref refid="group___library__configuration__section_1ga68ecbc9b0a1a40a1ec9d18d5e9747c4f" kindref="member">HSE_STARTUP_TIMEOUT</ref>));</highlight></codeline>
<codeline lineno="798"><highlight class="normal"></highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CR<sp/>&amp;<sp/><ref refid="group___peripheral___registers___bits___definition_1ga86a34e00182c83409d89ff566cb02cc4" kindref="member">RCC_CR_HSERDY</ref>)<sp/>!=<sp/><ref refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffa589b7d94a3d91d145720e2fed0eb3a05" kindref="member">RESET</ref>)</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/>HSEStatus<sp/>=<sp/>(uint32_t)0x01;</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/>HSEStatus<sp/>=<sp/>(uint32_t)0x00;</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/>}<sp/><sp/></highlight></codeline>
<codeline lineno="807"><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(HSEStatus<sp/>==<sp/>(uint32_t)0x01)</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Enable<sp/>Prefetch<sp/>Buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga844ea28ba1e0a5a0e497f16b61ea306b" kindref="member">FLASH</ref>-&gt;ACR<sp/>|=<sp/><ref refid="group___peripheral___registers___bits___definition_1ga5285ab198307213dce0629f9b7c6fc86" kindref="member">FLASH_ACR_PRFTBE</ref>;</highlight></codeline>
<codeline lineno="812"><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Flash<sp/>1<sp/>wait<sp/>state<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga844ea28ba1e0a5a0e497f16b61ea306b" kindref="member">FLASH</ref>-&gt;ACR<sp/>&amp;=<sp/>(uint32_t)((uint32_t)~<ref refid="group___peripheral___registers___bits___definition_1gaef5e44cbb084160a6004ca9951ec7318" kindref="member">FLASH_ACR_LATENCY</ref>);</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga844ea28ba1e0a5a0e497f16b61ea306b" kindref="member">FLASH</ref>-&gt;ACR<sp/>|=<sp/>(uint32_t)<ref refid="group___peripheral___registers___bits___definition_1ga85155f5d3f34ebe83989513793498c72" kindref="member">FLASH_ACR_LATENCY_1</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>HCLK<sp/>=<sp/>SYSCLK<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR<sp/>|=<sp/>(uint32_t)<ref refid="group___peripheral___registers___bits___definition_1ga2b7d7f29b09a49c31404fc0d44645c84" kindref="member">RCC_CFGR_HPRE_DIV1</ref>;</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>PCLK2<sp/>=<sp/>HCLK<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR<sp/>|=<sp/>(uint32_t)<ref refid="group___peripheral___registers___bits___definition_1ga247aebf1999a38ea07785558d277bb1a" kindref="member">RCC_CFGR_PPRE2_DIV1</ref>;</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>PCLK1<sp/>=<sp/>HCLK<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR<sp/>|=<sp/>(uint32_t)<ref refid="group___peripheral___registers___bits___definition_1gaf832ad6844c907d9bb37c1536defcb0d" kindref="member">RCC_CFGR_PPRE1_DIV2</ref>;</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="826"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>STM32F10X_CL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Configure<sp/>PLLs<sp/>------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>PLL2<sp/>configuration:<sp/>PLL2CLK<sp/>=<sp/>(HSE<sp/>/<sp/>5)<sp/>*<sp/>8<sp/>=<sp/>40<sp/>MHz<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>PREDIV1<sp/>configuration:<sp/>PREDIV1CLK<sp/>=<sp/>PLL2<sp/>/<sp/>5<sp/>=<sp/>8<sp/>MHz<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR2<sp/>&amp;=<sp/>(uint32_t)~(RCC_CFGR2_PREDIV2<sp/>|<sp/>RCC_CFGR2_PLL2MUL<sp/>|</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RCC_CFGR2_PREDIV1<sp/>|<sp/>RCC_CFGR2_PREDIV1SRC);</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR2<sp/>|=<sp/>(uint32_t)(RCC_CFGR2_PREDIV2_DIV5<sp/>|<sp/>RCC_CFGR2_PLL2MUL8<sp/>|</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RCC_CFGR2_PREDIV1SRC_PLL2<sp/>|<sp/>RCC_CFGR2_PREDIV1_DIV5);</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Enable<sp/>PLL2<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CR<sp/>|=<sp/>RCC_CR_PLL2ON;</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Wait<sp/>till<sp/>PLL2<sp/>is<sp/>ready<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">((<ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CR<sp/>&amp;<sp/>RCC_CR_PLL2RDY)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>PLL<sp/>configuration:<sp/>PLLCLK<sp/>=<sp/>PREDIV1<sp/>*<sp/>6<sp/>=<sp/>48<sp/>MHz<sp/>*/</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR<sp/>&amp;=<sp/>(uint32_t)~(<ref refid="group___peripheral___registers___bits___definition_1ga39cb6bd06fb93eed1e2fe9da0297810a" kindref="member">RCC_CFGR_PLLXTPRE</ref><sp/>|<sp/><ref refid="group___peripheral___registers___bits___definition_1gaba4a5dbbd286f07a97f5aa6e6f3f6a57" kindref="member">RCC_CFGR_PLLSRC</ref><sp/>|<sp/><ref refid="group___peripheral___registers___bits___definition_1ga9735c088436b547fff3baae2bbaa0426" kindref="member">RCC_CFGR_PLLMULL</ref>);</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR<sp/>|=<sp/>(uint32_t)(RCC_CFGR_PLLXTPRE_PREDIV1<sp/>|<sp/>RCC_CFGR_PLLSRC_PREDIV1<sp/>|<sp/></highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___peripheral___registers___bits___definition_1ga5ea3b717fd226bc6ff5a78b711c051eb" kindref="member">RCC_CFGR_PLLMULL6</ref>);<sp/></highlight></codeline>
<codeline lineno="848"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>PLL<sp/>configuration:<sp/>PLLCLK<sp/>=<sp/>HSE<sp/>*<sp/>6<sp/>=<sp/>48<sp/>MHz<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR<sp/>&amp;=<sp/>(uint32_t)((uint32_t)~(<ref refid="group___peripheral___registers___bits___definition_1gaba4a5dbbd286f07a97f5aa6e6f3f6a57" kindref="member">RCC_CFGR_PLLSRC</ref><sp/>|<sp/><ref refid="group___peripheral___registers___bits___definition_1ga39cb6bd06fb93eed1e2fe9da0297810a" kindref="member">RCC_CFGR_PLLXTPRE</ref><sp/>|<sp/><ref refid="group___peripheral___registers___bits___definition_1ga9735c088436b547fff3baae2bbaa0426" kindref="member">RCC_CFGR_PLLMULL</ref>));</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR<sp/>|=<sp/>(uint32_t)(<ref refid="group___peripheral___registers___bits___definition_1ga5fd58409765f79b08b2b5d86a2c322f4" kindref="member">RCC_CFGR_PLLSRC_HSE</ref><sp/>|<sp/><ref refid="group___peripheral___registers___bits___definition_1ga5ea3b717fd226bc6ff5a78b711c051eb" kindref="member">RCC_CFGR_PLLMULL6</ref>);</highlight></codeline>
<codeline lineno="852"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>STM32F10X_CL<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="853"><highlight class="normal"></highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Enable<sp/>PLL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CR<sp/>|=<sp/><ref refid="group___peripheral___registers___bits___definition_1gad0e73d5b0a4883e074d40029b49ee47e" kindref="member">RCC_CR_PLLON</ref>;</highlight></codeline>
<codeline lineno="856"><highlight class="normal"></highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Wait<sp/>till<sp/>PLL<sp/>is<sp/>ready<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">((<ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CR<sp/>&amp;<sp/><ref refid="group___peripheral___registers___bits___definition_1gafa12d7ac6a7f0f91d066aeb2c6071888" kindref="member">RCC_CR_PLLRDY</ref>)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="861"><highlight class="normal"></highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Select<sp/>PLL<sp/>as<sp/>system<sp/>clock<sp/>source<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR<sp/>&amp;=<sp/>(uint32_t)((uint32_t)~(<ref refid="group___peripheral___registers___bits___definition_1ga0eea5e5f7743a7e8995b8beeb18355c1" kindref="member">RCC_CFGR_SW</ref>));</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR<sp/>|=<sp/>(uint32_t)<ref refid="group___peripheral___registers___bits___definition_1ga87389cacb2eaf53730da13a2a33cd487" kindref="member">RCC_CFGR_SW_PLL</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="865"><highlight class="normal"></highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Wait<sp/>till<sp/>PLL<sp/>is<sp/>used<sp/>as<sp/>system<sp/>clock<sp/>source<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((<ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR<sp/>&amp;<sp/>(uint32_t)<ref refid="group___peripheral___registers___bits___definition_1ga15bf2269500dc97e137315f44aa015c9" kindref="member">RCC_CFGR_SWS</ref>)<sp/>!=<sp/>(uint32_t)0x08)</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/>{<sp/></highlight><highlight class="comment">/*<sp/>If<sp/>HSE<sp/>fails<sp/>to<sp/>start-up,<sp/>the<sp/>application<sp/>will<sp/>have<sp/>wrong<sp/>clock<sp/></highlight></codeline>
<codeline lineno="873"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>configuration.<sp/>User<sp/>can<sp/>add<sp/>here<sp/>some<sp/>code<sp/>to<sp/>deal<sp/>with<sp/>this<sp/>error<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="875"><highlight class="normal">}</highlight></codeline>
<codeline lineno="876"><highlight class="normal"></highlight></codeline>
<codeline lineno="877"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined<sp/>SYSCLK_FREQ_56MHz</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="878"><highlight class="normal"></highlight></codeline>
<codeline lineno="885"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetSysClockTo56(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="886"><highlight class="normal">{</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><ref refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" kindref="member">__IO</ref><sp/>uint32_t<sp/>StartUpCounter<sp/>=<sp/>0,<sp/>HSEStatus<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>SYSCLK,<sp/>HCLK,<sp/>PCLK2<sp/>and<sp/>PCLK1<sp/>configuration<sp/>---------------------------*/</highlight><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Enable<sp/>HSE<sp/>*/</highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CR<sp/>|=<sp/>((uint32_t)<ref refid="group___peripheral___registers___bits___definition_1gadb8228c9020595b4cf9995137b8c9a7d" kindref="member">RCC_CR_HSEON</ref>);</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Wait<sp/>till<sp/>HSE<sp/>is<sp/>ready<sp/>and<sp/>if<sp/>Time<sp/>out<sp/>is<sp/>reached<sp/>exit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/>HSEStatus<sp/>=<sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CR<sp/>&amp;<sp/><ref refid="group___peripheral___registers___bits___definition_1ga86a34e00182c83409d89ff566cb02cc4" kindref="member">RCC_CR_HSERDY</ref>;</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/>StartUpCounter++;<sp/><sp/></highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">((HSEStatus<sp/>==<sp/>0)<sp/>&amp;&amp;<sp/>(StartUpCounter<sp/>!=<sp/><ref refid="group___library__configuration__section_1ga68ecbc9b0a1a40a1ec9d18d5e9747c4f" kindref="member">HSE_STARTUP_TIMEOUT</ref>));</highlight></codeline>
<codeline lineno="899"><highlight class="normal"></highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CR<sp/>&amp;<sp/><ref refid="group___peripheral___registers___bits___definition_1ga86a34e00182c83409d89ff566cb02cc4" kindref="member">RCC_CR_HSERDY</ref>)<sp/>!=<sp/><ref refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffa589b7d94a3d91d145720e2fed0eb3a05" kindref="member">RESET</ref>)</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/>HSEStatus<sp/>=<sp/>(uint32_t)0x01;</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/>HSEStatus<sp/>=<sp/>(uint32_t)0x00;</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/>}<sp/><sp/></highlight></codeline>
<codeline lineno="908"><highlight class="normal"></highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(HSEStatus<sp/>==<sp/>(uint32_t)0x01)</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Enable<sp/>Prefetch<sp/>Buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga844ea28ba1e0a5a0e497f16b61ea306b" kindref="member">FLASH</ref>-&gt;ACR<sp/>|=<sp/><ref refid="group___peripheral___registers___bits___definition_1ga5285ab198307213dce0629f9b7c6fc86" kindref="member">FLASH_ACR_PRFTBE</ref>;</highlight></codeline>
<codeline lineno="913"><highlight class="normal"></highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Flash<sp/>2<sp/>wait<sp/>state<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga844ea28ba1e0a5a0e497f16b61ea306b" kindref="member">FLASH</ref>-&gt;ACR<sp/>&amp;=<sp/>(uint32_t)((uint32_t)~<ref refid="group___peripheral___registers___bits___definition_1gaef5e44cbb084160a6004ca9951ec7318" kindref="member">FLASH_ACR_LATENCY</ref>);</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga844ea28ba1e0a5a0e497f16b61ea306b" kindref="member">FLASH</ref>-&gt;ACR<sp/>|=<sp/>(uint32_t)<ref refid="group___peripheral___registers___bits___definition_1ga61b5089d0c86db787ebef496c9057918" kindref="member">FLASH_ACR_LATENCY_2</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>HCLK<sp/>=<sp/>SYSCLK<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR<sp/>|=<sp/>(uint32_t)<ref refid="group___peripheral___registers___bits___definition_1ga2b7d7f29b09a49c31404fc0d44645c84" kindref="member">RCC_CFGR_HPRE_DIV1</ref>;</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>PCLK2<sp/>=<sp/>HCLK<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR<sp/>|=<sp/>(uint32_t)<ref refid="group___peripheral___registers___bits___definition_1ga247aebf1999a38ea07785558d277bb1a" kindref="member">RCC_CFGR_PPRE2_DIV1</ref>;</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>PCLK1<sp/>=<sp/>HCLK<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR<sp/>|=<sp/>(uint32_t)<ref refid="group___peripheral___registers___bits___definition_1gaf832ad6844c907d9bb37c1536defcb0d" kindref="member">RCC_CFGR_PPRE1_DIV2</ref>;</highlight></codeline>
<codeline lineno="926"><highlight class="normal"></highlight></codeline>
<codeline lineno="927"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>STM32F10X_CL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Configure<sp/>PLLs<sp/>------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>PLL2<sp/>configuration:<sp/>PLL2CLK<sp/>=<sp/>(HSE<sp/>/<sp/>5)<sp/>*<sp/>8<sp/>=<sp/>40<sp/>MHz<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>PREDIV1<sp/>configuration:<sp/>PREDIV1CLK<sp/>=<sp/>PLL2<sp/>/<sp/>5<sp/>=<sp/>8<sp/>MHz<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR2<sp/>&amp;=<sp/>(uint32_t)~(RCC_CFGR2_PREDIV2<sp/>|<sp/>RCC_CFGR2_PLL2MUL<sp/>|</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RCC_CFGR2_PREDIV1<sp/>|<sp/>RCC_CFGR2_PREDIV1SRC);</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR2<sp/>|=<sp/>(uint32_t)(RCC_CFGR2_PREDIV2_DIV5<sp/>|<sp/>RCC_CFGR2_PLL2MUL8<sp/>|</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RCC_CFGR2_PREDIV1SRC_PLL2<sp/>|<sp/>RCC_CFGR2_PREDIV1_DIV5);</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Enable<sp/>PLL2<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CR<sp/>|=<sp/>RCC_CR_PLL2ON;</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Wait<sp/>till<sp/>PLL2<sp/>is<sp/>ready<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">((<ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CR<sp/>&amp;<sp/>RCC_CR_PLL2RDY)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>PLL<sp/>configuration:<sp/>PLLCLK<sp/>=<sp/>PREDIV1<sp/>*<sp/>7<sp/>=<sp/>56<sp/>MHz<sp/>*/</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR<sp/>&amp;=<sp/>(uint32_t)~(<ref refid="group___peripheral___registers___bits___definition_1ga39cb6bd06fb93eed1e2fe9da0297810a" kindref="member">RCC_CFGR_PLLXTPRE</ref><sp/>|<sp/><ref refid="group___peripheral___registers___bits___definition_1gaba4a5dbbd286f07a97f5aa6e6f3f6a57" kindref="member">RCC_CFGR_PLLSRC</ref><sp/>|<sp/><ref refid="group___peripheral___registers___bits___definition_1ga9735c088436b547fff3baae2bbaa0426" kindref="member">RCC_CFGR_PLLMULL</ref>);</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR<sp/>|=<sp/>(uint32_t)(RCC_CFGR_PLLXTPRE_PREDIV1<sp/>|<sp/>RCC_CFGR_PLLSRC_PREDIV1<sp/>|<sp/></highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___peripheral___registers___bits___definition_1ga6ff8d8dcf3876d1c85657680a64c1696" kindref="member">RCC_CFGR_PLLMULL7</ref>);<sp/></highlight></codeline>
<codeline lineno="949"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>PLL<sp/>configuration:<sp/>PLLCLK<sp/>=<sp/>HSE<sp/>*<sp/>7<sp/>=<sp/>56<sp/>MHz<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR<sp/>&amp;=<sp/>(uint32_t)((uint32_t)~(<ref refid="group___peripheral___registers___bits___definition_1gaba4a5dbbd286f07a97f5aa6e6f3f6a57" kindref="member">RCC_CFGR_PLLSRC</ref><sp/>|<sp/><ref refid="group___peripheral___registers___bits___definition_1ga39cb6bd06fb93eed1e2fe9da0297810a" kindref="member">RCC_CFGR_PLLXTPRE</ref><sp/>|<sp/><ref refid="group___peripheral___registers___bits___definition_1ga9735c088436b547fff3baae2bbaa0426" kindref="member">RCC_CFGR_PLLMULL</ref>));</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR<sp/>|=<sp/>(uint32_t)(<ref refid="group___peripheral___registers___bits___definition_1ga5fd58409765f79b08b2b5d86a2c322f4" kindref="member">RCC_CFGR_PLLSRC_HSE</ref><sp/>|<sp/><ref refid="group___peripheral___registers___bits___definition_1ga6ff8d8dcf3876d1c85657680a64c1696" kindref="member">RCC_CFGR_PLLMULL7</ref>);</highlight></codeline>
<codeline lineno="953"><highlight class="normal"></highlight></codeline>
<codeline lineno="954"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>STM32F10X_CL<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="955"><highlight class="normal"></highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Enable<sp/>PLL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CR<sp/>|=<sp/><ref refid="group___peripheral___registers___bits___definition_1gad0e73d5b0a4883e074d40029b49ee47e" kindref="member">RCC_CR_PLLON</ref>;</highlight></codeline>
<codeline lineno="958"><highlight class="normal"></highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Wait<sp/>till<sp/>PLL<sp/>is<sp/>ready<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">((<ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CR<sp/>&amp;<sp/><ref refid="group___peripheral___registers___bits___definition_1gafa12d7ac6a7f0f91d066aeb2c6071888" kindref="member">RCC_CR_PLLRDY</ref>)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="963"><highlight class="normal"></highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Select<sp/>PLL<sp/>as<sp/>system<sp/>clock<sp/>source<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR<sp/>&amp;=<sp/>(uint32_t)((uint32_t)~(<ref refid="group___peripheral___registers___bits___definition_1ga0eea5e5f7743a7e8995b8beeb18355c1" kindref="member">RCC_CFGR_SW</ref>));</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR<sp/>|=<sp/>(uint32_t)<ref refid="group___peripheral___registers___bits___definition_1ga87389cacb2eaf53730da13a2a33cd487" kindref="member">RCC_CFGR_SW_PLL</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="967"><highlight class="normal"></highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Wait<sp/>till<sp/>PLL<sp/>is<sp/>used<sp/>as<sp/>system<sp/>clock<sp/>source<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((<ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR<sp/>&amp;<sp/>(uint32_t)<ref refid="group___peripheral___registers___bits___definition_1ga15bf2269500dc97e137315f44aa015c9" kindref="member">RCC_CFGR_SWS</ref>)<sp/>!=<sp/>(uint32_t)0x08)</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/>{<sp/></highlight><highlight class="comment">/*<sp/>If<sp/>HSE<sp/>fails<sp/>to<sp/>start-up,<sp/>the<sp/>application<sp/>will<sp/>have<sp/>wrong<sp/>clock<sp/></highlight></codeline>
<codeline lineno="975"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>configuration.<sp/>User<sp/>can<sp/>add<sp/>here<sp/>some<sp/>code<sp/>to<sp/>deal<sp/>with<sp/>this<sp/>error<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="977"><highlight class="normal">}</highlight></codeline>
<codeline lineno="978"><highlight class="normal"></highlight></codeline>
<codeline lineno="979"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined<sp/>SYSCLK_FREQ_72MHz</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="980"><highlight class="normal"></highlight></codeline>
<codeline lineno="987"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetSysClockTo72(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="988"><highlight class="normal">{</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><ref refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" kindref="member">__IO</ref><sp/>uint32_t<sp/>StartUpCounter<sp/>=<sp/>0,<sp/>HSEStatus<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>SYSCLK,<sp/>HCLK,<sp/>PCLK2<sp/>and<sp/>PCLK1<sp/>configuration<sp/>---------------------------*/</highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Enable<sp/>HSE<sp/>*/</highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CR<sp/>|=<sp/>((uint32_t)<ref refid="group___peripheral___registers___bits___definition_1gadb8228c9020595b4cf9995137b8c9a7d" kindref="member">RCC_CR_HSEON</ref>);</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Wait<sp/>till<sp/>HSE<sp/>is<sp/>ready<sp/>and<sp/>if<sp/>Time<sp/>out<sp/>is<sp/>reached<sp/>exit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/>HSEStatus<sp/>=<sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CR<sp/>&amp;<sp/><ref refid="group___peripheral___registers___bits___definition_1ga86a34e00182c83409d89ff566cb02cc4" kindref="member">RCC_CR_HSERDY</ref>;</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/>StartUpCounter++;<sp/><sp/></highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">((HSEStatus<sp/>==<sp/>0)<sp/>&amp;&amp;<sp/>(StartUpCounter<sp/>!=<sp/><ref refid="group___library__configuration__section_1ga68ecbc9b0a1a40a1ec9d18d5e9747c4f" kindref="member">HSE_STARTUP_TIMEOUT</ref>));</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"></highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CR<sp/>&amp;<sp/><ref refid="group___peripheral___registers___bits___definition_1ga86a34e00182c83409d89ff566cb02cc4" kindref="member">RCC_CR_HSERDY</ref>)<sp/>!=<sp/><ref refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffa589b7d94a3d91d145720e2fed0eb3a05" kindref="member">RESET</ref>)</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/>HSEStatus<sp/>=<sp/>(uint32_t)0x01;</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/>HSEStatus<sp/>=<sp/>(uint32_t)0x00;</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/>}<sp/><sp/></highlight></codeline>
<codeline lineno="1010"><highlight class="normal"></highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(HSEStatus<sp/>==<sp/>(uint32_t)0x01)</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Enable<sp/>Prefetch<sp/>Buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga844ea28ba1e0a5a0e497f16b61ea306b" kindref="member">FLASH</ref>-&gt;ACR<sp/>|=<sp/><ref refid="group___peripheral___registers___bits___definition_1ga5285ab198307213dce0629f9b7c6fc86" kindref="member">FLASH_ACR_PRFTBE</ref>;</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"></highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Flash<sp/>2<sp/>wait<sp/>state<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga844ea28ba1e0a5a0e497f16b61ea306b" kindref="member">FLASH</ref>-&gt;ACR<sp/>&amp;=<sp/>(uint32_t)((uint32_t)~<ref refid="group___peripheral___registers___bits___definition_1gaef5e44cbb084160a6004ca9951ec7318" kindref="member">FLASH_ACR_LATENCY</ref>);</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga844ea28ba1e0a5a0e497f16b61ea306b" kindref="member">FLASH</ref>-&gt;ACR<sp/>|=<sp/>(uint32_t)<ref refid="group___peripheral___registers___bits___definition_1ga61b5089d0c86db787ebef496c9057918" kindref="member">FLASH_ACR_LATENCY_2</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1019"><highlight class="normal"></highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>HCLK<sp/>=<sp/>SYSCLK<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR<sp/>|=<sp/>(uint32_t)<ref refid="group___peripheral___registers___bits___definition_1ga2b7d7f29b09a49c31404fc0d44645c84" kindref="member">RCC_CFGR_HPRE_DIV1</ref>;</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>PCLK2<sp/>=<sp/>HCLK<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR<sp/>|=<sp/>(uint32_t)<ref refid="group___peripheral___registers___bits___definition_1ga247aebf1999a38ea07785558d277bb1a" kindref="member">RCC_CFGR_PPRE2_DIV1</ref>;</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>PCLK1<sp/>=<sp/>HCLK<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR<sp/>|=<sp/>(uint32_t)<ref refid="group___peripheral___registers___bits___definition_1gaf832ad6844c907d9bb37c1536defcb0d" kindref="member">RCC_CFGR_PPRE1_DIV2</ref>;</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"></highlight></codeline>
<codeline lineno="1030"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>STM32F10X_CL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Configure<sp/>PLLs<sp/>------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>PLL2<sp/>configuration:<sp/>PLL2CLK<sp/>=<sp/>(HSE<sp/>/<sp/>5)<sp/>*<sp/>8<sp/>=<sp/>40<sp/>MHz<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>PREDIV1<sp/>configuration:<sp/>PREDIV1CLK<sp/>=<sp/>PLL2<sp/>/<sp/>5<sp/>=<sp/>8<sp/>MHz<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR2<sp/>&amp;=<sp/>(uint32_t)~(RCC_CFGR2_PREDIV2<sp/>|<sp/>RCC_CFGR2_PLL2MUL<sp/>|</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RCC_CFGR2_PREDIV1<sp/>|<sp/>RCC_CFGR2_PREDIV1SRC);</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR2<sp/>|=<sp/>(uint32_t)(RCC_CFGR2_PREDIV2_DIV5<sp/>|<sp/>RCC_CFGR2_PLL2MUL8<sp/>|</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RCC_CFGR2_PREDIV1SRC_PLL2<sp/>|<sp/>RCC_CFGR2_PREDIV1_DIV5);</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Enable<sp/>PLL2<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CR<sp/>|=<sp/>RCC_CR_PLL2ON;</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Wait<sp/>till<sp/>PLL2<sp/>is<sp/>ready<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">((<ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CR<sp/>&amp;<sp/>RCC_CR_PLL2RDY)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>PLL<sp/>configuration:<sp/>PLLCLK<sp/>=<sp/>PREDIV1<sp/>*<sp/>9<sp/>=<sp/>72<sp/>MHz<sp/>*/</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR<sp/>&amp;=<sp/>(uint32_t)~(<ref refid="group___peripheral___registers___bits___definition_1ga39cb6bd06fb93eed1e2fe9da0297810a" kindref="member">RCC_CFGR_PLLXTPRE</ref><sp/>|<sp/><ref refid="group___peripheral___registers___bits___definition_1gaba4a5dbbd286f07a97f5aa6e6f3f6a57" kindref="member">RCC_CFGR_PLLSRC</ref><sp/>|<sp/><ref refid="group___peripheral___registers___bits___definition_1ga9735c088436b547fff3baae2bbaa0426" kindref="member">RCC_CFGR_PLLMULL</ref>);</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR<sp/>|=<sp/>(uint32_t)(RCC_CFGR_PLLXTPRE_PREDIV1<sp/>|<sp/>RCC_CFGR_PLLSRC_PREDIV1<sp/>|<sp/></highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___peripheral___registers___bits___definition_1ga384c396ec051b958c9a5781c13faf7e5" kindref="member">RCC_CFGR_PLLMULL9</ref>);<sp/></highlight></codeline>
<codeline lineno="1052"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>PLL<sp/>configuration:<sp/>PLLCLK<sp/>=<sp/>HSE<sp/>*<sp/>9<sp/>=<sp/>72<sp/>MHz<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR<sp/>&amp;=<sp/>(uint32_t)((uint32_t)~(<ref refid="group___peripheral___registers___bits___definition_1gaba4a5dbbd286f07a97f5aa6e6f3f6a57" kindref="member">RCC_CFGR_PLLSRC</ref><sp/>|<sp/><ref refid="group___peripheral___registers___bits___definition_1ga39cb6bd06fb93eed1e2fe9da0297810a" kindref="member">RCC_CFGR_PLLXTPRE</ref><sp/>|</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___peripheral___registers___bits___definition_1ga9735c088436b547fff3baae2bbaa0426" kindref="member">RCC_CFGR_PLLMULL</ref>));</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR<sp/>|=<sp/>(uint32_t)(<ref refid="group___peripheral___registers___bits___definition_1ga5fd58409765f79b08b2b5d86a2c322f4" kindref="member">RCC_CFGR_PLLSRC_HSE</ref><sp/>|<sp/><ref refid="group___peripheral___registers___bits___definition_1ga384c396ec051b958c9a5781c13faf7e5" kindref="member">RCC_CFGR_PLLMULL9</ref>);</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>STM32F10X_CL<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1058"><highlight class="normal"></highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Enable<sp/>PLL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CR<sp/>|=<sp/><ref refid="group___peripheral___registers___bits___definition_1gad0e73d5b0a4883e074d40029b49ee47e" kindref="member">RCC_CR_PLLON</ref>;</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"></highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Wait<sp/>till<sp/>PLL<sp/>is<sp/>ready<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">((<ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CR<sp/>&amp;<sp/><ref refid="group___peripheral___registers___bits___definition_1gafa12d7ac6a7f0f91d066aeb2c6071888" kindref="member">RCC_CR_PLLRDY</ref>)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Select<sp/>PLL<sp/>as<sp/>system<sp/>clock<sp/>source<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR<sp/>&amp;=<sp/>(uint32_t)((uint32_t)~(<ref refid="group___peripheral___registers___bits___definition_1ga0eea5e5f7743a7e8995b8beeb18355c1" kindref="member">RCC_CFGR_SW</ref>));</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR<sp/>|=<sp/>(uint32_t)<ref refid="group___peripheral___registers___bits___definition_1ga87389cacb2eaf53730da13a2a33cd487" kindref="member">RCC_CFGR_SW_PLL</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1070"><highlight class="normal"></highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Wait<sp/>till<sp/>PLL<sp/>is<sp/>used<sp/>as<sp/>system<sp/>clock<sp/>source<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((<ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR<sp/>&amp;<sp/>(uint32_t)<ref refid="group___peripheral___registers___bits___definition_1ga15bf2269500dc97e137315f44aa015c9" kindref="member">RCC_CFGR_SWS</ref>)<sp/>!=<sp/>(uint32_t)0x08)</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/>{<sp/></highlight><highlight class="comment">/*<sp/>If<sp/>HSE<sp/>fails<sp/>to<sp/>start-up,<sp/>the<sp/>application<sp/>will<sp/>have<sp/>wrong<sp/>clock<sp/></highlight></codeline>
<codeline lineno="1078"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>configuration.<sp/>User<sp/>can<sp/>add<sp/>here<sp/>some<sp/>code<sp/>to<sp/>deal<sp/>with<sp/>this<sp/>error<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1080"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1082"><highlight class="normal"></highlight></codeline>
<codeline lineno="1094"><highlight class="comment">/*******************<sp/>(C)<sp/>COPYRIGHT<sp/>2011<sp/>STMicroelectronics<sp/>*****END<sp/>OF<sp/>FILE****/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/cmsis/system_stm32f10x.c"/>
  </compounddef>
</doxygen>
