<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="__syscalls_8c" kind="file" language="C++">
    <compoundname>_syscalls.c</compoundname>
    <includes local="no">_ansi.h</includes>
    <includes local="no">_syslist.h</includes>
    <includes local="no">errno.h</includes>
    <includes local="no">sys/stat.h</includes>
    <includes local="no">sys/time.h</includes>
    <includes local="no">sys/times.h</includes>
    <includes local="no">limits.h</includes>
    <includes local="no">signal.h</includes>
    <incdepgraph>
      <node id="817">
        <label>sys/stat.h</label>
      </node>
      <node id="814">
        <label>_ansi.h</label>
      </node>
      <node id="819">
        <label>sys/times.h</label>
      </node>
      <node id="816">
        <label>errno.h</label>
      </node>
      <node id="813">
        <label>C:/Users/anilj/Desktop/cmsis/sorc/system/src/newlib/_syscalls.c</label>
        <link refid="__syscalls_8c"/>
        <childnode refid="814" relation="include">
        </childnode>
        <childnode refid="815" relation="include">
        </childnode>
        <childnode refid="816" relation="include">
        </childnode>
        <childnode refid="817" relation="include">
        </childnode>
        <childnode refid="818" relation="include">
        </childnode>
        <childnode refid="819" relation="include">
        </childnode>
        <childnode refid="820" relation="include">
        </childnode>
        <childnode refid="821" relation="include">
        </childnode>
      </node>
      <node id="815">
        <label>_syslist.h</label>
      </node>
      <node id="820">
        <label>limits.h</label>
      </node>
      <node id="821">
        <label>signal.h</label>
      </node>
      <node id="818">
        <label>sys/time.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="__syscalls_8c_1ad65a8842cc674e3ddf69355898c0ecbf" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int errno</definition>
        <argsstring></argsstring>
        <name>errno</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/newlib/_syscalls.c" line="9" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/newlib/_syscalls.c" bodystart="9" bodyend="-1"/>
        <referencedby refid="__sbrk_8c_1aae54d7b9578ba1fc171ce6f30f4c68a3" compoundref="__sbrk_8c" startline="22" endline="62">_sbrk</referencedby>
        <referencedby refid="__syscalls_8c_1a48f210aea9cd604209f996c3c909005a" compoundref="__syscalls_8c" startline="65" endline="69">raise</referencedby>
        <referencedby refid="__syscalls_8c_1a13a9bc88662fbfb3a256c3e90f8dd906" compoundref="__syscalls_8c" startline="75" endline="79">kill</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="__syscalls_8c_1a5844d415953685a00a9b402ceb3cc2ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *__dso_handle</type>
        <definition>void* __dso_handle __attribute__</definition>
        <argsstring>((weak))</argsstring>
        <name>__attribute__</name>
        <param>
          <type>(weak)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/newlib/_syscalls.c" line="10" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/newlib/_syscalls.c" bodystart="35" bodyend="55"/>
        <referencedby refid="__syscalls_8c_1a13a9bc88662fbfb3a256c3e90f8dd906" compoundref="__syscalls_8c" startline="75" endline="79">kill</referencedby>
      </memberdef>
      <memberdef kind="function" id="__syscalls_8c_1a33bc2e95322efcc789c6cb81624b5527" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void __initialize_args</definition>
        <argsstring>(int *p_argc, char ***p_argv)</argsstring>
        <name>__initialize_args</name>
        <param>
          <type>int *</type>
          <declname>p_argc</declname>
        </param>
        <param>
          <type>char ***</type>
          <declname>p_argv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/newlib/_syscalls.c" line="27" column="1"/>
        <referencedby refid="__syscalls_8c_1a13a9bc88662fbfb3a256c3e90f8dd906" compoundref="__syscalls_8c" startline="75" endline="79">kill</referencedby>
      </memberdef>
      <memberdef kind="function" id="__syscalls_8c_1a48f210aea9cd604209f996c3c909005a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int raise</definition>
        <argsstring>(int sig __attribute__((unused)))</argsstring>
        <name>raise</name>
        <param>
          <type>int sig </type>
          <declname>__attribute__</declname>
          <array>(unused)</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/newlib/_syscalls.c" line="65" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/newlib/_syscalls.c" bodystart="65" bodyend="69"/>
        <references refid="__syscalls_8c_1ad65a8842cc674e3ddf69355898c0ecbf" compoundref="__syscalls_8c" startline="9">errno</references>
        <references refid="__syscalls_8c_1a4539db972bcf3dd8c8b429af0dc3789d">kill</references>
      </memberdef>
      <memberdef kind="function" id="__syscalls_8c_1a4539db972bcf3dd8c8b429af0dc3789d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int kill</definition>
        <argsstring>(pid_t pid, int sig)</argsstring>
        <name>kill</name>
        <param>
          <type>pid_t</type>
          <declname>pid</declname>
        </param>
        <param>
          <type>int</type>
          <declname>sig</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/newlib/_syscalls.c" line="72" column="1"/>
        <referencedby refid="__syscalls_8c_1a48f210aea9cd604209f996c3c909005a" compoundref="__syscalls_8c" startline="65" endline="69">raise</referencedby>
      </memberdef>
      <memberdef kind="function" id="__syscalls_8c_1a13a9bc88662fbfb3a256c3e90f8dd906" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int kill</definition>
        <argsstring>(pid_t pid __attribute__((unused)), int sig __attribute__((unused)))</argsstring>
        <name>kill</name>
        <param>
          <type>pid_t pid </type>
          <declname>__attribute__</declname>
          <array>(unused)</array>
        </param>
        <param>
          <type>int sig </type>
          <declname>__attribute__</declname>
          <array>(unused)</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/newlib/_syscalls.c" line="75" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/newlib/_syscalls.c" bodystart="75" bodyend="79"/>
        <references refid="__syscalls_8c_1ad65a8842cc674e3ddf69355898c0ecbf" compoundref="__syscalls_8c" startline="9">errno</references>
        <references refid="__syscalls_8c_1a5844d415953685a00a9b402ceb3cc2ab" compoundref="__syscalls_8c" startline="35" endline="55">__attribute__</references>
        <references refid="__syscalls_8c_1a33bc2e95322efcc789c6cb81624b5527">__initialize_args</references>
        <references refid="semihosting_8h_1a368e5417dfc8239b696ecf3233a6a955a437a9a0c4a70dbedcb11851511357ab6" compoundref="semihosting_8h" startline="22">SEMIHOSTING_SYS_GET_CMDLINE</references>
        <references refid="semihosting_8h_1a368e5417dfc8239b696ecf3233a6a955a97308e2a5471b6725e9198f057870cb2" compoundref="semihosting_8h" startline="41">ADP_Stopped_ApplicationExit</references>
        <references refid="semihosting_8h_1a368e5417dfc8239b696ecf3233a6a955a09774fa193a1c79327c02f3c5f26d393" compoundref="semihosting_8h" startline="42">ADP_Stopped_RunTimeError</references>
        <references refid="semihosting_8h_1a368e5417dfc8239b696ecf3233a6a955ae1ed8ed0ec82d76628671bfc6b96c2d8" compoundref="semihosting_8h" startline="26">SEMIHOSTING_SYS_OPEN</references>
        <references refid="semihosting_8h_1a368e5417dfc8239b696ecf3233a6a955aa3a31b77abd833dde82fa4e0b8611bc9" compoundref="semihosting_8h" startline="20">SEMIHOSTING_SYS_ERRNO</references>
        <references refid="semihosting_8h_1a368e5417dfc8239b696ecf3233a6a955ac778e8c9d34312cc374e6c3944739585" compoundref="semihosting_8h" startline="27">SEMIHOSTING_SYS_READ</references>
        <references refid="semihosting_8h_1a368e5417dfc8239b696ecf3233a6a955a3e949e38172269f893161095c65220dd" compoundref="semihosting_8h" startline="21">SEMIHOSTING_SYS_FLEN</references>
        <references refid="semihosting_8h_1a368e5417dfc8239b696ecf3233a6a955a6bc8a00c58c3d3d70d816ae494772058" compoundref="semihosting_8h" startline="31">SEMIHOSTING_SYS_SEEK</references>
        <references refid="semihosting_8h_1a368e5417dfc8239b696ecf3233a6a955a383c529db53a8cc54631bf18bb9531d3" compoundref="semihosting_8h" startline="36">SEMIHOSTING_SYS_WRITE</references>
        <references refid="semihosting_8h_1a368e5417dfc8239b696ecf3233a6a955ad3510bf376f9de79b96cf64c5086c191" compoundref="semihosting_8h" startline="17">SEMIHOSTING_SYS_CLOSE</references>
        <references refid="semihosting_8h_1a368e5417dfc8239b696ecf3233a6a955a6967f75e9d753f6be0a79fab3c21847c" compoundref="semihosting_8h" startline="29">SEMIHOSTING_SYS_REMOVE</references>
        <references refid="semihosting_8h_1a368e5417dfc8239b696ecf3233a6a955a9771471947fe184e3eb3a1eb02a862e9" compoundref="semihosting_8h" startline="34">SEMIHOSTING_SYS_TIME</references>
        <references refid="semihosting_8h_1a368e5417dfc8239b696ecf3233a6a955a9926f9916a67ac06dca9dd4a37d287d1" compoundref="semihosting_8h" startline="18">SEMIHOSTING_SYS_CLOCK</references>
        <references refid="semihosting_8h_1a368e5417dfc8239b696ecf3233a6a955aab298cac69009bc12c76335c5f0c6293" compoundref="semihosting_8h" startline="25">SEMIHOSTING_SYS_ISTTY</references>
        <references refid="semihosting_8h_1a368e5417dfc8239b696ecf3233a6a955acfe3855bb6707f6223f63f3561b48c4b" compoundref="semihosting_8h" startline="32">SEMIHOSTING_SYS_SYSTEM</references>
        <references refid="semihosting_8h_1a368e5417dfc8239b696ecf3233a6a955aeeb2d6fbf5175ae3573d46080f9034f8" compoundref="semihosting_8h" startline="30">SEMIHOSTING_SYS_RENAME</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>µOS++<sp/>III<sp/>distribution.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Parts<sp/>of<sp/>this<sp/>file<sp/>are<sp/>from<sp/>the<sp/>newlib<sp/>sources,<sp/>issued<sp/>under<sp/>GPL.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2014<sp/>Liviu<sp/>Ionescu</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9" refid="__syscalls_8c_1ad65a8842cc674e3ddf69355898c0ecbf" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="__syscalls_8c_1ad65a8842cc674e3ddf69355898c0ecbf" kindref="member">errno</ref>;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*__dso_handle<sp/><ref refid="__syscalls_8c_1a5844d415953685a00a9b402ceb3cc2ab" kindref="member">__attribute__</ref><sp/>((weak));</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(OS_USE_SEMIHOSTING)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;_ansi.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;_syslist.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;errno.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//#include<sp/>&lt;sys/types.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/stat.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/times.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;limits.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;signal.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><ref refid="__syscalls_8c_1a33bc2e95322efcc789c6cb81624b5527" kindref="member">__initialize_args</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>p_argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">***<sp/>p_argv);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>the<sp/>standard<sp/>default<sp/>implementation<sp/>for<sp/>the<sp/>routine<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//<sp/>process<sp/>args.<sp/>It<sp/>returns<sp/>a<sp/>single<sp/>empty<sp/>arg.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//<sp/>For<sp/>semihosting<sp/>applications,<sp/>this<sp/>is<sp/>redefined<sp/>to<sp/>get<sp/>the<sp/>real</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//<sp/>args<sp/>from<sp/>the<sp/>debugger.<sp/>You<sp/>can<sp/>also<sp/>use<sp/>it<sp/>if<sp/>you<sp/>decide<sp/>to<sp/>keep</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//<sp/>some<sp/>args<sp/>in<sp/>a<sp/>non-volatile<sp/>memory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="__syscalls_8c_1a5844d415953685a00a9b402ceb3cc2ab" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="__syscalls_8c_1a5844d415953685a00a9b402ceb3cc2ab" kindref="member">__attribute__</ref>((weak))</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><ref refid="__syscalls_8c_1a33bc2e95322efcc789c6cb81624b5527" kindref="member">__initialize_args</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>p_argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">***<sp/>p_argv)</highlight></codeline>
<codeline lineno="37"><highlight class="normal">{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>By<sp/>the<sp/>time<sp/>we<sp/>reach<sp/>this,<sp/>the<sp/>data<sp/>and<sp/>bss<sp/>should<sp/>have<sp/>been<sp/>initialised.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>strings<sp/>pointed<sp/>to<sp/>by<sp/>the<sp/>argv<sp/>array<sp/>shall<sp/>be<sp/>modifiable<sp/>by<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>program,<sp/>and<sp/>retain<sp/>their<sp/>last-stored<sp/>values<sp/>between<sp/>program<sp/>startup</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>program<sp/>termination.<sp/>(static,<sp/>no<sp/>const)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>name[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>string<sp/>pointed<sp/>to<sp/>by<sp/>argv[0]<sp/>represents<sp/>the<sp/>program<sp/>name;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>argv[0][0]<sp/>shall<sp/>be<sp/>the<sp/>null<sp/>character<sp/>if<sp/>the<sp/>program<sp/>name<sp/>is<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>available<sp/>from<sp/>the<sp/>host<sp/>environment.<sp/>argv[argc]<sp/>shall<sp/>be<sp/>a<sp/>null<sp/>pointer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>(static,<sp/>no<sp/>const)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>argv[2]<sp/>=</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>name,<sp/>NULL<sp/>};</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>*p_argc<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>*p_argv<sp/>=<sp/>&amp;argv[0];</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="55"><highlight class="normal">}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">//<sp/>These<sp/>functions<sp/>are<sp/>defined<sp/>here<sp/>to<sp/>avoid<sp/>linker<sp/>errors<sp/>in<sp/>freestanding</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">//<sp/>applications.<sp/>They<sp/>might<sp/>be<sp/>called<sp/>in<sp/>some<sp/>error<sp/>cases<sp/>from<sp/>library</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">//<sp/>code.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>you<sp/>detect<sp/>other<sp/>functions<sp/>to<sp/>be<sp/>needed,<sp/>just<sp/>let<sp/>us<sp/>know</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>we&apos;ll<sp/>add<sp/>them.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="__syscalls_8c_1a48f210aea9cd604209f996c3c909005a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">raise</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sig<sp/><ref refid="__syscalls_8c_1a5844d415953685a00a9b402ceb3cc2ab" kindref="member">__attribute__</ref>((unused)))</highlight></codeline>
<codeline lineno="66"><highlight class="normal">{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><ref refid="__syscalls_8c_1ad65a8842cc674e3ddf69355898c0ecbf" kindref="member">errno</ref><sp/>=<sp/>ENOSYS;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="69"><highlight class="normal">}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><ref refid="__syscalls_8c_1a4539db972bcf3dd8c8b429af0dc3789d" kindref="member">kill</ref>(pid_t<sp/>pid,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sig);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="__syscalls_8c_1a13a9bc88662fbfb3a256c3e90f8dd906" refkind="member"><highlight class="normal"><ref refid="__syscalls_8c_1a4539db972bcf3dd8c8b429af0dc3789d" kindref="member">kill</ref>(pid_t<sp/>pid<sp/><ref refid="__syscalls_8c_1a5844d415953685a00a9b402ceb3cc2ab" kindref="member">__attribute__</ref>((unused)),<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sig<sp/><ref refid="__syscalls_8c_1a5844d415953685a00a9b402ceb3cc2ab" kindref="member">__attribute__</ref>((unused)))</highlight></codeline>
<codeline lineno="76"><highlight class="normal">{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><ref refid="__syscalls_8c_1ad65a8842cc674e3ddf69355898c0ecbf" kindref="member">errno</ref><sp/>=<sp/>ENOSYS;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="79"><highlight class="normal">}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>!defined(OS_USE_SEMIHOSTING)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>you<sp/>need<sp/>the<sp/>empty<sp/>definitions,<sp/>remove<sp/>the<sp/>-ffreestanding<sp/>option.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__STDC_HOSTED__<sp/>==<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>__env[1]<sp/>=</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>{<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>environ<sp/>=<sp/>__env;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(OS_USE_SEMIHOSTING)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Forward<sp/>declarations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal">_chown(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>path,<sp/>uid_t<sp/>owner,<sp/>gid_t<sp/>group);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal">_close(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fildes);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal">_execve(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>name,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>argv,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>env);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal">_fork(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal">_fstat(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fildes,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>stat*<sp/>st);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal">_getpid(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal">_gettimeofday(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>timeval*<sp/>ptimeval,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>ptimezone);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal">_isatty(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>file);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal">_kill(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pid,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sig);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal">_link(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>existing,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>_new);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal">_lseek(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>file,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ptr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dir);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal">_open(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>file,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mode);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal">_read(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>file,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>ptr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal">_readlink(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>path,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>buf,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>bufsize);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal">_stat(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>file,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>stat*<sp/>st);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal">_symlink(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>path1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>path2);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal">clock_t</highlight></codeline>
<codeline lineno="146"><highlight class="normal">_times(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>tms*<sp/>buf);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal">_unlink(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>name);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal">_wait(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>status);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal">_write(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>file,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>ptr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Definitions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="__syscalls_8c_1a5844d415953685a00a9b402ceb3cc2ab" kindref="member">__attribute__</ref>((weak))</highlight></codeline>
<codeline lineno="160"><highlight class="normal">_chown(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>path<sp/><ref refid="__syscalls_8c_1a5844d415953685a00a9b402ceb3cc2ab" kindref="member">__attribute__</ref>((unused)),</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>uid_t<sp/>owner<sp/><ref refid="__syscalls_8c_1a5844d415953685a00a9b402ceb3cc2ab" kindref="member">__attribute__</ref>((unused)),<sp/>gid_t<sp/>group<sp/><ref refid="__syscalls_8c_1a5844d415953685a00a9b402ceb3cc2ab" kindref="member">__attribute__</ref>((unused)))</highlight></codeline>
<codeline lineno="162"><highlight class="normal">{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><ref refid="__syscalls_8c_1ad65a8842cc674e3ddf69355898c0ecbf" kindref="member">errno</ref><sp/>=<sp/>ENOSYS;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="165"><highlight class="normal">}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="__syscalls_8c_1a5844d415953685a00a9b402ceb3cc2ab" kindref="member">__attribute__</ref>((weak))</highlight></codeline>
<codeline lineno="168"><highlight class="normal">_close(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fildes<sp/><ref refid="__syscalls_8c_1a5844d415953685a00a9b402ceb3cc2ab" kindref="member">__attribute__</ref>((unused)))</highlight></codeline>
<codeline lineno="169"><highlight class="normal">{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><ref refid="__syscalls_8c_1ad65a8842cc674e3ddf69355898c0ecbf" kindref="member">errno</ref><sp/>=<sp/>ENOSYS;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="172"><highlight class="normal">}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="__syscalls_8c_1a5844d415953685a00a9b402ceb3cc2ab" kindref="member">__attribute__</ref>((weak))</highlight></codeline>
<codeline lineno="175"><highlight class="normal">_execve(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>name<sp/><ref refid="__syscalls_8c_1a5844d415953685a00a9b402ceb3cc2ab" kindref="member">__attribute__</ref>((unused)),<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>argv<sp/><ref refid="__syscalls_8c_1a5844d415953685a00a9b402ceb3cc2ab" kindref="member">__attribute__</ref>((unused)),</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>env<sp/><ref refid="__syscalls_8c_1a5844d415953685a00a9b402ceb3cc2ab" kindref="member">__attribute__</ref>((unused)))</highlight></codeline>
<codeline lineno="177"><highlight class="normal">{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><ref refid="__syscalls_8c_1ad65a8842cc674e3ddf69355898c0ecbf" kindref="member">errno</ref><sp/>=<sp/>ENOSYS;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="180"><highlight class="normal">}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="__syscalls_8c_1a5844d415953685a00a9b402ceb3cc2ab" kindref="member">__attribute__</ref>((weak))</highlight></codeline>
<codeline lineno="183"><highlight class="normal">_fork(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="184"><highlight class="normal">{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><ref refid="__syscalls_8c_1ad65a8842cc674e3ddf69355898c0ecbf" kindref="member">errno</ref><sp/>=<sp/>ENOSYS;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="187"><highlight class="normal">}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="__syscalls_8c_1a5844d415953685a00a9b402ceb3cc2ab" kindref="member">__attribute__</ref>((weak))</highlight></codeline>
<codeline lineno="190"><highlight class="normal">_fstat(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fildes<sp/><ref refid="__syscalls_8c_1a5844d415953685a00a9b402ceb3cc2ab" kindref="member">__attribute__</ref>((unused)),</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>stat*<sp/>st<sp/><ref refid="__syscalls_8c_1a5844d415953685a00a9b402ceb3cc2ab" kindref="member">__attribute__</ref>((unused)))</highlight></codeline>
<codeline lineno="192"><highlight class="normal">{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><ref refid="__syscalls_8c_1ad65a8842cc674e3ddf69355898c0ecbf" kindref="member">errno</ref><sp/>=<sp/>ENOSYS;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="195"><highlight class="normal">}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="__syscalls_8c_1a5844d415953685a00a9b402ceb3cc2ab" kindref="member">__attribute__</ref>((weak))</highlight></codeline>
<codeline lineno="198"><highlight class="normal">_getpid(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="199"><highlight class="normal">{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><ref refid="__syscalls_8c_1ad65a8842cc674e3ddf69355898c0ecbf" kindref="member">errno</ref><sp/>=<sp/>ENOSYS;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="202"><highlight class="normal">}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="__syscalls_8c_1a5844d415953685a00a9b402ceb3cc2ab" kindref="member">__attribute__</ref>((weak))</highlight></codeline>
<codeline lineno="205"><highlight class="normal">_gettimeofday(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>timeval*<sp/>ptimeval<sp/><ref refid="__syscalls_8c_1a5844d415953685a00a9b402ceb3cc2ab" kindref="member">__attribute__</ref>((unused)),</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>ptimezone<sp/><ref refid="__syscalls_8c_1a5844d415953685a00a9b402ceb3cc2ab" kindref="member">__attribute__</ref>((unused)))</highlight></codeline>
<codeline lineno="207"><highlight class="normal">{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><ref refid="__syscalls_8c_1ad65a8842cc674e3ddf69355898c0ecbf" kindref="member">errno</ref><sp/>=<sp/>ENOSYS;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="210"><highlight class="normal">}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="__syscalls_8c_1a5844d415953685a00a9b402ceb3cc2ab" kindref="member">__attribute__</ref>((weak))</highlight></codeline>
<codeline lineno="213"><highlight class="normal">_isatty(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>file<sp/><ref refid="__syscalls_8c_1a5844d415953685a00a9b402ceb3cc2ab" kindref="member">__attribute__</ref>((unused)))</highlight></codeline>
<codeline lineno="214"><highlight class="normal">{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><ref refid="__syscalls_8c_1ad65a8842cc674e3ddf69355898c0ecbf" kindref="member">errno</ref><sp/>=<sp/>ENOSYS;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="217"><highlight class="normal">}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="__syscalls_8c_1a5844d415953685a00a9b402ceb3cc2ab" kindref="member">__attribute__</ref>((weak))</highlight></codeline>
<codeline lineno="220"><highlight class="normal">_kill(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pid<sp/><ref refid="__syscalls_8c_1a5844d415953685a00a9b402ceb3cc2ab" kindref="member">__attribute__</ref>((unused)),<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sig<sp/><ref refid="__syscalls_8c_1a5844d415953685a00a9b402ceb3cc2ab" kindref="member">__attribute__</ref>((unused)))</highlight></codeline>
<codeline lineno="221"><highlight class="normal">{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><ref refid="__syscalls_8c_1ad65a8842cc674e3ddf69355898c0ecbf" kindref="member">errno</ref><sp/>=<sp/>ENOSYS;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="224"><highlight class="normal">}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="__syscalls_8c_1a5844d415953685a00a9b402ceb3cc2ab" kindref="member">__attribute__</ref>((weak))</highlight></codeline>
<codeline lineno="227"><highlight class="normal">_link(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>existing<sp/><ref refid="__syscalls_8c_1a5844d415953685a00a9b402ceb3cc2ab" kindref="member">__attribute__</ref>((unused)),</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>_new<sp/><ref refid="__syscalls_8c_1a5844d415953685a00a9b402ceb3cc2ab" kindref="member">__attribute__</ref>((unused)))</highlight></codeline>
<codeline lineno="229"><highlight class="normal">{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><ref refid="__syscalls_8c_1ad65a8842cc674e3ddf69355898c0ecbf" kindref="member">errno</ref><sp/>=<sp/>ENOSYS;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="232"><highlight class="normal">}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="__syscalls_8c_1a5844d415953685a00a9b402ceb3cc2ab" kindref="member">__attribute__</ref>((weak))</highlight></codeline>
<codeline lineno="235"><highlight class="normal">_lseek(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>file<sp/><ref refid="__syscalls_8c_1a5844d415953685a00a9b402ceb3cc2ab" kindref="member">__attribute__</ref>((unused)),<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ptr<sp/><ref refid="__syscalls_8c_1a5844d415953685a00a9b402ceb3cc2ab" kindref="member">__attribute__</ref>((unused)),</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dir<sp/><ref refid="__syscalls_8c_1a5844d415953685a00a9b402ceb3cc2ab" kindref="member">__attribute__</ref>((unused)))</highlight></codeline>
<codeline lineno="237"><highlight class="normal">{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><ref refid="__syscalls_8c_1ad65a8842cc674e3ddf69355898c0ecbf" kindref="member">errno</ref><sp/>=<sp/>ENOSYS;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="240"><highlight class="normal">}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="__syscalls_8c_1a5844d415953685a00a9b402ceb3cc2ab" kindref="member">__attribute__</ref>((weak))</highlight></codeline>
<codeline lineno="243"><highlight class="normal">_open(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>file<sp/><ref refid="__syscalls_8c_1a5844d415953685a00a9b402ceb3cc2ab" kindref="member">__attribute__</ref>((unused)),<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags<sp/><ref refid="__syscalls_8c_1a5844d415953685a00a9b402ceb3cc2ab" kindref="member">__attribute__</ref>((unused)),</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mode<sp/><ref refid="__syscalls_8c_1a5844d415953685a00a9b402ceb3cc2ab" kindref="member">__attribute__</ref>((unused)))</highlight></codeline>
<codeline lineno="245"><highlight class="normal">{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><ref refid="__syscalls_8c_1ad65a8842cc674e3ddf69355898c0ecbf" kindref="member">errno</ref><sp/>=<sp/>ENOSYS;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="248"><highlight class="normal">}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="__syscalls_8c_1a5844d415953685a00a9b402ceb3cc2ab" kindref="member">__attribute__</ref>((weak))</highlight></codeline>
<codeline lineno="251"><highlight class="normal">_read(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>file<sp/><ref refid="__syscalls_8c_1a5844d415953685a00a9b402ceb3cc2ab" kindref="member">__attribute__</ref>((unused)),<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>ptr<sp/><ref refid="__syscalls_8c_1a5844d415953685a00a9b402ceb3cc2ab" kindref="member">__attribute__</ref>((unused)),</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len<sp/><ref refid="__syscalls_8c_1a5844d415953685a00a9b402ceb3cc2ab" kindref="member">__attribute__</ref>((unused)))</highlight></codeline>
<codeline lineno="253"><highlight class="normal">{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><ref refid="__syscalls_8c_1ad65a8842cc674e3ddf69355898c0ecbf" kindref="member">errno</ref><sp/>=<sp/>ENOSYS;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="256"><highlight class="normal">}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="__syscalls_8c_1a5844d415953685a00a9b402ceb3cc2ab" kindref="member">__attribute__</ref>((weak))</highlight></codeline>
<codeline lineno="259"><highlight class="normal">_readlink(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>path<sp/><ref refid="__syscalls_8c_1a5844d415953685a00a9b402ceb3cc2ab" kindref="member">__attribute__</ref>((unused)),</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>buf<sp/><ref refid="__syscalls_8c_1a5844d415953685a00a9b402ceb3cc2ab" kindref="member">__attribute__</ref>((unused)),<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>bufsize<sp/><ref refid="__syscalls_8c_1a5844d415953685a00a9b402ceb3cc2ab" kindref="member">__attribute__</ref>((unused)))</highlight></codeline>
<codeline lineno="261"><highlight class="normal">{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><ref refid="__syscalls_8c_1ad65a8842cc674e3ddf69355898c0ecbf" kindref="member">errno</ref><sp/>=<sp/>ENOSYS;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="264"><highlight class="normal">}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="__syscalls_8c_1a5844d415953685a00a9b402ceb3cc2ab" kindref="member">__attribute__</ref>((weak))</highlight></codeline>
<codeline lineno="267"><highlight class="normal">_stat(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>file<sp/><ref refid="__syscalls_8c_1a5844d415953685a00a9b402ceb3cc2ab" kindref="member">__attribute__</ref>((unused)),</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>stat*<sp/>st<sp/><ref refid="__syscalls_8c_1a5844d415953685a00a9b402ceb3cc2ab" kindref="member">__attribute__</ref>((unused)))</highlight></codeline>
<codeline lineno="269"><highlight class="normal">{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><ref refid="__syscalls_8c_1ad65a8842cc674e3ddf69355898c0ecbf" kindref="member">errno</ref><sp/>=<sp/>ENOSYS;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="272"><highlight class="normal">}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="__syscalls_8c_1a5844d415953685a00a9b402ceb3cc2ab" kindref="member">__attribute__</ref>((weak))</highlight></codeline>
<codeline lineno="275"><highlight class="normal">_symlink(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>path1<sp/><ref refid="__syscalls_8c_1a5844d415953685a00a9b402ceb3cc2ab" kindref="member">__attribute__</ref>((unused)),</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>path2<sp/><ref refid="__syscalls_8c_1a5844d415953685a00a9b402ceb3cc2ab" kindref="member">__attribute__</ref>((unused)))</highlight></codeline>
<codeline lineno="277"><highlight class="normal">{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><ref refid="__syscalls_8c_1ad65a8842cc674e3ddf69355898c0ecbf" kindref="member">errno</ref><sp/>=<sp/>ENOSYS;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="280"><highlight class="normal">}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal">clock_t<sp/><ref refid="__syscalls_8c_1a5844d415953685a00a9b402ceb3cc2ab" kindref="member">__attribute__</ref>((weak))</highlight></codeline>
<codeline lineno="283"><highlight class="normal">_times(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>tms*<sp/>buf<sp/><ref refid="__syscalls_8c_1a5844d415953685a00a9b402ceb3cc2ab" kindref="member">__attribute__</ref>((unused)))</highlight></codeline>
<codeline lineno="284"><highlight class="normal">{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><ref refid="__syscalls_8c_1ad65a8842cc674e3ddf69355898c0ecbf" kindref="member">errno</ref><sp/>=<sp/>ENOSYS;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((clock_t)<sp/>-1);</highlight></codeline>
<codeline lineno="287"><highlight class="normal">}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="__syscalls_8c_1a5844d415953685a00a9b402ceb3cc2ab" kindref="member">__attribute__</ref>((weak))</highlight></codeline>
<codeline lineno="290"><highlight class="normal">_unlink(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>name<sp/><ref refid="__syscalls_8c_1a5844d415953685a00a9b402ceb3cc2ab" kindref="member">__attribute__</ref>((unused)))</highlight></codeline>
<codeline lineno="291"><highlight class="normal">{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><ref refid="__syscalls_8c_1ad65a8842cc674e3ddf69355898c0ecbf" kindref="member">errno</ref><sp/>=<sp/>ENOSYS;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="294"><highlight class="normal">}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="__syscalls_8c_1a5844d415953685a00a9b402ceb3cc2ab" kindref="member">__attribute__</ref>((weak))</highlight></codeline>
<codeline lineno="297"><highlight class="normal">_wait(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>status<sp/><ref refid="__syscalls_8c_1a5844d415953685a00a9b402ceb3cc2ab" kindref="member">__attribute__</ref>((unused)))</highlight></codeline>
<codeline lineno="298"><highlight class="normal">{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><ref refid="__syscalls_8c_1ad65a8842cc674e3ddf69355898c0ecbf" kindref="member">errno</ref><sp/>=<sp/>ENOSYS;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="301"><highlight class="normal">}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="__syscalls_8c_1a5844d415953685a00a9b402ceb3cc2ab" kindref="member">__attribute__</ref>((weak))</highlight></codeline>
<codeline lineno="304"><highlight class="normal">_write(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>file<sp/><ref refid="__syscalls_8c_1a5844d415953685a00a9b402ceb3cc2ab" kindref="member">__attribute__</ref>((unused)),<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>ptr<sp/><ref refid="__syscalls_8c_1a5844d415953685a00a9b402ceb3cc2ab" kindref="member">__attribute__</ref>((unused)),</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len<sp/><ref refid="__syscalls_8c_1a5844d415953685a00a9b402ceb3cc2ab" kindref="member">__attribute__</ref>((unused)))</highlight></codeline>
<codeline lineno="306"><highlight class="normal">{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><ref refid="__syscalls_8c_1ad65a8842cc674e3ddf69355898c0ecbf" kindref="member">errno</ref><sp/>=<sp/>ENOSYS;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="309"><highlight class="normal">}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/>//<sp/>defined(OS_USE_SEMIHOSTING)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Support<sp/>files<sp/>for<sp/>GNU<sp/>libc.<sp/><sp/>Files<sp/>in<sp/>the<sp/>system<sp/>namespace<sp/>go<sp/>here.</highlight></codeline>
<codeline lineno="318"><highlight class="comment"><sp/>Files<sp/>in<sp/>the<sp/>C<sp/>namespace<sp/>(ie<sp/>those<sp/>that<sp/>do<sp/>not<sp/>start<sp/>with<sp/>an</highlight></codeline>
<codeline lineno="319"><highlight class="comment"><sp/>underscore)<sp/>go<sp/>in<sp/>.c.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;_ansi.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight><highlight class="comment">//#include<sp/>&lt;sys/types.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/stat.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/fcntl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/times.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;errno.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;reent.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/wait.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ctype.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;signal.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="semihosting_8h" kindref="compound">arm/semihosting.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal">_kill<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pid,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sig);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><ref refid="__syscalls_8c_1a5844d415953685a00a9b402ceb3cc2ab" kindref="member">__attribute__</ref>((noreturn))</highlight></codeline>
<codeline lineno="345"><highlight class="normal">_exit<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Forward<sp/>declarations.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal">_system<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal">_rename<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal">_isatty<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="354"><highlight class="normal">clock_t</highlight></codeline>
<codeline lineno="355"><highlight class="normal">_times<sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>tms*);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal">_gettimeofday<sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>timeval<sp/>*,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal">_unlink<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal">_link<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal">_stat<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>stat*);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal">_fstat<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>stat*);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal">_swistat<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>stat*<sp/>st);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal">_getpid<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal">_close<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="374"><highlight class="normal">clock_t</highlight></codeline>
<codeline lineno="375"><highlight class="normal">_clock<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal">_swiclose<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal">_open<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>...);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal">_swiopen<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal">_write<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal">_swiwrite<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal">_lseek<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal">_swilseek<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal">_read<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal">_swiread<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal">initialise_monitor_handles<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><ref refid="__syscalls_8c_1a33bc2e95322efcc789c6cb81624b5527" kindref="member">__initialize_args</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>p_argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">***<sp/>p_argv);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal">checkerror<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal">error<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal">get_errno<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ARGS_BUF_ARRAY_SIZE<sp/>80</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ARGV_BUF_ARRAY_SIZE<sp/>10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal">{</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pCommandLine;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size;</highlight></codeline>
<codeline lineno="417"><highlight class="normal">}<sp/>CommandLineBlock;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><ref refid="__syscalls_8c_1a33bc2e95322efcc789c6cb81624b5527" kindref="member">__initialize_args</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>p_argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">***<sp/>p_argv)</highlight></codeline>
<codeline lineno="421"><highlight class="normal">{</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Array<sp/>of<sp/>chars<sp/>to<sp/>receive<sp/>the<sp/>command<sp/>line<sp/>from<sp/>the<sp/>host</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>args_buf[ARGS_BUF_ARRAY_SIZE];</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Array<sp/>of<sp/>pointers<sp/>to<sp/>store<sp/>the<sp/>final<sp/>argv<sp/>pointers<sp/>(pointing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>the<sp/>above<sp/>array).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>argv_buf[ARGV_BUF_ARRAY_SIZE];</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>isInArgument<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/>CommandLineBlock<sp/>cmdBlock;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/>cmdBlock.pCommandLine<sp/>=<sp/>args_buf;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/>cmdBlock.size<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(args_buf)<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>call_host<sp/>(<ref refid="semihosting_8h_1a368e5417dfc8239b696ecf3233a6a955a437a9a0c4a70dbedcb11851511357ab6" kindref="member">SEMIHOSTING_SYS_GET_CMDLINE</ref>,<sp/>&amp;cmdBlock);</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>case<sp/>the<sp/>host<sp/>send<sp/>more<sp/>than<sp/>we<sp/>can<sp/>chew,<sp/>limit<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>string<sp/>to<sp/>our<sp/>buffer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>args_buf[ARGS_BUF_ARRAY_SIZE<sp/>-<sp/>1]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>command<sp/>line<sp/>is<sp/>a<sp/>null<sp/>terminated<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>p<sp/>=<sp/>cmdBlock.pCommandLine;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>delim<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ch;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((ch<sp/>=<sp/>*p)<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isInArgument<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!isblank(ch))</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(argc</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>((</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(argv_buf)<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(argv_buf[0]))<sp/>-<sp/>1))</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ch<sp/>==<sp/></highlight><highlight class="charliteral">&apos;&quot;&apos;</highlight><highlight class="normal"><sp/>||<sp/>ch<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\&apos;&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Remember<sp/>the<sp/>delimiter<sp/>to<sp/>search<sp/>for<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>corresponding<sp/>terminator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delim<sp/>=<sp/>ch;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++p;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>skip<sp/>the<sp/>delimiter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ch<sp/>=<sp/>*p;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Remember<sp/>the<sp/>arg<sp/>beginning<sp/>address</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argv_buf[argc++]<sp/>=<sp/>p;</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isInArgument<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(delim<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((ch<sp/>==<sp/>delim))</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delim<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*p<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isInArgument<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isblank(ch))</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delim<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*p<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isInArgument<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++p;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(argc<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>args<sp/>found<sp/>in<sp/>string,<sp/>return<sp/>a<sp/>single<sp/>empty<sp/>name.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>args_buf[0]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>argv_buf[0]<sp/>=<sp/>&amp;args_buf[0];</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++argc;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Must<sp/>end<sp/>the<sp/>array<sp/>with<sp/>a<sp/>null<sp/>pointer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/>argv_buf[argc]<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/>*p_argc<sp/>=<sp/>argc;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/>*p_argv<sp/>=<sp/>&amp;argv_buf[0];</highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>temporary<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/>initialise_monitor_handles<sp/>();</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="511"><highlight class="normal">}</highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal">_exit<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status)</highlight></codeline>
<codeline lineno="517"><highlight class="normal">{</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>There<sp/>is<sp/>only<sp/>one<sp/>SWI<sp/>for<sp/>both<sp/>_exit<sp/>and<sp/>_kill.<sp/>For<sp/>_exit,<sp/>call</highlight></codeline>
<codeline lineno="519"><highlight class="comment"><sp/><sp/><sp/>the<sp/>SWI<sp/>with<sp/>the<sp/>second<sp/>argument<sp/>set<sp/>to<sp/>-1,<sp/>an<sp/>invalid<sp/>value<sp/>for</highlight></codeline>
<codeline lineno="520"><highlight class="comment"><sp/><sp/><sp/>signum,<sp/>so<sp/>that<sp/>the<sp/>SWI<sp/>handler<sp/>can<sp/>distinguish<sp/>the<sp/>two<sp/>calls.</highlight></codeline>
<codeline lineno="521"><highlight class="comment"><sp/><sp/><sp/>Note:<sp/>The<sp/>RDI<sp/>implementation<sp/>of<sp/>_kill<sp/>throws<sp/>away<sp/>both<sp/>its</highlight></codeline>
<codeline lineno="522"><highlight class="comment"><sp/><sp/><sp/>arguments.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/>report_exception<sp/>(</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>==<sp/>0<sp/>?<sp/><ref refid="semihosting_8h_1a368e5417dfc8239b696ecf3233a6a955a97308e2a5471b6725e9198f057870cb2" kindref="member">ADP_Stopped_ApplicationExit</ref><sp/>:<sp/><ref refid="semihosting_8h_1a368e5417dfc8239b696ecf3233a6a955a09774fa193a1c79327c02f3c5f26d393" kindref="member">ADP_Stopped_RunTimeError</ref>);</highlight></codeline>
<codeline lineno="525"><highlight class="normal">}</highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="__syscalls_8c_1a5844d415953685a00a9b402ceb3cc2ab" kindref="member">__attribute__</ref>((weak))</highlight></codeline>
<codeline lineno="530"><highlight class="normal">_kill<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pid<sp/><ref refid="__syscalls_8c_1a5844d415953685a00a9b402ceb3cc2ab" kindref="member">__attribute__</ref>((unused)),<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sig<sp/><ref refid="__syscalls_8c_1a5844d415953685a00a9b402ceb3cc2ab" kindref="member">__attribute__</ref>((unused)))</highlight></codeline>
<codeline lineno="531"><highlight class="normal">{</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><ref refid="__syscalls_8c_1ad65a8842cc674e3ddf69355898c0ecbf" kindref="member">errno</ref><sp/>=<sp/>ENOSYS;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="534"><highlight class="normal">}</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Struct<sp/>used<sp/>to<sp/>keep<sp/>track<sp/>of<sp/>the<sp/>file<sp/>position,<sp/>just<sp/>so<sp/>we</highlight></codeline>
<codeline lineno="539"><highlight class="comment"><sp/>can<sp/>implement<sp/>fseek(fh,x,SEEK_CUR).<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">fdent</highlight></codeline>
<codeline lineno="541"><highlight class="normal">{</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>handle;</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pos;</highlight></codeline>
<codeline lineno="544"><highlight class="normal">};</highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_OPEN_FILES<sp/>20</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>User<sp/>file<sp/>descriptors<sp/>(fd)<sp/>are<sp/>integer<sp/>indexes<sp/>into</highlight></codeline>
<codeline lineno="549"><highlight class="comment"><sp/>the<sp/>openfiles[]<sp/>array.<sp/>Error<sp/>checking<sp/>is<sp/>done<sp/>by<sp/>using</highlight></codeline>
<codeline lineno="550"><highlight class="comment"><sp/>findslot().</highlight></codeline>
<codeline lineno="551"><highlight class="comment"></highlight></codeline>
<codeline lineno="552"><highlight class="comment"><sp/>This<sp/>openfiles<sp/>array<sp/>is<sp/>manipulated<sp/>directly<sp/>by<sp/>only</highlight></codeline>
<codeline lineno="553"><highlight class="comment"><sp/>these<sp/>5<sp/>functions:</highlight></codeline>
<codeline lineno="554"><highlight class="comment"></highlight></codeline>
<codeline lineno="555"><highlight class="comment"><sp/>findslot()<sp/>-<sp/>Translate<sp/>entry.</highlight></codeline>
<codeline lineno="556"><highlight class="comment"><sp/>newslot()<sp/>-<sp/>Find<sp/>empty<sp/>entry.</highlight></codeline>
<codeline lineno="557"><highlight class="comment"><sp/>initilise_monitor_handles()<sp/>-<sp/>Initialize<sp/>entries.</highlight></codeline>
<codeline lineno="558"><highlight class="comment"><sp/>_swiopen()<sp/>-<sp/>Initialize<sp/>entry.</highlight></codeline>
<codeline lineno="559"><highlight class="comment"><sp/>_close()<sp/>-<sp/>Handle<sp/>stdout<sp/>==<sp/>stderr<sp/>case.</highlight></codeline>
<codeline lineno="560"><highlight class="comment"></highlight></codeline>
<codeline lineno="561"><highlight class="comment"><sp/>Every<sp/>other<sp/>function<sp/>must<sp/>use<sp/>findslot().<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">fdent<sp/>openfiles[MAX_OPEN_FILES];</highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">fdent*</highlight></codeline>
<codeline lineno="566"><highlight class="normal">findslot<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal">newslot<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Register<sp/>name<sp/>faking<sp/>-<sp/>works<sp/>in<sp/>collusion<sp/>with<sp/>the<sp/>linker.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>stack_ptr<sp/></highlight><highlight class="keyword">asm</highlight><highlight class="normal"><sp/>(</highlight><highlight class="stringliteral">&quot;sp&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>following<sp/>is<sp/>copied<sp/>from<sp/>libc/stdio/local.h<sp/>to<sp/>check<sp/>std<sp/>streams<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>_EXFUN(__sinit,(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>_reent*));</highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CHECK_INIT(ptr)<sp/>\</highlight></codeline>
<codeline lineno="576"><highlight class="preprocessor"><sp/><sp/>do<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="577"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="578"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>((ptr)<sp/>&amp;&amp;<sp/>!(ptr)-&gt;__sdidinit)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="579"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__sinit<sp/>(ptr);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="580"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="581"><highlight class="preprocessor"><sp/><sp/>while<sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>monitor_stdin;</highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>monitor_stdout;</highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>monitor_stderr;</highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Return<sp/>a<sp/>pointer<sp/>to<sp/>the<sp/>structure<sp/>associated<sp/>with</highlight></codeline>
<codeline lineno="588"><highlight class="comment"><sp/>the<sp/>user<sp/>file<sp/>descriptor<sp/>fd.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">fdent*</highlight></codeline>
<codeline lineno="590"><highlight class="normal">findslot<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd)</highlight></codeline>
<codeline lineno="591"><highlight class="normal">{</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/>CHECK_INIT(_REENT);</highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>User<sp/>file<sp/>descriptor<sp/>is<sp/>out<sp/>of<sp/>range.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>fd<sp/>&gt;=<sp/>MAX_OPEN_FILES)</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>User<sp/>file<sp/>descriptor<sp/>is<sp/>open?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(openfiles[fd].handle<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Valid.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;openfiles[fd];</highlight></codeline>
<codeline lineno="608"><highlight class="normal">}</highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Return<sp/>the<sp/>next<sp/>lowest<sp/>numbered<sp/>free<sp/>file</highlight></codeline>
<codeline lineno="611"><highlight class="comment"><sp/>structure,<sp/>or<sp/>-1<sp/>if<sp/>we<sp/>can&apos;t<sp/>find<sp/>one.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal">newslot<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="614"><highlight class="normal">{</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>MAX_OPEN_FILES;<sp/>i++)</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(openfiles[i].handle<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>MAX_OPEN_FILES)</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="631"><highlight class="normal">}</highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal">initialise_monitor_handles<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="635"><highlight class="normal">{</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Open<sp/>the<sp/>standard<sp/>file<sp/>descriptors<sp/>by<sp/>opening<sp/>the<sp/>special</highlight></codeline>
<codeline lineno="639"><highlight class="comment"><sp/><sp/><sp/>*<sp/>teletype<sp/>device,<sp/>&quot;:tt&quot;,<sp/>read-only<sp/>to<sp/>obtain<sp/>a<sp/>descriptor<sp/>for</highlight></codeline>
<codeline lineno="640"><highlight class="comment"><sp/><sp/><sp/>*<sp/>standard<sp/>input<sp/>and<sp/>write-only<sp/>to<sp/>obtain<sp/>a<sp/>descriptor<sp/>for<sp/>standard</highlight></codeline>
<codeline lineno="641"><highlight class="comment"><sp/><sp/><sp/>*<sp/>output.<sp/>Finally,<sp/>open<sp/>&quot;:tt&quot;<sp/>in<sp/>append<sp/>mode<sp/>to<sp/>obtain<sp/>a<sp/>descriptor</highlight></codeline>
<codeline lineno="642"><highlight class="comment"><sp/><sp/><sp/>*<sp/>for<sp/>standard<sp/>error.<sp/>Since<sp/>this<sp/>is<sp/>a<sp/>write<sp/>mode,<sp/>most<sp/>kernels<sp/>will</highlight></codeline>
<codeline lineno="643"><highlight class="comment"><sp/><sp/><sp/>*<sp/>probably<sp/>return<sp/>the<sp/>same<sp/>value<sp/>as<sp/>for<sp/>standard<sp/>output,<sp/>but<sp/>the</highlight></codeline>
<codeline lineno="644"><highlight class="comment"><sp/><sp/><sp/>*<sp/>kernel<sp/>can<sp/>differentiate<sp/>the<sp/>two<sp/>using<sp/>the<sp/>mode<sp/>flag<sp/>and<sp/>return<sp/>a</highlight></codeline>
<codeline lineno="645"><highlight class="comment"><sp/><sp/><sp/>*<sp/>different<sp/>descriptor<sp/>for<sp/>standard<sp/>error.</highlight></codeline>
<codeline lineno="646"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>block[3];</highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/>block[0]<sp/>=<sp/>(int)<sp/></highlight><highlight class="stringliteral">&quot;:tt&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/>block[2]<sp/>=<sp/>3;<sp/></highlight><highlight class="comment">/*<sp/>length<sp/>of<sp/>filename<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/>block[1]<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">/*<sp/>mode<sp/>&quot;r&quot;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/>monitor_stdin<sp/>=<sp/>call_host<sp/>(<ref refid="semihosting_8h_1a368e5417dfc8239b696ecf3233a6a955ae1ed8ed0ec82d76628671bfc6b96c2d8" kindref="member">SEMIHOSTING_SYS_OPEN</ref>,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)<sp/>block);</highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/>block[0]<sp/>=<sp/>(int)<sp/></highlight><highlight class="stringliteral">&quot;:tt&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/>block[2]<sp/>=<sp/>3;<sp/></highlight><highlight class="comment">/*<sp/>length<sp/>of<sp/>filename<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/>block[1]<sp/>=<sp/>4;<sp/></highlight><highlight class="comment">/*<sp/>mode<sp/>&quot;w&quot;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/>monitor_stdout<sp/>=<sp/>call_host<sp/>(<ref refid="semihosting_8h_1a368e5417dfc8239b696ecf3233a6a955ae1ed8ed0ec82d76628671bfc6b96c2d8" kindref="member">SEMIHOSTING_SYS_OPEN</ref>,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)<sp/>block);</highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/>block[0]<sp/>=<sp/>(int)<sp/></highlight><highlight class="stringliteral">&quot;:tt&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/>block[2]<sp/>=<sp/>3;<sp/></highlight><highlight class="comment">/*<sp/>length<sp/>of<sp/>filename<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/>block[1]<sp/>=<sp/>8;<sp/></highlight><highlight class="comment">/*<sp/>mode<sp/>&quot;a&quot;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/>monitor_stderr<sp/>=<sp/>call_host<sp/>(<ref refid="semihosting_8h_1a368e5417dfc8239b696ecf3233a6a955ae1ed8ed0ec82d76628671bfc6b96c2d8" kindref="member">SEMIHOSTING_SYS_OPEN</ref>,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)<sp/>block);</highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>we<sp/>failed<sp/>to<sp/>open<sp/>stderr,<sp/>redirect<sp/>to<sp/>stdout.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(monitor_stderr<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>monitor_stderr<sp/>=<sp/>monitor_stdout;</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>MAX_OPEN_FILES;<sp/>i++)</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>openfiles[i].handle<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/>openfiles[0].handle<sp/>=<sp/>monitor_stdin;</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/>openfiles[0].pos<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/>openfiles[1].handle<sp/>=<sp/>monitor_stdout;</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/>openfiles[1].pos<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/>openfiles[2].handle<sp/>=<sp/>monitor_stderr;</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/>openfiles[2].pos<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="682"><highlight class="normal">}</highlight></codeline>
<codeline lineno="683"><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal">get_errno<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="686"><highlight class="normal">{</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>call_host<sp/>(<ref refid="semihosting_8h_1a368e5417dfc8239b696ecf3233a6a955aa3a31b77abd833dde82fa4e0b8611bc9" kindref="member">SEMIHOSTING_SYS_ERRNO</ref>,<sp/>NULL);</highlight></codeline>
<codeline lineno="688"><highlight class="normal">}</highlight></codeline>
<codeline lineno="689"><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Set<sp/>errno<sp/>and<sp/>return<sp/>result.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal">error<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result)</highlight></codeline>
<codeline lineno="693"><highlight class="normal">{</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><ref refid="__syscalls_8c_1ad65a8842cc674e3ddf69355898c0ecbf" kindref="member">errno</ref><sp/>=<sp/>get_errno<sp/>();</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="696"><highlight class="normal">}</highlight></codeline>
<codeline lineno="697"><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>return<sp/>and<sp/>set<sp/>errno<sp/>appropriately.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal">checkerror<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result)</highlight></codeline>
<codeline lineno="701"><highlight class="normal">{</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>error<sp/>(-1);</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="708"><highlight class="normal">}</highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>fh,<sp/>is<sp/>a<sp/>valid<sp/>internal<sp/>file<sp/>handle.</highlight></codeline>
<codeline lineno="711"><highlight class="comment"><sp/>ptr,<sp/>is<sp/>a<sp/>null<sp/>terminated<sp/>string.</highlight></codeline>
<codeline lineno="712"><highlight class="comment"><sp/>len,<sp/>is<sp/>the<sp/>length<sp/>in<sp/>bytes<sp/>to<sp/>read.</highlight></codeline>
<codeline lineno="713"><highlight class="comment"><sp/>Returns<sp/>the<sp/>number<sp/>of<sp/>bytes<sp/>*not*<sp/>written.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal">_swiread<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fh,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>ptr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len)</highlight></codeline>
<codeline lineno="716"><highlight class="normal">{</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>block[3];</highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/>block[0]<sp/>=<sp/>fh;</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/>block[1]<sp/>=<sp/>(int)<sp/>ptr;</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/>block[2]<sp/>=<sp/>len;</highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>checkerror<sp/>(call_host<sp/>(<ref refid="semihosting_8h_1a368e5417dfc8239b696ecf3233a6a955ac778e8c9d34312cc374e6c3944739585" kindref="member">SEMIHOSTING_SYS_READ</ref>,<sp/>block));</highlight></codeline>
<codeline lineno="724"><highlight class="normal">}</highlight></codeline>
<codeline lineno="725"><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>fd,<sp/>is<sp/>a<sp/>valid<sp/>user<sp/>file<sp/>handle.</highlight></codeline>
<codeline lineno="727"><highlight class="comment"><sp/>Translates<sp/>the<sp/>return<sp/>of<sp/>_swiread<sp/>into</highlight></codeline>
<codeline lineno="728"><highlight class="comment"><sp/>bytes<sp/>read.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal">_read<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>ptr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len)</highlight></codeline>
<codeline lineno="731"><highlight class="normal">{</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">fdent<sp/>*pfd;</highlight></codeline>
<codeline lineno="734"><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/>pfd<sp/>=<sp/>findslot<sp/>(fd);</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pfd<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="__syscalls_8c_1ad65a8842cc674e3ddf69355898c0ecbf" kindref="member">errno</ref><sp/>=<sp/>EBADF;</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="741"><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/>res<sp/>=<sp/>_swiread<sp/>(pfd-&gt;handle,<sp/>ptr,<sp/>len);</highlight></codeline>
<codeline lineno="743"><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/>pfd-&gt;pos<sp/>+=<sp/>len<sp/>-<sp/>res;</highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>res<sp/>==<sp/>len<sp/>is<sp/>not<sp/>an<sp/>error,</highlight></codeline>
<codeline lineno="752"><highlight class="comment"><sp/><sp/><sp/>at<sp/>least<sp/>if<sp/>we<sp/>want<sp/>feof()<sp/>to<sp/>work.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>len<sp/>-<sp/>res;</highlight></codeline>
<codeline lineno="754"><highlight class="normal">}</highlight></codeline>
<codeline lineno="755"><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>fd,<sp/>is<sp/>a<sp/>user<sp/>file<sp/>descriptor.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="758"><highlight class="normal">_swilseek<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ptr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dir)</highlight></codeline>
<codeline lineno="759"><highlight class="normal">{</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">fdent<sp/>*pfd;</highlight></codeline>
<codeline lineno="762"><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Valid<sp/>file<sp/>descriptor?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/>pfd<sp/>=<sp/>findslot<sp/>(fd);</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pfd<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="__syscalls_8c_1ad65a8842cc674e3ddf69355898c0ecbf" kindref="member">errno</ref><sp/>=<sp/>EBADF;</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="770"><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Valid<sp/>whence?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((dir<sp/>!=<sp/>SEEK_CUR)<sp/>&amp;&amp;<sp/>(dir<sp/>!=<sp/>SEEK_SET)<sp/>&amp;&amp;<sp/>(dir<sp/>!=<sp/>SEEK_END))</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="__syscalls_8c_1ad65a8842cc674e3ddf69355898c0ecbf" kindref="member">errno</ref><sp/>=<sp/>EINVAL;</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="777"><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Convert<sp/>SEEK_CUR<sp/>to<sp/>SEEK_SET<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dir<sp/>==<sp/>SEEK_CUR)</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ptr<sp/>=<sp/>pfd-&gt;pos<sp/>+<sp/>ptr;</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>resulting<sp/>file<sp/>offset<sp/>would<sp/>be<sp/>negative.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ptr<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="__syscalls_8c_1ad65a8842cc674e3ddf69355898c0ecbf" kindref="member">errno</ref><sp/>=<sp/>EINVAL;</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((pfd-&gt;pos<sp/>&gt;<sp/>0)<sp/>&amp;&amp;<sp/>(ptr<sp/>&gt;<sp/>0))</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="__syscalls_8c_1ad65a8842cc674e3ddf69355898c0ecbf" kindref="member">errno</ref><sp/>=<sp/>EOVERFLOW;</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dir<sp/>=<sp/>SEEK_SET;</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="794"><highlight class="normal"></highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>block[2];</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dir<sp/>==<sp/>SEEK_END)</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>block[0]<sp/>=<sp/>pfd-&gt;handle;</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>checkerror<sp/>(call_host<sp/>(<ref refid="semihosting_8h_1a368e5417dfc8239b696ecf3233a6a955a3e949e38172269f893161095c65220dd" kindref="member">SEMIHOSTING_SYS_FLEN</ref>,<sp/>block));</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ptr<sp/>+=<sp/>res;</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="806"><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>code<sp/>only<sp/>does<sp/>absolute<sp/>seeks.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/>block[0]<sp/>=<sp/>pfd-&gt;handle;</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/>block[1]<sp/>=<sp/>ptr;</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/>res<sp/>=<sp/>checkerror<sp/>(call_host<sp/>(<ref refid="semihosting_8h_1a368e5417dfc8239b696ecf3233a6a955a6bc8a00c58c3d3d70d816ae494772058" kindref="member">SEMIHOSTING_SYS_SEEK</ref>,<sp/>block));</highlight></codeline>
<codeline lineno="811"><highlight class="normal"></highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>At<sp/>this<sp/>point<sp/>ptr<sp/>is<sp/>the<sp/>current<sp/>file<sp/>position.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pfd-&gt;pos<sp/>=<sp/>ptr;</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ptr;</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="822"><highlight class="normal">}</highlight></codeline>
<codeline lineno="823"><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal">_lseek<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ptr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dir)</highlight></codeline>
<codeline lineno="826"><highlight class="normal">{</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_swilseek<sp/>(fd,<sp/>ptr,<sp/>dir);</highlight></codeline>
<codeline lineno="828"><highlight class="normal">}</highlight></codeline>
<codeline lineno="829"><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>fh,<sp/>is<sp/>a<sp/>valid<sp/>internal<sp/>file<sp/>handle.</highlight></codeline>
<codeline lineno="831"><highlight class="comment"><sp/>Returns<sp/>the<sp/>number<sp/>of<sp/>bytes<sp/>*not*<sp/>written.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="832"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="833"><highlight class="normal">_swiwrite<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fh,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>ptr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len)</highlight></codeline>
<codeline lineno="834"><highlight class="normal">{</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>block[3];</highlight></codeline>
<codeline lineno="836"><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/>block[0]<sp/>=<sp/>fh;</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/>block[1]<sp/>=<sp/>(int)<sp/>ptr;</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/>block[2]<sp/>=<sp/>len;</highlight></codeline>
<codeline lineno="840"><highlight class="normal"></highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>checkerror<sp/>(call_host<sp/>(<ref refid="semihosting_8h_1a368e5417dfc8239b696ecf3233a6a955a383c529db53a8cc54631bf18bb9531d3" kindref="member">SEMIHOSTING_SYS_WRITE</ref>,<sp/>block));</highlight></codeline>
<codeline lineno="842"><highlight class="normal">}</highlight></codeline>
<codeline lineno="843"><highlight class="normal"></highlight></codeline>
<codeline lineno="844"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>fd,<sp/>is<sp/>a<sp/>user<sp/>file<sp/>descriptor.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="845"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="846"><highlight class="normal">_write<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>ptr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len)</highlight></codeline>
<codeline lineno="847"><highlight class="normal">{</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">fdent<sp/>*pfd;</highlight></codeline>
<codeline lineno="850"><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/>pfd<sp/>=<sp/>findslot<sp/>(fd);</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pfd<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="__syscalls_8c_1ad65a8842cc674e3ddf69355898c0ecbf" kindref="member">errno</ref><sp/>=<sp/>EBADF;</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="857"><highlight class="normal"></highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/>res<sp/>=<sp/>_swiwrite<sp/>(pfd-&gt;handle,<sp/>ptr,<sp/>len);</highlight></codeline>
<codeline lineno="859"><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Clearly<sp/>an<sp/>error.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="865"><highlight class="normal"></highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/>pfd-&gt;pos<sp/>+=<sp/>len<sp/>-<sp/>res;</highlight></codeline>
<codeline lineno="867"><highlight class="normal"></highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>wrote<sp/>0<sp/>bytes?</highlight></codeline>
<codeline lineno="869"><highlight class="comment"><sp/><sp/><sp/>Retrieve<sp/>errno<sp/>just<sp/>in<sp/>case.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((len<sp/>-<sp/>res)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>error<sp/>(0);</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="874"><highlight class="normal"></highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(len<sp/>-<sp/>res);</highlight></codeline>
<codeline lineno="876"><highlight class="normal">}</highlight></codeline>
<codeline lineno="877"><highlight class="normal"></highlight></codeline>
<codeline lineno="878"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="879"><highlight class="normal">_swiopen<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>path,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags)</highlight></codeline>
<codeline lineno="880"><highlight class="normal">{</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>aflags<sp/>=<sp/>0,<sp/>fh;</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/>uint32_t<sp/>block[3];</highlight></codeline>
<codeline lineno="883"><highlight class="normal"></highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd<sp/>=<sp/>newslot<sp/>();</highlight></codeline>
<codeline lineno="885"><highlight class="normal"></highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fd<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="__syscalls_8c_1ad65a8842cc674e3ddf69355898c0ecbf" kindref="member">errno</ref><sp/>=<sp/>EMFILE;</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="891"><highlight class="normal"></highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>It<sp/>is<sp/>an<sp/>error<sp/>to<sp/>open<sp/>a<sp/>file<sp/>that<sp/>already<sp/>exists.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((flags<sp/>&amp;<sp/>O_CREAT)<sp/>&amp;&amp;<sp/>(flags<sp/>&amp;<sp/>O_EXCL))</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">stat<sp/>st;</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>_stat<sp/>(path,<sp/>&amp;st);</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res<sp/>!=<sp/>-1)</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="__syscalls_8c_1ad65a8842cc674e3ddf69355898c0ecbf" kindref="member">errno</ref><sp/>=<sp/>EEXIST;</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="904"><highlight class="normal"></highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>flags<sp/>are<sp/>Unix-style,<sp/>so<sp/>we<sp/>need<sp/>to<sp/>convert<sp/>them.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="906"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>O_BINARY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>&amp;<sp/>O_BINARY)</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>aflags<sp/>|=<sp/>1;</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="911"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="912"><highlight class="normal"></highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>In<sp/>O_RDONLY<sp/>we<sp/>expect<sp/>aflags<sp/>==<sp/>0.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="914"><highlight class="normal"></highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>&amp;<sp/>O_RDWR)</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>aflags<sp/>|=<sp/>2;</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="919"><highlight class="normal"></highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((flags<sp/>&amp;<sp/>O_CREAT)<sp/>||<sp/>(flags<sp/>&amp;<sp/>O_TRUNC)<sp/>||<sp/>(flags<sp/>&amp;<sp/>O_WRONLY))</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>aflags<sp/>|=<sp/>4;</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="924"><highlight class="normal"></highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>&amp;<sp/>O_APPEND)</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Can&apos;t<sp/>ask<sp/>for<sp/>w<sp/>AND<sp/>a;<sp/>means<sp/>just<sp/>&apos;a&apos;.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>aflags<sp/>&amp;=<sp/>~4;</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>aflags<sp/>|=<sp/>8;</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="931"><highlight class="normal"></highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/>block[0]<sp/>=<sp/>(uint32_t)<sp/>path;</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/>block[2]<sp/>=<sp/>strlen<sp/>(path);</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/>block[1]<sp/>=<sp/>(uint32_t)<sp/>aflags;</highlight></codeline>
<codeline lineno="935"><highlight class="normal"></highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/>fh<sp/>=<sp/>call_host<sp/>(<ref refid="semihosting_8h_1a368e5417dfc8239b696ecf3233a6a955ae1ed8ed0ec82d76628671bfc6b96c2d8" kindref="member">SEMIHOSTING_SYS_OPEN</ref>,<sp/>block);</highlight></codeline>
<codeline lineno="937"><highlight class="normal"></highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Return<sp/>a<sp/>user<sp/>file<sp/>descriptor<sp/>or<sp/>an<sp/>error.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fh<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>openfiles[fd].handle<sp/>=<sp/>fh;</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>openfiles[fd].pos<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fd;</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>error<sp/>(fh);</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="949"><highlight class="normal">}</highlight></codeline>
<codeline lineno="950"><highlight class="normal"></highlight></codeline>
<codeline lineno="951"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="952"><highlight class="normal">_open<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>path,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags,<sp/>...)</highlight></codeline>
<codeline lineno="953"><highlight class="normal">{</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_swiopen<sp/>(path,<sp/>flags);</highlight></codeline>
<codeline lineno="955"><highlight class="normal">}</highlight></codeline>
<codeline lineno="956"><highlight class="normal"></highlight></codeline>
<codeline lineno="957"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>fh,<sp/>is<sp/>a<sp/>valid<sp/>internal<sp/>file<sp/>handle.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="958"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="959"><highlight class="normal">_swiclose<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fh)</highlight></codeline>
<codeline lineno="960"><highlight class="normal">{</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>checkerror<sp/>(call_host<sp/>(<ref refid="semihosting_8h_1a368e5417dfc8239b696ecf3233a6a955ad3510bf376f9de79b96cf64c5086c191" kindref="member">SEMIHOSTING_SYS_CLOSE</ref>,<sp/>&amp;fh));</highlight></codeline>
<codeline lineno="962"><highlight class="normal">}</highlight></codeline>
<codeline lineno="963"><highlight class="normal"></highlight></codeline>
<codeline lineno="964"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>fd,<sp/>is<sp/>a<sp/>user<sp/>file<sp/>descriptor.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="965"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="966"><highlight class="normal">_close<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd)</highlight></codeline>
<codeline lineno="967"><highlight class="normal">{</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">fdent<sp/>*pfd;</highlight></codeline>
<codeline lineno="970"><highlight class="normal"></highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/>pfd<sp/>=<sp/>findslot<sp/>(fd);</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pfd<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="__syscalls_8c_1ad65a8842cc674e3ddf69355898c0ecbf" kindref="member">errno</ref><sp/>=<sp/>EBADF;</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="977"><highlight class="normal"></highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Handle<sp/>stderr<sp/>==<sp/>stdout.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((fd<sp/>==<sp/>1<sp/>||<sp/>fd<sp/>==<sp/>2)<sp/>&amp;&amp;<sp/>(openfiles[1].handle<sp/>==<sp/>openfiles[2].handle))</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pfd-&gt;handle<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="984"><highlight class="normal"></highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Attempt<sp/>to<sp/>close<sp/>the<sp/>handle.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/>res<sp/>=<sp/>_swiclose<sp/>(pfd-&gt;handle);</highlight></codeline>
<codeline lineno="987"><highlight class="normal"></highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reclaim<sp/>handle?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pfd-&gt;handle<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="993"><highlight class="normal"></highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="995"><highlight class="normal">}</highlight></codeline>
<codeline lineno="996"><highlight class="normal"></highlight></codeline>
<codeline lineno="997"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="__syscalls_8c_1a5844d415953685a00a9b402ceb3cc2ab" kindref="member">__attribute__</ref>((weak))</highlight></codeline>
<codeline lineno="998"><highlight class="normal">_getpid<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/><ref refid="__syscalls_8c_1a5844d415953685a00a9b402ceb3cc2ab" kindref="member">__attribute__</ref><sp/>((unused)))</highlight></codeline>
<codeline lineno="999"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="1001"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"></highlight></codeline>
<codeline lineno="1003"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1004"><highlight class="normal">_swistat<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>stat*<sp/>st)</highlight></codeline>
<codeline lineno="1005"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">fdent<sp/>*pfd;</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"></highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/>pfd<sp/>=<sp/>findslot<sp/>(fd);</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pfd<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="__syscalls_8c_1ad65a8842cc674e3ddf69355898c0ecbf" kindref="member">errno</ref><sp/>=<sp/>EBADF;</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"></highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Always<sp/>assume<sp/>a<sp/>character<sp/>device,</highlight></codeline>
<codeline lineno="1017"><highlight class="comment"><sp/><sp/><sp/>with<sp/>1024<sp/>byte<sp/>blocks.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/>st-&gt;st_mode<sp/>|=<sp/>S_IFCHR;</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/>st-&gt;st_blksize<sp/>=<sp/>1024;</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/>res<sp/>=<sp/>checkerror<sp/>(call_host<sp/>(<ref refid="semihosting_8h_1a368e5417dfc8239b696ecf3233a6a955a3e949e38172269f893161095c65220dd" kindref="member">SEMIHOSTING_SYS_FLEN</ref>,<sp/>&amp;pfd-&gt;handle));</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"></highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Return<sp/>the<sp/>file<sp/>size.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/>st-&gt;st_size<sp/>=<sp/>res;</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1029"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"></highlight></codeline>
<codeline lineno="1031"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="__syscalls_8c_1a5844d415953685a00a9b402ceb3cc2ab" kindref="member">__attribute__</ref>((weak))</highlight></codeline>
<codeline lineno="1032"><highlight class="normal">_fstat<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>stat*<sp/>st)</highlight></codeline>
<codeline lineno="1033"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/>memset<sp/>(st,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*st));</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_swistat<sp/>(fd,<sp/>st);</highlight></codeline>
<codeline lineno="1036"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"></highlight></codeline>
<codeline lineno="1038"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="__syscalls_8c_1a5844d415953685a00a9b402ceb3cc2ab" kindref="member">__attribute__</ref>((weak))</highlight></codeline>
<codeline lineno="1039"><highlight class="normal">_stat<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*fname,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>stat<sp/>*st)</highlight></codeline>
<codeline lineno="1040"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd,<sp/>res;</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/>memset<sp/>(st,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*st));</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>best<sp/>we<sp/>can<sp/>do<sp/>is<sp/>try<sp/>to<sp/>open<sp/>the<sp/>file<sp/>readonly.</highlight></codeline>
<codeline lineno="1044"><highlight class="comment"><sp/><sp/><sp/>If<sp/>it<sp/>exists,<sp/>then<sp/>we<sp/>can<sp/>guess<sp/>a<sp/>few<sp/>things<sp/>about<sp/>it.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((fd<sp/>=<sp/>_open<sp/>(fname,<sp/>O_RDONLY))<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/>st-&gt;st_mode<sp/>|=<sp/>S_IFREG<sp/>|<sp/>S_IREAD;</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/>res<sp/>=<sp/>_swistat<sp/>(fd,<sp/>st);</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Not<sp/>interested<sp/>in<sp/>the<sp/>error.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/>_close<sp/>(fd);</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="1054"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"></highlight></codeline>
<codeline lineno="1056"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="__syscalls_8c_1a5844d415953685a00a9b402ceb3cc2ab" kindref="member">__attribute__</ref>((weak))</highlight></codeline>
<codeline lineno="1057"><highlight class="normal">_link<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1058"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><ref refid="__syscalls_8c_1ad65a8842cc674e3ddf69355898c0ecbf" kindref="member">errno</ref><sp/>=<sp/>ENOSYS;</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1061"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"></highlight></codeline>
<codeline lineno="1063"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1064"><highlight class="normal">_unlink<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>path)</highlight></codeline>
<codeline lineno="1065"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/>uint32_t<sp/>block[2];</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/>block[0]<sp/>=<sp/>(uint32_t)<sp/>path;</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/>block[1]<sp/>=<sp/>strlen<sp/>(path);</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/>res<sp/>=<sp/>call_host<sp/>(<ref refid="semihosting_8h_1a368e5417dfc8239b696ecf3233a6a955a6967f75e9d753f6be0a79fab3c21847c" kindref="member">SEMIHOSTING_SYS_REMOVE</ref>,<sp/>block);</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"></highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>error<sp/>(res);</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1077"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"></highlight></codeline>
<codeline lineno="1079"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1080"><highlight class="normal">_gettimeofday<sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>timeval*<sp/>tp,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>tzvp)</highlight></codeline>
<codeline lineno="1081"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timezone*<sp/>tzp<sp/>=<sp/>tzvp;</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tp)</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Ask<sp/>the<sp/>host<sp/>for<sp/>the<sp/>seconds<sp/>since<sp/>the<sp/>Unix<sp/>epoch.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tp-&gt;tv_sec<sp/>=<sp/>call_host<sp/>(<ref refid="semihosting_8h_1a368e5417dfc8239b696ecf3233a6a955a9771471947fe184e3eb3a1eb02a862e9" kindref="member">SEMIHOSTING_SYS_TIME</ref>,<sp/>NULL);</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tp-&gt;tv_usec<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"></highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Return<sp/>fixed<sp/>data<sp/>for<sp/>the<sp/>timezone.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tzp)</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tzp-&gt;tz_minuteswest<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tzp-&gt;tz_dsttime<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"></highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1098"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"></highlight></codeline>
<codeline lineno="1100"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Return<sp/>a<sp/>clock<sp/>that<sp/>ticks<sp/>at<sp/>100Hz.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1101"><highlight class="normal">clock_t</highlight></codeline>
<codeline lineno="1102"><highlight class="normal">_clock<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1103"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/>clock_t<sp/>timeval;</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"></highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/>timeval<sp/>=<sp/>(clock_t)<sp/>call_host<sp/>(<ref refid="semihosting_8h_1a368e5417dfc8239b696ecf3233a6a955a9926f9916a67ac06dca9dd4a37d287d1" kindref="member">SEMIHOSTING_SYS_CLOCK</ref>,<sp/>NULL);</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>timeval;</highlight></codeline>
<codeline lineno="1108"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"></highlight></codeline>
<codeline lineno="1110"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Return<sp/>a<sp/>clock<sp/>that<sp/>ticks<sp/>at<sp/>100Hz.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1111"><highlight class="normal">clock_t</highlight></codeline>
<codeline lineno="1112"><highlight class="normal">_times<sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>tms*<sp/>tp)</highlight></codeline>
<codeline lineno="1113"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/>clock_t<sp/>timeval<sp/>=<sp/>_clock<sp/>();</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"></highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tp)</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tp-&gt;tms_utime<sp/>=<sp/>timeval;<sp/></highlight><highlight class="comment">/*<sp/>user<sp/>time<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tp-&gt;tms_stime<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">/*<sp/>system<sp/>time<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tp-&gt;tms_cutime<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">/*<sp/>user<sp/>time,<sp/>children<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tp-&gt;tms_cstime<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">/*<sp/>system<sp/>time,<sp/>children<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"></highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>timeval;</highlight></codeline>
<codeline lineno="1125"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"></highlight></codeline>
<codeline lineno="1127"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1128"><highlight class="normal">_isatty<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd)</highlight></codeline>
<codeline lineno="1129"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">fdent<sp/>*pfd;</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tty;</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"></highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/>pfd<sp/>=<sp/>findslot<sp/>(fd);</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pfd<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="__syscalls_8c_1ad65a8842cc674e3ddf69355898c0ecbf" kindref="member">errno</ref><sp/>=<sp/>EBADF;</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"></highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/>tty<sp/>=<sp/>call_host<sp/>(<ref refid="semihosting_8h_1a368e5417dfc8239b696ecf3233a6a955aab298cac69009bc12c76335c5f0c6293" kindref="member">SEMIHOSTING_SYS_ISTTY</ref>,<sp/>&amp;pfd-&gt;handle);</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"></highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tty<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"></highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><ref refid="__syscalls_8c_1ad65a8842cc674e3ddf69355898c0ecbf" kindref="member">errno</ref><sp/>=<sp/>get_errno<sp/>();</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1149"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"></highlight></codeline>
<codeline lineno="1151"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1152"><highlight class="normal">_system<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>s)</highlight></codeline>
<codeline lineno="1153"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/>uint32_t<sp/>block[2];</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>e;</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"></highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Hmmm.<sp/><sp/>The<sp/>ARM<sp/>debug<sp/>interface<sp/>specification<sp/>doesn&apos;t<sp/>say<sp/>whether</highlight></codeline>
<codeline lineno="1158"><highlight class="comment"><sp/><sp/><sp/>SYS_SYSTEM<sp/>does<sp/>the<sp/>right<sp/>thing<sp/>with<sp/>a<sp/>null<sp/>argument,<sp/>or<sp/>assign<sp/>any</highlight></codeline>
<codeline lineno="1159"><highlight class="comment"><sp/><sp/><sp/>meaning<sp/>to<sp/>its<sp/>return<sp/>value.<sp/><sp/>Try<sp/>to<sp/>do<sp/>something<sp/>reasonable....<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!s)</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;<sp/></highlight><highlight class="comment">/*<sp/>maybe<sp/>there<sp/>is<sp/>a<sp/>shell<sp/>available?<sp/>we<sp/>can<sp/>hope.<sp/>:-P<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/>block[0]<sp/>=<sp/>(uint32_t)<sp/>s;</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/>block[1]<sp/>=<sp/>strlen<sp/>(s);</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/>e<sp/>=<sp/>checkerror<sp/>(call_host<sp/>(<ref refid="semihosting_8h_1a368e5417dfc8239b696ecf3233a6a955acfe3855bb6707f6223f63f3561b48c4b" kindref="member">SEMIHOSTING_SYS_SYSTEM</ref>,<sp/>block));</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((e<sp/>&gt;=<sp/>0)<sp/>&amp;&amp;<sp/>(e<sp/>&lt;<sp/>256))</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>have<sp/>to<sp/>convert<sp/>e,<sp/>an<sp/>exit<sp/>status<sp/>to<sp/>the<sp/>encoded<sp/>status<sp/>of</highlight></codeline>
<codeline lineno="1170"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>command.<sp/><sp/>To<sp/>avoid<sp/>hard<sp/>coding<sp/>the<sp/>exit<sp/>status,<sp/>we<sp/>simply</highlight></codeline>
<codeline lineno="1171"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>loop<sp/>until<sp/>we<sp/>find<sp/>the<sp/>right<sp/>position.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>exit_code;</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"></highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(exit_code<sp/>=<sp/>e;<sp/>e<sp/>&amp;&amp;<sp/>WEXITSTATUS<sp/>(e)<sp/>!=<sp/>exit_code;<sp/>e<sp/>&lt;&lt;=<sp/>1)</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>e;</highlight></codeline>
<codeline lineno="1180"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"></highlight></codeline>
<codeline lineno="1182"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1183"><highlight class="normal">_rename<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>oldpath,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>newpath)</highlight></codeline>
<codeline lineno="1184"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/>uint32_t<sp/>block[4];</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/>block[0]<sp/>=<sp/>(uint32_t)<sp/>oldpath;</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/>block[1]<sp/>=<sp/>strlen<sp/>(oldpath);</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/>block[2]<sp/>=<sp/>(uint32_t)<sp/>newpath;</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/>block[3]<sp/>=<sp/>strlen<sp/>(newpath);</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>checkerror<sp/>(call_host<sp/>(<ref refid="semihosting_8h_1a368e5417dfc8239b696ecf3233a6a955aeeb2d6fbf5175ae3573d46080f9034f8" kindref="member">SEMIHOSTING_SYS_RENAME</ref>,<sp/>block))<sp/>?<sp/>-1<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="1191"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"></highlight></codeline>
<codeline lineno="1193"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1194"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Required<sp/>by<sp/>Google<sp/>Tests</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1195"><highlight class="normal"></highlight></codeline>
<codeline lineno="1196"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1197"><highlight class="normal">mkdir<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path<sp/><ref refid="__syscalls_8c_1a5844d415953685a00a9b402ceb3cc2ab" kindref="member">__attribute__</ref>((unused)),</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mode_t<sp/>mode<sp/><ref refid="__syscalls_8c_1a5844d415953685a00a9b402ceb3cc2ab" kindref="member">__attribute__</ref>((unused)))</highlight></codeline>
<codeline lineno="1199"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>always<sp/>return<sp/>true</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><ref refid="__syscalls_8c_1ad65a8842cc674e3ddf69355898c0ecbf" kindref="member">errno</ref><sp/>=<sp/>ENOSYS;</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1207"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"></highlight></codeline>
<codeline lineno="1209"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="1210"><highlight class="normal">getcwd<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buf,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size)</highlight></codeline>
<codeline lineno="1211"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>cwd<sp/>available<sp/>via<sp/>semihosting,<sp/>so<sp/>we<sp/>use<sp/>the<sp/>temporary<sp/>folder</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/>strncpy<sp/>(buf,<sp/></highlight><highlight class="stringliteral">&quot;/tmp&quot;</highlight><highlight class="normal">,<sp/>size);</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>buf;</highlight></codeline>
<codeline lineno="1215"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"></highlight></codeline>
<codeline lineno="1217"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>defined<sp/>OS_USE_SEMIHOSTING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1218"><highlight class="normal"></highlight></codeline>
<codeline lineno="1219"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>__STDC_HOSTED__<sp/>==<sp/>1</highlight></codeline>
    </programlisting>
    <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/newlib/_syscalls.c"/>
  </compounddef>
</doxygen>
