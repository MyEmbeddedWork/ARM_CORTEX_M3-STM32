<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="stm32f10x__flash_8h" kind="file" language="C++">
    <compoundname>stm32f10x_flash.h</compoundname>
    <includes refid="stm32f10x_8h" local="yes">stm32f10x.h</includes>
    <includedby refid="stm32f10x__conf_8h" local="yes">C:/Users/anilj/Desktop/cmsis/sorc/include/stm32f10x_conf.h</includedby>
    <includedby refid="stm32f10x__flash_8c" local="yes">C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_flash.c</includedby>
    <incdepgraph>
      <node id="607">
        <label>system_stm32f10x.h</label>
        <link refid="system__stm32f10x_8h"/>
      </node>
      <node id="604">
        <label>stdint.h</label>
      </node>
      <node id="603">
        <label>core_cm3.h</label>
        <link refid="core__cm3_8h"/>
        <childnode refid="604" relation="include">
        </childnode>
        <childnode refid="605" relation="include">
        </childnode>
        <childnode refid="606" relation="include">
        </childnode>
      </node>
      <node id="606">
        <label>core_cmFunc.h</label>
        <link refid="core__cm_func_8h"/>
      </node>
      <node id="601">
        <label>C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h</label>
        <link refid="stm32f10x__flash_8h"/>
        <childnode refid="602" relation="include">
        </childnode>
      </node>
      <node id="605">
        <label>core_cmInstr.h</label>
        <link refid="core__cm_instr_8h"/>
      </node>
      <node id="602">
        <label>stm32f10x.h</label>
        <link refid="stm32f10x_8h"/>
        <childnode refid="603" relation="include">
        </childnode>
        <childnode refid="607" relation="include">
        </childnode>
        <childnode refid="604" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="609">
        <label>C:/Users/anilj/Desktop/cmsis/sorc/include/stm32f10x_conf.h</label>
        <link refid="stm32f10x__conf_8h"/>
      </node>
      <node id="608">
        <label>C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h</label>
        <link refid="stm32f10x__flash_8h"/>
        <childnode refid="609" relation="include">
        </childnode>
        <childnode refid="610" relation="include">
        </childnode>
      </node>
      <node id="610">
        <label>C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_flash.c</label>
        <link refid="stm32f10x__flash_8c"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="group___flash___latency_1ga09afe6e52b819cc074f6111ec42ac3c3" prot="public" static="no">
        <name>FLASH_Latency_0</name>
        <initializer>((uint32_t)0x00000000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>FLASH Zero Latency cycle </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="71" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___flash___latency_1ga6b7281665340fe8f7919bdfcfd06f8e6" prot="public" static="no">
        <name>FLASH_Latency_1</name>
        <initializer>((uint32_t)0x00000001)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>FLASH One Latency cycle </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="72" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___flash___latency_1ga55173ebb5c978459ce18d5e2516e3e89" prot="public" static="no">
        <name>FLASH_Latency_2</name>
        <initializer>((uint32_t)0x00000002)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>FLASH Two Latency cycles </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="73" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___flash___latency_1gafcbd098d482318a622a58bf168547389" prot="public" static="no">
        <name>IS_FLASH_LATENCY</name>
        <param><defname>LATENCY</defname></param>
        <initializer>(((LATENCY) == <ref refid="group___flash___latency_1ga09afe6e52b819cc074f6111ec42ac3c3" kindref="member">FLASH_Latency_0</ref>) || \
                                   ((LATENCY) == <ref refid="group___flash___latency_1ga6b7281665340fe8f7919bdfcfd06f8e6" kindref="member">FLASH_Latency_1</ref>) || \
                                   ((LATENCY) == <ref refid="group___flash___latency_1ga55173ebb5c978459ce18d5e2516e3e89" kindref="member">FLASH_Latency_2</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="74" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___half___cycle___enable___disable_1ga95adf58ccf48094a9648085ac8d8af13" prot="public" static="no">
        <name>FLASH_HalfCycleAccess_Enable</name>
        <initializer>((uint32_t)0x00000008)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>FLASH Half Cycle Enable </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="85" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___half___cycle___enable___disable_1gad1ec816fa04b9a45e51c1cc9f1ba8f42" prot="public" static="no">
        <name>FLASH_HalfCycleAccess_Disable</name>
        <initializer>((uint32_t)0x00000000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>FLASH Half Cycle Disable </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="86" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___half___cycle___enable___disable_1gad1b9e84a20436dcfe1a1ade4c26dc028" prot="public" static="no">
        <name>IS_FLASH_HALFCYCLEACCESS_STATE</name>
        <param><defname>STATE</defname></param>
        <initializer>(((STATE) == <ref refid="group___half___cycle___enable___disable_1ga95adf58ccf48094a9648085ac8d8af13" kindref="member">FLASH_HalfCycleAccess_Enable</ref>) || \
                                               ((STATE) == <ref refid="group___half___cycle___enable___disable_1gad1ec816fa04b9a45e51c1cc9f1ba8f42" kindref="member">FLASH_HalfCycleAccess_Disable</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="87" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___prefetch___buffer___enable___disable_1gad0fac43d078a77794f22840f326a6ed9" prot="public" static="no">
        <name>FLASH_PrefetchBuffer_Enable</name>
        <initializer>((uint32_t)0x00000010)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>FLASH Prefetch Buffer Enable </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="97" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___prefetch___buffer___enable___disable_1ga2feb631ad85449f83517f05aaf4ba26c" prot="public" static="no">
        <name>FLASH_PrefetchBuffer_Disable</name>
        <initializer>((uint32_t)0x00000000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>FLASH Prefetch Buffer Disable </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="98" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___prefetch___buffer___enable___disable_1ga5fd6932c4f4e157a1d6e73d433df092f" prot="public" static="no">
        <name>IS_FLASH_PREFETCHBUFFER_STATE</name>
        <param><defname>STATE</defname></param>
        <initializer>(((STATE) == <ref refid="group___prefetch___buffer___enable___disable_1gad0fac43d078a77794f22840f326a6ed9" kindref="member">FLASH_PrefetchBuffer_Enable</ref>) || \
                                              ((STATE) == <ref refid="group___prefetch___buffer___enable___disable_1ga2feb631ad85449f83517f05aaf4ba26c" kindref="member">FLASH_PrefetchBuffer_Disable</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="99" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___option___bytes___write___protection_1gac5c6f6155e4ebae0978a3d2a0d991e68" prot="public" static="no">
        <name>FLASH_WRProt_Pages0to3</name>
        <initializer>((uint32_t)0x00000001)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>STM32 Low and Medium density devices: Write protection of page 0 to 3 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="110" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___option___bytes___write___protection_1ga1b33c4de30c55331e7e60c0795c824ad" prot="public" static="no">
        <name>FLASH_WRProt_Pages4to7</name>
        <initializer>((uint32_t)0x00000002)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>STM32 Low and Medium density devices: Write protection of page 4 to 7 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="111" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___option___bytes___write___protection_1ga7eca7a8b11accdd6dadf3445847e1a57" prot="public" static="no">
        <name>FLASH_WRProt_Pages8to11</name>
        <initializer>((uint32_t)0x00000004)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>STM32 Low and Medium density devices: Write protection of page 8 to 11 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="112" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___option___bytes___write___protection_1gaa02b9439f75982e2e1c14f8af9a8c091" prot="public" static="no">
        <name>FLASH_WRProt_Pages12to15</name>
        <initializer>((uint32_t)0x00000008)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>STM32 Low and Medium density devices: Write protection of page 12 to 15 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="113" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" bodystart="113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___option___bytes___write___protection_1gaa589ce30909c3a9a0bffc8a59b6013fb" prot="public" static="no">
        <name>FLASH_WRProt_Pages16to19</name>
        <initializer>((uint32_t)0x00000010)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>STM32 Low and Medium density devices: Write protection of page 16 to 19 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="114" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___option___bytes___write___protection_1ga537e0f85899e13ca2ed93455e537d950" prot="public" static="no">
        <name>FLASH_WRProt_Pages20to23</name>
        <initializer>((uint32_t)0x00000020)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>STM32 Low and Medium density devices: Write protection of page 20 to 23 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="115" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___option___bytes___write___protection_1ga1d6b94b48e0dd21949139267b90a08ef" prot="public" static="no">
        <name>FLASH_WRProt_Pages24to27</name>
        <initializer>((uint32_t)0x00000040)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>STM32 Low and Medium density devices: Write protection of page 24 to 27 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="116" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___option___bytes___write___protection_1ga800860d071cfb40b1b0e94111a0cb549" prot="public" static="no">
        <name>FLASH_WRProt_Pages28to31</name>
        <initializer>((uint32_t)0x00000080)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>STM32 Low and Medium density devices: Write protection of page 28 to 31 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="117" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___option___bytes___write___protection_1ga81a4250850e5fe7c251365cc22839a96" prot="public" static="no">
        <name>FLASH_WRProt_Pages32to35</name>
        <initializer>((uint32_t)0x00000100)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>STM32 Medium-density devices: Write protection of page 32 to 35 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="120" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___option___bytes___write___protection_1ga783f47425af52b9a12914520d9ee175e" prot="public" static="no">
        <name>FLASH_WRProt_Pages36to39</name>
        <initializer>((uint32_t)0x00000200)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>STM32 Medium-density devices: Write protection of page 36 to 39 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="121" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___option___bytes___write___protection_1ga30798723c36db2b8145b6a5c8ffafded" prot="public" static="no">
        <name>FLASH_WRProt_Pages40to43</name>
        <initializer>((uint32_t)0x00000400)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>STM32 Medium-density devices: Write protection of page 40 to 43 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="122" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___option___bytes___write___protection_1gaa2d897455d5f71c9fd3721d49b3578fc" prot="public" static="no">
        <name>FLASH_WRProt_Pages44to47</name>
        <initializer>((uint32_t)0x00000800)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>STM32 Medium-density devices: Write protection of page 44 to 47 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="123" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___option___bytes___write___protection_1gac6bb79080cb276b330499f26c706048e" prot="public" static="no">
        <name>FLASH_WRProt_Pages48to51</name>
        <initializer>((uint32_t)0x00001000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>STM32 Medium-density devices: Write protection of page 48 to 51 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="124" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___option___bytes___write___protection_1gab5beefbfebf060f71421995f3c7a6418" prot="public" static="no">
        <name>FLASH_WRProt_Pages52to55</name>
        <initializer>((uint32_t)0x00002000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>STM32 Medium-density devices: Write protection of page 52 to 55 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="125" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" bodystart="125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___option___bytes___write___protection_1ga3705c210feeeb63c31976495c0b851f1" prot="public" static="no">
        <name>FLASH_WRProt_Pages56to59</name>
        <initializer>((uint32_t)0x00004000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>STM32 Medium-density devices: Write protection of page 56 to 59 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="126" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" bodystart="126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___option___bytes___write___protection_1ga1978945fc02d1867900f17c4999c50d5" prot="public" static="no">
        <name>FLASH_WRProt_Pages60to63</name>
        <initializer>((uint32_t)0x00008000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>STM32 Medium-density devices: Write protection of page 60 to 63 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="127" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" bodystart="127" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___option___bytes___write___protection_1ga124928d6134ddac13e3e8810a0d8dd1a" prot="public" static="no">
        <name>FLASH_WRProt_Pages64to67</name>
        <initializer>((uint32_t)0x00010000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>STM32 Medium-density devices: Write protection of page 64 to 67 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="128" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" bodystart="128" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___option___bytes___write___protection_1gafbb813885c6cd505c64083f2f88532fb" prot="public" static="no">
        <name>FLASH_WRProt_Pages68to71</name>
        <initializer>((uint32_t)0x00020000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>STM32 Medium-density devices: Write protection of page 68 to 71 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="129" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___option___bytes___write___protection_1ga1a19c52012bbb30f3ae1599fa5a200cc" prot="public" static="no">
        <name>FLASH_WRProt_Pages72to75</name>
        <initializer>((uint32_t)0x00040000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>STM32 Medium-density devices: Write protection of page 72 to 75 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="130" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" bodystart="130" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___option___bytes___write___protection_1ga9e1f9abfa57766312c6cbae9b42f3ab6" prot="public" static="no">
        <name>FLASH_WRProt_Pages76to79</name>
        <initializer>((uint32_t)0x00080000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>STM32 Medium-density devices: Write protection of page 76 to 79 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="131" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" bodystart="131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___option___bytes___write___protection_1ga5749428874f99f77a5c5fc48a88816d9" prot="public" static="no">
        <name>FLASH_WRProt_Pages80to83</name>
        <initializer>((uint32_t)0x00100000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>STM32 Medium-density devices: Write protection of page 80 to 83 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="132" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" bodystart="132" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___option___bytes___write___protection_1ga9dbf7aeb5b54b42f9b345c95d00eaf32" prot="public" static="no">
        <name>FLASH_WRProt_Pages84to87</name>
        <initializer>((uint32_t)0x00200000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>STM32 Medium-density devices: Write protection of page 84 to 87 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="133" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" bodystart="133" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___option___bytes___write___protection_1gaeece6aa5e198239067c47f678b9d015e" prot="public" static="no">
        <name>FLASH_WRProt_Pages88to91</name>
        <initializer>((uint32_t)0x00400000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>STM32 Medium-density devices: Write protection of page 88 to 91 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="134" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" bodystart="134" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___option___bytes___write___protection_1gab7d95c1f574523ef827bafd01a64b0bb" prot="public" static="no">
        <name>FLASH_WRProt_Pages92to95</name>
        <initializer>((uint32_t)0x00800000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>STM32 Medium-density devices: Write protection of page 92 to 95 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="135" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" bodystart="135" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___option___bytes___write___protection_1ga8f3ea488c33b3e209cab996545f55c49" prot="public" static="no">
        <name>FLASH_WRProt_Pages96to99</name>
        <initializer>((uint32_t)0x01000000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>STM32 Medium-density devices: Write protection of page 96 to 99 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="136" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" bodystart="136" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___option___bytes___write___protection_1ga0c03cee6931c623ccdaae19233c81f4e" prot="public" static="no">
        <name>FLASH_WRProt_Pages100to103</name>
        <initializer>((uint32_t)0x02000000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>STM32 Medium-density devices: Write protection of page 100 to 103 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="137" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" bodystart="137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___option___bytes___write___protection_1ga2e096d51e61a972c97093110211b3be5" prot="public" static="no">
        <name>FLASH_WRProt_Pages104to107</name>
        <initializer>((uint32_t)0x04000000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>STM32 Medium-density devices: Write protection of page 104 to 107 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="138" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" bodystart="138" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___option___bytes___write___protection_1ga899e34df1ab5369d840461686eb9c318" prot="public" static="no">
        <name>FLASH_WRProt_Pages108to111</name>
        <initializer>((uint32_t)0x08000000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>STM32 Medium-density devices: Write protection of page 108 to 111 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="139" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" bodystart="139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___option___bytes___write___protection_1gacd2d5839240b77f70be15e76086745ab" prot="public" static="no">
        <name>FLASH_WRProt_Pages112to115</name>
        <initializer>((uint32_t)0x10000000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>STM32 Medium-density devices: Write protection of page 112 to 115 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="140" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" bodystart="140" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___option___bytes___write___protection_1ga1283655c7c974e0de142cec7921c8673" prot="public" static="no">
        <name>FLASH_WRProt_Pages116to119</name>
        <initializer>((uint32_t)0x20000000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>STM32 Medium-density devices: Write protection of page 115 to 119 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="141" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" bodystart="141" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___option___bytes___write___protection_1gac8d2f42123810fefc68572709d8830ec" prot="public" static="no">
        <name>FLASH_WRProt_Pages120to123</name>
        <initializer>((uint32_t)0x40000000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>STM32 Medium-density devices: Write protection of page 120 to 123 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="142" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" bodystart="142" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___option___bytes___write___protection_1gae6e70db5200b52248c9ec4293ff9890e" prot="public" static="no">
        <name>FLASH_WRProt_Pages124to127</name>
        <initializer>((uint32_t)0x80000000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>STM32 Medium-density devices: Write protection of page 124 to 127 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="143" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" bodystart="143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___option___bytes___write___protection_1ga7dfbb58b90b63afef11bfcf7a8f109e2" prot="public" static="no">
        <name>FLASH_WRProt_Pages0to1</name>
        <initializer>((uint32_t)0x00000001)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>STM32 High-density, XL-density and Connectivity line devices: Write protection of page 0 to 1 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="147" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" bodystart="146" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___option___bytes___write___protection_1gaeeb592e66053dde68ebb3ff3926d033d" prot="public" static="no">
        <name>FLASH_WRProt_Pages2to3</name>
        <initializer>((uint32_t)0x00000002)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>STM32 High-density, XL-density and Connectivity line devices: Write protection of page 2 to 3 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="149" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" bodystart="149" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___option___bytes___write___protection_1ga2835294ea5c096360cc5683b7f90b543" prot="public" static="no">
        <name>FLASH_WRProt_Pages4to5</name>
        <initializer>((uint32_t)0x00000004)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>STM32 High-density, XL-density and Connectivity line devices: Write protection of page 4 to 5 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="151" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" bodystart="152" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___option___bytes___write___protection_1ga289b919ff7f6e7287facf108b8b94619" prot="public" static="no">
        <name>FLASH_WRProt_Pages6to7</name>
        <initializer>((uint32_t)0x00000008)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>STM32 High-density, XL-density and Connectivity line devices: Write protection of page 6 to 7 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="153" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" bodystart="155" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___option___bytes___write___protection_1ga72f231c0fe953f3cd43cf421c2626f90" prot="public" static="no">
        <name>FLASH_WRProt_Pages8to9</name>
        <initializer>((uint32_t)0x00000010)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>STM32 High-density, XL-density and Connectivity line devices: Write protection of page 8 to 9 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="155" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" bodystart="158" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___option___bytes___write___protection_1ga778d8038df46c0d25d9a24717a5c5dc9" prot="public" static="no">
        <name>FLASH_WRProt_Pages10to11</name>
        <initializer>((uint32_t)0x00000020)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>STM32 High-density, XL-density and Connectivity line devices: Write protection of page 10 to 11 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="157" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" bodystart="161" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___option___bytes___write___protection_1ga571e248a64ef9bf7f99ed85831aacaaa" prot="public" static="no">
        <name>FLASH_WRProt_Pages12to13</name>
        <initializer>((uint32_t)0x00000040)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>STM32 High-density, XL-density and Connectivity line devices: Write protection of page 12 to 13 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="159" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" bodystart="164" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___option___bytes___write___protection_1ga5e5fcead35c861e1329c3e4e7e3ffa4e" prot="public" static="no">
        <name>FLASH_WRProt_Pages14to15</name>
        <initializer>((uint32_t)0x00000080)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>STM32 High-density, XL-density and Connectivity line devices: Write protection of page 14 to 15 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="161" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" bodystart="167" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___option___bytes___write___protection_1ga33deabc2c4a82cfa4a98008082e29ea7" prot="public" static="no">
        <name>FLASH_WRProt_Pages16to17</name>
        <initializer>((uint32_t)0x00000100)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>STM32 High-density, XL-density and Connectivity line devices: Write protection of page 16 to 17 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="163" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" bodystart="170" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___option___bytes___write___protection_1ga856fdcf3d41edc73902fcf93a1e375d9" prot="public" static="no">
        <name>FLASH_WRProt_Pages18to19</name>
        <initializer>((uint32_t)0x00000200)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>STM32 High-density, XL-density and Connectivity line devices: Write protection of page 18 to 19 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="165" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" bodystart="173" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___option___bytes___write___protection_1ga09215d5d245c8f5cd664c5cc4ff9fb69" prot="public" static="no">
        <name>FLASH_WRProt_Pages20to21</name>
        <initializer>((uint32_t)0x00000400)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>STM32 High-density, XL-density and Connectivity line devices: Write protection of page 20 to 21 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="167" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" bodystart="176" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___option___bytes___write___protection_1ga58394c78e6b08542381ade1674efe62c" prot="public" static="no">
        <name>FLASH_WRProt_Pages22to23</name>
        <initializer>((uint32_t)0x00000800)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>STM32 High-density, XL-density and Connectivity line devices: Write protection of page 22 to 23 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="169" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" bodystart="179" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___option___bytes___write___protection_1gac36c4a402c77b28f46451e97dc3632f7" prot="public" static="no">
        <name>FLASH_WRProt_Pages24to25</name>
        <initializer>((uint32_t)0x00001000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>STM32 High-density, XL-density and Connectivity line devices: Write protection of page 24 to 25 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="171" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" bodystart="182" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___option___bytes___write___protection_1ga92c8a9f8b6875fccb072df795eff5e7e" prot="public" static="no">
        <name>FLASH_WRProt_Pages26to27</name>
        <initializer>((uint32_t)0x00002000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>STM32 High-density, XL-density and Connectivity line devices: Write protection of page 26 to 27 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="173" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" bodystart="185" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___option___bytes___write___protection_1gae42c20bedcbaf926c7c49f51a7eea63f" prot="public" static="no">
        <name>FLASH_WRProt_Pages28to29</name>
        <initializer>((uint32_t)0x00004000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>STM32 High-density, XL-density and Connectivity line devices: Write protection of page 28 to 29 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="175" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" bodystart="188" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___option___bytes___write___protection_1gaabe41461f613c6eb37c782295ad9f90f" prot="public" static="no">
        <name>FLASH_WRProt_Pages30to31</name>
        <initializer>((uint32_t)0x00008000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>STM32 High-density, XL-density and Connectivity line devices: Write protection of page 30 to 31 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="177" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" bodystart="191" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___option___bytes___write___protection_1ga86aa121a8917e58ad6bfdf98ba873d36" prot="public" static="no">
        <name>FLASH_WRProt_Pages32to33</name>
        <initializer>((uint32_t)0x00010000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>STM32 High-density, XL-density and Connectivity line devices: Write protection of page 32 to 33 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="179" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" bodystart="194" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___option___bytes___write___protection_1gaa5fee32ae0631b81413414f8e716868b" prot="public" static="no">
        <name>FLASH_WRProt_Pages34to35</name>
        <initializer>((uint32_t)0x00020000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>STM32 High-density, XL-density and Connectivity line devices: Write protection of page 34 to 35 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="181" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" bodystart="197" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___option___bytes___write___protection_1gab00dc29c0f12afd25cdb21b6d187ccc9" prot="public" static="no">
        <name>FLASH_WRProt_Pages36to37</name>
        <initializer>((uint32_t)0x00040000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>STM32 High-density, XL-density and Connectivity line devices: Write protection of page 36 to 37 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="183" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" bodystart="200" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___option___bytes___write___protection_1gacd33bf5c4a305a271da6035ed19cefc2" prot="public" static="no">
        <name>FLASH_WRProt_Pages38to39</name>
        <initializer>((uint32_t)0x00080000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>STM32 High-density, XL-density and Connectivity line devices: Write protection of page 38 to 39 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="185" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" bodystart="203" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___option___bytes___write___protection_1gaaf0c1391987f76b381d26ff4b5142268" prot="public" static="no">
        <name>FLASH_WRProt_Pages40to41</name>
        <initializer>((uint32_t)0x00100000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>STM32 High-density, XL-density and Connectivity line devices: Write protection of page 40 to 41 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="187" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" bodystart="206" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___option___bytes___write___protection_1gab9583317ad7ec30119cdd97e17e74121" prot="public" static="no">
        <name>FLASH_WRProt_Pages42to43</name>
        <initializer>((uint32_t)0x00200000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>STM32 High-density, XL-density and Connectivity line devices: Write protection of page 42 to 43 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="189" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" bodystart="209" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___option___bytes___write___protection_1ga934a862a6a5cd350f00f5ded27e4bbd4" prot="public" static="no">
        <name>FLASH_WRProt_Pages44to45</name>
        <initializer>((uint32_t)0x00400000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>STM32 High-density, XL-density and Connectivity line devices: Write protection of page 44 to 45 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="191" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" bodystart="212" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___option___bytes___write___protection_1ga8c9bd2510c0af75911a6b24271a33c95" prot="public" static="no">
        <name>FLASH_WRProt_Pages46to47</name>
        <initializer>((uint32_t)0x00800000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>STM32 High-density, XL-density and Connectivity line devices: Write protection of page 46 to 47 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="193" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" bodystart="215" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___option___bytes___write___protection_1ga12744383aa65b2eb38e37d41a12bb6fe" prot="public" static="no">
        <name>FLASH_WRProt_Pages48to49</name>
        <initializer>((uint32_t)0x01000000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>STM32 High-density, XL-density and Connectivity line devices: Write protection of page 48 to 49 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="195" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" bodystart="218" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___option___bytes___write___protection_1ga053321e47944270a5fdcf0d58e16ec13" prot="public" static="no">
        <name>FLASH_WRProt_Pages50to51</name>
        <initializer>((uint32_t)0x02000000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>STM32 High-density, XL-density and Connectivity line devices: Write protection of page 50 to 51 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="197" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" bodystart="221" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___option___bytes___write___protection_1gae4eefefb23e8913e4aa558a6a2599fa5" prot="public" static="no">
        <name>FLASH_WRProt_Pages52to53</name>
        <initializer>((uint32_t)0x04000000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>STM32 High-density, XL-density and Connectivity line devices: Write protection of page 52 to 53 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="199" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" bodystart="224" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___option___bytes___write___protection_1gacd4ea5e6cc3819f40a55a61f3075b626" prot="public" static="no">
        <name>FLASH_WRProt_Pages54to55</name>
        <initializer>((uint32_t)0x08000000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>STM32 High-density, XL-density and Connectivity line devices: Write protection of page 54 to 55 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="201" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" bodystart="227" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___option___bytes___write___protection_1ga1779d1131ad245861c61dbf43a2d2d3d" prot="public" static="no">
        <name>FLASH_WRProt_Pages56to57</name>
        <initializer>((uint32_t)0x10000000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>STM32 High-density, XL-density and Connectivity line devices: Write protection of page 56 to 57 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="203" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" bodystart="230" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___option___bytes___write___protection_1ga4a05bf4eec7521ae90ff662db2a9f4f5" prot="public" static="no">
        <name>FLASH_WRProt_Pages58to59</name>
        <initializer>((uint32_t)0x20000000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>STM32 High-density, XL-density and Connectivity line devices: Write protection of page 58 to 59 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="205" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" bodystart="233" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___option___bytes___write___protection_1ga22f620be7f346efcb2cbb732b879fd0c" prot="public" static="no">
        <name>FLASH_WRProt_Pages60to61</name>
        <initializer>((uint32_t)0x40000000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>STM32 High-density, XL-density and Connectivity line devices: Write protection of page 60 to 61 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="207" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" bodystart="236" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___option___bytes___write___protection_1ga346285408d8f738796fc22d710777ba9" prot="public" static="no">
        <name>FLASH_WRProt_Pages62to127</name>
        <initializer>((uint32_t)0x80000000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>STM32 Connectivity line devices: Write protection of page 62 to 127 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="208" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" bodystart="239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___option___bytes___write___protection_1gacec4a825ff505ef5751ec6e5cf6d941e" prot="public" static="no">
        <name>FLASH_WRProt_Pages62to255</name>
        <initializer>((uint32_t)0x80000000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>STM32 Medium-density devices: Write protection of page 62 to 255 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="209" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" bodystart="240" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___option___bytes___write___protection_1gab233da6081eaf5d664f16c0e8c7df138" prot="public" static="no">
        <name>FLASH_WRProt_Pages62to511</name>
        <initializer>((uint32_t)0x80000000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>STM32 XL-density devices: Write protection of page 62 to 511 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="210" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" bodystart="241" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___option___bytes___write___protection_1ga6fdaf38a559d606660dd10a411b77ea5" prot="public" static="no">
        <name>FLASH_WRProt_AllPages</name>
        <initializer>((uint32_t)0xFFFFFFFF)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Write protection of all Pages </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="212" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" bodystart="243" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___option___bytes___write___protection_1gafe68b93dfb1ebf68d74f871850ab373b" prot="public" static="no">
        <name>IS_FLASH_WRPROT_PAGE</name>
        <param><defname>PAGE</defname></param>
        <initializer>(((PAGE) != 0x00000000))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="214" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" bodystart="245" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___option___bytes___write___protection_1gad0c8166ba15a0b8d458412a8bb74e2f0" prot="public" static="no">
        <name>IS_FLASH_ADDRESS</name>
        <param><defname>ADDRESS</defname></param>
        <initializer>(((ADDRESS) &gt;= 0x08000000) &amp;&amp; ((ADDRESS) &lt; 0x080FFFFF))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="216" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" bodystart="247" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___option___bytes___write___protection_1ga73fcac8d5f301a5c98518374ae926633" prot="public" static="no">
        <name>IS_OB_DATA_ADDRESS</name>
        <param><defname>ADDRESS</defname></param>
        <initializer>(((ADDRESS) == 0x1FFFF804) || ((ADDRESS) == 0x1FFFF806))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="218" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" bodystart="249" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___option___bytes___i_watchdog_1ga5a357e232c955444c3f2ccb9a937ffce" prot="public" static="no">
        <name>OB_IWDG_SW</name>
        <initializer>((uint16_t)0x0001)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Software IWDG selected </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="228" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" bodystart="259" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___option___bytes___i_watchdog_1gadfcbfa963d79c339ec8e2d5a7734e47a" prot="public" static="no">
        <name>OB_IWDG_HW</name>
        <initializer>((uint16_t)0x0000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Hardware IWDG selected </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="229" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" bodystart="260" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___option___bytes___i_watchdog_1gaf2871652c08e76499d9449be6556f12c" prot="public" static="no">
        <name>IS_OB_IWDG_SOURCE</name>
        <param><defname>SOURCE</defname></param>
        <initializer>(((SOURCE) == <ref refid="group___option___bytes___i_watchdog_1ga5a357e232c955444c3f2ccb9a937ffce" kindref="member">OB_IWDG_SW</ref>) || ((SOURCE) == <ref refid="group___option___bytes___i_watchdog_1gadfcbfa963d79c339ec8e2d5a7734e47a" kindref="member">OB_IWDG_HW</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="230" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" bodystart="261" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___option___bytes__n_r_s_t___s_t_o_p_1ga6762d6e4045fec58b49dfc03c1927d51" prot="public" static="no">
        <name>OB_STOP_NoRST</name>
        <initializer>((uint16_t)0x0002)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>No reset generated when entering in STOP </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="240" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" bodystart="271" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___option___bytes__n_r_s_t___s_t_o_p_1gaef92c03b1f279c532bfa13d3bb074b57" prot="public" static="no">
        <name>OB_STOP_RST</name>
        <initializer>((uint16_t)0x0000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reset generated when entering in STOP </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="241" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" bodystart="272" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___option___bytes__n_r_s_t___s_t_o_p_1ga131ae3434f300c8317dd6b3b349c7cab" prot="public" static="no">
        <name>IS_OB_STOP_SOURCE</name>
        <param><defname>SOURCE</defname></param>
        <initializer>(((SOURCE) == <ref refid="group___option___bytes__n_r_s_t___s_t_o_p_1ga6762d6e4045fec58b49dfc03c1927d51" kindref="member">OB_STOP_NoRST</ref>) || ((SOURCE) == <ref refid="group___option___bytes__n_r_s_t___s_t_o_p_1gaef92c03b1f279c532bfa13d3bb074b57" kindref="member">OB_STOP_RST</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="242" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" bodystart="273" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___option___bytes__n_r_s_t___s_t_d_b_y_1ga9588443b20719498422aeb72b65de839" prot="public" static="no">
        <name>OB_STDBY_NoRST</name>
        <initializer>((uint16_t)0x0004)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>No reset generated when entering in STANDBY </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="252" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" bodystart="283" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___option___bytes__n_r_s_t___s_t_d_b_y_1ga69451a6f69247528f58735c9c83499ce" prot="public" static="no">
        <name>OB_STDBY_RST</name>
        <initializer>((uint16_t)0x0000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reset generated when entering in STANDBY </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="253" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" bodystart="284" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___option___bytes__n_r_s_t___s_t_d_b_y_1ga8a05393df3a5e89551b4e2e1e8c5b884" prot="public" static="no">
        <name>IS_OB_STDBY_SOURCE</name>
        <param><defname>SOURCE</defname></param>
        <initializer>(((SOURCE) == <ref refid="group___option___bytes__n_r_s_t___s_t_d_b_y_1ga9588443b20719498422aeb72b65de839" kindref="member">OB_STDBY_NoRST</ref>) || ((SOURCE) == <ref refid="group___option___bytes__n_r_s_t___s_t_d_b_y_1ga69451a6f69247528f58735c9c83499ce" kindref="member">OB_STDBY_RST</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="254" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" bodystart="285" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_l_a_s_h___interrupts_1ga61c74493d4c1f36ddaf563719d446a7d" prot="public" static="no">
        <name>FLASH_IT_ERROR</name>
        <initializer>((uint32_t)0x00000400)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>FPEC error interrupt source </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="287" column="10" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" bodystart="318" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_l_a_s_h___interrupts_1gaea20e80e1806d58a7544cfe8659e7f11" prot="public" static="no">
        <name>FLASH_IT_EOP</name>
        <initializer>((uint32_t)0x00001000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>End of FLASH Operation Interrupt source </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="288" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" bodystart="319" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_l_a_s_h___interrupts_1ga808627239be1bf9c2d8bfed36ec4db19" prot="public" static="no">
        <name>FLASH_IT_BANK1_ERROR</name>
        <initializer><ref refid="group___f_l_a_s_h___interrupts_1ga61c74493d4c1f36ddaf563719d446a7d" kindref="member">FLASH_IT_ERROR</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>FPEC BANK1 error interrupt source </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="289" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" bodystart="320" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_l_a_s_h___interrupts_1gac8825e2ce2c0e6ca63a40a347bd351a9" prot="public" static="no">
        <name>FLASH_IT_BANK1_EOP</name>
        <initializer><ref refid="group___f_l_a_s_h___interrupts_1gaea20e80e1806d58a7544cfe8659e7f11" kindref="member">FLASH_IT_EOP</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>End of FLASH BANK1 Operation Interrupt source </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="290" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" bodystart="321" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_l_a_s_h___interrupts_1ga46ee77d0be1f3e0a14ded0651163ae11" prot="public" static="no">
        <name>IS_FLASH_IT</name>
        <param><defname>IT</defname></param>
        <initializer>((((IT) &amp; (uint32_t)0xFFFFEBFF) == 0x00000000) &amp;&amp; (((IT) != 0x00000000)))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="292" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" bodystart="323" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_l_a_s_h___flags_1gad3bc368f954ad7744deda3315da2fff7" prot="public" static="no">
        <name>FLASH_FLAG_BSY</name>
        <initializer>((uint32_t)0x00000001)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>FLASH Busy flag </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="328" column="10" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" bodystart="359" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_l_a_s_h___flags_1gaf043ba4d8f837350bfc7754a99fae5a9" prot="public" static="no">
        <name>FLASH_FLAG_EOP</name>
        <initializer>((uint32_t)0x00000020)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>FLASH End of Operation flag </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="329" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" bodystart="360" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_l_a_s_h___flags_1gae2ef62dee0a5ca01e6226746039b6f20" prot="public" static="no">
        <name>FLASH_FLAG_PGERR</name>
        <initializer>((uint32_t)0x00000004)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>FLASH Program error flag </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="330" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" bodystart="361" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_l_a_s_h___flags_1ga5c59a7f07507cac38091275964d3d35d" prot="public" static="no">
        <name>FLASH_FLAG_WRPRTERR</name>
        <initializer>((uint32_t)0x00000010)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>FLASH Write protected error flag </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="331" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" bodystart="362" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_l_a_s_h___flags_1gac36b0605df97c9414933369a32251e4a" prot="public" static="no">
        <name>FLASH_FLAG_OPTERR</name>
        <initializer>((uint32_t)0x00000001)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>FLASH Option Byte error flag </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="332" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" bodystart="363" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_l_a_s_h___flags_1ga1f85e6d511503886e9fbe7d0228c97a4" prot="public" static="no">
        <name>FLASH_FLAG_BANK1_BSY</name>
        <initializer><ref refid="group___f_l_a_s_h___flags_1gad3bc368f954ad7744deda3315da2fff7" kindref="member">FLASH_FLAG_BSY</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>FLASH BANK1 Busy flag </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="334" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" bodystart="365" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_l_a_s_h___flags_1gafa7670ee5ce8a2eb1f64c458a9f08e5b" prot="public" static="no">
        <name>FLASH_FLAG_BANK1_EOP</name>
        <initializer><ref refid="group___f_l_a_s_h___flags_1gaf043ba4d8f837350bfc7754a99fae5a9" kindref="member">FLASH_FLAG_EOP</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>FLASH BANK1 End of Operation flag </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="335" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" bodystart="366" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_l_a_s_h___flags_1gaa1056ffdd1c434a2967d5ed7c0d263be" prot="public" static="no">
        <name>FLASH_FLAG_BANK1_PGERR</name>
        <initializer><ref refid="group___f_l_a_s_h___flags_1gae2ef62dee0a5ca01e6226746039b6f20" kindref="member">FLASH_FLAG_PGERR</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>FLASH BANK1 Program error flag </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="336" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" bodystart="367" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_l_a_s_h___flags_1ga1646345adbcda773ef25785b1bdc4c43" prot="public" static="no">
        <name>FLASH_FLAG_BANK1_WRPRTERR</name>
        <initializer><ref refid="group___f_l_a_s_h___flags_1ga5c59a7f07507cac38091275964d3d35d" kindref="member">FLASH_FLAG_WRPRTERR</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>FLASH BANK1 Write protected error flag </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="337" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" bodystart="368" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_l_a_s_h___flags_1ga82f8c6104c348d6aa47c7658ed3b6b36" prot="public" static="no">
        <name>IS_FLASH_CLEAR_FLAG</name>
        <param><defname>FLAG</defname></param>
        <initializer>((((FLAG) &amp; (uint32_t)0xFFFFFFCA) == 0x00000000) &amp;&amp; ((FLAG) != 0x00000000))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="339" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" bodystart="370" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_l_a_s_h___flags_1ga61b60325cd94e1608e34afc7aff20ee4" prot="public" static="no">
        <name>IS_FLASH_GET_FLAG</name>
        <param><defname>FLAG</defname></param>
        <initializer>(((FLAG) == <ref refid="group___f_l_a_s_h___flags_1gad3bc368f954ad7744deda3315da2fff7" kindref="member">FLASH_FLAG_BSY</ref>) || ((FLAG) == <ref refid="group___f_l_a_s_h___flags_1gaf043ba4d8f837350bfc7754a99fae5a9" kindref="member">FLASH_FLAG_EOP</ref>) || \
                                  ((FLAG) == <ref refid="group___f_l_a_s_h___flags_1gae2ef62dee0a5ca01e6226746039b6f20" kindref="member">FLASH_FLAG_PGERR</ref>) || ((FLAG) == <ref refid="group___f_l_a_s_h___flags_1ga5c59a7f07507cac38091275964d3d35d" kindref="member">FLASH_FLAG_WRPRTERR</ref>) || \
								  ((FLAG) == <ref refid="group___f_l_a_s_h___flags_1ga1f85e6d511503886e9fbe7d0228c97a4" kindref="member">FLASH_FLAG_BANK1_BSY</ref>) || ((FLAG) == <ref refid="group___f_l_a_s_h___flags_1gafa7670ee5ce8a2eb1f64c458a9f08e5b" kindref="member">FLASH_FLAG_BANK1_EOP</ref>) || \
                                  ((FLAG) == <ref refid="group___f_l_a_s_h___flags_1gaa1056ffdd1c434a2967d5ed7c0d263be" kindref="member">FLASH_FLAG_BANK1_PGERR</ref>) || ((FLAG) == <ref refid="group___f_l_a_s_h___flags_1ga1646345adbcda773ef25785b1bdc4c43" kindref="member">FLASH_FLAG_BANK1_WRPRTERR</ref>) || \
                                  ((FLAG) == <ref refid="group___f_l_a_s_h___flags_1gac36b0605df97c9414933369a32251e4a" kindref="member">FLASH_FLAG_OPTERR</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="340" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" bodystart="371" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group___f_l_a_s_h___exported___types_1gadc63a6f3404ff1f71229a66915e9cdc0" prot="public" static="no">
        <name>FLASH_Status</name>
        <enumvalue id="group___f_l_a_s_h___exported___types_1ggadc63a6f3404ff1f71229a66915e9cdc0aa25021d41842af8a68cefcb65949e099" prot="public">
          <name>FLASH_BUSY</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___f_l_a_s_h___exported___types_1ggadc63a6f3404ff1f71229a66915e9cdc0adcb0c5002fc757739886a2601a3981da" prot="public">
          <name>FLASH_ERROR_PG</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___f_l_a_s_h___exported___types_1ggadc63a6f3404ff1f71229a66915e9cdc0ac9e2d95d3ba415fb7392d72a2458f4d8" prot="public">
          <name>FLASH_ERROR_WRP</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___f_l_a_s_h___exported___types_1ggadc63a6f3404ff1f71229a66915e9cdc0ab0e88e9f59edee379a1a710a8b7deebf" prot="public">
          <name>FLASH_COMPLETE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___f_l_a_s_h___exported___types_1ggadc63a6f3404ff1f71229a66915e9cdc0a90c514b6a619e3a4e6c2eec3154323f8" prot="public">
          <name>FLASH_TIMEOUT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>FLASH Status. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="51" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" bodystart="50" bodyend="57"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group___f_l_a_s_h___exported___functions_1ga54bcb96270215c752c3479c8c9e438c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FLASH_SetLatency</definition>
        <argsstring>(uint32_t FLASH_Latency)</argsstring>
        <name>FLASH_SetLatency</name>
        <param>
          <type>uint32_t</type>
          <declname>FLASH_Latency</declname>
        </param>
        <briefdescription>
<para>Sets the code latency value. </para>        </briefdescription>
        <detaileddescription>
<para><programlisting><codeline><highlight class="normal">This<sp/>driver<sp/>provides<sp/>functions<sp/>to<sp/>configure<sp/>and<sp/>program<sp/>the<sp/>Flash<sp/>memory<sp/>of<sp/>all<sp/>STM32F10x<sp/>devices,</highlight></codeline>
<codeline><highlight class="normal">including<sp/>the<sp/>latest<sp/>STM32F10x_XL<sp/>density<sp/>devices.<sp/></highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">STM32F10x_XL<sp/>devices<sp/>feature<sp/>up<sp/>to<sp/>1<sp/>Mbyte<sp/>with<sp/>dual<sp/>bank<sp/>architecture<sp/>for<sp/>read-while-write<sp/>(RWW)<sp/>capability:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>-<sp/>bank1:<sp/>fixed<sp/>size<sp/>of<sp/>512<sp/>Kbytes<sp/>(256<sp/>pages<sp/>of<sp/>2Kbytes<sp/>each)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>-<sp/>bank2:<sp/>up<sp/>to<sp/>512<sp/>Kbytes<sp/>(up<sp/>to<sp/>256<sp/>pages<sp/>of<sp/>2Kbytes<sp/>each)</highlight></codeline>
<codeline><highlight class="normal">While<sp/>other<sp/>STM32F10x<sp/>devices<sp/>features<sp/>only<sp/>one<sp/>bank<sp/>with<sp/>memory<sp/>up<sp/>to<sp/>512<sp/>Kbytes.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">In<sp/>version<sp/>V3.3.0,<sp/>some<sp/>functions<sp/>were<sp/>updated<sp/>and<sp/>new<sp/>ones<sp/>were<sp/>added<sp/>to<sp/>support</highlight></codeline>
<codeline><highlight class="normal">STM32F10x_XL<sp/>devices.<sp/>Thus<sp/>some<sp/>functions<sp/>manages<sp/>all<sp/>devices,<sp/>while<sp/>other<sp/>are<sp/></highlight></codeline>
<codeline><highlight class="normal">dedicated<sp/>for<sp/>XL<sp/>devices<sp/>only.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">The<sp/>table<sp/>below<sp/>presents<sp/>the<sp/>list<sp/>of<sp/>available<sp/>functions<sp/>depending<sp/>on<sp/>the<sp/>used<sp/>STM32F10x<sp/>devices.<sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>Legacy<sp/>functions<sp/>used<sp/>for<sp/>all<sp/>STM32F10x<sp/>devices<sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>+----------------------------------------------------------------------------------------------------------------------------------+</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Functions<sp/>prototypes<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|STM32F10x_XL|Other<sp/>STM32F10x|<sp/><sp/><sp/><sp/>Comments<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/>devices<sp/><sp/>|<sp/><sp/>devices<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>|----------------------------------------------------------------------------------------------------------------------------------|</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>|FLASH_SetLatency<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/>Yes<sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>Yes<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>No<sp/>change<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>|----------------------------------------------------------------------------------------------------------------------------------|</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>|FLASH_HalfCycleAccessCmd<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/>Yes<sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>Yes<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>No<sp/>change<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>|----------------------------------------------------------------------------------------------------------------------------------|</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>|FLASH_PrefetchBufferCmd<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/>Yes<sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>Yes<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>No<sp/>change<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>|----------------------------------------------------------------------------------------------------------------------------------|</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>|FLASH_Unlock<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/>Yes<sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>Yes<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>-<sp/>For<sp/>STM32F10X_XL<sp/>devices:<sp/>unlock<sp/>Bank1<sp/>and<sp/>Bank2.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>-<sp/>For<sp/>other<sp/>devices:<sp/>unlock<sp/>Bank1<sp/>and<sp/>it<sp/>is<sp/>equivalent<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/>to<sp/>FLASH_UnlockBank1<sp/>function.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>|----------------------------------------------------------------------------------------------------------------------------------|</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>|FLASH_Lock<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/>Yes<sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>Yes<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>-<sp/>For<sp/>STM32F10X_XL<sp/>devices:<sp/>lock<sp/>Bank1<sp/>and<sp/>Bank2.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>-<sp/>For<sp/>other<sp/>devices:<sp/>lock<sp/>Bank1<sp/>and<sp/>it<sp/>is<sp/>equivalent<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/>to<sp/>FLASH_LockBank1<sp/>function.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>|----------------------------------------------------------------------------------------------------------------------------------|</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>|FLASH_ErasePage<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/>Yes<sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>Yes<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>-<sp/>For<sp/>STM32F10x_XL<sp/>devices:<sp/>erase<sp/>a<sp/>page<sp/>in<sp/>Bank1<sp/>and<sp/>Bank2<sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>-<sp/>For<sp/>other<sp/>devices:<sp/>erase<sp/>a<sp/>page<sp/>in<sp/>Bank1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>|----------------------------------------------------------------------------------------------------------------------------------|</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>|FLASH_EraseAllPages<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/>Yes<sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>Yes<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>-<sp/>For<sp/>STM32F10x_XL<sp/>devices:<sp/>erase<sp/>all<sp/>pages<sp/>in<sp/>Bank1<sp/>and<sp/>Bank2<sp/>|</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>-<sp/>For<sp/>other<sp/>devices:<sp/>erase<sp/>all<sp/>pages<sp/>in<sp/>Bank1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>|----------------------------------------------------------------------------------------------------------------------------------|</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>|FLASH_EraseOptionBytes<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/>Yes<sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>Yes<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>No<sp/>change<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>|----------------------------------------------------------------------------------------------------------------------------------|</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>|FLASH_ProgramWord<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/>Yes<sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>Yes<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>Updated<sp/>to<sp/>program<sp/>up<sp/>to<sp/>1MByte<sp/>(depending<sp/>on<sp/>the<sp/>used<sp/>device)<sp/>|</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>|----------------------------------------------------------------------------------------------------------------------------------|</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>|FLASH_ProgramHalfWord<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/>Yes<sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>Yes<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>Updated<sp/>to<sp/>program<sp/>up<sp/>to<sp/>1MByte<sp/>(depending<sp/>on<sp/>the<sp/>used<sp/>device)<sp/>|</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>|----------------------------------------------------------------------------------------------------------------------------------|</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>|FLASH_ProgramOptionByteData<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/>Yes<sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>Yes<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>No<sp/>change<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>|----------------------------------------------------------------------------------------------------------------------------------|</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>|FLASH_EnableWriteProtection<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/>Yes<sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>Yes<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>No<sp/>change<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>|----------------------------------------------------------------------------------------------------------------------------------|</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>|FLASH_ReadOutProtection<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/>Yes<sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>Yes<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>No<sp/>change<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>|----------------------------------------------------------------------------------------------------------------------------------|</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>|FLASH_UserOptionByteConfig<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/>Yes<sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>Yes<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>No<sp/>change<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>|----------------------------------------------------------------------------------------------------------------------------------|</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>|FLASH_GetUserOptionByte<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/>Yes<sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>Yes<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>No<sp/>change<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>|----------------------------------------------------------------------------------------------------------------------------------|</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>|FLASH_GetWriteProtectionOptionByte<sp/><sp/>|<sp/><sp/><sp/><sp/>Yes<sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>Yes<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>No<sp/>change<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>|----------------------------------------------------------------------------------------------------------------------------------|</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>|FLASH_GetReadOutProtectionStatus<sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/>Yes<sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>Yes<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>No<sp/>change<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>|----------------------------------------------------------------------------------------------------------------------------------|</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>|FLASH_GetPrefetchBufferStatus<sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/>Yes<sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>Yes<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>No<sp/>change<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>|----------------------------------------------------------------------------------------------------------------------------------|</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>|FLASH_ITConfig<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/>Yes<sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>Yes<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>-<sp/>For<sp/>STM32F10x_XL<sp/>devices:<sp/>enable<sp/>Bank1<sp/>and<sp/>Bank2&apos;s<sp/>interrupts|</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>-<sp/>For<sp/>other<sp/>devices:<sp/>enable<sp/>Bank1&apos;s<sp/>interrupts<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>|----------------------------------------------------------------------------------------------------------------------------------|</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>|FLASH_GetFlagStatus<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/>Yes<sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>Yes<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>-<sp/>For<sp/>STM32F10x_XL<sp/>devices:<sp/>return<sp/>Bank1<sp/>and<sp/>Bank2&apos;s<sp/>flag<sp/>status|</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>-<sp/>For<sp/>other<sp/>devices:<sp/>return<sp/>Bank1&apos;s<sp/>flag<sp/>status<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>|----------------------------------------------------------------------------------------------------------------------------------|</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>|FLASH_ClearFlag<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/>Yes<sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>Yes<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>-<sp/>For<sp/>STM32F10x_XL<sp/>devices:<sp/>clear<sp/>Bank1<sp/>and<sp/>Bank2&apos;s<sp/>flag<sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>-<sp/>For<sp/>other<sp/>devices:<sp/>clear<sp/>Bank1&apos;s<sp/>flag<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>|----------------------------------------------------------------------------------------------------------------------------------|</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>|FLASH_GetStatus<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/>Yes<sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>Yes<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>-<sp/>Return<sp/>the<sp/>status<sp/>of<sp/>Bank1<sp/>(for<sp/>all<sp/>devices)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/>equivalent<sp/>to<sp/>FLASH_GetBank1Status<sp/>function<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>|----------------------------------------------------------------------------------------------------------------------------------|</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>|FLASH_WaitForLastOperation<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/>Yes<sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>Yes<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>-<sp/>Wait<sp/>for<sp/>Bank1<sp/>last<sp/>operation<sp/>(for<sp/>all<sp/>devices)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/>equivalent<sp/>to:<sp/>FLASH_WaitForLastBank1Operation<sp/>function<sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>+----------------------------------------------------------------------------------------------------------------------------------+</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>New<sp/>functions<sp/>used<sp/>for<sp/>all<sp/>STM32F10x<sp/>devices<sp/>to<sp/>manage<sp/>Bank1:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>These<sp/>functions<sp/>are<sp/>mainly<sp/>useful<sp/>for<sp/>STM32F10x_XL<sp/>density<sp/>devices,<sp/>to<sp/>have<sp/>separate<sp/>control<sp/>for<sp/>Bank1<sp/>and<sp/>bank2<sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>For<sp/>other<sp/>devices,<sp/>these<sp/>functions<sp/>are<sp/>optional<sp/>(covered<sp/>by<sp/>functions<sp/>listed<sp/>above)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>+----------------------------------------------------------------------------------------------------------------------------------+</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Functions<sp/>prototypes<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|STM32F10x_XL|Other<sp/>STM32F10x|<sp/><sp/><sp/><sp/>Comments<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/>devices<sp/><sp/>|<sp/><sp/>devices<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>|----------------------------------------------------------------------------------------------------------------------------------|</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>|<sp/>FLASH_UnlockBank1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/>Yes<sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>Yes<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>-<sp/>Unlock<sp/>Bank1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>|----------------------------------------------------------------------------------------------------------------------------------|</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>|FLASH_LockBank1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/>Yes<sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>Yes<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>-<sp/>Lock<sp/>Bank1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>|----------------------------------------------------------------------------------------------------------------------------------|</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>|<sp/>FLASH_EraseAllBank1Pages<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/>Yes<sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>Yes<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>-<sp/>Erase<sp/>all<sp/>pages<sp/>in<sp/>Bank1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>|----------------------------------------------------------------------------------------------------------------------------------|</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>|<sp/>FLASH_GetBank1Status<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/>Yes<sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>Yes<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>-<sp/>Return<sp/>the<sp/>status<sp/>of<sp/>Bank1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>|----------------------------------------------------------------------------------------------------------------------------------|</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>|<sp/>FLASH_WaitForLastBank1Operation<sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/>Yes<sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>Yes<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>-<sp/>Wait<sp/>for<sp/>Bank1<sp/>last<sp/>operation<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>+----------------------------------------------------------------------------------------------------------------------------------+</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>New<sp/>Functions<sp/>used<sp/>only<sp/>with<sp/>STM32F10x_XL<sp/>density<sp/>devices<sp/>to<sp/>manage<sp/>Bank2<sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>+----------------------------------------------------------------------------------------------------------------------------------+</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Functions<sp/>prototypes<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|STM32F10x_XL|Other<sp/>STM32F10x|<sp/><sp/><sp/><sp/>Comments<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/>devices<sp/><sp/>|<sp/><sp/>devices<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>|----------------------------------------------------------------------------------------------------------------------------------|</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>|<sp/>FLASH_UnlockBank2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/>Yes<sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>No<sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>-<sp/>Unlock<sp/>Bank2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>|----------------------------------------------------------------------------------------------------------------------------------|</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>|FLASH_LockBank2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/>Yes<sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>No<sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>-<sp/>Lock<sp/>Bank2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>|----------------------------------------------------------------------------------------------------------------------------------|</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>|<sp/>FLASH_EraseAllBank2Pages<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/>Yes<sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>No<sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>-<sp/>Erase<sp/>all<sp/>pages<sp/>in<sp/>Bank2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>|----------------------------------------------------------------------------------------------------------------------------------|</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>|<sp/>FLASH_GetBank2Status<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/>Yes<sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>No<sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>-<sp/>Return<sp/>the<sp/>status<sp/>of<sp/>Bank2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>|----------------------------------------------------------------------------------------------------------------------------------|</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>|<sp/>FLASH_WaitForLastBank2Operation<sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/>Yes<sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>No<sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>-<sp/>Wait<sp/>for<sp/>Bank2<sp/>last<sp/>operation<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>|----------------------------------------------------------------------------------------------------------------------------------|</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>|<sp/>FLASH_BootConfig<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/>Yes<sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>No<sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>-<sp/>Configure<sp/>to<sp/>boot<sp/>from<sp/>Bank1<sp/>or<sp/>Bank2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>+----------------------------------------------------------------------------------------------------------------------------------+</highlight></codeline>
</programlisting> <simplesect kind="note"><para>This function can be used for all STM32F10x devices. </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>FLASH_Latency</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the FLASH Latency value. This parameter can be one of the following values: <itemizedlist>
<listitem><para>FLASH_Latency_0: FLASH Zero Latency cycle </para></listitem>
<listitem><para>FLASH_Latency_1: FLASH One Latency cycle </para></listitem>
<listitem><para>FLASH_Latency_2: FLASH Two Latency cycles </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="399" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_flash.c" bodystart="254" bodyend="270"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___flash___latency_1gafcbd098d482318a622a58bf168547389" compoundref="stm32f10x__flash_8h" startline="74">IS_FLASH_LATENCY</references>
        <references refid="group___peripheral__declaration_1ga844ea28ba1e0a5a0e497f16b61ea306b" compoundref="stm32f10x_8h" startline="1445">FLASH</references>
        <references refid="group___f_l_a_s_h___private___defines_1ga5f1112c5731f01b063fdf2461efbedf7" compoundref="stm32f10x__flash_8c" startline="47">ACR_LATENCY_Mask</references>
      </memberdef>
      <memberdef kind="function" id="group___f_l_a_s_h___exported___functions_1ga978103a57b37920ac01128e999f9ece6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FLASH_HalfCycleAccessCmd</definition>
        <argsstring>(uint32_t FLASH_HalfCycleAccess)</argsstring>
        <name>FLASH_HalfCycleAccessCmd</name>
        <param>
          <type>uint32_t</type>
          <declname>FLASH_HalfCycleAccess</declname>
        </param>
        <briefdescription>
<para>Enables or disables the Half cycle flash access. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This function can be used for all STM32F10x devices. </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>FLASH_HalfCycleAccess</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the FLASH Half cycle Access mode. This parameter can be one of the following values: <itemizedlist>
<listitem><para>FLASH_HalfCycleAccess_Enable: FLASH Half Cycle Enable </para></listitem>
<listitem><para>FLASH_HalfCycleAccess_Disable: FLASH Half Cycle Disable </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="400" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_flash.c" bodystart="281" bodyend="289"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___half___cycle___enable___disable_1gad1b9e84a20436dcfe1a1ade4c26dc028" compoundref="stm32f10x__flash_8h" startline="87">IS_FLASH_HALFCYCLEACCESS_STATE</references>
        <references refid="group___peripheral__declaration_1ga844ea28ba1e0a5a0e497f16b61ea306b" compoundref="stm32f10x_8h" startline="1445">FLASH</references>
        <references refid="group___f_l_a_s_h___private___defines_1ga6b6f73163f3a90f5072b6b7dc9fb63b7" compoundref="stm32f10x__flash_8c" startline="48">ACR_HLFCYA_Mask</references>
      </memberdef>
      <memberdef kind="function" id="group___f_l_a_s_h___exported___functions_1ga6b93faaf0f560bf8d662b2cefe2f70e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FLASH_PrefetchBufferCmd</definition>
        <argsstring>(uint32_t FLASH_PrefetchBuffer)</argsstring>
        <name>FLASH_PrefetchBufferCmd</name>
        <param>
          <type>uint32_t</type>
          <declname>FLASH_PrefetchBuffer</declname>
        </param>
        <briefdescription>
<para>Enables or disables the Prefetch Buffer. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This function can be used for all STM32F10x devices. </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>FLASH_PrefetchBuffer</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the Prefetch buffer status. This parameter can be one of the following values: <itemizedlist>
<listitem><para>FLASH_PrefetchBuffer_Enable: FLASH Prefetch Buffer Enable </para></listitem>
<listitem><para>FLASH_PrefetchBuffer_Disable: FLASH Prefetch Buffer Disable </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="401" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_flash.c" bodystart="300" bodyend="308"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___prefetch___buffer___enable___disable_1ga5fd6932c4f4e157a1d6e73d433df092f" compoundref="stm32f10x__flash_8h" startline="99">IS_FLASH_PREFETCHBUFFER_STATE</references>
        <references refid="group___peripheral__declaration_1ga844ea28ba1e0a5a0e497f16b61ea306b" compoundref="stm32f10x_8h" startline="1445">FLASH</references>
        <references refid="group___f_l_a_s_h___private___defines_1gaf95fa450690ce94c4f4357e4dd72791a" compoundref="stm32f10x__flash_8c" startline="49">ACR_PRFTBE_Mask</references>
      </memberdef>
      <memberdef kind="function" id="group___f_l_a_s_h___exported___functions_1ga4084d0184bab463a1579271bf474aaef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FLASH_Unlock</definition>
        <argsstring>(void)</argsstring>
        <name>FLASH_Unlock</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Unlocks the FLASH Program Erase Controller. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This function can be used for all STM32F10x devices.<itemizedlist>
<listitem><para>For STM32F10X_XL devices this function unlocks Bank1 and Bank2.</para></listitem><listitem><para>For all other devices it unlocks Bank1 and it is equivalent to FLASH_UnlockBank1 function.. </para></listitem></itemizedlist>
</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="402" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_flash.c" bodystart="319" bodyend="330"/>
        <references refid="group___peripheral__declaration_1ga844ea28ba1e0a5a0e497f16b61ea306b" compoundref="stm32f10x_8h" startline="1445">FLASH</references>
        <references refid="group___f_l_a_s_h___private___defines_1gafd77e7bf91765d891ce63e2f0084b019" compoundref="stm32f10x__flash_8c" startline="78">FLASH_KEY1</references>
        <references refid="group___f_l_a_s_h___private___defines_1gaee83d0f557e158da52f4a205db6b60a7" compoundref="stm32f10x__flash_8c" startline="79">FLASH_KEY2</references>
      </memberdef>
      <memberdef kind="function" id="group___f_l_a_s_h___exported___functions_1ga46899557353c4312ddbe3f25e65df1d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FLASH_Lock</definition>
        <argsstring>(void)</argsstring>
        <name>FLASH_Lock</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Locks the FLASH Program Erase Controller. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This function can be used for all STM32F10x devices.<itemizedlist>
<listitem><para>For STM32F10X_XL devices this function Locks Bank1 and Bank2.</para></listitem><listitem><para>For all other devices it Locks Bank1 and it is equivalent to FLASH_LockBank1 function. </para></listitem></itemizedlist>
</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="403" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_flash.c" bodystart="372" bodyend="381"/>
        <references refid="group___peripheral__declaration_1ga844ea28ba1e0a5a0e497f16b61ea306b" compoundref="stm32f10x_8h" startline="1445">FLASH</references>
        <references refid="group___f_l_a_s_h___private___defines_1gaee27a8100366266daa8d3a69c589e4b9" compoundref="stm32f10x__flash_8c" startline="66">CR_LOCK_Set</references>
      </memberdef>
      <memberdef kind="function" id="group___f_l_a_s_h___exported___functions_1ga13a2ca18bfb3d5fb827a2751799f8451" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___f_l_a_s_h___exported___types_1gadc63a6f3404ff1f71229a66915e9cdc0" kindref="member">FLASH_Status</ref></type>
        <definition>FLASH_Status FLASH_ErasePage</definition>
        <argsstring>(uint32_t Page_Address)</argsstring>
        <name>FLASH_ErasePage</name>
        <param>
          <type>uint32_t</type>
          <declname>Page_Address</declname>
        </param>
        <briefdescription>
<para>Erases a specified FLASH page. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This function can be used for all STM32F10x devices. </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Page_Address</parametername>
</parameternamelist>
<parameterdescription>
<para>The page address to be erased. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>FLASH</parametername>
</parameternamelist>
<parameterdescription>
<para>Status: The returned value can be: FLASH_BUSY, FLASH_ERROR_PG, FLASH_ERROR_WRP, FLASH_COMPLETE or FLASH_TIMEOUT. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="404" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_flash.c" bodystart="419" bodyend="483"/>
        <references refid="group___f_l_a_s_h___exported___types_1ggadc63a6f3404ff1f71229a66915e9cdc0ab0e88e9f59edee379a1a710a8b7deebf" compoundref="stm32f10x__flash_8h" startline="55">FLASH_COMPLETE</references>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___option___bytes___write___protection_1gad0c8166ba15a0b8d458412a8bb74e2f0" compoundref="stm32f10x__flash_8h" startline="247">IS_FLASH_ADDRESS</references>
        <references refid="group___f_l_a_s_h___private___defines_1ga54cf78f1be63ba209709bf8f781ccd01" compoundref="stm32f10x__flash_8c" startline="82">FLASH_BANK1_END_ADDRESS</references>
        <references refid="group___f_l_a_s_h___private___functions_1ga470d345c2ea4304f899aa988bdd23824" compoundref="stm32f10x__flash_8c" startline="1645" endline="1663">FLASH_WaitForLastBank1Operation</references>
        <references refid="group___f_l_a_s_h___private___defines_1ga62b5515e9a29a487adcc30a88d082244" compoundref="stm32f10x__flash_8c" startline="85">EraseTimeout</references>
        <references refid="group___peripheral__declaration_1ga844ea28ba1e0a5a0e497f16b61ea306b" compoundref="stm32f10x_8h" startline="1445">FLASH</references>
        <references refid="group___f_l_a_s_h___private___defines_1ga6e5e45c62f559102546b40de50c700bd" compoundref="stm32f10x__flash_8c" startline="57">CR_PER_Set</references>
        <references refid="group___f_l_a_s_h___private___defines_1ga0e6349818d8602ffffc56e5e04d9ab13" compoundref="stm32f10x__flash_8c" startline="65">CR_STRT_Set</references>
        <references refid="group___f_l_a_s_h___private___defines_1gad564767c401a1a9c36b71342448fd256" compoundref="stm32f10x__flash_8c" startline="58">CR_PER_Reset</references>
        <references refid="group___f_l_a_s_h___private___functions_1ga2ad803999ae93ec03700983c59cae264" compoundref="stm32f10x__flash_8c" startline="1617" endline="1635">FLASH_WaitForLastOperation</references>
      </memberdef>
      <memberdef kind="function" id="group___f_l_a_s_h___exported___functions_1gab2e6dea62c72b3e47c17512579d37498" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___f_l_a_s_h___exported___types_1gadc63a6f3404ff1f71229a66915e9cdc0" kindref="member">FLASH_Status</ref></type>
        <definition>FLASH_Status FLASH_EraseAllPages</definition>
        <argsstring>(void)</argsstring>
        <name>FLASH_EraseAllPages</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Erases all FLASH pages. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This function can be used for all STM32F10x devices. </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>FLASH</parametername>
</parameternamelist>
<parameterdescription>
<para>Status: The returned value can be: FLASH_ERROR_PG, FLASH_ERROR_WRP, FLASH_COMPLETE or FLASH_TIMEOUT. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="405" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_flash.c" bodystart="492" bodyend="543"/>
        <references refid="group___f_l_a_s_h___exported___types_1ggadc63a6f3404ff1f71229a66915e9cdc0ab0e88e9f59edee379a1a710a8b7deebf" compoundref="stm32f10x__flash_8h" startline="55">FLASH_COMPLETE</references>
        <references refid="group___f_l_a_s_h___private___functions_1ga470d345c2ea4304f899aa988bdd23824" compoundref="stm32f10x__flash_8c" startline="1645" endline="1663">FLASH_WaitForLastBank1Operation</references>
        <references refid="group___f_l_a_s_h___private___defines_1ga62b5515e9a29a487adcc30a88d082244" compoundref="stm32f10x__flash_8c" startline="85">EraseTimeout</references>
        <references refid="group___peripheral__declaration_1ga844ea28ba1e0a5a0e497f16b61ea306b" compoundref="stm32f10x_8h" startline="1445">FLASH</references>
        <references refid="group___f_l_a_s_h___private___defines_1ga7e5cf18b31b5ed960cd05a816cadf973" compoundref="stm32f10x__flash_8c" startline="59">CR_MER_Set</references>
        <references refid="group___f_l_a_s_h___private___defines_1ga0e6349818d8602ffffc56e5e04d9ab13" compoundref="stm32f10x__flash_8c" startline="65">CR_STRT_Set</references>
        <references refid="group___f_l_a_s_h___private___defines_1gabed855f33ff965c530c2b09a49a987f5" compoundref="stm32f10x__flash_8c" startline="60">CR_MER_Reset</references>
        <references refid="group___f_l_a_s_h___private___functions_1ga2ad803999ae93ec03700983c59cae264" compoundref="stm32f10x__flash_8c" startline="1617" endline="1635">FLASH_WaitForLastOperation</references>
      </memberdef>
      <memberdef kind="function" id="group___f_l_a_s_h___exported___functions_1ga152768609e85d74a9d8474be8dc2874b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___f_l_a_s_h___exported___types_1gadc63a6f3404ff1f71229a66915e9cdc0" kindref="member">FLASH_Status</ref></type>
        <definition>FLASH_Status FLASH_EraseOptionBytes</definition>
        <argsstring>(void)</argsstring>
        <name>FLASH_EraseOptionBytes</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Erases the FLASH option bytes. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This functions erases all option bytes except the Read protection (RDP). </para></simplesect>
<simplesect kind="note"><para>This function can be used for all STM32F10x devices. </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>FLASH</parametername>
</parameternamelist>
<parameterdescription>
<para>Status: The returned value can be: FLASH_ERROR_PG, FLASH_ERROR_WRP, FLASH_COMPLETE or FLASH_TIMEOUT. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="406" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_flash.c" bodystart="616" bodyend="671"/>
        <references refid="group___f_l_a_s_h___private___defines_1ga34ec82060edcc9a18bf804b07dec5881" compoundref="stm32f10x__flash_8c" startline="77">RDP_Key</references>
        <references refid="group___f_l_a_s_h___exported___types_1ggadc63a6f3404ff1f71229a66915e9cdc0ab0e88e9f59edee379a1a710a8b7deebf" compoundref="stm32f10x__flash_8h" startline="55">FLASH_COMPLETE</references>
        <references refid="group___f_l_a_s_h___private___functions_1ga57fe56770ff25b358f3e36bd70632e37" compoundref="stm32f10x__flash_8c" startline="1262" endline="1274">FLASH_GetReadOutProtectionStatus</references>
        <references refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffa589b7d94a3d91d145720e2fed0eb3a05" compoundref="stm32f10x_8h" startline="519">RESET</references>
        <references refid="group___f_l_a_s_h___private___functions_1ga2ad803999ae93ec03700983c59cae264" compoundref="stm32f10x__flash_8c" startline="1617" endline="1635">FLASH_WaitForLastOperation</references>
        <references refid="group___f_l_a_s_h___private___defines_1ga62b5515e9a29a487adcc30a88d082244" compoundref="stm32f10x__flash_8c" startline="85">EraseTimeout</references>
        <references refid="group___peripheral__declaration_1ga844ea28ba1e0a5a0e497f16b61ea306b" compoundref="stm32f10x_8h" startline="1445">FLASH</references>
        <references refid="group___f_l_a_s_h___private___defines_1gafd77e7bf91765d891ce63e2f0084b019" compoundref="stm32f10x__flash_8c" startline="78">FLASH_KEY1</references>
        <references refid="group___f_l_a_s_h___private___defines_1gaee83d0f557e158da52f4a205db6b60a7" compoundref="stm32f10x__flash_8c" startline="79">FLASH_KEY2</references>
        <references refid="group___f_l_a_s_h___private___defines_1gac5707368555a5b7400eea1e306b62b16" compoundref="stm32f10x__flash_8c" startline="63">CR_OPTER_Set</references>
        <references refid="group___f_l_a_s_h___private___defines_1ga0e6349818d8602ffffc56e5e04d9ab13" compoundref="stm32f10x__flash_8c" startline="65">CR_STRT_Set</references>
        <references refid="group___f_l_a_s_h___private___defines_1ga0245cfe194895f1ad98ba66f8eda3e47" compoundref="stm32f10x__flash_8c" startline="64">CR_OPTER_Reset</references>
        <references refid="group___f_l_a_s_h___private___defines_1ga84ec77ffaa2a83edeef385e3a36171f8" compoundref="stm32f10x__flash_8c" startline="61">CR_OPTPG_Set</references>
        <references refid="group___peripheral__declaration_1gad2d5f875cdc6d696735f20fa23a895c3" compoundref="stm32f10x_8h" startline="1446">OB</references>
        <references refid="group___f_l_a_s_h___private___defines_1ga0794a43966b6084d28d13c651c739385" compoundref="stm32f10x__flash_8c" startline="86">ProgramTimeout</references>
        <references refid="group___f_l_a_s_h___exported___types_1ggadc63a6f3404ff1f71229a66915e9cdc0a90c514b6a619e3a4e6c2eec3154323f8" compoundref="stm32f10x__flash_8h" startline="56">FLASH_TIMEOUT</references>
        <references refid="group___f_l_a_s_h___private___defines_1ga9dd2ca46f4e8edfa098e1481699c08b7" compoundref="stm32f10x__flash_8c" startline="62">CR_OPTPG_Reset</references>
      </memberdef>
      <memberdef kind="function" id="group___f_l_a_s_h___exported___functions_1gaac9a2f400b92537bd42a6bd7cc237b11" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___f_l_a_s_h___exported___types_1gadc63a6f3404ff1f71229a66915e9cdc0" kindref="member">FLASH_Status</ref></type>
        <definition>FLASH_Status FLASH_ProgramWord</definition>
        <argsstring>(uint32_t Address, uint32_t Data)</argsstring>
        <name>FLASH_ProgramWord</name>
        <param>
          <type>uint32_t</type>
          <declname>Address</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>Data</declname>
        </param>
        <briefdescription>
<para>Programs a word at a specified address. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This function can be used for all STM32F10x devices. </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Address</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the address to be programmed. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Data</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the data to be programmed. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>FLASH</parametername>
</parameternamelist>
<parameterdescription>
<para>Status: The returned value can be: FLASH_ERROR_PG, FLASH_ERROR_WRP, FLASH_COMPLETE or FLASH_TIMEOUT. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="407" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_flash.c" bodystart="687" bodyend="865"/>
        <references refid="group___f_l_a_s_h___exported___types_1ggadc63a6f3404ff1f71229a66915e9cdc0ab0e88e9f59edee379a1a710a8b7deebf" compoundref="stm32f10x__flash_8h" startline="55">FLASH_COMPLETE</references>
        <references refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" compoundref="core__cm0_8h" startline="221">__IO</references>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___option___bytes___write___protection_1gad0c8166ba15a0b8d458412a8bb74e2f0" compoundref="stm32f10x__flash_8h" startline="247">IS_FLASH_ADDRESS</references>
        <references refid="group___f_l_a_s_h___private___defines_1ga54cf78f1be63ba209709bf8f781ccd01" compoundref="stm32f10x__flash_8c" startline="82">FLASH_BANK1_END_ADDRESS</references>
        <references refid="group___f_l_a_s_h___private___functions_1ga470d345c2ea4304f899aa988bdd23824" compoundref="stm32f10x__flash_8c" startline="1645" endline="1663">FLASH_WaitForLastBank1Operation</references>
        <references refid="group___f_l_a_s_h___private___defines_1ga0794a43966b6084d28d13c651c739385" compoundref="stm32f10x__flash_8c" startline="86">ProgramTimeout</references>
        <references refid="group___peripheral__declaration_1ga844ea28ba1e0a5a0e497f16b61ea306b" compoundref="stm32f10x_8h" startline="1445">FLASH</references>
        <references refid="group___f_l_a_s_h___private___defines_1gaf4fdb45c4a4d30dcddc389ec920f720f" compoundref="stm32f10x__flash_8c" startline="55">CR_PG_Set</references>
        <references refid="group___f_l_a_s_h___private___functions_1ga2ad803999ae93ec03700983c59cae264" compoundref="stm32f10x__flash_8c" startline="1617" endline="1635">FLASH_WaitForLastOperation</references>
        <references refid="group___f_l_a_s_h___private___defines_1gadda1a996e1867e911aaa7b0f30eb6834" compoundref="stm32f10x__flash_8c" startline="56">CR_PG_Reset</references>
      </memberdef>
      <memberdef kind="function" id="group___f_l_a_s_h___exported___functions_1ga5c1336f667950a8765887228f1d0d501" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___f_l_a_s_h___exported___types_1gadc63a6f3404ff1f71229a66915e9cdc0" kindref="member">FLASH_Status</ref></type>
        <definition>FLASH_Status FLASH_ProgramHalfWord</definition>
        <argsstring>(uint32_t Address, uint16_t Data)</argsstring>
        <name>FLASH_ProgramHalfWord</name>
        <param>
          <type>uint32_t</type>
          <declname>Address</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>Data</declname>
        </param>
        <briefdescription>
<para>Programs a half word at a specified address. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This function can be used for all STM32F10x devices. </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Address</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the address to be programmed. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Data</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the data to be programmed. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>FLASH</parametername>
</parameternamelist>
<parameterdescription>
<para>Status: The returned value can be: FLASH_ERROR_PG, FLASH_ERROR_WRP, FLASH_COMPLETE or FLASH_TIMEOUT. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="408" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_flash.c" bodystart="880" bodyend="940"/>
        <references refid="group___f_l_a_s_h___exported___types_1ggadc63a6f3404ff1f71229a66915e9cdc0ab0e88e9f59edee379a1a710a8b7deebf" compoundref="stm32f10x__flash_8h" startline="55">FLASH_COMPLETE</references>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___option___bytes___write___protection_1gad0c8166ba15a0b8d458412a8bb74e2f0" compoundref="stm32f10x__flash_8h" startline="247">IS_FLASH_ADDRESS</references>
        <references refid="group___f_l_a_s_h___private___functions_1ga2ad803999ae93ec03700983c59cae264" compoundref="stm32f10x__flash_8c" startline="1617" endline="1635">FLASH_WaitForLastOperation</references>
        <references refid="group___f_l_a_s_h___private___defines_1ga0794a43966b6084d28d13c651c739385" compoundref="stm32f10x__flash_8c" startline="86">ProgramTimeout</references>
        <references refid="group___f_l_a_s_h___private___defines_1ga54cf78f1be63ba209709bf8f781ccd01" compoundref="stm32f10x__flash_8c" startline="82">FLASH_BANK1_END_ADDRESS</references>
        <references refid="group___peripheral__declaration_1ga844ea28ba1e0a5a0e497f16b61ea306b" compoundref="stm32f10x_8h" startline="1445">FLASH</references>
        <references refid="group___f_l_a_s_h___private___defines_1gaf4fdb45c4a4d30dcddc389ec920f720f" compoundref="stm32f10x__flash_8c" startline="55">CR_PG_Set</references>
        <references refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" compoundref="core__cm0_8h" startline="221">__IO</references>
        <references refid="group___f_l_a_s_h___private___functions_1ga470d345c2ea4304f899aa988bdd23824" compoundref="stm32f10x__flash_8c" startline="1645" endline="1663">FLASH_WaitForLastBank1Operation</references>
        <references refid="group___f_l_a_s_h___private___defines_1gadda1a996e1867e911aaa7b0f30eb6834" compoundref="stm32f10x__flash_8c" startline="56">CR_PG_Reset</references>
      </memberdef>
      <memberdef kind="function" id="group___f_l_a_s_h___exported___functions_1ga1382ff9d4ded8a5c076fde4fff529d21" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___f_l_a_s_h___exported___types_1gadc63a6f3404ff1f71229a66915e9cdc0" kindref="member">FLASH_Status</ref></type>
        <definition>FLASH_Status FLASH_ProgramOptionByteData</definition>
        <argsstring>(uint32_t Address, uint8_t Data)</argsstring>
        <name>FLASH_ProgramOptionByteData</name>
        <param>
          <type>uint32_t</type>
          <declname>Address</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>Data</declname>
        </param>
        <briefdescription>
<para>Programs a half word at a specified Option Byte Data address. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This function can be used for all STM32F10x devices. </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Address</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the address to be programmed. This parameter can be 0x1FFFF804 or 0x1FFFF806. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Data</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the data to be programmed. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>FLASH</parametername>
</parameternamelist>
<parameterdescription>
<para>Status: The returned value can be: FLASH_ERROR_PG, FLASH_ERROR_WRP, FLASH_COMPLETE or FLASH_TIMEOUT. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="409" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_flash.c" bodystart="951" bodyend="977"/>
        <references refid="group___f_l_a_s_h___exported___types_1ggadc63a6f3404ff1f71229a66915e9cdc0ab0e88e9f59edee379a1a710a8b7deebf" compoundref="stm32f10x__flash_8h" startline="55">FLASH_COMPLETE</references>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___option___bytes___write___protection_1ga73fcac8d5f301a5c98518374ae926633" compoundref="stm32f10x__flash_8h" startline="249">IS_OB_DATA_ADDRESS</references>
        <references refid="group___f_l_a_s_h___private___functions_1ga2ad803999ae93ec03700983c59cae264" compoundref="stm32f10x__flash_8c" startline="1617" endline="1635">FLASH_WaitForLastOperation</references>
        <references refid="group___f_l_a_s_h___private___defines_1ga0794a43966b6084d28d13c651c739385" compoundref="stm32f10x__flash_8c" startline="86">ProgramTimeout</references>
        <references refid="group___peripheral__declaration_1ga844ea28ba1e0a5a0e497f16b61ea306b" compoundref="stm32f10x_8h" startline="1445">FLASH</references>
        <references refid="group___f_l_a_s_h___private___defines_1gafd77e7bf91765d891ce63e2f0084b019" compoundref="stm32f10x__flash_8c" startline="78">FLASH_KEY1</references>
        <references refid="group___f_l_a_s_h___private___defines_1gaee83d0f557e158da52f4a205db6b60a7" compoundref="stm32f10x__flash_8c" startline="79">FLASH_KEY2</references>
        <references refid="group___f_l_a_s_h___private___defines_1ga84ec77ffaa2a83edeef385e3a36171f8" compoundref="stm32f10x__flash_8c" startline="61">CR_OPTPG_Set</references>
        <references refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" compoundref="core__cm0_8h" startline="221">__IO</references>
        <references refid="group___f_l_a_s_h___exported___types_1ggadc63a6f3404ff1f71229a66915e9cdc0a90c514b6a619e3a4e6c2eec3154323f8" compoundref="stm32f10x__flash_8h" startline="56">FLASH_TIMEOUT</references>
        <references refid="group___f_l_a_s_h___private___defines_1ga9dd2ca46f4e8edfa098e1481699c08b7" compoundref="stm32f10x__flash_8c" startline="62">CR_OPTPG_Reset</references>
      </memberdef>
      <memberdef kind="function" id="group___f_l_a_s_h___exported___functions_1gabad10c15e2d1ff1cb9e1083d08a9e763" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___f_l_a_s_h___exported___types_1gadc63a6f3404ff1f71229a66915e9cdc0" kindref="member">FLASH_Status</ref></type>
        <definition>FLASH_Status FLASH_EnableWriteProtection</definition>
        <argsstring>(uint32_t FLASH_Pages)</argsstring>
        <name>FLASH_EnableWriteProtection</name>
        <param>
          <type>uint32_t</type>
          <declname>FLASH_Pages</declname>
        </param>
        <briefdescription>
<para>Write protects the desired pages. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This function can be used for all STM32F10x devices. </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>FLASH_Pages</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the address of the pages to be write protected. This parameter can be: <itemizedlist>
<listitem><para>For <bold>STM32_Low-density_devices</bold>: value between FLASH_WRProt_Pages0to3 and FLASH_WRProt_Pages28to31 </para></listitem>
<listitem><para>For <bold>STM32_Medium-density_devices</bold>: value between FLASH_WRProt_Pages0to3 and FLASH_WRProt_Pages124to127 </para></listitem>
<listitem><para>For <bold>STM32_High-density_devices</bold>: value between FLASH_WRProt_Pages0to1 and FLASH_WRProt_Pages60to61 or FLASH_WRProt_Pages62to255 </para></listitem>
<listitem><para>For <bold>STM32_Connectivity_line_devices:</bold> value between FLASH_WRProt_Pages0to1 and FLASH_WRProt_Pages60to61 or FLASH_WRProt_Pages62to127 </para></listitem>
<listitem><para>For <bold>STM32_XL-density_devices</bold>: value between FLASH_WRProt_Pages0to1 and FLASH_WRProt_Pages60to61 or FLASH_WRProt_Pages62to511 </para></listitem>
<listitem><para>FLASH_WRProt_AllPages </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>FLASH</parametername>
</parameternamelist>
<parameterdescription>
<para>Status: The returned value can be: FLASH_ERROR_PG, FLASH_ERROR_WRP, FLASH_COMPLETE or FLASH_TIMEOUT. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="410" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_flash.c" bodystart="997" bodyend="1059"/>
        <references refid="group___f_l_a_s_h___exported___types_1ggadc63a6f3404ff1f71229a66915e9cdc0ab0e88e9f59edee379a1a710a8b7deebf" compoundref="stm32f10x__flash_8h" startline="55">FLASH_COMPLETE</references>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___option___bytes___write___protection_1gafe68b93dfb1ebf68d74f871850ab373b" compoundref="stm32f10x__flash_8h" startline="245">IS_FLASH_WRPROT_PAGE</references>
        <references refid="group___f_l_a_s_h___private___defines_1ga79707964cbd409601e1ddf6064cf1c5c" compoundref="stm32f10x__flash_8c" startline="70">WRP0_Mask</references>
        <references refid="group___f_l_a_s_h___private___defines_1gaa2b2535ba91736dd2d6baa92068686e0" compoundref="stm32f10x__flash_8c" startline="71">WRP1_Mask</references>
        <references refid="group___f_l_a_s_h___private___defines_1ga4676f67c7be97a09eb1c6a5753ce0523" compoundref="stm32f10x__flash_8c" startline="72">WRP2_Mask</references>
        <references refid="group___f_l_a_s_h___private___defines_1ga649ce8b78520ca192b41aabe2daef035" compoundref="stm32f10x__flash_8c" startline="73">WRP3_Mask</references>
        <references refid="group___f_l_a_s_h___private___functions_1ga2ad803999ae93ec03700983c59cae264" compoundref="stm32f10x__flash_8c" startline="1617" endline="1635">FLASH_WaitForLastOperation</references>
        <references refid="group___f_l_a_s_h___private___defines_1ga0794a43966b6084d28d13c651c739385" compoundref="stm32f10x__flash_8c" startline="86">ProgramTimeout</references>
        <references refid="group___peripheral__declaration_1ga844ea28ba1e0a5a0e497f16b61ea306b" compoundref="stm32f10x_8h" startline="1445">FLASH</references>
        <references refid="group___f_l_a_s_h___private___defines_1gafd77e7bf91765d891ce63e2f0084b019" compoundref="stm32f10x__flash_8c" startline="78">FLASH_KEY1</references>
        <references refid="group___f_l_a_s_h___private___defines_1gaee83d0f557e158da52f4a205db6b60a7" compoundref="stm32f10x__flash_8c" startline="79">FLASH_KEY2</references>
        <references refid="group___f_l_a_s_h___private___defines_1ga84ec77ffaa2a83edeef385e3a36171f8" compoundref="stm32f10x__flash_8c" startline="61">CR_OPTPG_Set</references>
        <references refid="group___peripheral__declaration_1gad2d5f875cdc6d696735f20fa23a895c3" compoundref="stm32f10x_8h" startline="1446">OB</references>
        <references refid="group___f_l_a_s_h___exported___types_1ggadc63a6f3404ff1f71229a66915e9cdc0a90c514b6a619e3a4e6c2eec3154323f8" compoundref="stm32f10x__flash_8h" startline="56">FLASH_TIMEOUT</references>
        <references refid="group___f_l_a_s_h___private___defines_1ga9dd2ca46f4e8edfa098e1481699c08b7" compoundref="stm32f10x__flash_8c" startline="62">CR_OPTPG_Reset</references>
      </memberdef>
      <memberdef kind="function" id="group___f_l_a_s_h___exported___functions_1ga0b8d1a8277950c890bbc247bbeafb40f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___f_l_a_s_h___exported___types_1gadc63a6f3404ff1f71229a66915e9cdc0" kindref="member">FLASH_Status</ref></type>
        <definition>FLASH_Status FLASH_ReadOutProtection</definition>
        <argsstring>(FunctionalState NewState)</argsstring>
        <name>FLASH_ReadOutProtection</name>
        <param>
          <type><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref></type>
          <declname>NewState</declname>
        </param>
        <briefdescription>
<para>Enables or disables the read out protection. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>If the user has already programmed the other option bytes before calling this function, he must re-program them since this function erases all option bytes. </para></simplesect>
<simplesect kind="note"><para>This function can be used for all STM32F10x devices. </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Newstate</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of the ReadOut Protection. This parameter can be: ENABLE or DISABLE. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>FLASH</parametername>
</parameternamelist>
<parameterdescription>
<para>Status: The returned value can be: FLASH_ERROR_PG, FLASH_ERROR_WRP, FLASH_COMPLETE or FLASH_TIMEOUT. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="411" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_flash.c" bodystart="1071" bodyend="1120"/>
        <references refid="group___f_l_a_s_h___exported___types_1ggadc63a6f3404ff1f71229a66915e9cdc0ab0e88e9f59edee379a1a710a8b7deebf" compoundref="stm32f10x__flash_8h" startline="55">FLASH_COMPLETE</references>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" compoundref="stm32f10x_8h" startline="522">IS_FUNCTIONAL_STATE</references>
        <references refid="group___f_l_a_s_h___private___functions_1ga2ad803999ae93ec03700983c59cae264" compoundref="stm32f10x__flash_8c" startline="1617" endline="1635">FLASH_WaitForLastOperation</references>
        <references refid="group___f_l_a_s_h___private___defines_1ga62b5515e9a29a487adcc30a88d082244" compoundref="stm32f10x__flash_8c" startline="85">EraseTimeout</references>
        <references refid="group___peripheral__declaration_1ga844ea28ba1e0a5a0e497f16b61ea306b" compoundref="stm32f10x_8h" startline="1445">FLASH</references>
        <references refid="group___f_l_a_s_h___private___defines_1gafd77e7bf91765d891ce63e2f0084b019" compoundref="stm32f10x__flash_8c" startline="78">FLASH_KEY1</references>
        <references refid="group___f_l_a_s_h___private___defines_1gaee83d0f557e158da52f4a205db6b60a7" compoundref="stm32f10x__flash_8c" startline="79">FLASH_KEY2</references>
        <references refid="group___f_l_a_s_h___private___defines_1gac5707368555a5b7400eea1e306b62b16" compoundref="stm32f10x__flash_8c" startline="63">CR_OPTER_Set</references>
        <references refid="group___f_l_a_s_h___private___defines_1ga0e6349818d8602ffffc56e5e04d9ab13" compoundref="stm32f10x__flash_8c" startline="65">CR_STRT_Set</references>
        <references refid="group___f_l_a_s_h___private___defines_1ga0245cfe194895f1ad98ba66f8eda3e47" compoundref="stm32f10x__flash_8c" startline="64">CR_OPTER_Reset</references>
        <references refid="group___f_l_a_s_h___private___defines_1ga84ec77ffaa2a83edeef385e3a36171f8" compoundref="stm32f10x__flash_8c" startline="61">CR_OPTPG_Set</references>
        <references refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1ad3a9df141be0ccf10389b640f492b26d" compoundref="stm32f10x_8h" startline="521">DISABLE</references>
        <references refid="group___peripheral__declaration_1gad2d5f875cdc6d696735f20fa23a895c3" compoundref="stm32f10x_8h" startline="1446">OB</references>
        <references refid="group___f_l_a_s_h___private___defines_1ga34ec82060edcc9a18bf804b07dec5881" compoundref="stm32f10x__flash_8c" startline="77">RDP_Key</references>
        <references refid="group___f_l_a_s_h___exported___types_1ggadc63a6f3404ff1f71229a66915e9cdc0a90c514b6a619e3a4e6c2eec3154323f8" compoundref="stm32f10x__flash_8h" startline="56">FLASH_TIMEOUT</references>
        <references refid="group___f_l_a_s_h___private___defines_1ga9dd2ca46f4e8edfa098e1481699c08b7" compoundref="stm32f10x__flash_8c" startline="62">CR_OPTPG_Reset</references>
      </memberdef>
      <memberdef kind="function" id="group___f_l_a_s_h___exported___functions_1gaae1c493bb06c930ceb84dedfdb7325f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___f_l_a_s_h___exported___types_1gadc63a6f3404ff1f71229a66915e9cdc0" kindref="member">FLASH_Status</ref></type>
        <definition>FLASH_Status FLASH_UserOptionByteConfig</definition>
        <argsstring>(uint16_t OB_IWDG, uint16_t OB_STOP, uint16_t OB_STDBY)</argsstring>
        <name>FLASH_UserOptionByteConfig</name>
        <param>
          <type>uint16_t</type>
          <declname>OB_IWDG</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>OB_STOP</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>OB_STDBY</declname>
        </param>
        <briefdescription>
<para>Programs the FLASH User Option Byte: IWDG_SW / RST_STOP / RST_STDBY. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This function can be used for all STM32F10x devices. </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>OB_IWDG</parametername>
</parameternamelist>
<parameterdescription>
<para>Selects the IWDG mode This parameter can be one of the following values: <itemizedlist>
<listitem><para>OB_IWDG_SW: Software IWDG selected </para></listitem>
<listitem><para>OB_IWDG_HW: Hardware IWDG selected </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>OB_STOP</parametername>
</parameternamelist>
<parameterdescription>
<para>Reset event when entering STOP mode. This parameter can be one of the following values: <itemizedlist>
<listitem><para>OB_STOP_NoRST: No reset generated when entering in STOP </para></listitem>
<listitem><para>OB_STOP_RST: Reset generated when entering in STOP </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>OB_STDBY</parametername>
</parameternamelist>
<parameterdescription>
<para>Reset event when entering Standby mode. This parameter can be one of the following values: <itemizedlist>
<listitem><para>OB_STDBY_NoRST: No reset generated when entering in STANDBY </para></listitem>
<listitem><para>OB_STDBY_RST: Reset generated when entering in STANDBY </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>FLASH</parametername>
</parameternamelist>
<parameterdescription>
<para>Status: The returned value can be: FLASH_ERROR_PG, FLASH_ERROR_WRP, FLASH_COMPLETE or FLASH_TIMEOUT. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="412" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_flash.c" bodystart="1140" bodyend="1173"/>
        <references refid="group___f_l_a_s_h___exported___types_1ggadc63a6f3404ff1f71229a66915e9cdc0ab0e88e9f59edee379a1a710a8b7deebf" compoundref="stm32f10x__flash_8h" startline="55">FLASH_COMPLETE</references>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___option___bytes___i_watchdog_1gaf2871652c08e76499d9449be6556f12c" compoundref="stm32f10x__flash_8h" startline="261">IS_OB_IWDG_SOURCE</references>
        <references refid="group___option___bytes__n_r_s_t___s_t_o_p_1ga131ae3434f300c8317dd6b3b349c7cab" compoundref="stm32f10x__flash_8h" startline="273">IS_OB_STOP_SOURCE</references>
        <references refid="group___option___bytes__n_r_s_t___s_t_d_b_y_1ga8a05393df3a5e89551b4e2e1e8c5b884" compoundref="stm32f10x__flash_8h" startline="285">IS_OB_STDBY_SOURCE</references>
        <references refid="group___peripheral__declaration_1ga844ea28ba1e0a5a0e497f16b61ea306b" compoundref="stm32f10x_8h" startline="1445">FLASH</references>
        <references refid="group___f_l_a_s_h___private___defines_1gafd77e7bf91765d891ce63e2f0084b019" compoundref="stm32f10x__flash_8c" startline="78">FLASH_KEY1</references>
        <references refid="group___f_l_a_s_h___private___defines_1gaee83d0f557e158da52f4a205db6b60a7" compoundref="stm32f10x__flash_8c" startline="79">FLASH_KEY2</references>
        <references refid="group___f_l_a_s_h___private___functions_1ga2ad803999ae93ec03700983c59cae264" compoundref="stm32f10x__flash_8c" startline="1617" endline="1635">FLASH_WaitForLastOperation</references>
        <references refid="group___f_l_a_s_h___private___defines_1ga0794a43966b6084d28d13c651c739385" compoundref="stm32f10x__flash_8c" startline="86">ProgramTimeout</references>
        <references refid="group___f_l_a_s_h___private___defines_1ga84ec77ffaa2a83edeef385e3a36171f8" compoundref="stm32f10x__flash_8c" startline="61">CR_OPTPG_Set</references>
        <references refid="group___peripheral__declaration_1gad2d5f875cdc6d696735f20fa23a895c3" compoundref="stm32f10x_8h" startline="1446">OB</references>
        <references refid="group___f_l_a_s_h___exported___types_1ggadc63a6f3404ff1f71229a66915e9cdc0a90c514b6a619e3a4e6c2eec3154323f8" compoundref="stm32f10x__flash_8h" startline="56">FLASH_TIMEOUT</references>
        <references refid="group___f_l_a_s_h___private___defines_1ga9dd2ca46f4e8edfa098e1481699c08b7" compoundref="stm32f10x__flash_8c" startline="62">CR_OPTPG_Reset</references>
        <references refid="group___f_l_a_s_h___private___defines_1ga5098bd938dadebbbdf9e628c84b2dcf0" compoundref="stm32f10x__flash_8c" startline="74">OB_USER_BFB2</references>
      </memberdef>
      <memberdef kind="function" id="group___f_l_a_s_h___exported___functions_1ga31441647fac5fbb38369613076737943" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t FLASH_GetUserOptionByte</definition>
        <argsstring>(void)</argsstring>
        <name>FLASH_GetUserOptionByte</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Returns the FLASH User Option Bytes values. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This function can be used for all STM32F10x devices. </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>FLASH User Option Bytes values:IWDG_SW(Bit0), RST_STOP(Bit1) and RST_STDBY(Bit2). </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="413" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_flash.c" bodystart="1238" bodyend="1242"/>
        <references refid="group___peripheral__declaration_1ga844ea28ba1e0a5a0e497f16b61ea306b" compoundref="stm32f10x_8h" startline="1445">FLASH</references>
      </memberdef>
      <memberdef kind="function" id="group___f_l_a_s_h___exported___functions_1gac009e061562c7d36d7d2d00bb1c8aafa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t FLASH_GetWriteProtectionOptionByte</definition>
        <argsstring>(void)</argsstring>
        <name>FLASH_GetWriteProtectionOptionByte</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Returns the FLASH Write Protection Option Bytes Register value. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This function can be used for all STM32F10x devices. </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>FLASH Write Protection Option Bytes Register value </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="414" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_flash.c" bodystart="1250" bodyend="1254"/>
        <references refid="group___peripheral__declaration_1ga844ea28ba1e0a5a0e497f16b61ea306b" compoundref="stm32f10x_8h" startline="1445">FLASH</references>
      </memberdef>
      <memberdef kind="function" id="group___f_l_a_s_h___exported___functions_1ga57fe56770ff25b358f3e36bd70632e37" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___exported__types_1ga89136caac2e14c55151f527ac02daaff" kindref="member">FlagStatus</ref></type>
        <definition>FlagStatus FLASH_GetReadOutProtectionStatus</definition>
        <argsstring>(void)</argsstring>
        <name>FLASH_GetReadOutProtectionStatus</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Checks whether the FLASH Read Out Protection Status is set or not. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This function can be used for all STM32F10x devices. </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>FLASH</parametername>
</parameternamelist>
<parameterdescription>
<para>ReadOut Protection Status(SET or RESET) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="415" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_flash.c" bodystart="1262" bodyend="1274"/>
        <references refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffa589b7d94a3d91d145720e2fed0eb3a05" compoundref="stm32f10x_8h" startline="519">RESET</references>
        <references refid="group___peripheral__declaration_1ga844ea28ba1e0a5a0e497f16b61ea306b" compoundref="stm32f10x_8h" startline="1445">FLASH</references>
        <references refid="group___f_l_a_s_h___private___defines_1gaa624b669116384b971b838ae201cad9f" compoundref="stm32f10x__flash_8c" startline="69">RDPRT_Mask</references>
        <references refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffab44c8101cc294c074709ec1b14211792" compoundref="stm32f10x_8h" startline="519">SET</references>
        <referencedby refid="group___f_l_a_s_h___private___functions_1ga152768609e85d74a9d8474be8dc2874b" compoundref="stm32f10x__flash_8c" startline="616" endline="671">FLASH_EraseOptionBytes</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___f_l_a_s_h___exported___functions_1ga289bffe7f078d6a130222f03c59bc235" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___exported__types_1ga89136caac2e14c55151f527ac02daaff" kindref="member">FlagStatus</ref></type>
        <definition>FlagStatus FLASH_GetPrefetchBufferStatus</definition>
        <argsstring>(void)</argsstring>
        <name>FLASH_GetPrefetchBufferStatus</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Checks whether the FLASH Prefetch Buffer status is set or not. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This function can be used for all STM32F10x devices. </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>FLASH</parametername>
</parameternamelist>
<parameterdescription>
<para>Prefetch Buffer Status (SET or RESET). </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="416" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_flash.c" bodystart="1282" bodyend="1296"/>
        <references refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffa589b7d94a3d91d145720e2fed0eb3a05" compoundref="stm32f10x_8h" startline="519">RESET</references>
        <references refid="group___peripheral__declaration_1ga844ea28ba1e0a5a0e497f16b61ea306b" compoundref="stm32f10x_8h" startline="1445">FLASH</references>
        <references refid="group___f_l_a_s_h___private___defines_1ga257768fe5d61ac49f43b6b90ba413102" compoundref="stm32f10x__flash_8c" startline="52">ACR_PRFTBS_Mask</references>
        <references refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffab44c8101cc294c074709ec1b14211792" compoundref="stm32f10x_8h" startline="519">SET</references>
      </memberdef>
      <memberdef kind="function" id="group___f_l_a_s_h___exported___functions_1ga94c1e51a9c3bf8d48eb6eb4a4d054861" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FLASH_ITConfig</definition>
        <argsstring>(uint32_t FLASH_IT, FunctionalState NewState)</argsstring>
        <name>FLASH_ITConfig</name>
        <param>
          <type>uint32_t</type>
          <declname>FLASH_IT</declname>
        </param>
        <param>
          <type><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref></type>
          <declname>NewState</declname>
        </param>
        <briefdescription>
<para>Enables or disables the specified FLASH interrupts. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This function can be used for all STM32F10x devices.<itemizedlist>
<listitem><para>For STM32F10X_XL devices, enables or disables the specified FLASH interrupts for Bank1 and Bank2.</para></listitem><listitem><para>For other devices it enables or disables the specified FLASH interrupts for Bank1. </para></listitem></itemizedlist>
</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>FLASH_IT</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the FLASH interrupt sources to be enabled or disabled. This parameter can be any combination of the following values: <itemizedlist>
<listitem><para>FLASH_IT_ERROR: FLASH Error Interrupt </para></listitem>
<listitem><para>FLASH_IT_EOP: FLASH end of operation Interrupt </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NewState</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of the specified Flash interrupts. This parameter can be: ENABLE or DISABLE. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="417" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_flash.c" bodystart="1312" bodyend="1361"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___f_l_a_s_h___interrupts_1ga46ee77d0be1f3e0a14ded0651163ae11" compoundref="stm32f10x__flash_8h" startline="323">IS_FLASH_IT</references>
        <references refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" compoundref="stm32f10x_8h" startline="522">IS_FUNCTIONAL_STATE</references>
        <references refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1ad3a9df141be0ccf10389b640f492b26d" compoundref="stm32f10x_8h" startline="521">DISABLE</references>
        <references refid="group___peripheral__declaration_1ga844ea28ba1e0a5a0e497f16b61ea306b" compoundref="stm32f10x_8h" startline="1445">FLASH</references>
      </memberdef>
      <memberdef kind="function" id="group___f_l_a_s_h___exported___functions_1gae3fb545e32f21501ca27d4380e0f2088" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___exported__types_1ga89136caac2e14c55151f527ac02daaff" kindref="member">FlagStatus</ref></type>
        <definition>FlagStatus FLASH_GetFlagStatus</definition>
        <argsstring>(uint32_t FLASH_FLAG)</argsstring>
        <name>FLASH_GetFlagStatus</name>
        <param>
          <type>uint32_t</type>
          <declname>FLASH_FLAG</declname>
        </param>
        <briefdescription>
<para>Checks whether the specified FLASH flag is set or not. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This function can be used for all STM32F10x devices.<itemizedlist>
<listitem><para>For STM32F10X_XL devices, this function checks whether the specified Bank1 or Bank2 flag is set or not.</para></listitem><listitem><para>For other devices, it checks whether the specified Bank1 flag is set or not. </para></listitem></itemizedlist>
</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>FLASH_FLAG</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the FLASH flag to check. This parameter can be one of the following values: <itemizedlist>
<listitem><para>FLASH_FLAG_BSY: FLASH Busy flag </para></listitem>
<listitem><para>FLASH_FLAG_PGERR: FLASH Program error flag </para></listitem>
<listitem><para>FLASH_FLAG_WRPRTERR: FLASH Write protected error flag </para></listitem>
<listitem><para>FLASH_FLAG_EOP: FLASH End of Operation flag </para></listitem>
<listitem><para>FLASH_FLAG_OPTERR: FLASH Option Byte error flag </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of FLASH_FLAG (SET or RESET). </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="418" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_flash.c" bodystart="1379" bodyend="1451"/>
        <references refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffa589b7d94a3d91d145720e2fed0eb3a05" compoundref="stm32f10x_8h" startline="519">RESET</references>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___f_l_a_s_h___flags_1ga61b60325cd94e1608e34afc7aff20ee4" compoundref="stm32f10x__flash_8h" startline="371">IS_FLASH_GET_FLAG</references>
        <references refid="group___f_l_a_s_h___flags_1gac36b0605df97c9414933369a32251e4a" compoundref="stm32f10x__flash_8h" startline="363">FLASH_FLAG_OPTERR</references>
        <references refid="group___peripheral__declaration_1ga844ea28ba1e0a5a0e497f16b61ea306b" compoundref="stm32f10x_8h" startline="1445">FLASH</references>
        <references refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffab44c8101cc294c074709ec1b14211792" compoundref="stm32f10x_8h" startline="519">SET</references>
      </memberdef>
      <memberdef kind="function" id="group___f_l_a_s_h___exported___functions_1gac4be1d486483fa5cd70ec77d44ca8f87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FLASH_ClearFlag</definition>
        <argsstring>(uint32_t FLASH_FLAG)</argsstring>
        <name>FLASH_ClearFlag</name>
        <param>
          <type>uint32_t</type>
          <declname>FLASH_FLAG</declname>
        </param>
        <briefdescription>
<para>Clears the FLASH&apos;s pending flags. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This function can be used for all STM32F10x devices.<itemizedlist>
<listitem><para>For STM32F10X_XL devices, this function clears Bank1 or Bank2�s pending flags</para></listitem><listitem><para>For other devices, it clears Bank1�s pending flags. </para></listitem></itemizedlist>
</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>FLASH_FLAG</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the FLASH flags to clear. This parameter can be any combination of the following values: <itemizedlist>
<listitem><para>FLASH_FLAG_PGERR: FLASH Program error flag </para></listitem>
<listitem><para>FLASH_FLAG_WRPRTERR: FLASH Write protected error flag </para></listitem>
<listitem><para>FLASH_FLAG_EOP: FLASH End of Operation flag </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="419" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_flash.c" bodystart="1465" bodyend="1489"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___f_l_a_s_h___flags_1ga82f8c6104c348d6aa47c7658ed3b6b36" compoundref="stm32f10x__flash_8h" startline="370">IS_FLASH_CLEAR_FLAG</references>
        <references refid="group___peripheral__declaration_1ga844ea28ba1e0a5a0e497f16b61ea306b" compoundref="stm32f10x_8h" startline="1445">FLASH</references>
      </memberdef>
      <memberdef kind="function" id="group___f_l_a_s_h___exported___functions_1gac265b8d1e7ea11e44ceee28797c3debb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___f_l_a_s_h___exported___types_1gadc63a6f3404ff1f71229a66915e9cdc0" kindref="member">FLASH_Status</ref></type>
        <definition>FLASH_Status FLASH_GetStatus</definition>
        <argsstring>(void)</argsstring>
        <name>FLASH_GetStatus</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Returns the FLASH Status. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This function can be used for all STM32F10x devices, it is equivalent to FLASH_GetBank1Status function. </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>FLASH</parametername>
</parameternamelist>
<parameterdescription>
<para>Status: The returned value can be: FLASH_BUSY, FLASH_ERROR_PG, FLASH_ERROR_WRP or FLASH_COMPLETE </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="420" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_flash.c" bodystart="1499" bodyend="1527"/>
        <references refid="group___f_l_a_s_h___exported___types_1ggadc63a6f3404ff1f71229a66915e9cdc0ab0e88e9f59edee379a1a710a8b7deebf" compoundref="stm32f10x__flash_8h" startline="55">FLASH_COMPLETE</references>
        <references refid="group___peripheral__declaration_1ga844ea28ba1e0a5a0e497f16b61ea306b" compoundref="stm32f10x_8h" startline="1445">FLASH</references>
        <references refid="group___f_l_a_s_h___flags_1gad3bc368f954ad7744deda3315da2fff7" compoundref="stm32f10x__flash_8h" startline="359">FLASH_FLAG_BSY</references>
        <references refid="group___f_l_a_s_h___exported___types_1ggadc63a6f3404ff1f71229a66915e9cdc0aa25021d41842af8a68cefcb65949e099" compoundref="stm32f10x__flash_8h" startline="52">FLASH_BUSY</references>
        <references refid="group___f_l_a_s_h___flags_1gae2ef62dee0a5ca01e6226746039b6f20" compoundref="stm32f10x__flash_8h" startline="361">FLASH_FLAG_PGERR</references>
        <references refid="group___f_l_a_s_h___exported___types_1ggadc63a6f3404ff1f71229a66915e9cdc0adcb0c5002fc757739886a2601a3981da" compoundref="stm32f10x__flash_8h" startline="53">FLASH_ERROR_PG</references>
        <references refid="group___f_l_a_s_h___flags_1ga5c59a7f07507cac38091275964d3d35d" compoundref="stm32f10x__flash_8h" startline="362">FLASH_FLAG_WRPRTERR</references>
        <references refid="group___f_l_a_s_h___exported___types_1ggadc63a6f3404ff1f71229a66915e9cdc0ac9e2d95d3ba415fb7392d72a2458f4d8" compoundref="stm32f10x__flash_8h" startline="54">FLASH_ERROR_WRP</references>
      </memberdef>
      <memberdef kind="function" id="group___f_l_a_s_h___exported___functions_1ga2ad803999ae93ec03700983c59cae264" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___f_l_a_s_h___exported___types_1gadc63a6f3404ff1f71229a66915e9cdc0" kindref="member">FLASH_Status</ref></type>
        <definition>FLASH_Status FLASH_WaitForLastOperation</definition>
        <argsstring>(uint32_t Timeout)</argsstring>
        <name>FLASH_WaitForLastOperation</name>
        <param>
          <type>uint32_t</type>
          <declname>Timeout</declname>
        </param>
        <briefdescription>
<para>Waits for a Flash operation to complete or a TIMEOUT to occur. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This function can be used for all STM32F10x devices, it is equivalent to FLASH_WaitForLastBank1Operation.<itemizedlist>
<listitem><para>For STM32F10X_XL devices this function waits for a Bank1 Flash operation to complete or a TIMEOUT to occur.</para></listitem><listitem><para>For all other devices it waits for a Flash operation to complete or a TIMEOUT to occur. </para></listitem></itemizedlist>
</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>FLASH programming Timeout </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>FLASH</parametername>
</parameternamelist>
<parameterdescription>
<para>Status: The returned value can be: FLASH_ERROR_PG, FLASH_ERROR_WRP, FLASH_COMPLETE or FLASH_TIMEOUT. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="421" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_flash.c" bodystart="1617" bodyend="1635"/>
        <references refid="group___f_l_a_s_h___exported___types_1ggadc63a6f3404ff1f71229a66915e9cdc0ab0e88e9f59edee379a1a710a8b7deebf" compoundref="stm32f10x__flash_8h" startline="55">FLASH_COMPLETE</references>
        <references refid="group___f_l_a_s_h___private___functions_1ga9d5b76b75ef4c578cc45dc836a1929b6" compoundref="stm32f10x__flash_8c" startline="1537" endline="1565">FLASH_GetBank1Status</references>
        <references refid="group___f_l_a_s_h___exported___types_1ggadc63a6f3404ff1f71229a66915e9cdc0aa25021d41842af8a68cefcb65949e099" compoundref="stm32f10x__flash_8h" startline="52">FLASH_BUSY</references>
        <references refid="group___f_l_a_s_h___exported___types_1ggadc63a6f3404ff1f71229a66915e9cdc0a90c514b6a619e3a4e6c2eec3154323f8" compoundref="stm32f10x__flash_8h" startline="56">FLASH_TIMEOUT</references>
        <referencedby refid="group___f_l_a_s_h___private___functions_1ga13a2ca18bfb3d5fb827a2751799f8451" compoundref="stm32f10x__flash_8c" startline="419" endline="483">FLASH_ErasePage</referencedby>
        <referencedby refid="group___f_l_a_s_h___private___functions_1gab2e6dea62c72b3e47c17512579d37498" compoundref="stm32f10x__flash_8c" startline="492" endline="543">FLASH_EraseAllPages</referencedby>
        <referencedby refid="group___f_l_a_s_h___private___functions_1ga152768609e85d74a9d8474be8dc2874b" compoundref="stm32f10x__flash_8c" startline="616" endline="671">FLASH_EraseOptionBytes</referencedby>
        <referencedby refid="group___f_l_a_s_h___private___functions_1gaac9a2f400b92537bd42a6bd7cc237b11" compoundref="stm32f10x__flash_8c" startline="687" endline="865">FLASH_ProgramWord</referencedby>
        <referencedby refid="group___f_l_a_s_h___private___functions_1ga5c1336f667950a8765887228f1d0d501" compoundref="stm32f10x__flash_8c" startline="880" endline="940">FLASH_ProgramHalfWord</referencedby>
        <referencedby refid="group___f_l_a_s_h___private___functions_1ga1382ff9d4ded8a5c076fde4fff529d21" compoundref="stm32f10x__flash_8c" startline="951" endline="977">FLASH_ProgramOptionByteData</referencedby>
        <referencedby refid="group___f_l_a_s_h___private___functions_1gabad10c15e2d1ff1cb9e1083d08a9e763" compoundref="stm32f10x__flash_8c" startline="997" endline="1059">FLASH_EnableWriteProtection</referencedby>
        <referencedby refid="group___f_l_a_s_h___private___functions_1ga0b8d1a8277950c890bbc247bbeafb40f" compoundref="stm32f10x__flash_8c" startline="1071" endline="1120">FLASH_ReadOutProtection</referencedby>
        <referencedby refid="group___f_l_a_s_h___private___functions_1gaae1c493bb06c930ceb84dedfdb7325f6" compoundref="stm32f10x__flash_8c" startline="1140" endline="1173">FLASH_UserOptionByteConfig</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___f_l_a_s_h___exported___functions_1ga358c4b7e0ef20693ca62cc9d20c94a5a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FLASH_UnlockBank1</definition>
        <argsstring>(void)</argsstring>
        <name>FLASH_UnlockBank1</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Unlocks the FLASH Bank1 Program Erase Controller. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This function can be used for all STM32F10x devices.<itemizedlist>
<listitem><para>For STM32F10X_XL devices this function unlocks Bank1.</para></listitem><listitem><para>For all other devices it unlocks Bank1 and it is equivalent to FLASH_Unlock function. </para></listitem></itemizedlist>
</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="424" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_flash.c" bodystart="340" bodyend="345"/>
        <references refid="group___peripheral__declaration_1ga844ea28ba1e0a5a0e497f16b61ea306b" compoundref="stm32f10x_8h" startline="1445">FLASH</references>
        <references refid="group___f_l_a_s_h___private___defines_1gafd77e7bf91765d891ce63e2f0084b019" compoundref="stm32f10x__flash_8c" startline="78">FLASH_KEY1</references>
        <references refid="group___f_l_a_s_h___private___defines_1gaee83d0f557e158da52f4a205db6b60a7" compoundref="stm32f10x__flash_8c" startline="79">FLASH_KEY2</references>
      </memberdef>
      <memberdef kind="function" id="group___f_l_a_s_h___exported___functions_1gafe4188ab9eb12c046970660f65a3faf9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FLASH_LockBank1</definition>
        <argsstring>(void)</argsstring>
        <name>FLASH_LockBank1</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Locks the FLASH Bank1 Program Erase Controller. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>this function can be used for all STM32F10x devices.<itemizedlist>
<listitem><para>For STM32F10X_XL devices this function Locks Bank1.</para></listitem><listitem><para>For all other devices it Locks Bank1 and it is equivalent to FLASH_Lock function. </para></listitem></itemizedlist>
</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="425" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_flash.c" bodystart="392" bodyend="396"/>
        <references refid="group___peripheral__declaration_1ga844ea28ba1e0a5a0e497f16b61ea306b" compoundref="stm32f10x_8h" startline="1445">FLASH</references>
        <references refid="group___f_l_a_s_h___private___defines_1gaee27a8100366266daa8d3a69c589e4b9" compoundref="stm32f10x__flash_8c" startline="66">CR_LOCK_Set</references>
      </memberdef>
      <memberdef kind="function" id="group___f_l_a_s_h___exported___functions_1ga2036728450ee18e789b25fe3fd9c80ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___f_l_a_s_h___exported___types_1gadc63a6f3404ff1f71229a66915e9cdc0" kindref="member">FLASH_Status</ref></type>
        <definition>FLASH_Status FLASH_EraseAllBank1Pages</definition>
        <argsstring>(void)</argsstring>
        <name>FLASH_EraseAllBank1Pages</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Erases all Bank1 FLASH pages. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This function can be used for all STM32F10x devices.<itemizedlist>
<listitem><para>For STM32F10X_XL devices this function erases all Bank1 pages.</para></listitem><listitem><para>For all other devices it erases all Bank1 pages and it is equivalent to FLASH_EraseAllPages function. </para></listitem></itemizedlist>
</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>FLASH</parametername>
</parameternamelist>
<parameterdescription>
<para>Status: The returned value can be: FLASH_ERROR_PG, FLASH_ERROR_WRP, FLASH_COMPLETE or FLASH_TIMEOUT. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="426" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_flash.c" bodystart="555" bodyend="575"/>
        <references refid="group___f_l_a_s_h___exported___types_1ggadc63a6f3404ff1f71229a66915e9cdc0ab0e88e9f59edee379a1a710a8b7deebf" compoundref="stm32f10x__flash_8h" startline="55">FLASH_COMPLETE</references>
        <references refid="group___f_l_a_s_h___private___functions_1ga470d345c2ea4304f899aa988bdd23824" compoundref="stm32f10x__flash_8c" startline="1645" endline="1663">FLASH_WaitForLastBank1Operation</references>
        <references refid="group___f_l_a_s_h___private___defines_1ga62b5515e9a29a487adcc30a88d082244" compoundref="stm32f10x__flash_8c" startline="85">EraseTimeout</references>
        <references refid="group___peripheral__declaration_1ga844ea28ba1e0a5a0e497f16b61ea306b" compoundref="stm32f10x_8h" startline="1445">FLASH</references>
        <references refid="group___f_l_a_s_h___private___defines_1ga7e5cf18b31b5ed960cd05a816cadf973" compoundref="stm32f10x__flash_8c" startline="59">CR_MER_Set</references>
        <references refid="group___f_l_a_s_h___private___defines_1ga0e6349818d8602ffffc56e5e04d9ab13" compoundref="stm32f10x__flash_8c" startline="65">CR_STRT_Set</references>
        <references refid="group___f_l_a_s_h___private___defines_1gabed855f33ff965c530c2b09a49a987f5" compoundref="stm32f10x__flash_8c" startline="60">CR_MER_Reset</references>
      </memberdef>
      <memberdef kind="function" id="group___f_l_a_s_h___exported___functions_1ga9d5b76b75ef4c578cc45dc836a1929b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___f_l_a_s_h___exported___types_1gadc63a6f3404ff1f71229a66915e9cdc0" kindref="member">FLASH_Status</ref></type>
        <definition>FLASH_Status FLASH_GetBank1Status</definition>
        <argsstring>(void)</argsstring>
        <name>FLASH_GetBank1Status</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Returns the FLASH Bank1 Status. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This function can be used for all STM32F10x devices, it is equivalent to FLASH_GetStatus function. </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>FLASH</parametername>
</parameternamelist>
<parameterdescription>
<para>Status: The returned value can be: FLASH_BUSY, FLASH_ERROR_PG, FLASH_ERROR_WRP or FLASH_COMPLETE </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="427" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_flash.c" bodystart="1537" bodyend="1565"/>
        <references refid="group___f_l_a_s_h___exported___types_1ggadc63a6f3404ff1f71229a66915e9cdc0ab0e88e9f59edee379a1a710a8b7deebf" compoundref="stm32f10x__flash_8h" startline="55">FLASH_COMPLETE</references>
        <references refid="group___peripheral__declaration_1ga844ea28ba1e0a5a0e497f16b61ea306b" compoundref="stm32f10x_8h" startline="1445">FLASH</references>
        <references refid="group___f_l_a_s_h___flags_1ga1f85e6d511503886e9fbe7d0228c97a4" compoundref="stm32f10x__flash_8h" startline="365">FLASH_FLAG_BANK1_BSY</references>
        <references refid="group___f_l_a_s_h___flags_1gad3bc368f954ad7744deda3315da2fff7" compoundref="stm32f10x__flash_8h" startline="359">FLASH_FLAG_BSY</references>
        <references refid="group___f_l_a_s_h___exported___types_1ggadc63a6f3404ff1f71229a66915e9cdc0aa25021d41842af8a68cefcb65949e099" compoundref="stm32f10x__flash_8h" startline="52">FLASH_BUSY</references>
        <references refid="group___f_l_a_s_h___flags_1gaa1056ffdd1c434a2967d5ed7c0d263be" compoundref="stm32f10x__flash_8h" startline="367">FLASH_FLAG_BANK1_PGERR</references>
        <references refid="group___f_l_a_s_h___exported___types_1ggadc63a6f3404ff1f71229a66915e9cdc0adcb0c5002fc757739886a2601a3981da" compoundref="stm32f10x__flash_8h" startline="53">FLASH_ERROR_PG</references>
        <references refid="group___f_l_a_s_h___flags_1ga1646345adbcda773ef25785b1bdc4c43" compoundref="stm32f10x__flash_8h" startline="368">FLASH_FLAG_BANK1_WRPRTERR</references>
        <references refid="group___f_l_a_s_h___exported___types_1ggadc63a6f3404ff1f71229a66915e9cdc0ac9e2d95d3ba415fb7392d72a2458f4d8" compoundref="stm32f10x__flash_8h" startline="54">FLASH_ERROR_WRP</references>
        <referencedby refid="group___f_l_a_s_h___private___functions_1ga2ad803999ae93ec03700983c59cae264" compoundref="stm32f10x__flash_8c" startline="1617" endline="1635">FLASH_WaitForLastOperation</referencedby>
        <referencedby refid="group___f_l_a_s_h___private___functions_1ga470d345c2ea4304f899aa988bdd23824" compoundref="stm32f10x__flash_8c" startline="1645" endline="1663">FLASH_WaitForLastBank1Operation</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___f_l_a_s_h___exported___functions_1ga470d345c2ea4304f899aa988bdd23824" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___f_l_a_s_h___exported___types_1gadc63a6f3404ff1f71229a66915e9cdc0" kindref="member">FLASH_Status</ref></type>
        <definition>FLASH_Status FLASH_WaitForLastBank1Operation</definition>
        <argsstring>(uint32_t Timeout)</argsstring>
        <name>FLASH_WaitForLastBank1Operation</name>
        <param>
          <type>uint32_t</type>
          <declname>Timeout</declname>
        </param>
        <briefdescription>
<para>Waits for a Flash operation on Bank1 to complete or a TIMEOUT to occur. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This function can be used for all STM32F10x devices, it is equivalent to FLASH_WaitForLastOperation. </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>FLASH programming Timeout </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>FLASH</parametername>
</parameternamelist>
<parameterdescription>
<para>Status: The returned value can be: FLASH_ERROR_PG, FLASH_ERROR_WRP, FLASH_COMPLETE or FLASH_TIMEOUT. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h" line="428" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_flash.c" bodystart="1645" bodyend="1663"/>
        <references refid="group___f_l_a_s_h___exported___types_1ggadc63a6f3404ff1f71229a66915e9cdc0ab0e88e9f59edee379a1a710a8b7deebf" compoundref="stm32f10x__flash_8h" startline="55">FLASH_COMPLETE</references>
        <references refid="group___f_l_a_s_h___private___functions_1ga9d5b76b75ef4c578cc45dc836a1929b6" compoundref="stm32f10x__flash_8c" startline="1537" endline="1565">FLASH_GetBank1Status</references>
        <references refid="group___f_l_a_s_h___flags_1ga1f85e6d511503886e9fbe7d0228c97a4" compoundref="stm32f10x__flash_8h" startline="365">FLASH_FLAG_BANK1_BSY</references>
        <references refid="group___f_l_a_s_h___exported___types_1ggadc63a6f3404ff1f71229a66915e9cdc0a90c514b6a619e3a4e6c2eec3154323f8" compoundref="stm32f10x__flash_8h" startline="56">FLASH_TIMEOUT</references>
        <referencedby refid="group___f_l_a_s_h___private___functions_1ga13a2ca18bfb3d5fb827a2751799f8451" compoundref="stm32f10x__flash_8c" startline="419" endline="483">FLASH_ErasePage</referencedby>
        <referencedby refid="group___f_l_a_s_h___private___functions_1gab2e6dea62c72b3e47c17512579d37498" compoundref="stm32f10x__flash_8c" startline="492" endline="543">FLASH_EraseAllPages</referencedby>
        <referencedby refid="group___f_l_a_s_h___private___functions_1ga2036728450ee18e789b25fe3fd9c80ee" compoundref="stm32f10x__flash_8c" startline="555" endline="575">FLASH_EraseAllBank1Pages</referencedby>
        <referencedby refid="group___f_l_a_s_h___private___functions_1gaac9a2f400b92537bd42a6bd7cc237b11" compoundref="stm32f10x__flash_8c" startline="687" endline="865">FLASH_ProgramWord</referencedby>
        <referencedby refid="group___f_l_a_s_h___private___functions_1ga5c1336f667950a8765887228f1d0d501" compoundref="stm32f10x__flash_8c" startline="880" endline="940">FLASH_ProgramHalfWord</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This file contains all the functions prototypes for the FLASH firmware library. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>MCD Application Team </para></simplesect>
<simplesect kind="version"><para>V3.5.0 </para></simplesect>
<simplesect kind="date"><para>11-March-2011 </para></simplesect>
<simplesect kind="attention"><para></para></simplesect>
THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.</para><para><heading level="2"><center><copy/> COPYRIGHT 2011 STMicroelectronics</center></heading>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="23"><highlight class="comment">/*<sp/>Define<sp/>to<sp/>prevent<sp/>recursive<sp/>inclusion<sp/>-------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__STM32F10x_FLASH_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__STM32F10x_FLASH_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Includes<sp/>------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="stm32f10x_8h" kindref="compound">stm32f10x.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="group___f_l_a_s_h___exported___types_1gadc63a6f3404ff1f71229a66915e9cdc0" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal">{<sp/></highlight></codeline>
<codeline lineno="52" refid="group___f_l_a_s_h___exported___types_1ggadc63a6f3404ff1f71229a66915e9cdc0aa25021d41842af8a68cefcb65949e099" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="group___f_l_a_s_h___exported___types_1ggadc63a6f3404ff1f71229a66915e9cdc0aa25021d41842af8a68cefcb65949e099" kindref="member">FLASH_BUSY</ref><sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="53" refid="group___f_l_a_s_h___exported___types_1ggadc63a6f3404ff1f71229a66915e9cdc0adcb0c5002fc757739886a2601a3981da" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="group___f_l_a_s_h___exported___types_1ggadc63a6f3404ff1f71229a66915e9cdc0adcb0c5002fc757739886a2601a3981da" kindref="member">FLASH_ERROR_PG</ref>,</highlight></codeline>
<codeline lineno="54" refid="group___f_l_a_s_h___exported___types_1ggadc63a6f3404ff1f71229a66915e9cdc0ac9e2d95d3ba415fb7392d72a2458f4d8" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="group___f_l_a_s_h___exported___types_1ggadc63a6f3404ff1f71229a66915e9cdc0ac9e2d95d3ba415fb7392d72a2458f4d8" kindref="member">FLASH_ERROR_WRP</ref>,</highlight></codeline>
<codeline lineno="55" refid="group___f_l_a_s_h___exported___types_1ggadc63a6f3404ff1f71229a66915e9cdc0ab0e88e9f59edee379a1a710a8b7deebf" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="group___f_l_a_s_h___exported___types_1ggadc63a6f3404ff1f71229a66915e9cdc0ab0e88e9f59edee379a1a710a8b7deebf" kindref="member">FLASH_COMPLETE</ref>,</highlight></codeline>
<codeline lineno="56" refid="group___f_l_a_s_h___exported___types_1ggadc63a6f3404ff1f71229a66915e9cdc0a90c514b6a619e3a4e6c2eec3154323f8" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="group___f_l_a_s_h___exported___types_1ggadc63a6f3404ff1f71229a66915e9cdc0a90c514b6a619e3a4e6c2eec3154323f8" kindref="member">FLASH_TIMEOUT</ref></highlight></codeline>
<codeline lineno="57"><highlight class="normal">}<ref refid="group___f_l_a_s_h___exported___types_1gadc63a6f3404ff1f71229a66915e9cdc0" kindref="member">FLASH_Status</ref>;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="group___flash___latency_1ga09afe6e52b819cc074f6111ec42ac3c3" refkind="member"><highlight class="preprocessor">#define<sp/>FLASH_Latency_0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000000)<sp/><sp/></highlight></codeline>
<codeline lineno="72" refid="group___flash___latency_1ga6b7281665340fe8f7919bdfcfd06f8e6" refkind="member"><highlight class="preprocessor">#define<sp/>FLASH_Latency_1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000001)<sp/><sp/></highlight></codeline>
<codeline lineno="73" refid="group___flash___latency_1ga55173ebb5c978459ce18d5e2516e3e89" refkind="member"><highlight class="preprocessor">#define<sp/>FLASH_Latency_2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000002)<sp/><sp/></highlight></codeline>
<codeline lineno="74" refid="group___flash___latency_1gafcbd098d482318a622a58bf168547389" refkind="member"><highlight class="preprocessor">#define<sp/>IS_FLASH_LATENCY(LATENCY)<sp/>(((LATENCY)<sp/>==<sp/>FLASH_Latency_0)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="75"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((LATENCY)<sp/>==<sp/>FLASH_Latency_1)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="76"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((LATENCY)<sp/>==<sp/>FLASH_Latency_2))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="85" refid="group___half___cycle___enable___disable_1ga95adf58ccf48094a9648085ac8d8af13" refkind="member"><highlight class="preprocessor">#define<sp/>FLASH_HalfCycleAccess_Enable<sp/><sp/><sp/>((uint32_t)0x00000008)<sp/><sp/></highlight></codeline>
<codeline lineno="86" refid="group___half___cycle___enable___disable_1gad1ec816fa04b9a45e51c1cc9f1ba8f42" refkind="member"><highlight class="preprocessor">#define<sp/>FLASH_HalfCycleAccess_Disable<sp/><sp/>((uint32_t)0x00000000)<sp/><sp/></highlight></codeline>
<codeline lineno="87" refid="group___half___cycle___enable___disable_1gad1b9e84a20436dcfe1a1ade4c26dc028" refkind="member"><highlight class="preprocessor">#define<sp/>IS_FLASH_HALFCYCLEACCESS_STATE(STATE)<sp/>(((STATE)<sp/>==<sp/>FLASH_HalfCycleAccess_Enable)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="88"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((STATE)<sp/>==<sp/>FLASH_HalfCycleAccess_Disable))<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="97" refid="group___prefetch___buffer___enable___disable_1gad0fac43d078a77794f22840f326a6ed9" refkind="member"><highlight class="preprocessor">#define<sp/>FLASH_PrefetchBuffer_Enable<sp/><sp/><sp/><sp/>((uint32_t)0x00000010)<sp/><sp/></highlight></codeline>
<codeline lineno="98" refid="group___prefetch___buffer___enable___disable_1ga2feb631ad85449f83517f05aaf4ba26c" refkind="member"><highlight class="preprocessor">#define<sp/>FLASH_PrefetchBuffer_Disable<sp/><sp/><sp/>((uint32_t)0x00000000)<sp/><sp/></highlight></codeline>
<codeline lineno="99" refid="group___prefetch___buffer___enable___disable_1ga5fd6932c4f4e157a1d6e73d433df092f" refkind="member"><highlight class="preprocessor">#define<sp/>IS_FLASH_PREFETCHBUFFER_STATE(STATE)<sp/>(((STATE)<sp/>==<sp/>FLASH_PrefetchBuffer_Enable)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="100"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((STATE)<sp/>==<sp/>FLASH_PrefetchBuffer_Disable))<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="comment">/*<sp/>Values<sp/>to<sp/>be<sp/>used<sp/>with<sp/>STM32<sp/>Low<sp/>and<sp/>Medium<sp/>density<sp/>devices<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110" refid="group___option___bytes___write___protection_1gac5c6f6155e4ebae0978a3d2a0d991e68" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FLASH_WRProt_Pages0to3<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000001)<sp/></highlight></codeline>
<codeline lineno="111" refid="group___option___bytes___write___protection_1ga1b33c4de30c55331e7e60c0795c824ad" refkind="member"><highlight class="preprocessor">#define<sp/>FLASH_WRProt_Pages4to7<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000002)<sp/></highlight></codeline>
<codeline lineno="112" refid="group___option___bytes___write___protection_1ga7eca7a8b11accdd6dadf3445847e1a57" refkind="member"><highlight class="preprocessor">#define<sp/>FLASH_WRProt_Pages8to11<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000004)<sp/></highlight></codeline>
<codeline lineno="113" refid="group___option___bytes___write___protection_1gaa02b9439f75982e2e1c14f8af9a8c091" refkind="member"><highlight class="preprocessor">#define<sp/>FLASH_WRProt_Pages12to15<sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000008)<sp/></highlight></codeline>
<codeline lineno="114" refid="group___option___bytes___write___protection_1gaa589ce30909c3a9a0bffc8a59b6013fb" refkind="member"><highlight class="preprocessor">#define<sp/>FLASH_WRProt_Pages16to19<sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000010)<sp/></highlight></codeline>
<codeline lineno="115" refid="group___option___bytes___write___protection_1ga537e0f85899e13ca2ed93455e537d950" refkind="member"><highlight class="preprocessor">#define<sp/>FLASH_WRProt_Pages20to23<sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000020)<sp/></highlight></codeline>
<codeline lineno="116" refid="group___option___bytes___write___protection_1ga1d6b94b48e0dd21949139267b90a08ef" refkind="member"><highlight class="preprocessor">#define<sp/>FLASH_WRProt_Pages24to27<sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000040)<sp/></highlight></codeline>
<codeline lineno="117" refid="group___option___bytes___write___protection_1ga800860d071cfb40b1b0e94111a0cb549" refkind="member"><highlight class="preprocessor">#define<sp/>FLASH_WRProt_Pages28to31<sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000080)<sp/></highlight></codeline>
<codeline lineno="119"><highlight class="preprocessor"></highlight><highlight class="comment">/*<sp/>Values<sp/>to<sp/>be<sp/>used<sp/>with<sp/>STM32<sp/>Medium-density<sp/>devices<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120" refid="group___option___bytes___write___protection_1ga81a4250850e5fe7c251365cc22839a96" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FLASH_WRProt_Pages32to35<sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000100)<sp/></highlight></codeline>
<codeline lineno="121" refid="group___option___bytes___write___protection_1ga783f47425af52b9a12914520d9ee175e" refkind="member"><highlight class="preprocessor">#define<sp/>FLASH_WRProt_Pages36to39<sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000200)<sp/></highlight></codeline>
<codeline lineno="122" refid="group___option___bytes___write___protection_1ga30798723c36db2b8145b6a5c8ffafded" refkind="member"><highlight class="preprocessor">#define<sp/>FLASH_WRProt_Pages40to43<sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000400)<sp/></highlight></codeline>
<codeline lineno="123" refid="group___option___bytes___write___protection_1gaa2d897455d5f71c9fd3721d49b3578fc" refkind="member"><highlight class="preprocessor">#define<sp/>FLASH_WRProt_Pages44to47<sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000800)<sp/></highlight></codeline>
<codeline lineno="124" refid="group___option___bytes___write___protection_1gac6bb79080cb276b330499f26c706048e" refkind="member"><highlight class="preprocessor">#define<sp/>FLASH_WRProt_Pages48to51<sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00001000)<sp/></highlight></codeline>
<codeline lineno="125" refid="group___option___bytes___write___protection_1gab5beefbfebf060f71421995f3c7a6418" refkind="member"><highlight class="preprocessor">#define<sp/>FLASH_WRProt_Pages52to55<sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00002000)<sp/></highlight></codeline>
<codeline lineno="126" refid="group___option___bytes___write___protection_1ga3705c210feeeb63c31976495c0b851f1" refkind="member"><highlight class="preprocessor">#define<sp/>FLASH_WRProt_Pages56to59<sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00004000)<sp/></highlight></codeline>
<codeline lineno="127" refid="group___option___bytes___write___protection_1ga1978945fc02d1867900f17c4999c50d5" refkind="member"><highlight class="preprocessor">#define<sp/>FLASH_WRProt_Pages60to63<sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00008000)<sp/></highlight></codeline>
<codeline lineno="128" refid="group___option___bytes___write___protection_1ga124928d6134ddac13e3e8810a0d8dd1a" refkind="member"><highlight class="preprocessor">#define<sp/>FLASH_WRProt_Pages64to67<sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00010000)<sp/></highlight></codeline>
<codeline lineno="129" refid="group___option___bytes___write___protection_1gafbb813885c6cd505c64083f2f88532fb" refkind="member"><highlight class="preprocessor">#define<sp/>FLASH_WRProt_Pages68to71<sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00020000)<sp/></highlight></codeline>
<codeline lineno="130" refid="group___option___bytes___write___protection_1ga1a19c52012bbb30f3ae1599fa5a200cc" refkind="member"><highlight class="preprocessor">#define<sp/>FLASH_WRProt_Pages72to75<sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00040000)<sp/></highlight></codeline>
<codeline lineno="131" refid="group___option___bytes___write___protection_1ga9e1f9abfa57766312c6cbae9b42f3ab6" refkind="member"><highlight class="preprocessor">#define<sp/>FLASH_WRProt_Pages76to79<sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00080000)<sp/></highlight></codeline>
<codeline lineno="132" refid="group___option___bytes___write___protection_1ga5749428874f99f77a5c5fc48a88816d9" refkind="member"><highlight class="preprocessor">#define<sp/>FLASH_WRProt_Pages80to83<sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00100000)<sp/></highlight></codeline>
<codeline lineno="133" refid="group___option___bytes___write___protection_1ga9dbf7aeb5b54b42f9b345c95d00eaf32" refkind="member"><highlight class="preprocessor">#define<sp/>FLASH_WRProt_Pages84to87<sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00200000)<sp/></highlight></codeline>
<codeline lineno="134" refid="group___option___bytes___write___protection_1gaeece6aa5e198239067c47f678b9d015e" refkind="member"><highlight class="preprocessor">#define<sp/>FLASH_WRProt_Pages88to91<sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00400000)<sp/></highlight></codeline>
<codeline lineno="135" refid="group___option___bytes___write___protection_1gab7d95c1f574523ef827bafd01a64b0bb" refkind="member"><highlight class="preprocessor">#define<sp/>FLASH_WRProt_Pages92to95<sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00800000)<sp/></highlight></codeline>
<codeline lineno="136" refid="group___option___bytes___write___protection_1ga8f3ea488c33b3e209cab996545f55c49" refkind="member"><highlight class="preprocessor">#define<sp/>FLASH_WRProt_Pages96to99<sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x01000000)<sp/></highlight></codeline>
<codeline lineno="137" refid="group___option___bytes___write___protection_1ga0c03cee6931c623ccdaae19233c81f4e" refkind="member"><highlight class="preprocessor">#define<sp/>FLASH_WRProt_Pages100to103<sp/><sp/><sp/><sp/><sp/>((uint32_t)0x02000000)<sp/></highlight></codeline>
<codeline lineno="138" refid="group___option___bytes___write___protection_1ga2e096d51e61a972c97093110211b3be5" refkind="member"><highlight class="preprocessor">#define<sp/>FLASH_WRProt_Pages104to107<sp/><sp/><sp/><sp/><sp/>((uint32_t)0x04000000)<sp/></highlight></codeline>
<codeline lineno="139" refid="group___option___bytes___write___protection_1ga899e34df1ab5369d840461686eb9c318" refkind="member"><highlight class="preprocessor">#define<sp/>FLASH_WRProt_Pages108to111<sp/><sp/><sp/><sp/><sp/>((uint32_t)0x08000000)<sp/></highlight></codeline>
<codeline lineno="140" refid="group___option___bytes___write___protection_1gacd2d5839240b77f70be15e76086745ab" refkind="member"><highlight class="preprocessor">#define<sp/>FLASH_WRProt_Pages112to115<sp/><sp/><sp/><sp/><sp/>((uint32_t)0x10000000)<sp/></highlight></codeline>
<codeline lineno="141" refid="group___option___bytes___write___protection_1ga1283655c7c974e0de142cec7921c8673" refkind="member"><highlight class="preprocessor">#define<sp/>FLASH_WRProt_Pages116to119<sp/><sp/><sp/><sp/><sp/>((uint32_t)0x20000000)<sp/></highlight></codeline>
<codeline lineno="142" refid="group___option___bytes___write___protection_1gac8d2f42123810fefc68572709d8830ec" refkind="member"><highlight class="preprocessor">#define<sp/>FLASH_WRProt_Pages120to123<sp/><sp/><sp/><sp/><sp/>((uint32_t)0x40000000)<sp/></highlight></codeline>
<codeline lineno="143" refid="group___option___bytes___write___protection_1gae6e70db5200b52248c9ec4293ff9890e" refkind="member"><highlight class="preprocessor">#define<sp/>FLASH_WRProt_Pages124to127<sp/><sp/><sp/><sp/><sp/>((uint32_t)0x80000000)<sp/></highlight></codeline>
<codeline lineno="145"><highlight class="preprocessor"></highlight><highlight class="comment">/*<sp/>Values<sp/>to<sp/>be<sp/>used<sp/>with<sp/>STM32<sp/>High-density<sp/>and<sp/>STM32F10X<sp/>Connectivity<sp/>line<sp/>devices<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146" refid="group___option___bytes___write___protection_1ga7dfbb58b90b63afef11bfcf7a8f109e2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FLASH_WRProt_Pages0to1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000001)<sp/></highlight></codeline>
<codeline lineno="148"><highlight class="preprocessor">#define<sp/>FLASH_WRProt_Pages2to3<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000002)<sp/></highlight></codeline>
<codeline lineno="150"><highlight class="preprocessor">#define<sp/>FLASH_WRProt_Pages4to5<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000004)<sp/></highlight></codeline>
<codeline lineno="152" refid="group___option___bytes___write___protection_1ga2835294ea5c096360cc5683b7f90b543" refkind="member"><highlight class="preprocessor">#define<sp/>FLASH_WRProt_Pages6to7<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000008)<sp/></highlight></codeline>
<codeline lineno="154"><highlight class="preprocessor">#define<sp/>FLASH_WRProt_Pages8to9<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000010)<sp/></highlight></codeline>
<codeline lineno="156"><highlight class="preprocessor">#define<sp/>FLASH_WRProt_Pages10to11<sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000020)<sp/></highlight></codeline>
<codeline lineno="158" refid="group___option___bytes___write___protection_1ga72f231c0fe953f3cd43cf421c2626f90" refkind="member"><highlight class="preprocessor">#define<sp/>FLASH_WRProt_Pages12to13<sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000040)<sp/></highlight></codeline>
<codeline lineno="160"><highlight class="preprocessor">#define<sp/>FLASH_WRProt_Pages14to15<sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000080)<sp/></highlight></codeline>
<codeline lineno="162"><highlight class="preprocessor">#define<sp/>FLASH_WRProt_Pages16to17<sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000100)<sp/></highlight></codeline>
<codeline lineno="164" refid="group___option___bytes___write___protection_1ga571e248a64ef9bf7f99ed85831aacaaa" refkind="member"><highlight class="preprocessor">#define<sp/>FLASH_WRProt_Pages18to19<sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000200)<sp/></highlight></codeline>
<codeline lineno="166"><highlight class="preprocessor">#define<sp/>FLASH_WRProt_Pages20to21<sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000400)<sp/></highlight></codeline>
<codeline lineno="168"><highlight class="preprocessor">#define<sp/>FLASH_WRProt_Pages22to23<sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000800)<sp/></highlight></codeline>
<codeline lineno="170" refid="group___option___bytes___write___protection_1ga33deabc2c4a82cfa4a98008082e29ea7" refkind="member"><highlight class="preprocessor">#define<sp/>FLASH_WRProt_Pages24to25<sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00001000)<sp/></highlight></codeline>
<codeline lineno="172"><highlight class="preprocessor">#define<sp/>FLASH_WRProt_Pages26to27<sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00002000)<sp/></highlight></codeline>
<codeline lineno="174"><highlight class="preprocessor">#define<sp/>FLASH_WRProt_Pages28to29<sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00004000)<sp/></highlight></codeline>
<codeline lineno="176" refid="group___option___bytes___write___protection_1ga09215d5d245c8f5cd664c5cc4ff9fb69" refkind="member"><highlight class="preprocessor">#define<sp/>FLASH_WRProt_Pages30to31<sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00008000)<sp/></highlight></codeline>
<codeline lineno="178"><highlight class="preprocessor">#define<sp/>FLASH_WRProt_Pages32to33<sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00010000)<sp/></highlight></codeline>
<codeline lineno="180"><highlight class="preprocessor">#define<sp/>FLASH_WRProt_Pages34to35<sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00020000)<sp/></highlight></codeline>
<codeline lineno="182" refid="group___option___bytes___write___protection_1gac36c4a402c77b28f46451e97dc3632f7" refkind="member"><highlight class="preprocessor">#define<sp/>FLASH_WRProt_Pages36to37<sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00040000)<sp/></highlight></codeline>
<codeline lineno="184"><highlight class="preprocessor">#define<sp/>FLASH_WRProt_Pages38to39<sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00080000)<sp/></highlight></codeline>
<codeline lineno="186"><highlight class="preprocessor">#define<sp/>FLASH_WRProt_Pages40to41<sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00100000)<sp/></highlight></codeline>
<codeline lineno="188" refid="group___option___bytes___write___protection_1gae42c20bedcbaf926c7c49f51a7eea63f" refkind="member"><highlight class="preprocessor">#define<sp/>FLASH_WRProt_Pages42to43<sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00200000)<sp/></highlight></codeline>
<codeline lineno="190"><highlight class="preprocessor">#define<sp/>FLASH_WRProt_Pages44to45<sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00400000)<sp/></highlight></codeline>
<codeline lineno="192"><highlight class="preprocessor">#define<sp/>FLASH_WRProt_Pages46to47<sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00800000)<sp/></highlight></codeline>
<codeline lineno="194" refid="group___option___bytes___write___protection_1ga86aa121a8917e58ad6bfdf98ba873d36" refkind="member"><highlight class="preprocessor">#define<sp/>FLASH_WRProt_Pages48to49<sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x01000000)<sp/></highlight></codeline>
<codeline lineno="196"><highlight class="preprocessor">#define<sp/>FLASH_WRProt_Pages50to51<sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x02000000)<sp/></highlight></codeline>
<codeline lineno="198"><highlight class="preprocessor">#define<sp/>FLASH_WRProt_Pages52to53<sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x04000000)<sp/></highlight></codeline>
<codeline lineno="200" refid="group___option___bytes___write___protection_1gab00dc29c0f12afd25cdb21b6d187ccc9" refkind="member"><highlight class="preprocessor">#define<sp/>FLASH_WRProt_Pages54to55<sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x08000000)<sp/></highlight></codeline>
<codeline lineno="202"><highlight class="preprocessor">#define<sp/>FLASH_WRProt_Pages56to57<sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x10000000)<sp/></highlight></codeline>
<codeline lineno="204"><highlight class="preprocessor">#define<sp/>FLASH_WRProt_Pages58to59<sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x20000000)<sp/></highlight></codeline>
<codeline lineno="206" refid="group___option___bytes___write___protection_1gaaf0c1391987f76b381d26ff4b5142268" refkind="member"><highlight class="preprocessor">#define<sp/>FLASH_WRProt_Pages60to61<sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x40000000)<sp/></highlight></codeline>
<codeline lineno="208"><highlight class="preprocessor">#define<sp/>FLASH_WRProt_Pages62to127<sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x80000000)<sp/></highlight></codeline>
<codeline lineno="209" refid="group___option___bytes___write___protection_1gab9583317ad7ec30119cdd97e17e74121" refkind="member"><highlight class="preprocessor">#define<sp/>FLASH_WRProt_Pages62to255<sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x80000000)<sp/></highlight></codeline>
<codeline lineno="210"><highlight class="preprocessor">#define<sp/>FLASH_WRProt_Pages62to511<sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x80000000)<sp/></highlight></codeline>
<codeline lineno="212" refid="group___option___bytes___write___protection_1ga934a862a6a5cd350f00f5ded27e4bbd4" refkind="member"><highlight class="preprocessor">#define<sp/>FLASH_WRProt_AllPages<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0xFFFFFFFF)<sp/></highlight></codeline>
<codeline lineno="214"><highlight class="preprocessor">#define<sp/>IS_FLASH_WRPROT_PAGE(PAGE)<sp/>(((PAGE)<sp/>!=<sp/>0x00000000))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215" refid="group___option___bytes___write___protection_1ga8c9bd2510c0af75911a6b24271a33c95" refkind="member"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_FLASH_ADDRESS(ADDRESS)<sp/>(((ADDRESS)<sp/>&gt;=<sp/>0x08000000)<sp/>&amp;&amp;<sp/>((ADDRESS)<sp/>&lt;<sp/>0x080FFFFF))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218" refid="group___option___bytes___write___protection_1ga12744383aa65b2eb38e37d41a12bb6fe" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_OB_DATA_ADDRESS(ADDRESS)<sp/>(((ADDRESS)<sp/>==<sp/>0x1FFFF804)<sp/>||<sp/>((ADDRESS)<sp/>==<sp/>0x1FFFF806))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="preprocessor">#define<sp/>OB_IWDG_SW<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint16_t)0x0001)<sp/><sp/></highlight></codeline>
<codeline lineno="229"><highlight class="preprocessor">#define<sp/>OB_IWDG_HW<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint16_t)0x0000)<sp/><sp/></highlight></codeline>
<codeline lineno="230" refid="group___option___bytes___write___protection_1ga1779d1131ad245861c61dbf43a2d2d3d" refkind="member"><highlight class="preprocessor">#define<sp/>IS_OB_IWDG_SOURCE(SOURCE)<sp/>(((SOURCE)<sp/>==<sp/>OB_IWDG_SW)<sp/>||<sp/>((SOURCE)<sp/>==<sp/>OB_IWDG_HW))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="240" refid="group___option___bytes___write___protection_1gacec4a825ff505ef5751ec6e5cf6d941e" refkind="member"><highlight class="preprocessor">#define<sp/>OB_STOP_NoRST<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint16_t)0x0002)<sp/></highlight></codeline>
<codeline lineno="241" refid="group___option___bytes___write___protection_1gab233da6081eaf5d664f16c0e8c7df138" refkind="member"><highlight class="preprocessor">#define<sp/>OB_STOP_RST<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint16_t)0x0000)<sp/></highlight></codeline>
<codeline lineno="242"><highlight class="preprocessor">#define<sp/>IS_OB_STOP_SOURCE(SOURCE)<sp/>(((SOURCE)<sp/>==<sp/>OB_STOP_NoRST)<sp/>||<sp/>((SOURCE)<sp/>==<sp/>OB_STOP_RST))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243" refid="group___option___bytes___write___protection_1ga6fdaf38a559d606660dd10a411b77ea5" refkind="member"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="preprocessor">#define<sp/>OB_STDBY_NoRST<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint16_t)0x0004)<sp/></highlight></codeline>
<codeline lineno="253"><highlight class="preprocessor">#define<sp/>OB_STDBY_RST<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint16_t)0x0000)<sp/></highlight></codeline>
<codeline lineno="254"><highlight class="preprocessor">#define<sp/>IS_OB_STDBY_SOURCE(SOURCE)<sp/>(((SOURCE)<sp/>==<sp/>OB_STDBY_NoRST)<sp/>||<sp/>((SOURCE)<sp/>==<sp/>OB_STDBY_RST))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>STM32F10X_XL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="preprocessor">#define<sp/>FLASH_BOOT_Bank1<sp/><sp/>((uint16_t)0x0000)<sp/></highlight></codeline>
<codeline lineno="265"><highlight class="preprocessor">#define<sp/>FLASH_BOOT_Bank2<sp/><sp/>((uint16_t)0x0001)<sp/></highlight></codeline>
<codeline lineno="268"><highlight class="preprocessor">#define<sp/>IS_FLASH_BOOT(BOOT)<sp/>(((BOOT)<sp/>==<sp/>FLASH_BOOT_Bank1)<sp/>||<sp/>((BOOT)<sp/>==<sp/>FLASH_BOOT_Bank2))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="preprocessor">#ifdef<sp/>STM32F10X_XL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FLASH_IT_BANK2_ERROR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x80000400)<sp/><sp/></highlight></codeline>
<codeline lineno="278"><highlight class="preprocessor">#define<sp/>FLASH_IT_BANK2_EOP<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x80001000)<sp/><sp/></highlight></codeline>
<codeline lineno="280"><highlight class="preprocessor">#define<sp/>FLASH_IT_BANK1_ERROR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FLASH_IT_ERROR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="281"><highlight class="preprocessor">#define<sp/>FLASH_IT_BANK1_EOP<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FLASH_IT_EOP<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="283" refid="group___option___bytes__n_r_s_t___s_t_d_b_y_1ga9588443b20719498422aeb72b65de839" refkind="member"><highlight class="preprocessor">#define<sp/>FLASH_IT_ERROR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000400)<sp/><sp/></highlight></codeline>
<codeline lineno="284" refid="group___option___bytes__n_r_s_t___s_t_d_b_y_1ga69451a6f69247528f58735c9c83499ce" refkind="member"><highlight class="preprocessor">#define<sp/>FLASH_IT_EOP<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00001000)<sp/><sp/></highlight></codeline>
<codeline lineno="285" refid="group___option___bytes__n_r_s_t___s_t_d_b_y_1ga8a05393df3a5e89551b4e2e1e8c5b884" refkind="member"><highlight class="preprocessor">#define<sp/>IS_FLASH_IT(IT)<sp/>((((IT)<sp/>&amp;<sp/>(uint32_t)0x7FFFEBFF)<sp/>==<sp/>0x00000000)<sp/>&amp;&amp;<sp/>(((IT)<sp/>!=<sp/>0x00000000)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FLASH_IT_ERROR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000400)<sp/><sp/></highlight></codeline>
<codeline lineno="288"><highlight class="preprocessor">#define<sp/>FLASH_IT_EOP<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00001000)<sp/><sp/></highlight></codeline>
<codeline lineno="289"><highlight class="preprocessor">#define<sp/>FLASH_IT_BANK1_ERROR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FLASH_IT_ERROR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="290"><highlight class="preprocessor">#define<sp/>FLASH_IT_BANK1_EOP<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FLASH_IT_EOP<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="292"><highlight class="preprocessor">#define<sp/>IS_FLASH_IT(IT)<sp/>((((IT)<sp/>&amp;<sp/>(uint32_t)0xFFFFEBFF)<sp/>==<sp/>0x00000000)<sp/>&amp;&amp;<sp/>(((IT)<sp/>!=<sp/>0x00000000)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="preprocessor">#ifdef<sp/>STM32F10X_XL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FLASH_FLAG_BANK2_BSY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x80000001)<sp/><sp/></highlight></codeline>
<codeline lineno="304"><highlight class="preprocessor">#define<sp/>FLASH_FLAG_BANK2_EOP<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x80000020)<sp/><sp/></highlight></codeline>
<codeline lineno="305"><highlight class="preprocessor">#define<sp/>FLASH_FLAG_BANK2_PGERR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x80000004)<sp/><sp/></highlight></codeline>
<codeline lineno="306"><highlight class="preprocessor">#define<sp/>FLASH_FLAG_BANK2_WRPRTERR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x80000010)<sp/><sp/></highlight></codeline>
<codeline lineno="308"><highlight class="preprocessor">#define<sp/>FLASH_FLAG_BANK1_BSY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FLASH_FLAG_BSY<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="309"><highlight class="preprocessor">#define<sp/>FLASH_FLAG_BANK1_EOP<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FLASH_FLAG_EOP<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="310"><highlight class="preprocessor">#define<sp/>FLASH_FLAG_BANK1_PGERR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FLASH_FLAG_PGERR<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="311"><highlight class="preprocessor">#define<sp/>FLASH_FLAG_BANK1_WRPRTERR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FLASH_FLAG_WRPRTERR<sp/><sp/></highlight></codeline>
<codeline lineno="313"><highlight class="preprocessor">#define<sp/>FLASH_FLAG_BSY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000001)<sp/><sp/></highlight></codeline>
<codeline lineno="314"><highlight class="preprocessor">#define<sp/>FLASH_FLAG_EOP<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000020)<sp/><sp/></highlight></codeline>
<codeline lineno="315"><highlight class="preprocessor">#define<sp/>FLASH_FLAG_PGERR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000004)<sp/><sp/></highlight></codeline>
<codeline lineno="316"><highlight class="preprocessor">#define<sp/>FLASH_FLAG_WRPRTERR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000010)<sp/><sp/></highlight></codeline>
<codeline lineno="317"><highlight class="preprocessor">#define<sp/>FLASH_FLAG_OPTERR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000001)<sp/><sp/></highlight></codeline>
<codeline lineno="319" refid="group___f_l_a_s_h___interrupts_1gaea20e80e1806d58a7544cfe8659e7f11" refkind="member"><highlight class="preprocessor">#define<sp/>IS_FLASH_CLEAR_FLAG(FLAG)<sp/>((((FLAG)<sp/>&amp;<sp/>(uint32_t)0x7FFFFFCA)<sp/>==<sp/>0x00000000)<sp/>&amp;&amp;<sp/>((FLAG)<sp/>!=<sp/>0x00000000))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320" refid="group___f_l_a_s_h___interrupts_1ga808627239be1bf9c2d8bfed36ec4db19" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_FLASH_GET_FLAG(FLAG)<sp/><sp/>(((FLAG)<sp/>==<sp/>FLASH_FLAG_BSY)<sp/>||<sp/>((FLAG)<sp/>==<sp/>FLASH_FLAG_EOP)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="321" refid="group___f_l_a_s_h___interrupts_1gac8825e2ce2c0e6ca63a40a347bd351a9" refkind="member"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((FLAG)<sp/>==<sp/>FLASH_FLAG_PGERR)<sp/>||<sp/>((FLAG)<sp/>==<sp/>FLASH_FLAG_WRPRTERR)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="322"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((FLAG)<sp/>==<sp/>FLASH_FLAG_OPTERR)||<sp/>\</highlight></codeline>
<codeline lineno="323" refid="group___f_l_a_s_h___interrupts_1ga46ee77d0be1f3e0a14ded0651163ae11" refkind="member"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((FLAG)<sp/>==<sp/>FLASH_FLAG_BANK1_BSY)<sp/>||<sp/>((FLAG)<sp/>==<sp/>FLASH_FLAG_BANK1_EOP)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="324"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((FLAG)<sp/>==<sp/>FLASH_FLAG_BANK1_PGERR)<sp/>||<sp/>((FLAG)<sp/>==<sp/>FLASH_FLAG_BANK1_WRPRTERR)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="325"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((FLAG)<sp/>==<sp/>FLASH_FLAG_BANK2_BSY)<sp/>||<sp/>((FLAG)<sp/>==<sp/>FLASH_FLAG_BANK2_EOP)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="326"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((FLAG)<sp/>==<sp/>FLASH_FLAG_BANK2_PGERR)<sp/>||<sp/>((FLAG)<sp/>==<sp/>FLASH_FLAG_BANK2_WRPRTERR))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FLASH_FLAG_BSY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000001)<sp/><sp/></highlight></codeline>
<codeline lineno="329"><highlight class="preprocessor">#define<sp/>FLASH_FLAG_EOP<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000020)<sp/><sp/></highlight></codeline>
<codeline lineno="330"><highlight class="preprocessor">#define<sp/>FLASH_FLAG_PGERR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000004)<sp/><sp/></highlight></codeline>
<codeline lineno="331"><highlight class="preprocessor">#define<sp/>FLASH_FLAG_WRPRTERR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000010)<sp/><sp/></highlight></codeline>
<codeline lineno="332"><highlight class="preprocessor">#define<sp/>FLASH_FLAG_OPTERR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000001)<sp/><sp/></highlight></codeline>
<codeline lineno="334"><highlight class="preprocessor">#define<sp/>FLASH_FLAG_BANK1_BSY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FLASH_FLAG_BSY<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="335"><highlight class="preprocessor">#define<sp/>FLASH_FLAG_BANK1_EOP<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FLASH_FLAG_EOP<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="336"><highlight class="preprocessor">#define<sp/>FLASH_FLAG_BANK1_PGERR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FLASH_FLAG_PGERR<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="337"><highlight class="preprocessor">#define<sp/>FLASH_FLAG_BANK1_WRPRTERR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FLASH_FLAG_WRPRTERR<sp/><sp/></highlight></codeline>
<codeline lineno="339"><highlight class="preprocessor">#define<sp/>IS_FLASH_CLEAR_FLAG(FLAG)<sp/>((((FLAG)<sp/>&amp;<sp/>(uint32_t)0xFFFFFFCA)<sp/>==<sp/>0x00000000)<sp/>&amp;&amp;<sp/>((FLAG)<sp/>!=<sp/>0x00000000))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_FLASH_GET_FLAG(FLAG)<sp/><sp/>(((FLAG)<sp/>==<sp/>FLASH_FLAG_BSY)<sp/>||<sp/>((FLAG)<sp/>==<sp/>FLASH_FLAG_EOP)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="341"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((FLAG)<sp/>==<sp/>FLASH_FLAG_PGERR)<sp/>||<sp/>((FLAG)<sp/>==<sp/>FLASH_FLAG_WRPRTERR)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="342"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((FLAG)<sp/>==<sp/>FLASH_FLAG_BANK1_BSY)<sp/>||<sp/>((FLAG)<sp/>==<sp/>FLASH_FLAG_BANK1_EOP)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="343"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((FLAG)<sp/>==<sp/>FLASH_FLAG_BANK1_PGERR)<sp/>||<sp/>((FLAG)<sp/>==<sp/>FLASH_FLAG_BANK1_WRPRTERR)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="344"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((FLAG)<sp/>==<sp/>FLASH_FLAG_OPTERR))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="367" refid="group___f_l_a_s_h___flags_1gaa1056ffdd1c434a2967d5ed7c0d263be" refkind="member"><highlight class="comment">/*------------<sp/>Functions<sp/>used<sp/>for<sp/>all<sp/>STM32F10x<sp/>devices<sp/>-----*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368" refid="group___f_l_a_s_h___flags_1ga1646345adbcda773ef25785b1bdc4c43" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___f_l_a_s_h___exported___functions_1ga54bcb96270215c752c3479c8c9e438c0" kindref="member">FLASH_SetLatency</ref>(uint32_t<sp/>FLASH_Latency);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___f_l_a_s_h___exported___functions_1ga978103a57b37920ac01128e999f9ece6" kindref="member">FLASH_HalfCycleAccessCmd</ref>(uint32_t<sp/>FLASH_HalfCycleAccess);</highlight></codeline>
<codeline lineno="370" refid="group___f_l_a_s_h___flags_1ga82f8c6104c348d6aa47c7658ed3b6b36" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___f_l_a_s_h___exported___functions_1ga6b93faaf0f560bf8d662b2cefe2f70e8" kindref="member">FLASH_PrefetchBufferCmd</ref>(uint32_t<sp/>FLASH_PrefetchBuffer);</highlight></codeline>
<codeline lineno="371" refid="group___f_l_a_s_h___flags_1ga61b60325cd94e1608e34afc7aff20ee4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___f_l_a_s_h___exported___functions_1ga4084d0184bab463a1579271bf474aaef" kindref="member">FLASH_Unlock</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___f_l_a_s_h___exported___functions_1ga46899557353c4312ddbe3f25e65df1d8" kindref="member">FLASH_Lock</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="373"><highlight class="normal">FLASH_Status<sp/><ref refid="group___f_l_a_s_h___exported___functions_1ga13a2ca18bfb3d5fb827a2751799f8451" kindref="member">FLASH_ErasePage</ref>(uint32_t<sp/>Page_Address);</highlight></codeline>
<codeline lineno="374"><highlight class="normal">FLASH_Status<sp/><ref refid="group___f_l_a_s_h___exported___functions_1gab2e6dea62c72b3e47c17512579d37498" kindref="member">FLASH_EraseAllPages</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="375"><highlight class="normal">FLASH_Status<sp/><ref refid="group___f_l_a_s_h___exported___functions_1ga152768609e85d74a9d8474be8dc2874b" kindref="member">FLASH_EraseOptionBytes</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="376"><highlight class="normal">FLASH_Status<sp/><ref refid="group___f_l_a_s_h___exported___functions_1gaac9a2f400b92537bd42a6bd7cc237b11" kindref="member">FLASH_ProgramWord</ref>(uint32_t<sp/>Address,<sp/>uint32_t<sp/>Data);</highlight></codeline>
<codeline lineno="377"><highlight class="normal">FLASH_Status<sp/><ref refid="group___f_l_a_s_h___exported___functions_1ga5c1336f667950a8765887228f1d0d501" kindref="member">FLASH_ProgramHalfWord</ref>(uint32_t<sp/>Address,<sp/>uint16_t<sp/>Data);</highlight></codeline>
<codeline lineno="378"><highlight class="normal">FLASH_Status<sp/><ref refid="group___f_l_a_s_h___exported___functions_1ga1382ff9d4ded8a5c076fde4fff529d21" kindref="member">FLASH_ProgramOptionByteData</ref>(uint32_t<sp/>Address,<sp/>uint8_t<sp/>Data);</highlight></codeline>
<codeline lineno="379"><highlight class="normal">FLASH_Status<sp/><ref refid="group___f_l_a_s_h___exported___functions_1gabad10c15e2d1ff1cb9e1083d08a9e763" kindref="member">FLASH_EnableWriteProtection</ref>(uint32_t<sp/>FLASH_Pages);</highlight></codeline>
<codeline lineno="380"><highlight class="normal">FLASH_Status<sp/><ref refid="group___f_l_a_s_h___exported___functions_1ga0b8d1a8277950c890bbc247bbeafb40f" kindref="member">FLASH_ReadOutProtection</ref>(<ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref><sp/>NewState);</highlight></codeline>
<codeline lineno="381"><highlight class="normal">FLASH_Status<sp/><ref refid="group___f_l_a_s_h___exported___functions_1gaae1c493bb06c930ceb84dedfdb7325f6" kindref="member">FLASH_UserOptionByteConfig</ref>(uint16_t<sp/>OB_IWDG,<sp/>uint16_t<sp/>OB_STOP,<sp/>uint16_t<sp/>OB_STDBY);</highlight></codeline>
<codeline lineno="382"><highlight class="normal">uint32_t<sp/><ref refid="group___f_l_a_s_h___exported___functions_1ga31441647fac5fbb38369613076737943" kindref="member">FLASH_GetUserOptionByte</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="383"><highlight class="normal">uint32_t<sp/><ref refid="group___f_l_a_s_h___exported___functions_1gac009e061562c7d36d7d2d00bb1c8aafa" kindref="member">FLASH_GetWriteProtectionOptionByte</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><ref refid="group___exported__types_1ga89136caac2e14c55151f527ac02daaff" kindref="member">FlagStatus</ref><sp/><ref refid="group___f_l_a_s_h___exported___functions_1ga57fe56770ff25b358f3e36bd70632e37" kindref="member">FLASH_GetReadOutProtectionStatus</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><ref refid="group___exported__types_1ga89136caac2e14c55151f527ac02daaff" kindref="member">FlagStatus</ref><sp/><ref refid="group___f_l_a_s_h___exported___functions_1ga289bffe7f078d6a130222f03c59bc235" kindref="member">FLASH_GetPrefetchBufferStatus</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___f_l_a_s_h___exported___functions_1ga94c1e51a9c3bf8d48eb6eb4a4d054861" kindref="member">FLASH_ITConfig</ref>(uint32_t<sp/>FLASH_IT,<sp/><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref><sp/>NewState);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><ref refid="group___exported__types_1ga89136caac2e14c55151f527ac02daaff" kindref="member">FlagStatus</ref><sp/><ref refid="group___f_l_a_s_h___exported___functions_1gae3fb545e32f21501ca27d4380e0f2088" kindref="member">FLASH_GetFlagStatus</ref>(uint32_t<sp/>FLASH_FLAG);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___f_l_a_s_h___exported___functions_1gac4be1d486483fa5cd70ec77d44ca8f87" kindref="member">FLASH_ClearFlag</ref>(uint32_t<sp/>FLASH_FLAG);</highlight></codeline>
<codeline lineno="389"><highlight class="normal">FLASH_Status<sp/><ref refid="group___f_l_a_s_h___exported___functions_1gac265b8d1e7ea11e44ceee28797c3debb" kindref="member">FLASH_GetStatus</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="390"><highlight class="normal">FLASH_Status<sp/><ref refid="group___f_l_a_s_h___exported___functions_1ga2ad803999ae93ec03700983c59cae264" kindref="member">FLASH_WaitForLastOperation</ref>(uint32_t<sp/>Timeout);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight><highlight class="comment">/*------------<sp/>New<sp/>function<sp/>used<sp/>for<sp/>all<sp/>STM32F10x<sp/>devices<sp/>-----*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___f_l_a_s_h___exported___functions_1ga358c4b7e0ef20693ca62cc9d20c94a5a" kindref="member">FLASH_UnlockBank1</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___f_l_a_s_h___exported___functions_1gafe4188ab9eb12c046970660f65a3faf9" kindref="member">FLASH_LockBank1</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="395"><highlight class="normal">FLASH_Status<sp/><ref refid="group___f_l_a_s_h___exported___functions_1ga2036728450ee18e789b25fe3fd9c80ee" kindref="member">FLASH_EraseAllBank1Pages</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="396"><highlight class="normal">FLASH_Status<sp/><ref refid="group___f_l_a_s_h___exported___functions_1ga9d5b76b75ef4c578cc45dc836a1929b6" kindref="member">FLASH_GetBank1Status</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="397"><highlight class="normal">FLASH_Status<sp/><ref refid="group___f_l_a_s_h___exported___functions_1ga470d345c2ea4304f899aa988bdd23824" kindref="member">FLASH_WaitForLastBank1Operation</ref>(uint32_t<sp/>Timeout);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>STM32F10X_XL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight><highlight class="comment">/*----<sp/>New<sp/>Functions<sp/>used<sp/>only<sp/>with<sp/>STM32F10x_XL<sp/>density<sp/>devices<sp/>-----*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FLASH_UnlockBank2(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FLASH_LockBank2(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="403"><highlight class="normal">FLASH_Status<sp/>FLASH_EraseAllBank2Pages(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="404"><highlight class="normal">FLASH_Status<sp/>FLASH_GetBank2Status(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="405"><highlight class="normal">FLASH_Status<sp/>FLASH_WaitForLastBank2Operation(uint32_t<sp/>Timeout);</highlight></codeline>
<codeline lineno="406"><highlight class="normal">FLASH_Status<sp/>FLASH_BootConfig(uint16_t<sp/>FLASH_BOOT);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal">}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>__STM32F10x_FLASH_H<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="comment">/*******************<sp/>(C)<sp/>COPYRIGHT<sp/>2011<sp/>STMicroelectronics<sp/>*****END<sp/>OF<sp/>FILE****/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_flash.h"/>
  </compounddef>
</doxygen>
