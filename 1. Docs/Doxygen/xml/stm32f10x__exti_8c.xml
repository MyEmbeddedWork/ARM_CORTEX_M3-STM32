<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="stm32f10x__exti_8c" kind="file" language="C++">
    <compoundname>stm32f10x_exti.c</compoundname>
    <includes refid="stm32f10x__exti_8h" local="yes">stm32f10x_exti.h</includes>
    <incdepgraph>
      <node id="924">
        <label>system_stm32f10x.h</label>
        <link refid="system__stm32f10x_8h"/>
      </node>
      <node id="921">
        <label>stdint.h</label>
      </node>
      <node id="918">
        <label>stm32f10x_exti.h</label>
        <link refid="stm32f10x__exti_8h"/>
        <childnode refid="919" relation="include">
        </childnode>
      </node>
      <node id="917">
        <label>C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_exti.c</label>
        <link refid="stm32f10x__exti_8c"/>
        <childnode refid="918" relation="include">
        </childnode>
      </node>
      <node id="920">
        <label>core_cm3.h</label>
        <link refid="core__cm3_8h"/>
        <childnode refid="921" relation="include">
        </childnode>
        <childnode refid="922" relation="include">
        </childnode>
        <childnode refid="923" relation="include">
        </childnode>
      </node>
      <node id="923">
        <label>core_cmFunc.h</label>
        <link refid="core__cm_func_8h"/>
      </node>
      <node id="922">
        <label>core_cmInstr.h</label>
        <link refid="core__cm_instr_8h"/>
      </node>
      <node id="919">
        <label>stm32f10x.h</label>
        <link refid="stm32f10x_8h"/>
        <childnode refid="920" relation="include">
        </childnode>
        <childnode refid="924" relation="include">
        </childnode>
        <childnode refid="921" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="group___e_x_t_i___private___defines_1ga4451b67e337fc341394ee695273798af" prot="public" static="no">
        <name>EXTI_LINENONE</name>
        <initializer>((uint32_t)0x00000)  /* No interrupt selected */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_exti.c" line="46" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_exti.c" bodystart="46" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group___e_x_t_i___private___functions_1ga07072e339cb9ecb9cd9d4b94afc9f317" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EXTI_DeInit</definition>
        <argsstring>(void)</argsstring>
        <name>EXTI_DeInit</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Deinitializes the EXTI peripheral registers to their default reset values. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_exti.c" line="85" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_exti.c" bodystart="85" bodyend="92"/>
        <references refid="group___peripheral__declaration_1ga9189e770cd9b63dadd36683eb9843cac" compoundref="stm32f10x_8h" startline="1407">EXTI</references>
      </memberdef>
      <memberdef kind="function" id="group___e_x_t_i___private___functions_1ga8c9ce6352a3a2dfc8fc9287cb24c6501" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EXTI_Init</definition>
        <argsstring>(EXTI_InitTypeDef *EXTI_InitStruct)</argsstring>
        <name>EXTI_Init</name>
        <param>
          <type><ref refid="struct_e_x_t_i___init_type_def" kindref="compound">EXTI_InitTypeDef</ref> *</type>
          <declname>EXTI_InitStruct</declname>
        </param>
        <briefdescription>
<para>Initializes the EXTI peripheral according to the specified parameters in the EXTI_InitStruct. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>EXTI_InitStruct</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a <ref refid="struct_e_x_t_i___init_type_def" kindref="compound">EXTI_InitTypeDef</ref> structure that contains the configuration information for the EXTI peripheral. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_exti.c" line="101" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_exti.c" bodystart="101" bodyend="149"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___e_x_t_i___exported___types_1ga8429170f3320b90227f9f5b252c1c5eb" compoundref="stm32f10x__exti_8h" startline="62">IS_EXTI_MODE</references>
        <references refid="struct_e_x_t_i___init_type_def_1a741816862b9cd43cc80781dc89150e7e" compoundref="stm32f10x__exti_8h" startline="87">EXTI_InitTypeDef::EXTI_Mode</references>
        <references refid="group___e_x_t_i___exported___types_1gaee95ec6288944a6245696896604e509e" compoundref="stm32f10x__exti_8h" startline="75">IS_EXTI_TRIGGER</references>
        <references refid="struct_e_x_t_i___init_type_def_1ab0bd8417e78fe2b43eed79e44064510c" compoundref="stm32f10x__exti_8h" startline="90">EXTI_InitTypeDef::EXTI_Trigger</references>
        <references refid="group___e_x_t_i___lines_1gaade8b8717a1d78f83d3cf180e2817557" compoundref="stm32f10x__exti_8h" startline="132">IS_EXTI_LINE</references>
        <references refid="struct_e_x_t_i___init_type_def_1a1b5bb38e1df331f764b830a1e8ec171f" compoundref="stm32f10x__exti_8h" startline="84">EXTI_InitTypeDef::EXTI_Line</references>
        <references refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" compoundref="stm32f10x_8h" startline="522">IS_FUNCTIONAL_STATE</references>
        <references refid="struct_e_x_t_i___init_type_def_1ac1769bc5badaef4cffbcf105e3fe1c27" compoundref="stm32f10x__exti_8h" startline="93">EXTI_InitTypeDef::EXTI_LineCmd</references>
        <references refid="group___peripheral__memory__map_1ga87371508b3bcdcd98cd1ec629be29061" compoundref="stm32f10x_8h" startline="1314">EXTI_BASE</references>
        <references refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1ad3a9df141be0ccf10389b640f492b26d" compoundref="stm32f10x_8h" startline="521">DISABLE</references>
        <references refid="group___peripheral__declaration_1ga9189e770cd9b63dadd36683eb9843cac" compoundref="stm32f10x_8h" startline="1407">EXTI</references>
        <references refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" compoundref="core__cm0_8h" startline="221">__IO</references>
        <references refid="group___e_x_t_i___exported___types_1gga9da190f5425d1b421a06bced8cc48e9bab09db55a2e9118e86d03d69698434ebb" compoundref="stm32f10x__exti_8h" startline="72">EXTI_Trigger_Rising_Falling</references>
      </memberdef>
      <memberdef kind="function" id="group___e_x_t_i___private___functions_1ga86b9e662d18a2f829999cfb26aa7ca20" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EXTI_StructInit</definition>
        <argsstring>(EXTI_InitTypeDef *EXTI_InitStruct)</argsstring>
        <name>EXTI_StructInit</name>
        <param>
          <type><ref refid="struct_e_x_t_i___init_type_def" kindref="compound">EXTI_InitTypeDef</ref> *</type>
          <declname>EXTI_InitStruct</declname>
        </param>
        <briefdescription>
<para>Fills each EXTI_InitStruct member with its reset value. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>EXTI_InitStruct</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a <ref refid="struct_e_x_t_i___init_type_def" kindref="compound">EXTI_InitTypeDef</ref> structure which will be initialized. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_exti.c" line="157" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_exti.c" bodystart="157" bodyend="163"/>
        <references refid="struct_e_x_t_i___init_type_def_1a1b5bb38e1df331f764b830a1e8ec171f" compoundref="stm32f10x__exti_8h" startline="84">EXTI_InitTypeDef::EXTI_Line</references>
        <references refid="group___e_x_t_i___private___defines_1ga4451b67e337fc341394ee695273798af" compoundref="stm32f10x__exti_8c" startline="46">EXTI_LINENONE</references>
        <references refid="struct_e_x_t_i___init_type_def_1a741816862b9cd43cc80781dc89150e7e" compoundref="stm32f10x__exti_8h" startline="87">EXTI_InitTypeDef::EXTI_Mode</references>
        <references refid="group___e_x_t_i___exported___types_1ggad5e69af98dc0dfdf64417adc1cf57929a8c6ccdd7b1bc4872731306537e8c3b42" compoundref="stm32f10x__exti_8h" startline="58">EXTI_Mode_Interrupt</references>
        <references refid="struct_e_x_t_i___init_type_def_1ab0bd8417e78fe2b43eed79e44064510c" compoundref="stm32f10x__exti_8h" startline="90">EXTI_InitTypeDef::EXTI_Trigger</references>
        <references refid="group___e_x_t_i___exported___types_1gga9da190f5425d1b421a06bced8cc48e9bac4a21d397aa4648b8f8cf961f71f3ac5" compoundref="stm32f10x__exti_8h" startline="71">EXTI_Trigger_Falling</references>
        <references refid="struct_e_x_t_i___init_type_def_1ac1769bc5badaef4cffbcf105e3fe1c27" compoundref="stm32f10x__exti_8h" startline="93">EXTI_InitTypeDef::EXTI_LineCmd</references>
        <references refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1ad3a9df141be0ccf10389b640f492b26d" compoundref="stm32f10x_8h" startline="521">DISABLE</references>
      </memberdef>
      <memberdef kind="function" id="group___e_x_t_i___private___functions_1ga897e8ea59f40a19e047fb9994876fc9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EXTI_GenerateSWInterrupt</definition>
        <argsstring>(uint32_t EXTI_Line)</argsstring>
        <name>EXTI_GenerateSWInterrupt</name>
        <param>
          <type>uint32_t</type>
          <declname>EXTI_Line</declname>
        </param>
        <briefdescription>
<para>Generates a Software interrupt. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>EXTI_Line</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the EXTI lines to be enabled or disabled. This parameter can be any combination of EXTI_Linex where x can be (0..19). </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_exti.c" line="171" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_exti.c" bodystart="171" bodyend="177"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___e_x_t_i___lines_1gaade8b8717a1d78f83d3cf180e2817557" compoundref="stm32f10x__exti_8h" startline="132">IS_EXTI_LINE</references>
        <references refid="group___peripheral__declaration_1ga9189e770cd9b63dadd36683eb9843cac" compoundref="stm32f10x_8h" startline="1407">EXTI</references>
      </memberdef>
      <memberdef kind="function" id="group___e_x_t_i___private___functions_1ga0ce06e6b312592df149800d63218cffa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___exported__types_1ga89136caac2e14c55151f527ac02daaff" kindref="member">FlagStatus</ref></type>
        <definition>FlagStatus EXTI_GetFlagStatus</definition>
        <argsstring>(uint32_t EXTI_Line)</argsstring>
        <name>EXTI_GetFlagStatus</name>
        <param>
          <type>uint32_t</type>
          <declname>EXTI_Line</declname>
        </param>
        <briefdescription>
<para>Checks whether the specified EXTI line flag is set or not. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>EXTI_Line</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the EXTI line flag to check. This parameter can be: <itemizedlist>
<listitem><para>EXTI_Linex: External interrupt line x where x(0..19) </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of EXTI_Line (SET or RESET). </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_exti.c" line="186" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_exti.c" bodystart="186" bodyend="201"/>
        <references refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffa589b7d94a3d91d145720e2fed0eb3a05" compoundref="stm32f10x_8h" startline="519">RESET</references>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___e_x_t_i___lines_1ga77c85c7b8426c6cfe91b4f5a2c58ecda" compoundref="stm32f10x__exti_8h" startline="133">IS_GET_EXTI_LINE</references>
        <references refid="group___peripheral__declaration_1ga9189e770cd9b63dadd36683eb9843cac" compoundref="stm32f10x_8h" startline="1407">EXTI</references>
        <references refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffab44c8101cc294c074709ec1b14211792" compoundref="stm32f10x_8h" startline="519">SET</references>
      </memberdef>
      <memberdef kind="function" id="group___e_x_t_i___private___functions_1ga8e07aaaa286dea4803605d5968850a92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EXTI_ClearFlag</definition>
        <argsstring>(uint32_t EXTI_Line)</argsstring>
        <name>EXTI_ClearFlag</name>
        <param>
          <type>uint32_t</type>
          <declname>EXTI_Line</declname>
        </param>
        <briefdescription>
<para>Clears the EXTI&apos;s line pending flags. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>EXTI_Line</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the EXTI lines flags to clear. This parameter can be any combination of EXTI_Linex where x can be (0..19). </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_exti.c" line="209" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_exti.c" bodystart="209" bodyend="215"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___e_x_t_i___lines_1gaade8b8717a1d78f83d3cf180e2817557" compoundref="stm32f10x__exti_8h" startline="132">IS_EXTI_LINE</references>
        <references refid="group___peripheral__declaration_1ga9189e770cd9b63dadd36683eb9843cac" compoundref="stm32f10x_8h" startline="1407">EXTI</references>
      </memberdef>
      <memberdef kind="function" id="group___e_x_t_i___private___functions_1gaf7b51519062ae42fd27ee689cab364aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___exported__types_1gaacbd7ed539db0aacd973a0f6eca34074" kindref="member">ITStatus</ref></type>
        <definition>ITStatus EXTI_GetITStatus</definition>
        <argsstring>(uint32_t EXTI_Line)</argsstring>
        <name>EXTI_GetITStatus</name>
        <param>
          <type>uint32_t</type>
          <declname>EXTI_Line</declname>
        </param>
        <briefdescription>
<para>Checks whether the specified EXTI line is asserted or not. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>EXTI_Line</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the EXTI line to check. This parameter can be: <itemizedlist>
<listitem><para>EXTI_Linex: External interrupt line x where x(0..19) </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of EXTI_Line (SET or RESET). </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_exti.c" line="224" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_exti.c" bodystart="224" bodyend="241"/>
        <references refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffa589b7d94a3d91d145720e2fed0eb3a05" compoundref="stm32f10x_8h" startline="519">RESET</references>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___e_x_t_i___lines_1ga77c85c7b8426c6cfe91b4f5a2c58ecda" compoundref="stm32f10x__exti_8h" startline="133">IS_GET_EXTI_LINE</references>
        <references refid="group___peripheral__declaration_1ga9189e770cd9b63dadd36683eb9843cac" compoundref="stm32f10x_8h" startline="1407">EXTI</references>
        <references refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffab44c8101cc294c074709ec1b14211792" compoundref="stm32f10x_8h" startline="519">SET</references>
      </memberdef>
      <memberdef kind="function" id="group___e_x_t_i___private___functions_1ga3652a7e682728b310c124e7e974d1468" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EXTI_ClearITPendingBit</definition>
        <argsstring>(uint32_t EXTI_Line)</argsstring>
        <name>EXTI_ClearITPendingBit</name>
        <param>
          <type>uint32_t</type>
          <declname>EXTI_Line</declname>
        </param>
        <briefdescription>
<para>Clears the EXTI&apos;s line pending bits. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>EXTI_Line</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the EXTI lines to clear. This parameter can be any combination of EXTI_Linex where x can be (0..19). </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_exti.c" line="249" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_exti.c" bodystart="249" bodyend="255"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___e_x_t_i___lines_1gaade8b8717a1d78f83d3cf180e2817557" compoundref="stm32f10x__exti_8h" startline="132">IS_EXTI_LINE</references>
        <references refid="group___peripheral__declaration_1ga9189e770cd9b63dadd36683eb9843cac" compoundref="stm32f10x_8h" startline="1407">EXTI</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This file provides all the EXTI firmware functions. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>MCD Application Team </para></simplesect>
<simplesect kind="version"><para>V3.5.0 </para></simplesect>
<simplesect kind="date"><para>11-March-2011 </para></simplesect>
<simplesect kind="attention"><para></para></simplesect>
THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.</para><para><heading level="2"><center><copy/> COPYRIGHT 2011 STMicroelectronics</center></heading>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="22"><highlight class="comment">/*<sp/>Includes<sp/>------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="stm32f10x__exti_8h" kindref="compound">stm32f10x_exti.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="group___e_x_t_i___private___defines_1ga4451b67e337fc341394ee695273798af" refkind="member"><highlight class="preprocessor">#define<sp/>EXTI_LINENONE<sp/><sp/><sp/><sp/>((uint32_t)0x00000)<sp/><sp/></highlight><highlight class="comment">/*<sp/>No<sp/>interrupt<sp/>selected<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="85" refid="group___e_x_t_i___private___functions_1ga07072e339cb9ecb9cd9d4b94afc9f317" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___e_x_t_i___private___functions_1ga07072e339cb9ecb9cd9d4b94afc9f317" kindref="member">EXTI_DeInit</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="86"><highlight class="normal">{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><ref refid="group___peripheral__declaration_1ga9189e770cd9b63dadd36683eb9843cac" kindref="member">EXTI</ref>-&gt;IMR<sp/>=<sp/>0x00000000;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><ref refid="group___peripheral__declaration_1ga9189e770cd9b63dadd36683eb9843cac" kindref="member">EXTI</ref>-&gt;EMR<sp/>=<sp/>0x00000000;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><ref refid="group___peripheral__declaration_1ga9189e770cd9b63dadd36683eb9843cac" kindref="member">EXTI</ref>-&gt;RTSR<sp/>=<sp/>0x00000000;<sp/></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><ref refid="group___peripheral__declaration_1ga9189e770cd9b63dadd36683eb9843cac" kindref="member">EXTI</ref>-&gt;FTSR<sp/>=<sp/>0x00000000;<sp/></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><ref refid="group___peripheral__declaration_1ga9189e770cd9b63dadd36683eb9843cac" kindref="member">EXTI</ref>-&gt;PR<sp/>=<sp/>0x000FFFFF;</highlight></codeline>
<codeline lineno="92"><highlight class="normal">}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="101" refid="group___e_x_t_i___private___functions_1ga8c9ce6352a3a2dfc8fc9287cb24c6501" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___e_x_t_i___private___functions_1ga8c9ce6352a3a2dfc8fc9287cb24c6501" kindref="member">EXTI_Init</ref>(<ref refid="struct_e_x_t_i___init_type_def" kindref="compound">EXTI_InitTypeDef</ref>*<sp/>EXTI_InitStruct)</highlight></codeline>
<codeline lineno="102"><highlight class="normal">{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>uint32_t<sp/>tmp<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___e_x_t_i___exported___types_1ga8429170f3320b90227f9f5b252c1c5eb" kindref="member">IS_EXTI_MODE</ref>(EXTI_InitStruct-&gt;<ref refid="struct_e_x_t_i___init_type_def_1a741816862b9cd43cc80781dc89150e7e" kindref="member">EXTI_Mode</ref>));</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___e_x_t_i___exported___types_1gaee95ec6288944a6245696896604e509e" kindref="member">IS_EXTI_TRIGGER</ref>(EXTI_InitStruct-&gt;<ref refid="struct_e_x_t_i___init_type_def_1ab0bd8417e78fe2b43eed79e44064510c" kindref="member">EXTI_Trigger</ref>));</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___e_x_t_i___lines_1gaade8b8717a1d78f83d3cf180e2817557" kindref="member">IS_EXTI_LINE</ref>(EXTI_InitStruct-&gt;<ref refid="struct_e_x_t_i___init_type_def_1a1b5bb38e1df331f764b830a1e8ec171f" kindref="member">EXTI_Line</ref>));<sp/><sp/></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" kindref="member">IS_FUNCTIONAL_STATE</ref>(EXTI_InitStruct-&gt;<ref refid="struct_e_x_t_i___init_type_def_1ac1769bc5badaef4cffbcf105e3fe1c27" kindref="member">EXTI_LineCmd</ref>));</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>tmp<sp/>=<sp/>(uint32_t)<ref refid="group___peripheral__memory__map_1ga87371508b3bcdcd98cd1ec629be29061" kindref="member">EXTI_BASE</ref>;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(EXTI_InitStruct-&gt;<ref refid="struct_e_x_t_i___init_type_def_1ac1769bc5badaef4cffbcf105e3fe1c27" kindref="member">EXTI_LineCmd</ref><sp/>!=<sp/><ref refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1ad3a9df141be0ccf10389b640f492b26d" kindref="member">DISABLE</ref>)</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Clear<sp/>EXTI<sp/>line<sp/>configuration<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga9189e770cd9b63dadd36683eb9843cac" kindref="member">EXTI</ref>-&gt;IMR<sp/>&amp;=<sp/>~EXTI_InitStruct-&gt;<ref refid="struct_e_x_t_i___init_type_def_1a1b5bb38e1df331f764b830a1e8ec171f" kindref="member">EXTI_Line</ref>;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga9189e770cd9b63dadd36683eb9843cac" kindref="member">EXTI</ref>-&gt;EMR<sp/>&amp;=<sp/>~EXTI_InitStruct-&gt;<ref refid="struct_e_x_t_i___init_type_def_1a1b5bb38e1df331f764b830a1e8ec171f" kindref="member">EXTI_Line</ref>;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp<sp/>+=<sp/>EXTI_InitStruct-&gt;<ref refid="struct_e_x_t_i___init_type_def_1a741816862b9cd43cc80781dc89150e7e" kindref="member">EXTI_Mode</ref>;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>*(<ref refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" kindref="member">__IO</ref><sp/>uint32_t<sp/>*)<sp/>tmp<sp/>|=<sp/>EXTI_InitStruct-&gt;<ref refid="struct_e_x_t_i___init_type_def_1a1b5bb38e1df331f764b830a1e8ec171f" kindref="member">EXTI_Line</ref>;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Clear<sp/>Rising<sp/>Falling<sp/>edge<sp/>configuration<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga9189e770cd9b63dadd36683eb9843cac" kindref="member">EXTI</ref>-&gt;RTSR<sp/>&amp;=<sp/>~EXTI_InitStruct-&gt;<ref refid="struct_e_x_t_i___init_type_def_1a1b5bb38e1df331f764b830a1e8ec171f" kindref="member">EXTI_Line</ref>;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga9189e770cd9b63dadd36683eb9843cac" kindref="member">EXTI</ref>-&gt;FTSR<sp/>&amp;=<sp/>~EXTI_InitStruct-&gt;<ref refid="struct_e_x_t_i___init_type_def_1a1b5bb38e1df331f764b830a1e8ec171f" kindref="member">EXTI_Line</ref>;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Select<sp/>the<sp/>trigger<sp/>for<sp/>the<sp/>selected<sp/>external<sp/>interrupts<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(EXTI_InitStruct-&gt;<ref refid="struct_e_x_t_i___init_type_def_1ab0bd8417e78fe2b43eed79e44064510c" kindref="member">EXTI_Trigger</ref><sp/>==<sp/><ref refid="group___e_x_t_i___exported___types_1gga9da190f5425d1b421a06bced8cc48e9bab09db55a2e9118e86d03d69698434ebb" kindref="member">EXTI_Trigger_Rising_Falling</ref>)</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Rising<sp/>Falling<sp/>edge<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga9189e770cd9b63dadd36683eb9843cac" kindref="member">EXTI</ref>-&gt;RTSR<sp/>|=<sp/>EXTI_InitStruct-&gt;<ref refid="struct_e_x_t_i___init_type_def_1a1b5bb38e1df331f764b830a1e8ec171f" kindref="member">EXTI_Line</ref>;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga9189e770cd9b63dadd36683eb9843cac" kindref="member">EXTI</ref>-&gt;FTSR<sp/>|=<sp/>EXTI_InitStruct-&gt;<ref refid="struct_e_x_t_i___init_type_def_1a1b5bb38e1df331f764b830a1e8ec171f" kindref="member">EXTI_Line</ref>;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>(uint32_t)<ref refid="group___peripheral__memory__map_1ga87371508b3bcdcd98cd1ec629be29061" kindref="member">EXTI_BASE</ref>;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>+=<sp/>EXTI_InitStruct-&gt;<ref refid="struct_e_x_t_i___init_type_def_1ab0bd8417e78fe2b43eed79e44064510c" kindref="member">EXTI_Trigger</ref>;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*(<ref refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" kindref="member">__IO</ref><sp/>uint32_t<sp/>*)<sp/>tmp<sp/>|=<sp/>EXTI_InitStruct-&gt;<ref refid="struct_e_x_t_i___init_type_def_1a1b5bb38e1df331f764b830a1e8ec171f" kindref="member">EXTI_Line</ref>;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp<sp/>+=<sp/>EXTI_InitStruct-&gt;<ref refid="struct_e_x_t_i___init_type_def_1a741816862b9cd43cc80781dc89150e7e" kindref="member">EXTI_Mode</ref>;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Disable<sp/>the<sp/>selected<sp/>external<sp/>lines<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>*(<ref refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" kindref="member">__IO</ref><sp/>uint32_t<sp/>*)<sp/>tmp<sp/>&amp;=<sp/>~EXTI_InitStruct-&gt;<ref refid="struct_e_x_t_i___init_type_def_1a1b5bb38e1df331f764b830a1e8ec171f" kindref="member">EXTI_Line</ref>;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal">}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="157" refid="group___e_x_t_i___private___functions_1ga86b9e662d18a2f829999cfb26aa7ca20" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___e_x_t_i___private___functions_1ga86b9e662d18a2f829999cfb26aa7ca20" kindref="member">EXTI_StructInit</ref>(<ref refid="struct_e_x_t_i___init_type_def" kindref="compound">EXTI_InitTypeDef</ref>*<sp/>EXTI_InitStruct)</highlight></codeline>
<codeline lineno="158"><highlight class="normal">{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>EXTI_InitStruct-&gt;<ref refid="struct_e_x_t_i___init_type_def_1a1b5bb38e1df331f764b830a1e8ec171f" kindref="member">EXTI_Line</ref><sp/>=<sp/><ref refid="group___e_x_t_i___private___defines_1ga4451b67e337fc341394ee695273798af" kindref="member">EXTI_LINENONE</ref>;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/>EXTI_InitStruct-&gt;<ref refid="struct_e_x_t_i___init_type_def_1a741816862b9cd43cc80781dc89150e7e" kindref="member">EXTI_Mode</ref><sp/>=<sp/><ref refid="group___e_x_t_i___exported___types_1ggad5e69af98dc0dfdf64417adc1cf57929a8c6ccdd7b1bc4872731306537e8c3b42" kindref="member">EXTI_Mode_Interrupt</ref>;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>EXTI_InitStruct-&gt;<ref refid="struct_e_x_t_i___init_type_def_1ab0bd8417e78fe2b43eed79e44064510c" kindref="member">EXTI_Trigger</ref><sp/>=<sp/><ref refid="group___e_x_t_i___exported___types_1gga9da190f5425d1b421a06bced8cc48e9bac4a21d397aa4648b8f8cf961f71f3ac5" kindref="member">EXTI_Trigger_Falling</ref>;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>EXTI_InitStruct-&gt;<ref refid="struct_e_x_t_i___init_type_def_1ac1769bc5badaef4cffbcf105e3fe1c27" kindref="member">EXTI_LineCmd</ref><sp/>=<sp/><ref refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1ad3a9df141be0ccf10389b640f492b26d" kindref="member">DISABLE</ref>;</highlight></codeline>
<codeline lineno="163"><highlight class="normal">}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="171" refid="group___e_x_t_i___private___functions_1ga897e8ea59f40a19e047fb9994876fc9b" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___e_x_t_i___private___functions_1ga897e8ea59f40a19e047fb9994876fc9b" kindref="member">EXTI_GenerateSWInterrupt</ref>(uint32_t<sp/>EXTI_Line)</highlight></codeline>
<codeline lineno="172"><highlight class="normal">{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___e_x_t_i___lines_1gaade8b8717a1d78f83d3cf180e2817557" kindref="member">IS_EXTI_LINE</ref>(EXTI_Line));</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><ref refid="group___peripheral__declaration_1ga9189e770cd9b63dadd36683eb9843cac" kindref="member">EXTI</ref>-&gt;SWIER<sp/>|=<sp/>EXTI_Line;</highlight></codeline>
<codeline lineno="177"><highlight class="normal">}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="186" refid="group___e_x_t_i___private___functions_1ga0ce06e6b312592df149800d63218cffa" refkind="member"><highlight class="normal"><ref refid="group___exported__types_1ga89136caac2e14c55151f527ac02daaff" kindref="member">FlagStatus</ref><sp/><ref refid="group___e_x_t_i___private___functions_1ga0ce06e6b312592df149800d63218cffa" kindref="member">EXTI_GetFlagStatus</ref>(uint32_t<sp/>EXTI_Line)</highlight></codeline>
<codeline lineno="187"><highlight class="normal">{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><ref refid="group___exported__types_1ga89136caac2e14c55151f527ac02daaff" kindref="member">FlagStatus</ref><sp/>bitstatus<sp/>=<sp/><ref refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffa589b7d94a3d91d145720e2fed0eb3a05" kindref="member">RESET</ref>;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___e_x_t_i___lines_1ga77c85c7b8426c6cfe91b4f5a2c58ecda" kindref="member">IS_GET_EXTI_LINE</ref>(EXTI_Line));</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="group___peripheral__declaration_1ga9189e770cd9b63dadd36683eb9843cac" kindref="member">EXTI</ref>-&gt;PR<sp/>&amp;<sp/>EXTI_Line)<sp/>!=<sp/>(uint32_t)<ref refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffa589b7d94a3d91d145720e2fed0eb3a05" kindref="member">RESET</ref>)</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>bitstatus<sp/>=<sp/><ref refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffab44c8101cc294c074709ec1b14211792" kindref="member">SET</ref>;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>bitstatus<sp/>=<sp/><ref refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffa589b7d94a3d91d145720e2fed0eb3a05" kindref="member">RESET</ref>;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bitstatus;</highlight></codeline>
<codeline lineno="201"><highlight class="normal">}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="209" refid="group___e_x_t_i___private___functions_1ga8e07aaaa286dea4803605d5968850a92" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___e_x_t_i___private___functions_1ga8e07aaaa286dea4803605d5968850a92" kindref="member">EXTI_ClearFlag</ref>(uint32_t<sp/>EXTI_Line)</highlight></codeline>
<codeline lineno="210"><highlight class="normal">{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___e_x_t_i___lines_1gaade8b8717a1d78f83d3cf180e2817557" kindref="member">IS_EXTI_LINE</ref>(EXTI_Line));</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><ref refid="group___peripheral__declaration_1ga9189e770cd9b63dadd36683eb9843cac" kindref="member">EXTI</ref>-&gt;PR<sp/>=<sp/>EXTI_Line;</highlight></codeline>
<codeline lineno="215"><highlight class="normal">}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="224" refid="group___e_x_t_i___private___functions_1gaf7b51519062ae42fd27ee689cab364aa" refkind="member"><highlight class="normal"><ref refid="group___exported__types_1gaacbd7ed539db0aacd973a0f6eca34074" kindref="member">ITStatus</ref><sp/><ref refid="group___e_x_t_i___private___functions_1gaf7b51519062ae42fd27ee689cab364aa" kindref="member">EXTI_GetITStatus</ref>(uint32_t<sp/>EXTI_Line)</highlight></codeline>
<codeline lineno="225"><highlight class="normal">{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><ref refid="group___exported__types_1gaacbd7ed539db0aacd973a0f6eca34074" kindref="member">ITStatus</ref><sp/>bitstatus<sp/>=<sp/><ref refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffa589b7d94a3d91d145720e2fed0eb3a05" kindref="member">RESET</ref>;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/>uint32_t<sp/>enablestatus<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___e_x_t_i___lines_1ga77c85c7b8426c6cfe91b4f5a2c58ecda" kindref="member">IS_GET_EXTI_LINE</ref>(EXTI_Line));</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/>enablestatus<sp/>=<sp/><sp/><ref refid="group___peripheral__declaration_1ga9189e770cd9b63dadd36683eb9843cac" kindref="member">EXTI</ref>-&gt;IMR<sp/>&amp;<sp/>EXTI_Line;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((<ref refid="group___peripheral__declaration_1ga9189e770cd9b63dadd36683eb9843cac" kindref="member">EXTI</ref>-&gt;PR<sp/>&amp;<sp/>EXTI_Line)<sp/>!=<sp/>(uint32_t)<ref refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffa589b7d94a3d91d145720e2fed0eb3a05" kindref="member">RESET</ref>)<sp/>&amp;&amp;<sp/>(enablestatus<sp/>!=<sp/>(uint32_t)RESET))</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>bitstatus<sp/>=<sp/><ref refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffab44c8101cc294c074709ec1b14211792" kindref="member">SET</ref>;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>bitstatus<sp/>=<sp/><ref refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffa589b7d94a3d91d145720e2fed0eb3a05" kindref="member">RESET</ref>;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bitstatus;</highlight></codeline>
<codeline lineno="241"><highlight class="normal">}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="249" refid="group___e_x_t_i___private___functions_1ga3652a7e682728b310c124e7e974d1468" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___e_x_t_i___private___functions_1ga3652a7e682728b310c124e7e974d1468" kindref="member">EXTI_ClearITPendingBit</ref>(uint32_t<sp/>EXTI_Line)</highlight></codeline>
<codeline lineno="250"><highlight class="normal">{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___e_x_t_i___lines_1gaade8b8717a1d78f83d3cf180e2817557" kindref="member">IS_EXTI_LINE</ref>(EXTI_Line));</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><ref refid="group___peripheral__declaration_1ga9189e770cd9b63dadd36683eb9843cac" kindref="member">EXTI</ref>-&gt;PR<sp/>=<sp/>EXTI_Line;</highlight></codeline>
<codeline lineno="255"><highlight class="normal">}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="comment">/*******************<sp/>(C)<sp/>COPYRIGHT<sp/>2011<sp/>STMicroelectronics<sp/>*****END<sp/>OF<sp/>FILE****/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_exti.c"/>
  </compounddef>
</doxygen>
