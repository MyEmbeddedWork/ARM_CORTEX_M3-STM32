<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="stm32f10x__fsmc_8h" kind="file" language="C++">
    <compoundname>stm32f10x_fsmc.h</compoundname>
    <includes refid="stm32f10x_8h" local="yes">stm32f10x.h</includes>
    <includedby refid="stm32f10x__conf_8h" local="yes">C:/Users/anilj/Desktop/cmsis/sorc/include/stm32f10x_conf.h</includedby>
    <includedby refid="stm32f10x__fsmc_8c" local="yes">C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_fsmc.c</includedby>
    <incdepgraph>
      <node id="617">
        <label>system_stm32f10x.h</label>
        <link refid="system__stm32f10x_8h"/>
      </node>
      <node id="614">
        <label>stdint.h</label>
      </node>
      <node id="611">
        <label>C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h</label>
        <link refid="stm32f10x__fsmc_8h"/>
        <childnode refid="612" relation="include">
        </childnode>
      </node>
      <node id="613">
        <label>core_cm3.h</label>
        <link refid="core__cm3_8h"/>
        <childnode refid="614" relation="include">
        </childnode>
        <childnode refid="615" relation="include">
        </childnode>
        <childnode refid="616" relation="include">
        </childnode>
      </node>
      <node id="616">
        <label>core_cmFunc.h</label>
        <link refid="core__cm_func_8h"/>
      </node>
      <node id="615">
        <label>core_cmInstr.h</label>
        <link refid="core__cm_instr_8h"/>
      </node>
      <node id="612">
        <label>stm32f10x.h</label>
        <link refid="stm32f10x_8h"/>
        <childnode refid="613" relation="include">
        </childnode>
        <childnode refid="617" relation="include">
        </childnode>
        <childnode refid="614" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="618">
        <label>C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h</label>
        <link refid="stm32f10x__fsmc_8h"/>
        <childnode refid="619" relation="include">
        </childnode>
        <childnode refid="620" relation="include">
        </childnode>
      </node>
      <node id="619">
        <label>C:/Users/anilj/Desktop/cmsis/sorc/include/stm32f10x_conf.h</label>
        <link refid="stm32f10x__conf_8h"/>
      </node>
      <node id="620">
        <label>C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_fsmc.c</label>
        <link refid="stm32f10x__fsmc_8c"/>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_f_s_m_c___n_o_r_s_r_a_m_timing_init_type_def" prot="public">FSMC_NORSRAMTimingInitTypeDef</innerclass>
    <innerclass refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def" prot="public">FSMC_NORSRAMInitTypeDef</innerclass>
    <innerclass refid="struct_f_s_m_c___n_a_n_d___p_c_c_a_r_d_timing_init_type_def" prot="public">FSMC_NAND_PCCARDTimingInitTypeDef</innerclass>
    <innerclass refid="struct_f_s_m_c___n_a_n_d_init_type_def" prot="public">FSMC_NANDInitTypeDef</innerclass>
    <innerclass refid="struct_f_s_m_c___p_c_c_a_r_d_init_type_def" prot="public">FSMC_PCCARDInitTypeDef</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="group___f_s_m_c___n_o_r_s_r_a_m___bank_1ga514a05828041fa1a13d464c9e4a0a4a9" prot="public" static="no">
        <name>FSMC_Bank1_NORSRAM1</name>
        <initializer>((uint32_t)0x00000000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" line="249" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" bodystart="249" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_s_m_c___n_o_r_s_r_a_m___bank_1gaef52862c652370b9a658478d275dd956" prot="public" static="no">
        <name>FSMC_Bank1_NORSRAM2</name>
        <initializer>((uint32_t)0x00000002)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" line="250" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" bodystart="250" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_s_m_c___n_o_r_s_r_a_m___bank_1ga151b02506a318ac77382b52f3b5e16f4" prot="public" static="no">
        <name>FSMC_Bank1_NORSRAM3</name>
        <initializer>((uint32_t)0x00000004)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" line="251" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" bodystart="251" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_s_m_c___n_o_r_s_r_a_m___bank_1ga1083572834aa084d21e6698c280f8f74" prot="public" static="no">
        <name>FSMC_Bank1_NORSRAM4</name>
        <initializer>((uint32_t)0x00000006)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" line="252" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" bodystart="252" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_s_m_c___n_a_n_d___bank_1ga294e7134aa329a09e56b61eec9882a27" prot="public" static="no">
        <name>FSMC_Bank2_NAND</name>
        <initializer>((uint32_t)0x00000010)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" line="260" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" bodystart="260" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_s_m_c___n_a_n_d___bank_1gaf72def0732c026b0245d721ee371c85b" prot="public" static="no">
        <name>FSMC_Bank3_NAND</name>
        <initializer>((uint32_t)0x00000100)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" line="261" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" bodystart="261" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_s_m_c___p_c_c_a_r_d___bank_1gad08ce7c7afc462f3d9ef085b05d42387" prot="public" static="no">
        <name>FSMC_Bank4_PCCARD</name>
        <initializer>((uint32_t)0x00001000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" line="269" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" bodystart="269" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_s_m_c___exported___constants_1ga3e3bed3dd83d38e63f11ac4cbcb87304" prot="public" static="no">
        <name>IS_FSMC_NORSRAM_BANK</name>
        <param><defname>BANK</defname></param>
        <initializer>(((BANK) == <ref refid="group___f_s_m_c___n_o_r_s_r_a_m___bank_1ga514a05828041fa1a13d464c9e4a0a4a9" kindref="member">FSMC_Bank1_NORSRAM1</ref>) || \
                                    ((BANK) == <ref refid="group___f_s_m_c___n_o_r_s_r_a_m___bank_1gaef52862c652370b9a658478d275dd956" kindref="member">FSMC_Bank1_NORSRAM2</ref>) || \
                                    ((BANK) == <ref refid="group___f_s_m_c___n_o_r_s_r_a_m___bank_1ga151b02506a318ac77382b52f3b5e16f4" kindref="member">FSMC_Bank1_NORSRAM3</ref>) || \
                                    ((BANK) == <ref refid="group___f_s_m_c___n_o_r_s_r_a_m___bank_1ga1083572834aa084d21e6698c280f8f74" kindref="member">FSMC_Bank1_NORSRAM4</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" line="274" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" bodystart="274" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_s_m_c___exported___constants_1ga725bada099197f15f49dc0c5be00e19b" prot="public" static="no">
        <name>IS_FSMC_NAND_BANK</name>
        <param><defname>BANK</defname></param>
        <initializer>(((BANK) == <ref refid="group___f_s_m_c___n_a_n_d___bank_1ga294e7134aa329a09e56b61eec9882a27" kindref="member">FSMC_Bank2_NAND</ref>) || \
                                 ((BANK) == <ref refid="group___f_s_m_c___n_a_n_d___bank_1gaf72def0732c026b0245d721ee371c85b" kindref="member">FSMC_Bank3_NAND</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" line="279" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" bodystart="279" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_s_m_c___exported___constants_1ga884e28a365a738ad8a3199ee279a1f77" prot="public" static="no">
        <name>IS_FSMC_GETFLAG_BANK</name>
        <param><defname>BANK</defname></param>
        <initializer>(((BANK) == <ref refid="group___f_s_m_c___n_a_n_d___bank_1ga294e7134aa329a09e56b61eec9882a27" kindref="member">FSMC_Bank2_NAND</ref>) || \
                                    ((BANK) == <ref refid="group___f_s_m_c___n_a_n_d___bank_1gaf72def0732c026b0245d721ee371c85b" kindref="member">FSMC_Bank3_NAND</ref>) || \
                                    ((BANK) == <ref refid="group___f_s_m_c___p_c_c_a_r_d___bank_1gad08ce7c7afc462f3d9ef085b05d42387" kindref="member">FSMC_Bank4_PCCARD</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" line="282" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" bodystart="282" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_s_m_c___exported___constants_1gaca216ea0c184b78f23df15296a10bac0" prot="public" static="no">
        <name>IS_FSMC_IT_BANK</name>
        <param><defname>BANK</defname></param>
        <initializer>(((BANK) == <ref refid="group___f_s_m_c___n_a_n_d___bank_1ga294e7134aa329a09e56b61eec9882a27" kindref="member">FSMC_Bank2_NAND</ref>) || \
                               ((BANK) == <ref refid="group___f_s_m_c___n_a_n_d___bank_1gaf72def0732c026b0245d721ee371c85b" kindref="member">FSMC_Bank3_NAND</ref>) || \
                               ((BANK) == <ref refid="group___f_s_m_c___p_c_c_a_r_d___bank_1gad08ce7c7afc462f3d9ef085b05d42387" kindref="member">FSMC_Bank4_PCCARD</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" line="286" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" bodystart="286" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_s_m_c___data___address___bus___multiplexing_1ga62d92adbcbcc1d6ec9a04de1b343744a" prot="public" static="no">
        <name>FSMC_DataAddressMux_Disable</name>
        <initializer>((uint32_t)0x00000000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" line="298" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" bodystart="298" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_s_m_c___data___address___bus___multiplexing_1ga1dd4d12e63aaf29dbb8ae4b613f2aa15" prot="public" static="no">
        <name>FSMC_DataAddressMux_Enable</name>
        <initializer>((uint32_t)0x00000002)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" line="299" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" bodystart="299" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_s_m_c___data___address___bus___multiplexing_1ga546fcab8c1b751b4a959ba2ce5b35d79" prot="public" static="no">
        <name>IS_FSMC_MUX</name>
        <param><defname>MUX</defname></param>
        <initializer>(((MUX) == <ref refid="group___f_s_m_c___data___address___bus___multiplexing_1ga62d92adbcbcc1d6ec9a04de1b343744a" kindref="member">FSMC_DataAddressMux_Disable</ref>) || \
                          ((MUX) == <ref refid="group___f_s_m_c___data___address___bus___multiplexing_1ga1dd4d12e63aaf29dbb8ae4b613f2aa15" kindref="member">FSMC_DataAddressMux_Enable</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" line="300" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" bodystart="300" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_s_m_c___memory___type_1ga8a24e8da42e67dcf6fb2f43659aa49cf" prot="public" static="no">
        <name>FSMC_MemoryType_SRAM</name>
        <initializer>((uint32_t)0x00000000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" line="311" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" bodystart="311" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_s_m_c___memory___type_1gae3e680998b2fee8d56222634f5268a75" prot="public" static="no">
        <name>FSMC_MemoryType_PSRAM</name>
        <initializer>((uint32_t)0x00000004)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" line="312" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" bodystart="312" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_s_m_c___memory___type_1ga8b9390abe7c281947c550bf4365649e5" prot="public" static="no">
        <name>FSMC_MemoryType_NOR</name>
        <initializer>((uint32_t)0x00000008)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" line="313" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" bodystart="313" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_s_m_c___memory___type_1ga255cd500e141f4ac024cf5f896921233" prot="public" static="no">
        <name>IS_FSMC_MEMORY</name>
        <param><defname>MEMORY</defname></param>
        <initializer>(((MEMORY) == <ref refid="group___f_s_m_c___memory___type_1ga8a24e8da42e67dcf6fb2f43659aa49cf" kindref="member">FSMC_MemoryType_SRAM</ref>) || \
                                ((MEMORY) == <ref refid="group___f_s_m_c___memory___type_1gae3e680998b2fee8d56222634f5268a75" kindref="member">FSMC_MemoryType_PSRAM</ref>)|| \
                                ((MEMORY) == <ref refid="group___f_s_m_c___memory___type_1ga8b9390abe7c281947c550bf4365649e5" kindref="member">FSMC_MemoryType_NOR</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" line="314" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" bodystart="314" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_s_m_c___data___width_1ga5753e089830f19af70a724766e3c329f" prot="public" static="no">
        <name>FSMC_MemoryDataWidth_8b</name>
        <initializer>((uint32_t)0x00000000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" line="326" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" bodystart="326" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_s_m_c___data___width_1ga65d85c3072e6790ae760ca2248e46df6" prot="public" static="no">
        <name>FSMC_MemoryDataWidth_16b</name>
        <initializer>((uint32_t)0x00000010)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" line="327" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" bodystart="327" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_s_m_c___data___width_1ga003d52b62f5950fb041f73f15ce20171" prot="public" static="no">
        <name>IS_FSMC_MEMORY_WIDTH</name>
        <param><defname>WIDTH</defname></param>
        <initializer>(((WIDTH) == <ref refid="group___f_s_m_c___data___width_1ga5753e089830f19af70a724766e3c329f" kindref="member">FSMC_MemoryDataWidth_8b</ref>) || \
                                     ((WIDTH) == <ref refid="group___f_s_m_c___data___width_1ga65d85c3072e6790ae760ca2248e46df6" kindref="member">FSMC_MemoryDataWidth_16b</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" line="328" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" bodystart="328" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_s_m_c___burst___access___mode_1ga26fc544945415e350563a9b00684850c" prot="public" static="no">
        <name>FSMC_BurstAccessMode_Disable</name>
        <initializer>((uint32_t)0x00000000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" line="339" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" bodystart="339" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_s_m_c___burst___access___mode_1ga841831dfacfdd8889dafe26cc594bf02" prot="public" static="no">
        <name>FSMC_BurstAccessMode_Enable</name>
        <initializer>((uint32_t)0x00000100)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" line="340" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" bodystart="340" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_s_m_c___burst___access___mode_1gaf8736659c5064c3c03753d7874401e71" prot="public" static="no">
        <name>IS_FSMC_BURSTMODE</name>
        <param><defname>STATE</defname></param>
        <initializer>(((STATE) == <ref refid="group___f_s_m_c___burst___access___mode_1ga26fc544945415e350563a9b00684850c" kindref="member">FSMC_BurstAccessMode_Disable</ref>) || \
                                  ((STATE) == <ref refid="group___f_s_m_c___burst___access___mode_1ga841831dfacfdd8889dafe26cc594bf02" kindref="member">FSMC_BurstAccessMode_Enable</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" line="341" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" bodystart="341" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_s_m_c___asynchronous_wait_1ga36c0dad6fe6c0e01632d3312c8f4c4cb" prot="public" static="no">
        <name>FSMC_AsynchronousWait_Disable</name>
        <initializer>((uint32_t)0x00000000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" line="350" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" bodystart="350" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_s_m_c___asynchronous_wait_1gaff524bfa697106ede7d4b557a5ad7d8c" prot="public" static="no">
        <name>FSMC_AsynchronousWait_Enable</name>
        <initializer>((uint32_t)0x00008000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" line="351" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" bodystart="351" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_s_m_c___asynchronous_wait_1ga52d579de825316ee058baf11bfb749d6" prot="public" static="no">
        <name>IS_FSMC_ASYNWAIT</name>
        <param><defname>STATE</defname></param>
        <initializer>(((STATE) == <ref refid="group___f_s_m_c___asynchronous_wait_1ga36c0dad6fe6c0e01632d3312c8f4c4cb" kindref="member">FSMC_AsynchronousWait_Disable</ref>) || \
                                 ((STATE) == <ref refid="group___f_s_m_c___asynchronous_wait_1gaff524bfa697106ede7d4b557a5ad7d8c" kindref="member">FSMC_AsynchronousWait_Enable</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" line="352" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" bodystart="352" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_s_m_c___wait___signal___polarity_1ga7dc72fdfc6225e5daa9b8efee8dff49f" prot="public" static="no">
        <name>FSMC_WaitSignalPolarity_Low</name>
        <initializer>((uint32_t)0x00000000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" line="363" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" bodystart="363" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_s_m_c___wait___signal___polarity_1ga3418f29249a261edb1359d1bcdc43661" prot="public" static="no">
        <name>FSMC_WaitSignalPolarity_High</name>
        <initializer>((uint32_t)0x00000200)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" line="364" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" bodystart="364" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_s_m_c___wait___signal___polarity_1gabc5321807d5184fe5cdb7848e1be7bc6" prot="public" static="no">
        <name>IS_FSMC_WAIT_POLARITY</name>
        <param><defname>POLARITY</defname></param>
        <initializer>(((POLARITY) == <ref refid="group___f_s_m_c___wait___signal___polarity_1ga7dc72fdfc6225e5daa9b8efee8dff49f" kindref="member">FSMC_WaitSignalPolarity_Low</ref>) || \
                                         ((POLARITY) == <ref refid="group___f_s_m_c___wait___signal___polarity_1ga3418f29249a261edb1359d1bcdc43661" kindref="member">FSMC_WaitSignalPolarity_High</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" line="365" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" bodystart="365" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_s_m_c___wrap___mode_1ga6041f0d3055ea3811a5a19560092f266" prot="public" static="no">
        <name>FSMC_WrapMode_Disable</name>
        <initializer>((uint32_t)0x00000000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" line="376" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" bodystart="376" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_s_m_c___wrap___mode_1gad07eb0ae0362b2f94071d0dab6473fda" prot="public" static="no">
        <name>FSMC_WrapMode_Enable</name>
        <initializer>((uint32_t)0x00000400)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" line="377" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" bodystart="377" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_s_m_c___wrap___mode_1ga0751d74b7fb1e17f6cedea091e8ebfc8" prot="public" static="no">
        <name>IS_FSMC_WRAP_MODE</name>
        <param><defname>MODE</defname></param>
        <initializer>(((MODE) == <ref refid="group___f_s_m_c___wrap___mode_1ga6041f0d3055ea3811a5a19560092f266" kindref="member">FSMC_WrapMode_Disable</ref>) || \
                                 ((MODE) == <ref refid="group___f_s_m_c___wrap___mode_1gad07eb0ae0362b2f94071d0dab6473fda" kindref="member">FSMC_WrapMode_Enable</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" line="378" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" bodystart="378" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_s_m_c___wait___timing_1ga62c6855a7cc65b20024085f09cdc65e8" prot="public" static="no">
        <name>FSMC_WaitSignalActive_BeforeWaitState</name>
        <initializer>((uint32_t)0x00000000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" line="389" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" bodystart="389" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_s_m_c___wait___timing_1gae905fc59e5d99091d132d7c221c8b6d4" prot="public" static="no">
        <name>FSMC_WaitSignalActive_DuringWaitState</name>
        <initializer>((uint32_t)0x00000800)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" line="390" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" bodystart="390" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_s_m_c___wait___timing_1ga3edb40c756afa8bb78550b7e22ded093" prot="public" static="no">
        <name>IS_FSMC_WAIT_SIGNAL_ACTIVE</name>
        <param><defname>ACTIVE</defname></param>
        <initializer>(((ACTIVE) == <ref refid="group___f_s_m_c___wait___timing_1ga62c6855a7cc65b20024085f09cdc65e8" kindref="member">FSMC_WaitSignalActive_BeforeWaitState</ref>) || \
                                            ((ACTIVE) == <ref refid="group___f_s_m_c___wait___timing_1gae905fc59e5d99091d132d7c221c8b6d4" kindref="member">FSMC_WaitSignalActive_DuringWaitState</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" line="391" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" bodystart="391" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_s_m_c___write___operation_1ga74176320484248f06abae854170f9d9f" prot="public" static="no">
        <name>FSMC_WriteOperation_Disable</name>
        <initializer>((uint32_t)0x00000000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" line="402" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" bodystart="402" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_s_m_c___write___operation_1ga2478beb6dd8861b34a16b8a57a795e56" prot="public" static="no">
        <name>FSMC_WriteOperation_Enable</name>
        <initializer>((uint32_t)0x00001000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" line="403" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" bodystart="403" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_s_m_c___write___operation_1ga87fc20d11761caa66c3e7d77a3a7d3e3" prot="public" static="no">
        <name>IS_FSMC_WRITE_OPERATION</name>
        <param><defname>OPERATION</defname></param>
        <initializer>(((OPERATION) == <ref refid="group___f_s_m_c___write___operation_1ga74176320484248f06abae854170f9d9f" kindref="member">FSMC_WriteOperation_Disable</ref>) || \
                                            ((OPERATION) == <ref refid="group___f_s_m_c___write___operation_1ga2478beb6dd8861b34a16b8a57a795e56" kindref="member">FSMC_WriteOperation_Enable</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" line="404" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" bodystart="404" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_s_m_c___wait___signal_1ga6ea66c8ddee073281c421533bdff7e19" prot="public" static="no">
        <name>FSMC_WaitSignal_Disable</name>
        <initializer>((uint32_t)0x00000000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" line="415" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" bodystart="415" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_s_m_c___wait___signal_1gaf809e339f1cdc9d0a815fd98712e9ee3" prot="public" static="no">
        <name>FSMC_WaitSignal_Enable</name>
        <initializer>((uint32_t)0x00002000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" line="416" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" bodystart="416" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_s_m_c___wait___signal_1gae617db4f15c82850d4f5c927f9a7db3e" prot="public" static="no">
        <name>IS_FSMC_WAITE_SIGNAL</name>
        <param><defname>SIGNAL</defname></param>
        <initializer>(((SIGNAL) == <ref refid="group___f_s_m_c___wait___signal_1ga6ea66c8ddee073281c421533bdff7e19" kindref="member">FSMC_WaitSignal_Disable</ref>) || \
                                      ((SIGNAL) == <ref refid="group___f_s_m_c___wait___signal_1gaf809e339f1cdc9d0a815fd98712e9ee3" kindref="member">FSMC_WaitSignal_Enable</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" line="417" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" bodystart="417" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_s_m_c___extended___mode_1ga5a1f1acdc44328158f59012748980dd3" prot="public" static="no">
        <name>FSMC_ExtendedMode_Disable</name>
        <initializer>((uint32_t)0x00000000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" line="427" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" bodystart="427" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_s_m_c___extended___mode_1gaef9ff4c81a52fdb0471d2c4422271d2a" prot="public" static="no">
        <name>FSMC_ExtendedMode_Enable</name>
        <initializer>((uint32_t)0x00004000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" line="428" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" bodystart="428" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_s_m_c___extended___mode_1ga79849ea07bf2a8f09989a6babd9e66e2" prot="public" static="no">
        <name>IS_FSMC_EXTENDED_MODE</name>
        <param><defname>MODE</defname></param>
        <initializer>(((MODE) == <ref refid="group___f_s_m_c___extended___mode_1ga5a1f1acdc44328158f59012748980dd3" kindref="member">FSMC_ExtendedMode_Disable</ref>) || \
                                     ((MODE) == <ref refid="group___f_s_m_c___extended___mode_1gaef9ff4c81a52fdb0471d2c4422271d2a" kindref="member">FSMC_ExtendedMode_Enable</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" line="430" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" bodystart="430" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_s_m_c___write___burst_1ga65a49ecd05b3a128e8908c6a625adae7" prot="public" static="no">
        <name>FSMC_WriteBurst_Disable</name>
        <initializer>((uint32_t)0x00000000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" line="441" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" bodystart="441" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_s_m_c___write___burst_1ga1b2b66a0eb42778c2cc9a05003cf7655" prot="public" static="no">
        <name>FSMC_WriteBurst_Enable</name>
        <initializer>((uint32_t)0x00080000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" line="442" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" bodystart="442" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_s_m_c___write___burst_1gab7b03a33fab765827832abbf07d01a10" prot="public" static="no">
        <name>IS_FSMC_WRITE_BURST</name>
        <param><defname>BURST</defname></param>
        <initializer>(((BURST) == <ref refid="group___f_s_m_c___write___burst_1ga65a49ecd05b3a128e8908c6a625adae7" kindref="member">FSMC_WriteBurst_Disable</ref>) || \
                                    ((BURST) == <ref refid="group___f_s_m_c___write___burst_1ga1b2b66a0eb42778c2cc9a05003cf7655" kindref="member">FSMC_WriteBurst_Enable</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" line="443" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" bodystart="443" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_s_m_c___address___setup___time_1ga8b77d090338011abc1be7f4a420e2d8f" prot="public" static="no">
        <name>IS_FSMC_ADDRESS_SETUP_TIME</name>
        <param><defname>TIME</defname></param>
        <initializer>((TIME) &lt;= 0xF)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" line="453" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" bodystart="453" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_s_m_c___address___hold___time_1gae7d031a5b95ad00acf67e9bc95064998" prot="public" static="no">
        <name>IS_FSMC_ADDRESS_HOLD_TIME</name>
        <param><defname>TIME</defname></param>
        <initializer>((TIME) &lt;= 0xF)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" line="463" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" bodystart="463" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_s_m_c___data___setup___time_1ga3d923de775489e844913b29e77e8cca7" prot="public" static="no">
        <name>IS_FSMC_DATASETUP_TIME</name>
        <param><defname>TIME</defname></param>
        <initializer>(((TIME) &gt; 0) &amp;&amp; ((TIME) &lt;= 0xFF))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" line="473" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" bodystart="473" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_s_m_c___bus___turn__around___duration_1ga9ec626f30679a18af91bf48c52d9260d" prot="public" static="no">
        <name>IS_FSMC_TURNAROUND_TIME</name>
        <param><defname>TIME</defname></param>
        <initializer>((TIME) &lt;= 0xF)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" line="483" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" bodystart="483" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_s_m_c___c_l_k___division_1ga9e5321b02ea049fd076ba705acd06b5f" prot="public" static="no">
        <name>IS_FSMC_CLK_DIV</name>
        <param><defname>DIV</defname></param>
        <initializer>((DIV) &lt;= 0xF)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" line="493" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" bodystart="493" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_s_m_c___data___latency_1ga1ab8659a9631d8bb4f57d8be8580155c" prot="public" static="no">
        <name>IS_FSMC_DATA_LATENCY</name>
        <param><defname>LATENCY</defname></param>
        <initializer>((LATENCY) &lt;= 0xF)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" line="503" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" bodystart="503" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_s_m_c___access___mode_1gae0f299b51c12257311694c4a8f5c00c3" prot="public" static="no">
        <name>FSMC_AccessMode_A</name>
        <initializer>((uint32_t)0x00000000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" line="513" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" bodystart="513" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_s_m_c___access___mode_1ga2d6ce7481eb5e0e86fda727c646e4109" prot="public" static="no">
        <name>FSMC_AccessMode_B</name>
        <initializer>((uint32_t)0x10000000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" line="514" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" bodystart="514" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_s_m_c___access___mode_1ga83ffa035cf2e95c957b67a2e8b879e86" prot="public" static="no">
        <name>FSMC_AccessMode_C</name>
        <initializer>((uint32_t)0x20000000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" line="515" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" bodystart="515" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_s_m_c___access___mode_1ga7c632e7ebeb0c0ab4919bb60b8714c7b" prot="public" static="no">
        <name>FSMC_AccessMode_D</name>
        <initializer>((uint32_t)0x30000000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" line="516" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" bodystart="516" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_s_m_c___access___mode_1ga1844335f297ea30e9d7fae09ce562092" prot="public" static="no">
        <name>IS_FSMC_ACCESS_MODE</name>
        <param><defname>MODE</defname></param>
        <initializer>(((MODE) == <ref refid="group___f_s_m_c___access___mode_1gae0f299b51c12257311694c4a8f5c00c3" kindref="member">FSMC_AccessMode_A</ref>) || \
                                   ((MODE) == <ref refid="group___f_s_m_c___access___mode_1ga2d6ce7481eb5e0e86fda727c646e4109" kindref="member">FSMC_AccessMode_B</ref>) || \
                                   ((MODE) == <ref refid="group___f_s_m_c___access___mode_1ga83ffa035cf2e95c957b67a2e8b879e86" kindref="member">FSMC_AccessMode_C</ref>) || \
                                   ((MODE) == <ref refid="group___f_s_m_c___access___mode_1ga7c632e7ebeb0c0ab4919bb60b8714c7b" kindref="member">FSMC_AccessMode_D</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" line="517" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" bodystart="517" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_s_m_c___wait__feature_1ga8a31f05576e66546fbbcdb06ff67da7d" prot="public" static="no">
        <name>FSMC_Waitfeature_Disable</name>
        <initializer>((uint32_t)0x00000000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" line="538" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" bodystart="538" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_s_m_c___wait__feature_1ga3113366130dfbf6d116f1afb94af1726" prot="public" static="no">
        <name>FSMC_Waitfeature_Enable</name>
        <initializer>((uint32_t)0x00000002)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" line="539" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" bodystart="539" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_s_m_c___wait__feature_1ga07c2585b517df2c7afbe3ba16c22f236" prot="public" static="no">
        <name>IS_FSMC_WAIT_FEATURE</name>
        <param><defname>FEATURE</defname></param>
        <initializer>(((FEATURE) == <ref refid="group___f_s_m_c___wait__feature_1ga8a31f05576e66546fbbcdb06ff67da7d" kindref="member">FSMC_Waitfeature_Disable</ref>) || \
                                       ((FEATURE) == <ref refid="group___f_s_m_c___wait__feature_1ga3113366130dfbf6d116f1afb94af1726" kindref="member">FSMC_Waitfeature_Enable</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" line="540" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" bodystart="540" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_s_m_c___e_c_c_1ga9a3264c0718f5023fd106abea7ef806d" prot="public" static="no">
        <name>FSMC_ECC_Disable</name>
        <initializer>((uint32_t)0x00000000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" line="552" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" bodystart="552" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_s_m_c___e_c_c_1ga9d940243830695412d4c98228bb5b763" prot="public" static="no">
        <name>FSMC_ECC_Enable</name>
        <initializer>((uint32_t)0x00000040)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" line="553" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" bodystart="553" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_s_m_c___e_c_c_1gaf1a7cb45edd8707bf4ea8aac96799c77" prot="public" static="no">
        <name>IS_FSMC_ECC_STATE</name>
        <param><defname>STATE</defname></param>
        <initializer>(((STATE) == <ref refid="group___f_s_m_c___e_c_c_1ga9a3264c0718f5023fd106abea7ef806d" kindref="member">FSMC_ECC_Disable</ref>) || \
                                  ((STATE) == <ref refid="group___f_s_m_c___e_c_c_1ga9d940243830695412d4c98228bb5b763" kindref="member">FSMC_ECC_Enable</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" line="554" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" bodystart="554" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_s_m_c___e_c_c___page___size_1gaaa1661267b44e6728fa64aca79de54b3" prot="public" static="no">
        <name>FSMC_ECCPageSize_256Bytes</name>
        <initializer>((uint32_t)0x00000000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" line="565" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" bodystart="565" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_s_m_c___e_c_c___page___size_1gacb4da17c28dde89e38ff4ed40497f6b5" prot="public" static="no">
        <name>FSMC_ECCPageSize_512Bytes</name>
        <initializer>((uint32_t)0x00020000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" line="566" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" bodystart="566" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_s_m_c___e_c_c___page___size_1ga8137931c96b63ec7e6f80a8c7391433f" prot="public" static="no">
        <name>FSMC_ECCPageSize_1024Bytes</name>
        <initializer>((uint32_t)0x00040000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" line="567" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" bodystart="567" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_s_m_c___e_c_c___page___size_1gab8f3ae95becd59e71a976b97ded904b8" prot="public" static="no">
        <name>FSMC_ECCPageSize_2048Bytes</name>
        <initializer>((uint32_t)0x00060000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" line="568" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" bodystart="568" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_s_m_c___e_c_c___page___size_1gaec2e9e434685a1756bd171699248f65a" prot="public" static="no">
        <name>FSMC_ECCPageSize_4096Bytes</name>
        <initializer>((uint32_t)0x00080000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" line="569" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" bodystart="569" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_s_m_c___e_c_c___page___size_1gab6877a99ddf02e7aa95cf04896ce731d" prot="public" static="no">
        <name>FSMC_ECCPageSize_8192Bytes</name>
        <initializer>((uint32_t)0x000A0000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" line="570" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" bodystart="570" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_s_m_c___e_c_c___page___size_1ga58fefa0d55875775a88f54ad7498178f" prot="public" static="no">
        <name>IS_FSMC_ECCPAGE_SIZE</name>
        <param><defname>SIZE</defname></param>
        <initializer>(((SIZE) == <ref refid="group___f_s_m_c___e_c_c___page___size_1gaaa1661267b44e6728fa64aca79de54b3" kindref="member">FSMC_ECCPageSize_256Bytes</ref>) || \
                                    ((SIZE) == <ref refid="group___f_s_m_c___e_c_c___page___size_1gacb4da17c28dde89e38ff4ed40497f6b5" kindref="member">FSMC_ECCPageSize_512Bytes</ref>) || \
                                    ((SIZE) == <ref refid="group___f_s_m_c___e_c_c___page___size_1ga8137931c96b63ec7e6f80a8c7391433f" kindref="member">FSMC_ECCPageSize_1024Bytes</ref>) || \
                                    ((SIZE) == <ref refid="group___f_s_m_c___e_c_c___page___size_1gab8f3ae95becd59e71a976b97ded904b8" kindref="member">FSMC_ECCPageSize_2048Bytes</ref>) || \
                                    ((SIZE) == <ref refid="group___f_s_m_c___e_c_c___page___size_1gaec2e9e434685a1756bd171699248f65a" kindref="member">FSMC_ECCPageSize_4096Bytes</ref>) || \
                                    ((SIZE) == <ref refid="group___f_s_m_c___e_c_c___page___size_1gab6877a99ddf02e7aa95cf04896ce731d" kindref="member">FSMC_ECCPageSize_8192Bytes</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" line="571" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" bodystart="571" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_s_m_c___t_c_l_r___setup___time_1ga324848d0d9c0d2aad7ab70873b4a15e9" prot="public" static="no">
        <name>IS_FSMC_TCLR_TIME</name>
        <param><defname>TIME</defname></param>
        <initializer>((TIME) &lt;= 0xFF)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" line="586" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" bodystart="586" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_s_m_c___t_a_r___setup___time_1ga5b9e0f64c44ab68afca90cd28dedd8e3" prot="public" static="no">
        <name>IS_FSMC_TAR_TIME</name>
        <param><defname>TIME</defname></param>
        <initializer>((TIME) &lt;= 0xFF)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" line="596" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" bodystart="596" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_s_m_c___setup___time_1ga4f2fbb8f6ec492cc241a49c468e0d98d" prot="public" static="no">
        <name>IS_FSMC_SETUP_TIME</name>
        <param><defname>TIME</defname></param>
        <initializer>((TIME) &lt;= 0xFF)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" line="606" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" bodystart="606" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_s_m_c___wait___setup___time_1ga5c0efc48afb916ceff32868940f81613" prot="public" static="no">
        <name>IS_FSMC_WAIT_TIME</name>
        <param><defname>TIME</defname></param>
        <initializer>((TIME) &lt;= 0xFF)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" line="616" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" bodystart="616" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_s_m_c___hold___setup___time_1gab2abc8eb967495f2a2bafec8162d6385" prot="public" static="no">
        <name>IS_FSMC_HOLD_TIME</name>
        <param><defname>TIME</defname></param>
        <initializer>((TIME) &lt;= 0xFF)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" line="626" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" bodystart="626" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_s_m_c___hi_z___setup___time_1gaeb6295e8cc1a524f060c5e780f868033" prot="public" static="no">
        <name>IS_FSMC_HIZ_TIME</name>
        <param><defname>TIME</defname></param>
        <initializer>((TIME) &lt;= 0xFF)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" line="636" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" bodystart="636" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_s_m_c___interrupt__sources_1gac483854bd6f90d8c7899a597a0c0ab1a" prot="public" static="no">
        <name>FSMC_IT_RisingEdge</name>
        <initializer>((uint32_t)0x00000008)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" line="646" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" bodystart="646" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_s_m_c___interrupt__sources_1ga59b5839854074008fb36fa86ec50a0c7" prot="public" static="no">
        <name>FSMC_IT_Level</name>
        <initializer>((uint32_t)0x00000010)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" line="647" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" bodystart="647" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_s_m_c___interrupt__sources_1ga8e4b9589c9981c900b5f2e84581a9693" prot="public" static="no">
        <name>FSMC_IT_FallingEdge</name>
        <initializer>((uint32_t)0x00000020)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" line="648" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" bodystart="648" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_s_m_c___interrupt__sources_1ga40a38f097a75f27a700e626905fa9a38" prot="public" static="no">
        <name>IS_FSMC_IT</name>
        <param><defname>IT</defname></param>
        <initializer>((((IT) &amp; (uint32_t)0xFFFFFFC7) == 0x00000000) &amp;&amp; ((IT) != 0x00000000))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" line="649" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" bodystart="649" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_s_m_c___interrupt__sources_1gae2a57d0b15e025212489ec1421ff245d" prot="public" static="no">
        <name>IS_FSMC_GET_IT</name>
        <param><defname>IT</defname></param>
        <initializer>(((IT) == <ref refid="group___f_s_m_c___interrupt__sources_1gac483854bd6f90d8c7899a597a0c0ab1a" kindref="member">FSMC_IT_RisingEdge</ref>) || \
                            ((IT) == <ref refid="group___f_s_m_c___interrupt__sources_1ga59b5839854074008fb36fa86ec50a0c7" kindref="member">FSMC_IT_Level</ref>) || \
                            ((IT) == <ref refid="group___f_s_m_c___interrupt__sources_1ga8e4b9589c9981c900b5f2e84581a9693" kindref="member">FSMC_IT_FallingEdge</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" line="650" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" bodystart="650" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_s_m_c___flags_1ga5aadbd5d9f1b6a25bcc1fc6f3bf4c9cc" prot="public" static="no">
        <name>FSMC_FLAG_RisingEdge</name>
        <initializer>((uint32_t)0x00000001)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" line="661" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" bodystart="661" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_s_m_c___flags_1ga25868d35780998a52190c424ebb3823f" prot="public" static="no">
        <name>FSMC_FLAG_Level</name>
        <initializer>((uint32_t)0x00000002)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" line="662" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" bodystart="662" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_s_m_c___flags_1gaaaa85bce06ed962874686ad7af0f0cb7" prot="public" static="no">
        <name>FSMC_FLAG_FallingEdge</name>
        <initializer>((uint32_t)0x00000004)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" line="663" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" bodystart="663" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_s_m_c___flags_1ga8da2bd0b9d11877aaebaba0c77e8b0cc" prot="public" static="no">
        <name>FSMC_FLAG_FEMPT</name>
        <initializer>((uint32_t)0x00000040)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" line="664" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" bodystart="664" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_s_m_c___flags_1gab8674160ef7884f939e07041bbf5b18b" prot="public" static="no">
        <name>IS_FSMC_GET_FLAG</name>
        <param><defname>FLAG</defname></param>
        <initializer>(((FLAG) == <ref refid="group___f_s_m_c___flags_1ga5aadbd5d9f1b6a25bcc1fc6f3bf4c9cc" kindref="member">FSMC_FLAG_RisingEdge</ref>) || \
                                ((FLAG) == <ref refid="group___f_s_m_c___flags_1ga25868d35780998a52190c424ebb3823f" kindref="member">FSMC_FLAG_Level</ref>) || \
                                ((FLAG) == <ref refid="group___f_s_m_c___flags_1gaaaa85bce06ed962874686ad7af0f0cb7" kindref="member">FSMC_FLAG_FallingEdge</ref>) || \
                                ((FLAG) == <ref refid="group___f_s_m_c___flags_1ga8da2bd0b9d11877aaebaba0c77e8b0cc" kindref="member">FSMC_FLAG_FEMPT</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" line="665" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" bodystart="665" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_s_m_c___flags_1ga1114bf56b54e726831b38fc8c5daa14e" prot="public" static="no">
        <name>IS_FSMC_CLEAR_FLAG</name>
        <param><defname>FLAG</defname></param>
        <initializer>((((FLAG) &amp; (uint32_t)0xFFFFFFF8) == 0x00000000) &amp;&amp; ((FLAG) != 0x00000000))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" line="670" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" bodystart="670" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group___f_s_m_c___exported___functions_1gaab3e6648e8a584e73785361ac960eded" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FSMC_NORSRAMDeInit</definition>
        <argsstring>(uint32_t FSMC_Bank)</argsstring>
        <name>FSMC_NORSRAMDeInit</name>
        <param>
          <type>uint32_t</type>
          <declname>FSMC_Bank</declname>
        </param>
        <briefdescription>
<para>Deinitializes the FSMC NOR/SRAM Banks registers to their default reset values. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>FSMC_Bank</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the FSMC Bank to be used This parameter can be one of the following values: <itemizedlist>
<listitem><para>FSMC_Bank1_NORSRAM1: FSMC Bank1 NOR/SRAM1 </para></listitem>
<listitem><para>FSMC_Bank1_NORSRAM2: FSMC Bank1 NOR/SRAM2 </para></listitem>
<listitem><para>FSMC_Bank1_NORSRAM3: FSMC Bank1 NOR/SRAM3 </para></listitem>
<listitem><para>FSMC_Bank1_NORSRAM4: FSMC Bank1 NOR/SRAM4 </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" line="696" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_fsmc.c" bodystart="102" bodyend="119"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___f_s_m_c___exported___constants_1ga3e3bed3dd83d38e63f11ac4cbcb87304" compoundref="stm32f10x__fsmc_8h" startline="274">IS_FSMC_NORSRAM_BANK</references>
        <references refid="group___f_s_m_c___n_o_r_s_r_a_m___bank_1ga514a05828041fa1a13d464c9e4a0a4a9" compoundref="stm32f10x__fsmc_8h" startline="249">FSMC_Bank1_NORSRAM1</references>
        <references refid="group___peripheral__declaration_1ga2a759bad07fe730c99f9e1490e646220" compoundref="stm32f10x_8h" startline="1448">FSMC_Bank1</references>
        <references refid="group___peripheral__declaration_1ga422986101f42a8811ae89ac69deb2759" compoundref="stm32f10x_8h" startline="1449">FSMC_Bank1E</references>
      </memberdef>
      <memberdef kind="function" id="group___f_s_m_c___exported___functions_1gafb749503293474a68555961bd8f120e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FSMC_NANDDeInit</definition>
        <argsstring>(uint32_t FSMC_Bank)</argsstring>
        <name>FSMC_NANDDeInit</name>
        <param>
          <type>uint32_t</type>
          <declname>FSMC_Bank</declname>
        </param>
        <briefdescription>
<para>Deinitializes the FSMC NAND Banks registers to their default reset values. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>FSMC_Bank</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the FSMC Bank to be used This parameter can be one of the following values: <itemizedlist>
<listitem><para>FSMC_Bank2_NAND: FSMC Bank2 NAND </para></listitem>
<listitem><para>FSMC_Bank3_NAND: FSMC Bank3 NAND </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" line="697" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_fsmc.c" bodystart="129" bodyend="151"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___f_s_m_c___exported___constants_1ga725bada099197f15f49dc0c5be00e19b" compoundref="stm32f10x__fsmc_8h" startline="279">IS_FSMC_NAND_BANK</references>
        <references refid="group___f_s_m_c___n_a_n_d___bank_1ga294e7134aa329a09e56b61eec9882a27" compoundref="stm32f10x__fsmc_8h" startline="260">FSMC_Bank2_NAND</references>
        <references refid="group___peripheral__declaration_1gabb3dfb5e88694aa2983ecabd33a55e0a" compoundref="stm32f10x_8h" startline="1450">FSMC_Bank2</references>
        <references refid="group___peripheral__declaration_1ga411eedc00b5b2b22b494004d4f41b736" compoundref="stm32f10x_8h" startline="1451">FSMC_Bank3</references>
      </memberdef>
      <memberdef kind="function" id="group___f_s_m_c___exported___functions_1ga2f53ccf3a4f3c80a5a56fb47ccd47ccd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FSMC_PCCARDDeInit</definition>
        <argsstring>(void)</argsstring>
        <name>FSMC_PCCARDDeInit</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Deinitializes the FSMC PCCARD Bank registers to their default reset values. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" line="698" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_fsmc.c" bodystart="158" bodyend="166"/>
        <references refid="group___peripheral__declaration_1ga5aa00e4ac522693c6a21bc23ef5a96df" compoundref="stm32f10x_8h" startline="1452">FSMC_Bank4</references>
      </memberdef>
      <memberdef kind="function" id="group___f_s_m_c___exported___functions_1ga9c27816e8b17394c9ee1ce9298917b4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FSMC_NORSRAMInit</definition>
        <argsstring>(FSMC_NORSRAMInitTypeDef *FSMC_NORSRAMInitStruct)</argsstring>
        <name>FSMC_NORSRAMInit</name>
        <param>
          <type><ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def" kindref="compound">FSMC_NORSRAMInitTypeDef</ref> *</type>
          <declname>FSMC_NORSRAMInitStruct</declname>
        </param>
        <briefdescription>
<para>Initializes the FSMC NOR/SRAM Banks according to the specified parameters in the FSMC_NORSRAMInitStruct. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>FSMC_NORSRAMInitStruct</parametername>
</parameternamelist>
<parameterdescription>
<para>: pointer to a <ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def" kindref="compound">FSMC_NORSRAMInitTypeDef</ref> structure that contains the configuration information for the FSMC NOR/SRAM specified Banks. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" line="699" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_fsmc.c" bodystart="176" bodyend="252"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___f_s_m_c___exported___constants_1ga3e3bed3dd83d38e63f11ac4cbcb87304" compoundref="stm32f10x__fsmc_8h" startline="274">IS_FSMC_NORSRAM_BANK</references>
        <references refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1a7fcd864461cf0d1cf83b62fa2b4d3f86" compoundref="stm32f10x__fsmc_8h" startline="94">FSMC_NORSRAMInitTypeDef::FSMC_Bank</references>
        <references refid="group___f_s_m_c___data___address___bus___multiplexing_1ga546fcab8c1b751b4a959ba2ce5b35d79" compoundref="stm32f10x__fsmc_8h" startline="300">IS_FSMC_MUX</references>
        <references refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1af4ff95085d3bb39e34c2f88ca3140ce5" compoundref="stm32f10x__fsmc_8h" startline="97">FSMC_NORSRAMInitTypeDef::FSMC_DataAddressMux</references>
        <references refid="group___f_s_m_c___memory___type_1ga255cd500e141f4ac024cf5f896921233" compoundref="stm32f10x__fsmc_8h" startline="314">IS_FSMC_MEMORY</references>
        <references refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1a979ad605c6a63923e060576ee01e888d" compoundref="stm32f10x__fsmc_8h" startline="101">FSMC_NORSRAMInitTypeDef::FSMC_MemoryType</references>
        <references refid="group___f_s_m_c___data___width_1ga003d52b62f5950fb041f73f15ce20171" compoundref="stm32f10x__fsmc_8h" startline="328">IS_FSMC_MEMORY_WIDTH</references>
        <references refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1a1791c771ff86f5dc5422040409517e9d" compoundref="stm32f10x__fsmc_8h" startline="105">FSMC_NORSRAMInitTypeDef::FSMC_MemoryDataWidth</references>
        <references refid="group___f_s_m_c___burst___access___mode_1gaf8736659c5064c3c03753d7874401e71" compoundref="stm32f10x__fsmc_8h" startline="341">IS_FSMC_BURSTMODE</references>
        <references refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1aec0bfff5c934c251c21450a50f5bdb79" compoundref="stm32f10x__fsmc_8h" startline="108">FSMC_NORSRAMInitTypeDef::FSMC_BurstAccessMode</references>
        <references refid="group___f_s_m_c___asynchronous_wait_1ga52d579de825316ee058baf11bfb749d6" compoundref="stm32f10x__fsmc_8h" startline="352">IS_FSMC_ASYNWAIT</references>
        <references refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1ac350cc34377fe3d5f882a6801bab1ac9" compoundref="stm32f10x__fsmc_8h" startline="112">FSMC_NORSRAMInitTypeDef::FSMC_AsynchronousWait</references>
        <references refid="group___f_s_m_c___wait___signal___polarity_1gabc5321807d5184fe5cdb7848e1be7bc6" compoundref="stm32f10x__fsmc_8h" startline="365">IS_FSMC_WAIT_POLARITY</references>
        <references refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1a5d4d76594fc201943b51095e3ef34791" compoundref="stm32f10x__fsmc_8h" startline="116">FSMC_NORSRAMInitTypeDef::FSMC_WaitSignalPolarity</references>
        <references refid="group___f_s_m_c___wrap___mode_1ga0751d74b7fb1e17f6cedea091e8ebfc8" compoundref="stm32f10x__fsmc_8h" startline="378">IS_FSMC_WRAP_MODE</references>
        <references refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1a7e201c17bf7c5f6cc69fb6de29c8b024" compoundref="stm32f10x__fsmc_8h" startline="120">FSMC_NORSRAMInitTypeDef::FSMC_WrapMode</references>
        <references refid="group___f_s_m_c___wait___timing_1ga3edb40c756afa8bb78550b7e22ded093" compoundref="stm32f10x__fsmc_8h" startline="391">IS_FSMC_WAIT_SIGNAL_ACTIVE</references>
        <references refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1a71c6e7cc8e7e1a8fd0562960ffd23e88" compoundref="stm32f10x__fsmc_8h" startline="124">FSMC_NORSRAMInitTypeDef::FSMC_WaitSignalActive</references>
        <references refid="group___f_s_m_c___write___operation_1ga87fc20d11761caa66c3e7d77a3a7d3e3" compoundref="stm32f10x__fsmc_8h" startline="404">IS_FSMC_WRITE_OPERATION</references>
        <references refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1a596793d1735c4e38c87e3bf91d986370" compoundref="stm32f10x__fsmc_8h" startline="129">FSMC_NORSRAMInitTypeDef::FSMC_WriteOperation</references>
        <references refid="group___f_s_m_c___wait___signal_1gae617db4f15c82850d4f5c927f9a7db3e" compoundref="stm32f10x__fsmc_8h" startline="417">IS_FSMC_WAITE_SIGNAL</references>
        <references refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1aedbc7df3ff61cc93a910a64dc53c932b" compoundref="stm32f10x__fsmc_8h" startline="132">FSMC_NORSRAMInitTypeDef::FSMC_WaitSignal</references>
        <references refid="group___f_s_m_c___extended___mode_1ga79849ea07bf2a8f09989a6babd9e66e2" compoundref="stm32f10x__fsmc_8h" startline="430">IS_FSMC_EXTENDED_MODE</references>
        <references refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1af33d0076b5bfea3a66e388ed7f3eb3f3" compoundref="stm32f10x__fsmc_8h" startline="136">FSMC_NORSRAMInitTypeDef::FSMC_ExtendedMode</references>
        <references refid="group___f_s_m_c___write___burst_1gab7b03a33fab765827832abbf07d01a10" compoundref="stm32f10x__fsmc_8h" startline="443">IS_FSMC_WRITE_BURST</references>
        <references refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1adac3756711f2d76e56a8cbcb7a03843d" compoundref="stm32f10x__fsmc_8h" startline="139">FSMC_NORSRAMInitTypeDef::FSMC_WriteBurst</references>
        <references refid="group___f_s_m_c___address___setup___time_1ga8b77d090338011abc1be7f4a420e2d8f" compoundref="stm32f10x__fsmc_8h" startline="453">IS_FSMC_ADDRESS_SETUP_TIME</references>
        <references refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1a33f8e281b9ff3187906309d005b4159e" compoundref="stm32f10x__fsmc_8h" startline="142">FSMC_NORSRAMInitTypeDef::FSMC_ReadWriteTimingStruct</references>
        <references refid="struct_f_s_m_c___n_o_r_s_r_a_m_timing_init_type_def_1a2ba90f4ec16bc38a2c4fa29c593b713b" compoundref="stm32f10x__fsmc_8h" startline="52">FSMC_NORSRAMTimingInitTypeDef::FSMC_AddressSetupTime</references>
        <references refid="group___f_s_m_c___address___hold___time_1gae7d031a5b95ad00acf67e9bc95064998" compoundref="stm32f10x__fsmc_8h" startline="463">IS_FSMC_ADDRESS_HOLD_TIME</references>
        <references refid="struct_f_s_m_c___n_o_r_s_r_a_m_timing_init_type_def_1a917b227ccb0a765791897ce3647ab26b" compoundref="stm32f10x__fsmc_8h" startline="57">FSMC_NORSRAMTimingInitTypeDef::FSMC_AddressHoldTime</references>
        <references refid="group___f_s_m_c___data___setup___time_1ga3d923de775489e844913b29e77e8cca7" compoundref="stm32f10x__fsmc_8h" startline="473">IS_FSMC_DATASETUP_TIME</references>
        <references refid="struct_f_s_m_c___n_o_r_s_r_a_m_timing_init_type_def_1aaa0a9178766adeed424d5c4eb728d1b1" compoundref="stm32f10x__fsmc_8h" startline="62">FSMC_NORSRAMTimingInitTypeDef::FSMC_DataSetupTime</references>
        <references refid="group___f_s_m_c___bus___turn__around___duration_1ga9ec626f30679a18af91bf48c52d9260d" compoundref="stm32f10x__fsmc_8h" startline="483">IS_FSMC_TURNAROUND_TIME</references>
        <references refid="struct_f_s_m_c___n_o_r_s_r_a_m_timing_init_type_def_1a3d98d57618e46ec6aa5d876dcc047d32" compoundref="stm32f10x__fsmc_8h" startline="67">FSMC_NORSRAMTimingInitTypeDef::FSMC_BusTurnAroundDuration</references>
        <references refid="group___f_s_m_c___c_l_k___division_1ga9e5321b02ea049fd076ba705acd06b5f" compoundref="stm32f10x__fsmc_8h" startline="493">IS_FSMC_CLK_DIV</references>
        <references refid="struct_f_s_m_c___n_o_r_s_r_a_m_timing_init_type_def_1a251b439331b82eecea58aa3f8882ea15" compoundref="stm32f10x__fsmc_8h" startline="72">FSMC_NORSRAMTimingInitTypeDef::FSMC_CLKDivision</references>
        <references refid="group___f_s_m_c___data___latency_1ga1ab8659a9631d8bb4f57d8be8580155c" compoundref="stm32f10x__fsmc_8h" startline="503">IS_FSMC_DATA_LATENCY</references>
        <references refid="struct_f_s_m_c___n_o_r_s_r_a_m_timing_init_type_def_1abc33886615fc3627448aa2dba11cfc77" compoundref="stm32f10x__fsmc_8h" startline="76">FSMC_NORSRAMTimingInitTypeDef::FSMC_DataLatency</references>
        <references refid="group___f_s_m_c___access___mode_1ga1844335f297ea30e9d7fae09ce562092" compoundref="stm32f10x__fsmc_8h" startline="517">IS_FSMC_ACCESS_MODE</references>
        <references refid="struct_f_s_m_c___n_o_r_s_r_a_m_timing_init_type_def_1a261d043a19cecf77e6859403be204efc" compoundref="stm32f10x__fsmc_8h" startline="84">FSMC_NORSRAMTimingInitTypeDef::FSMC_AccessMode</references>
        <references refid="group___peripheral__declaration_1ga2a759bad07fe730c99f9e1490e646220" compoundref="stm32f10x_8h" startline="1448">FSMC_Bank1</references>
        <references refid="group___f_s_m_c___memory___type_1ga8b9390abe7c281947c550bf4365649e5" compoundref="stm32f10x__fsmc_8h" startline="313">FSMC_MemoryType_NOR</references>
        <references refid="group___f_s_m_c___private___defines_1ga38da33a73789b2c932962d75dfc1341f" compoundref="stm32f10x__fsmc_8c" startline="51">BCR_FACCEN_Set</references>
        <references refid="group___f_s_m_c___extended___mode_1gaef9ff4c81a52fdb0471d2c4422271d2a" compoundref="stm32f10x__fsmc_8h" startline="428">FSMC_ExtendedMode_Enable</references>
        <references refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1ac62cf7426a933ce6aa6efc3a8e82dac1" compoundref="stm32f10x__fsmc_8h" startline="144">FSMC_NORSRAMInitTypeDef::FSMC_WriteTimingStruct</references>
        <references refid="group___peripheral__declaration_1ga422986101f42a8811ae89ac69deb2759" compoundref="stm32f10x_8h" startline="1449">FSMC_Bank1E</references>
      </memberdef>
      <memberdef kind="function" id="group___f_s_m_c___exported___functions_1ga9f81ccc4e126c11f1eb33077b1a68e6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FSMC_NANDInit</definition>
        <argsstring>(FSMC_NANDInitTypeDef *FSMC_NANDInitStruct)</argsstring>
        <name>FSMC_NANDInit</name>
        <param>
          <type><ref refid="struct_f_s_m_c___n_a_n_d_init_type_def" kindref="compound">FSMC_NANDInitTypeDef</ref> *</type>
          <declname>FSMC_NANDInitStruct</declname>
        </param>
        <briefdescription>
<para>Initializes the FSMC NAND Banks according to the specified parameters in the FSMC_NANDInitStruct. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>FSMC_NANDInitStruct</parametername>
</parameternamelist>
<parameterdescription>
<para>: pointer to a <ref refid="struct_f_s_m_c___n_a_n_d_init_type_def" kindref="compound">FSMC_NANDInitTypeDef</ref> structure that contains the configuration information for the FSMC NAND specified Banks. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" line="700" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_fsmc.c" bodystart="262" bodyend="318"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___f_s_m_c___exported___constants_1ga725bada099197f15f49dc0c5be00e19b" compoundref="stm32f10x__fsmc_8h" startline="279">IS_FSMC_NAND_BANK</references>
        <references refid="struct_f_s_m_c___n_a_n_d_init_type_def_1a60d3ead2188e1dbdf06810e952b3ce0f" compoundref="stm32f10x__fsmc_8h" startline="185">FSMC_NANDInitTypeDef::FSMC_Bank</references>
        <references refid="group___f_s_m_c___wait__feature_1ga07c2585b517df2c7afbe3ba16c22f236" compoundref="stm32f10x__fsmc_8h" startline="540">IS_FSMC_WAIT_FEATURE</references>
        <references refid="struct_f_s_m_c___n_a_n_d_init_type_def_1ab350e15014c4a9f4b2c2f2848f11eeca" compoundref="stm32f10x__fsmc_8h" startline="188">FSMC_NANDInitTypeDef::FSMC_Waitfeature</references>
        <references refid="group___f_s_m_c___data___width_1ga003d52b62f5950fb041f73f15ce20171" compoundref="stm32f10x__fsmc_8h" startline="328">IS_FSMC_MEMORY_WIDTH</references>
        <references refid="struct_f_s_m_c___n_a_n_d_init_type_def_1ab4a4f56aab3150d8fb02aaf092db0235" compoundref="stm32f10x__fsmc_8h" startline="191">FSMC_NANDInitTypeDef::FSMC_MemoryDataWidth</references>
        <references refid="group___f_s_m_c___e_c_c_1gaf1a7cb45edd8707bf4ea8aac96799c77" compoundref="stm32f10x__fsmc_8h" startline="554">IS_FSMC_ECC_STATE</references>
        <references refid="struct_f_s_m_c___n_a_n_d_init_type_def_1a58d0510c0ce0ae3d1e3863bf8f571377" compoundref="stm32f10x__fsmc_8h" startline="194">FSMC_NANDInitTypeDef::FSMC_ECC</references>
        <references refid="group___f_s_m_c___e_c_c___page___size_1ga58fefa0d55875775a88f54ad7498178f" compoundref="stm32f10x__fsmc_8h" startline="571">IS_FSMC_ECCPAGE_SIZE</references>
        <references refid="struct_f_s_m_c___n_a_n_d_init_type_def_1a7ed6a25710ba724a7a8f90af60130cf6" compoundref="stm32f10x__fsmc_8h" startline="197">FSMC_NANDInitTypeDef::FSMC_ECCPageSize</references>
        <references refid="group___f_s_m_c___t_c_l_r___setup___time_1ga324848d0d9c0d2aad7ab70873b4a15e9" compoundref="stm32f10x__fsmc_8h" startline="586">IS_FSMC_TCLR_TIME</references>
        <references refid="struct_f_s_m_c___n_a_n_d_init_type_def_1a633c7be46a1d281916b9f2e34fa3d36a" compoundref="stm32f10x__fsmc_8h" startline="200">FSMC_NANDInitTypeDef::FSMC_TCLRSetupTime</references>
        <references refid="group___f_s_m_c___t_a_r___setup___time_1ga5b9e0f64c44ab68afca90cd28dedd8e3" compoundref="stm32f10x__fsmc_8h" startline="596">IS_FSMC_TAR_TIME</references>
        <references refid="struct_f_s_m_c___n_a_n_d_init_type_def_1a014c1b8977b454ac15654d93dbb7dff9" compoundref="stm32f10x__fsmc_8h" startline="204">FSMC_NANDInitTypeDef::FSMC_TARSetupTime</references>
        <references refid="group___f_s_m_c___setup___time_1ga4f2fbb8f6ec492cc241a49c468e0d98d" compoundref="stm32f10x__fsmc_8h" startline="606">IS_FSMC_SETUP_TIME</references>
        <references refid="struct_f_s_m_c___n_a_n_d_init_type_def_1a7ab117a15e780c02fcad5d844e71c425" compoundref="stm32f10x__fsmc_8h" startline="208">FSMC_NANDInitTypeDef::FSMC_CommonSpaceTimingStruct</references>
        <references refid="struct_f_s_m_c___n_a_n_d___p_c_c_a_r_d_timing_init_type_def_1a31632aeb49269a29a39e3b191590b6dc" compoundref="stm32f10x__fsmc_8h" startline="153">FSMC_NAND_PCCARDTimingInitTypeDef::FSMC_SetupTime</references>
        <references refid="group___f_s_m_c___wait___setup___time_1ga5c0efc48afb916ceff32868940f81613" compoundref="stm32f10x__fsmc_8h" startline="616">IS_FSMC_WAIT_TIME</references>
        <references refid="struct_f_s_m_c___n_a_n_d___p_c_c_a_r_d_timing_init_type_def_1a99a7d54ed2674faa5a4e0f2669812855" compoundref="stm32f10x__fsmc_8h" startline="159">FSMC_NAND_PCCARDTimingInitTypeDef::FSMC_WaitSetupTime</references>
        <references refid="group___f_s_m_c___hold___setup___time_1gab2abc8eb967495f2a2bafec8162d6385" compoundref="stm32f10x__fsmc_8h" startline="626">IS_FSMC_HOLD_TIME</references>
        <references refid="struct_f_s_m_c___n_a_n_d___p_c_c_a_r_d_timing_init_type_def_1ae2b53c2cfd55ff277f453613dcf7c8b2" compoundref="stm32f10x__fsmc_8h" startline="165">FSMC_NAND_PCCARDTimingInitTypeDef::FSMC_HoldSetupTime</references>
        <references refid="group___f_s_m_c___hi_z___setup___time_1gaeb6295e8cc1a524f060c5e780f868033" compoundref="stm32f10x__fsmc_8h" startline="636">IS_FSMC_HIZ_TIME</references>
        <references refid="struct_f_s_m_c___n_a_n_d___p_c_c_a_r_d_timing_init_type_def_1a8a2a2a9e71dbf276fddad2bb32c0d256" compoundref="stm32f10x__fsmc_8h" startline="172">FSMC_NAND_PCCARDTimingInitTypeDef::FSMC_HiZSetupTime</references>
        <references refid="struct_f_s_m_c___n_a_n_d_init_type_def_1a2a33bd855240dba37e507f223dbca062" compoundref="stm32f10x__fsmc_8h" startline="210">FSMC_NANDInitTypeDef::FSMC_AttributeSpaceTimingStruct</references>
        <references refid="group___f_s_m_c___private___defines_1gaf3992efb285ab994c41463af5107c501" compoundref="stm32f10x__fsmc_8c" startline="58">PCR_MemoryType_NAND</references>
        <references refid="group___f_s_m_c___n_a_n_d___bank_1ga294e7134aa329a09e56b61eec9882a27" compoundref="stm32f10x__fsmc_8h" startline="260">FSMC_Bank2_NAND</references>
        <references refid="group___peripheral__declaration_1gabb3dfb5e88694aa2983ecabd33a55e0a" compoundref="stm32f10x_8h" startline="1450">FSMC_Bank2</references>
        <references refid="group___peripheral__declaration_1ga411eedc00b5b2b22b494004d4f41b736" compoundref="stm32f10x_8h" startline="1451">FSMC_Bank3</references>
      </memberdef>
      <memberdef kind="function" id="group___f_s_m_c___exported___functions_1gacee1351363e7700a296faa1734a910aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FSMC_PCCARDInit</definition>
        <argsstring>(FSMC_PCCARDInitTypeDef *FSMC_PCCARDInitStruct)</argsstring>
        <name>FSMC_PCCARDInit</name>
        <param>
          <type><ref refid="struct_f_s_m_c___p_c_c_a_r_d_init_type_def" kindref="compound">FSMC_PCCARDInitTypeDef</ref> *</type>
          <declname>FSMC_PCCARDInitStruct</declname>
        </param>
        <briefdescription>
<para>Initializes the FSMC PCCARD Bank according to the specified parameters in the FSMC_PCCARDInitStruct. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>FSMC_PCCARDInitStruct</parametername>
</parameternamelist>
<parameterdescription>
<para>: pointer to a <ref refid="struct_f_s_m_c___p_c_c_a_r_d_init_type_def" kindref="compound">FSMC_PCCARDInitTypeDef</ref> structure that contains the configuration information for the FSMC PCCARD Bank. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" line="701" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_fsmc.c" bodystart="328" bodyend="372"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___f_s_m_c___wait__feature_1ga07c2585b517df2c7afbe3ba16c22f236" compoundref="stm32f10x__fsmc_8h" startline="540">IS_FSMC_WAIT_FEATURE</references>
        <references refid="struct_f_s_m_c___p_c_c_a_r_d_init_type_def_1a3ffd8c627ffe3ac90dfbfe93a8b97c26" compoundref="stm32f10x__fsmc_8h" startline="219">FSMC_PCCARDInitTypeDef::FSMC_Waitfeature</references>
        <references refid="group___f_s_m_c___t_c_l_r___setup___time_1ga324848d0d9c0d2aad7ab70873b4a15e9" compoundref="stm32f10x__fsmc_8h" startline="586">IS_FSMC_TCLR_TIME</references>
        <references refid="struct_f_s_m_c___p_c_c_a_r_d_init_type_def_1a15db9675791f6f9c7fd82fe1084ff694" compoundref="stm32f10x__fsmc_8h" startline="222">FSMC_PCCARDInitTypeDef::FSMC_TCLRSetupTime</references>
        <references refid="group___f_s_m_c___t_a_r___setup___time_1ga5b9e0f64c44ab68afca90cd28dedd8e3" compoundref="stm32f10x__fsmc_8h" startline="596">IS_FSMC_TAR_TIME</references>
        <references refid="struct_f_s_m_c___p_c_c_a_r_d_init_type_def_1ac83f977e01623595e0aa8dd0b1eb3fcc" compoundref="stm32f10x__fsmc_8h" startline="226">FSMC_PCCARDInitTypeDef::FSMC_TARSetupTime</references>
        <references refid="group___f_s_m_c___setup___time_1ga4f2fbb8f6ec492cc241a49c468e0d98d" compoundref="stm32f10x__fsmc_8h" startline="606">IS_FSMC_SETUP_TIME</references>
        <references refid="struct_f_s_m_c___p_c_c_a_r_d_init_type_def_1a87cb99ebe9b5ed570c6467abc9c2ef6d" compoundref="stm32f10x__fsmc_8h" startline="231">FSMC_PCCARDInitTypeDef::FSMC_CommonSpaceTimingStruct</references>
        <references refid="struct_f_s_m_c___n_a_n_d___p_c_c_a_r_d_timing_init_type_def_1a31632aeb49269a29a39e3b191590b6dc" compoundref="stm32f10x__fsmc_8h" startline="153">FSMC_NAND_PCCARDTimingInitTypeDef::FSMC_SetupTime</references>
        <references refid="group___f_s_m_c___wait___setup___time_1ga5c0efc48afb916ceff32868940f81613" compoundref="stm32f10x__fsmc_8h" startline="616">IS_FSMC_WAIT_TIME</references>
        <references refid="struct_f_s_m_c___n_a_n_d___p_c_c_a_r_d_timing_init_type_def_1a99a7d54ed2674faa5a4e0f2669812855" compoundref="stm32f10x__fsmc_8h" startline="159">FSMC_NAND_PCCARDTimingInitTypeDef::FSMC_WaitSetupTime</references>
        <references refid="group___f_s_m_c___hold___setup___time_1gab2abc8eb967495f2a2bafec8162d6385" compoundref="stm32f10x__fsmc_8h" startline="626">IS_FSMC_HOLD_TIME</references>
        <references refid="struct_f_s_m_c___n_a_n_d___p_c_c_a_r_d_timing_init_type_def_1ae2b53c2cfd55ff277f453613dcf7c8b2" compoundref="stm32f10x__fsmc_8h" startline="165">FSMC_NAND_PCCARDTimingInitTypeDef::FSMC_HoldSetupTime</references>
        <references refid="group___f_s_m_c___hi_z___setup___time_1gaeb6295e8cc1a524f060c5e780f868033" compoundref="stm32f10x__fsmc_8h" startline="636">IS_FSMC_HIZ_TIME</references>
        <references refid="struct_f_s_m_c___n_a_n_d___p_c_c_a_r_d_timing_init_type_def_1a8a2a2a9e71dbf276fddad2bb32c0d256" compoundref="stm32f10x__fsmc_8h" startline="172">FSMC_NAND_PCCARDTimingInitTypeDef::FSMC_HiZSetupTime</references>
        <references refid="struct_f_s_m_c___p_c_c_a_r_d_init_type_def_1aee510f2e6e6ef18e7f5eedfed702f697" compoundref="stm32f10x__fsmc_8h" startline="233">FSMC_PCCARDInitTypeDef::FSMC_AttributeSpaceTimingStruct</references>
        <references refid="struct_f_s_m_c___p_c_c_a_r_d_init_type_def_1abd9b9e8d7623829a40e5255b0949a3a1" compoundref="stm32f10x__fsmc_8h" startline="235">FSMC_PCCARDInitTypeDef::FSMC_IOSpaceTimingStruct</references>
        <references refid="group___peripheral__declaration_1ga5aa00e4ac522693c6a21bc23ef5a96df" compoundref="stm32f10x_8h" startline="1452">FSMC_Bank4</references>
        <references refid="group___f_s_m_c___data___width_1ga65d85c3072e6790ae760ca2248e46df6" compoundref="stm32f10x__fsmc_8h" startline="327">FSMC_MemoryDataWidth_16b</references>
      </memberdef>
      <memberdef kind="function" id="group___f_s_m_c___exported___functions_1gaf33e6dfc34f62d16a0cb416de9e83d28" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FSMC_NORSRAMStructInit</definition>
        <argsstring>(FSMC_NORSRAMInitTypeDef *FSMC_NORSRAMInitStruct)</argsstring>
        <name>FSMC_NORSRAMStructInit</name>
        <param>
          <type><ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def" kindref="compound">FSMC_NORSRAMInitTypeDef</ref> *</type>
          <declname>FSMC_NORSRAMInitStruct</declname>
        </param>
        <briefdescription>
<para>Fills each FSMC_NORSRAMInitStruct member with its default value. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>FSMC_NORSRAMInitStruct</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a <ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def" kindref="compound">FSMC_NORSRAMInitTypeDef</ref> structure which will be initialized. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" line="702" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_fsmc.c" bodystart="380" bodyend="410"/>
        <references refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1a7fcd864461cf0d1cf83b62fa2b4d3f86" compoundref="stm32f10x__fsmc_8h" startline="94">FSMC_NORSRAMInitTypeDef::FSMC_Bank</references>
        <references refid="group___f_s_m_c___n_o_r_s_r_a_m___bank_1ga514a05828041fa1a13d464c9e4a0a4a9" compoundref="stm32f10x__fsmc_8h" startline="249">FSMC_Bank1_NORSRAM1</references>
        <references refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1af4ff95085d3bb39e34c2f88ca3140ce5" compoundref="stm32f10x__fsmc_8h" startline="97">FSMC_NORSRAMInitTypeDef::FSMC_DataAddressMux</references>
        <references refid="group___f_s_m_c___data___address___bus___multiplexing_1ga1dd4d12e63aaf29dbb8ae4b613f2aa15" compoundref="stm32f10x__fsmc_8h" startline="299">FSMC_DataAddressMux_Enable</references>
        <references refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1a979ad605c6a63923e060576ee01e888d" compoundref="stm32f10x__fsmc_8h" startline="101">FSMC_NORSRAMInitTypeDef::FSMC_MemoryType</references>
        <references refid="group___f_s_m_c___memory___type_1ga8a24e8da42e67dcf6fb2f43659aa49cf" compoundref="stm32f10x__fsmc_8h" startline="311">FSMC_MemoryType_SRAM</references>
        <references refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1a1791c771ff86f5dc5422040409517e9d" compoundref="stm32f10x__fsmc_8h" startline="105">FSMC_NORSRAMInitTypeDef::FSMC_MemoryDataWidth</references>
        <references refid="group___f_s_m_c___data___width_1ga5753e089830f19af70a724766e3c329f" compoundref="stm32f10x__fsmc_8h" startline="326">FSMC_MemoryDataWidth_8b</references>
        <references refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1aec0bfff5c934c251c21450a50f5bdb79" compoundref="stm32f10x__fsmc_8h" startline="108">FSMC_NORSRAMInitTypeDef::FSMC_BurstAccessMode</references>
        <references refid="group___f_s_m_c___burst___access___mode_1ga26fc544945415e350563a9b00684850c" compoundref="stm32f10x__fsmc_8h" startline="339">FSMC_BurstAccessMode_Disable</references>
        <references refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1ac350cc34377fe3d5f882a6801bab1ac9" compoundref="stm32f10x__fsmc_8h" startline="112">FSMC_NORSRAMInitTypeDef::FSMC_AsynchronousWait</references>
        <references refid="group___f_s_m_c___asynchronous_wait_1ga36c0dad6fe6c0e01632d3312c8f4c4cb" compoundref="stm32f10x__fsmc_8h" startline="350">FSMC_AsynchronousWait_Disable</references>
        <references refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1a5d4d76594fc201943b51095e3ef34791" compoundref="stm32f10x__fsmc_8h" startline="116">FSMC_NORSRAMInitTypeDef::FSMC_WaitSignalPolarity</references>
        <references refid="group___f_s_m_c___wait___signal___polarity_1ga7dc72fdfc6225e5daa9b8efee8dff49f" compoundref="stm32f10x__fsmc_8h" startline="363">FSMC_WaitSignalPolarity_Low</references>
        <references refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1a7e201c17bf7c5f6cc69fb6de29c8b024" compoundref="stm32f10x__fsmc_8h" startline="120">FSMC_NORSRAMInitTypeDef::FSMC_WrapMode</references>
        <references refid="group___f_s_m_c___wrap___mode_1ga6041f0d3055ea3811a5a19560092f266" compoundref="stm32f10x__fsmc_8h" startline="376">FSMC_WrapMode_Disable</references>
        <references refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1a71c6e7cc8e7e1a8fd0562960ffd23e88" compoundref="stm32f10x__fsmc_8h" startline="124">FSMC_NORSRAMInitTypeDef::FSMC_WaitSignalActive</references>
        <references refid="group___f_s_m_c___wait___timing_1ga62c6855a7cc65b20024085f09cdc65e8" compoundref="stm32f10x__fsmc_8h" startline="389">FSMC_WaitSignalActive_BeforeWaitState</references>
        <references refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1a596793d1735c4e38c87e3bf91d986370" compoundref="stm32f10x__fsmc_8h" startline="129">FSMC_NORSRAMInitTypeDef::FSMC_WriteOperation</references>
        <references refid="group___f_s_m_c___write___operation_1ga2478beb6dd8861b34a16b8a57a795e56" compoundref="stm32f10x__fsmc_8h" startline="403">FSMC_WriteOperation_Enable</references>
        <references refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1aedbc7df3ff61cc93a910a64dc53c932b" compoundref="stm32f10x__fsmc_8h" startline="132">FSMC_NORSRAMInitTypeDef::FSMC_WaitSignal</references>
        <references refid="group___f_s_m_c___wait___signal_1gaf809e339f1cdc9d0a815fd98712e9ee3" compoundref="stm32f10x__fsmc_8h" startline="416">FSMC_WaitSignal_Enable</references>
        <references refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1af33d0076b5bfea3a66e388ed7f3eb3f3" compoundref="stm32f10x__fsmc_8h" startline="136">FSMC_NORSRAMInitTypeDef::FSMC_ExtendedMode</references>
        <references refid="group___f_s_m_c___extended___mode_1ga5a1f1acdc44328158f59012748980dd3" compoundref="stm32f10x__fsmc_8h" startline="427">FSMC_ExtendedMode_Disable</references>
        <references refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1adac3756711f2d76e56a8cbcb7a03843d" compoundref="stm32f10x__fsmc_8h" startline="139">FSMC_NORSRAMInitTypeDef::FSMC_WriteBurst</references>
        <references refid="group___f_s_m_c___write___burst_1ga65a49ecd05b3a128e8908c6a625adae7" compoundref="stm32f10x__fsmc_8h" startline="441">FSMC_WriteBurst_Disable</references>
        <references refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1a33f8e281b9ff3187906309d005b4159e" compoundref="stm32f10x__fsmc_8h" startline="142">FSMC_NORSRAMInitTypeDef::FSMC_ReadWriteTimingStruct</references>
        <references refid="struct_f_s_m_c___n_o_r_s_r_a_m_timing_init_type_def_1a2ba90f4ec16bc38a2c4fa29c593b713b" compoundref="stm32f10x__fsmc_8h" startline="52">FSMC_NORSRAMTimingInitTypeDef::FSMC_AddressSetupTime</references>
        <references refid="struct_f_s_m_c___n_o_r_s_r_a_m_timing_init_type_def_1a917b227ccb0a765791897ce3647ab26b" compoundref="stm32f10x__fsmc_8h" startline="57">FSMC_NORSRAMTimingInitTypeDef::FSMC_AddressHoldTime</references>
        <references refid="struct_f_s_m_c___n_o_r_s_r_a_m_timing_init_type_def_1aaa0a9178766adeed424d5c4eb728d1b1" compoundref="stm32f10x__fsmc_8h" startline="62">FSMC_NORSRAMTimingInitTypeDef::FSMC_DataSetupTime</references>
        <references refid="struct_f_s_m_c___n_o_r_s_r_a_m_timing_init_type_def_1a3d98d57618e46ec6aa5d876dcc047d32" compoundref="stm32f10x__fsmc_8h" startline="67">FSMC_NORSRAMTimingInitTypeDef::FSMC_BusTurnAroundDuration</references>
        <references refid="struct_f_s_m_c___n_o_r_s_r_a_m_timing_init_type_def_1a251b439331b82eecea58aa3f8882ea15" compoundref="stm32f10x__fsmc_8h" startline="72">FSMC_NORSRAMTimingInitTypeDef::FSMC_CLKDivision</references>
        <references refid="struct_f_s_m_c___n_o_r_s_r_a_m_timing_init_type_def_1abc33886615fc3627448aa2dba11cfc77" compoundref="stm32f10x__fsmc_8h" startline="76">FSMC_NORSRAMTimingInitTypeDef::FSMC_DataLatency</references>
        <references refid="struct_f_s_m_c___n_o_r_s_r_a_m_timing_init_type_def_1a261d043a19cecf77e6859403be204efc" compoundref="stm32f10x__fsmc_8h" startline="84">FSMC_NORSRAMTimingInitTypeDef::FSMC_AccessMode</references>
        <references refid="group___f_s_m_c___access___mode_1gae0f299b51c12257311694c4a8f5c00c3" compoundref="stm32f10x__fsmc_8h" startline="513">FSMC_AccessMode_A</references>
        <references refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1ac62cf7426a933ce6aa6efc3a8e82dac1" compoundref="stm32f10x__fsmc_8h" startline="144">FSMC_NORSRAMInitTypeDef::FSMC_WriteTimingStruct</references>
      </memberdef>
      <memberdef kind="function" id="group___f_s_m_c___exported___functions_1ga8283ad94ad8e83d49d5b77d1c7e17862" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FSMC_NANDStructInit</definition>
        <argsstring>(FSMC_NANDInitTypeDef *FSMC_NANDInitStruct)</argsstring>
        <name>FSMC_NANDStructInit</name>
        <param>
          <type><ref refid="struct_f_s_m_c___n_a_n_d_init_type_def" kindref="compound">FSMC_NANDInitTypeDef</ref> *</type>
          <declname>FSMC_NANDInitStruct</declname>
        </param>
        <briefdescription>
<para>Fills each FSMC_NANDInitStruct member with its default value. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>FSMC_NANDInitStruct</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a <ref refid="struct_f_s_m_c___n_a_n_d_init_type_def" kindref="compound">FSMC_NANDInitTypeDef</ref> structure which will be initialized. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" line="703" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_fsmc.c" bodystart="418" bodyend="436"/>
        <references refid="struct_f_s_m_c___n_a_n_d_init_type_def_1a60d3ead2188e1dbdf06810e952b3ce0f" compoundref="stm32f10x__fsmc_8h" startline="185">FSMC_NANDInitTypeDef::FSMC_Bank</references>
        <references refid="group___f_s_m_c___n_a_n_d___bank_1ga294e7134aa329a09e56b61eec9882a27" compoundref="stm32f10x__fsmc_8h" startline="260">FSMC_Bank2_NAND</references>
        <references refid="struct_f_s_m_c___n_a_n_d_init_type_def_1ab350e15014c4a9f4b2c2f2848f11eeca" compoundref="stm32f10x__fsmc_8h" startline="188">FSMC_NANDInitTypeDef::FSMC_Waitfeature</references>
        <references refid="group___f_s_m_c___wait__feature_1ga8a31f05576e66546fbbcdb06ff67da7d" compoundref="stm32f10x__fsmc_8h" startline="538">FSMC_Waitfeature_Disable</references>
        <references refid="struct_f_s_m_c___n_a_n_d_init_type_def_1ab4a4f56aab3150d8fb02aaf092db0235" compoundref="stm32f10x__fsmc_8h" startline="191">FSMC_NANDInitTypeDef::FSMC_MemoryDataWidth</references>
        <references refid="group___f_s_m_c___data___width_1ga5753e089830f19af70a724766e3c329f" compoundref="stm32f10x__fsmc_8h" startline="326">FSMC_MemoryDataWidth_8b</references>
        <references refid="struct_f_s_m_c___n_a_n_d_init_type_def_1a58d0510c0ce0ae3d1e3863bf8f571377" compoundref="stm32f10x__fsmc_8h" startline="194">FSMC_NANDInitTypeDef::FSMC_ECC</references>
        <references refid="group___f_s_m_c___e_c_c_1ga9a3264c0718f5023fd106abea7ef806d" compoundref="stm32f10x__fsmc_8h" startline="552">FSMC_ECC_Disable</references>
        <references refid="struct_f_s_m_c___n_a_n_d_init_type_def_1a7ed6a25710ba724a7a8f90af60130cf6" compoundref="stm32f10x__fsmc_8h" startline="197">FSMC_NANDInitTypeDef::FSMC_ECCPageSize</references>
        <references refid="group___f_s_m_c___e_c_c___page___size_1gaaa1661267b44e6728fa64aca79de54b3" compoundref="stm32f10x__fsmc_8h" startline="565">FSMC_ECCPageSize_256Bytes</references>
        <references refid="struct_f_s_m_c___n_a_n_d_init_type_def_1a633c7be46a1d281916b9f2e34fa3d36a" compoundref="stm32f10x__fsmc_8h" startline="200">FSMC_NANDInitTypeDef::FSMC_TCLRSetupTime</references>
        <references refid="struct_f_s_m_c___n_a_n_d_init_type_def_1a014c1b8977b454ac15654d93dbb7dff9" compoundref="stm32f10x__fsmc_8h" startline="204">FSMC_NANDInitTypeDef::FSMC_TARSetupTime</references>
        <references refid="struct_f_s_m_c___n_a_n_d_init_type_def_1a7ab117a15e780c02fcad5d844e71c425" compoundref="stm32f10x__fsmc_8h" startline="208">FSMC_NANDInitTypeDef::FSMC_CommonSpaceTimingStruct</references>
        <references refid="struct_f_s_m_c___n_a_n_d___p_c_c_a_r_d_timing_init_type_def_1a31632aeb49269a29a39e3b191590b6dc" compoundref="stm32f10x__fsmc_8h" startline="153">FSMC_NAND_PCCARDTimingInitTypeDef::FSMC_SetupTime</references>
        <references refid="struct_f_s_m_c___n_a_n_d___p_c_c_a_r_d_timing_init_type_def_1a99a7d54ed2674faa5a4e0f2669812855" compoundref="stm32f10x__fsmc_8h" startline="159">FSMC_NAND_PCCARDTimingInitTypeDef::FSMC_WaitSetupTime</references>
        <references refid="struct_f_s_m_c___n_a_n_d___p_c_c_a_r_d_timing_init_type_def_1ae2b53c2cfd55ff277f453613dcf7c8b2" compoundref="stm32f10x__fsmc_8h" startline="165">FSMC_NAND_PCCARDTimingInitTypeDef::FSMC_HoldSetupTime</references>
        <references refid="struct_f_s_m_c___n_a_n_d___p_c_c_a_r_d_timing_init_type_def_1a8a2a2a9e71dbf276fddad2bb32c0d256" compoundref="stm32f10x__fsmc_8h" startline="172">FSMC_NAND_PCCARDTimingInitTypeDef::FSMC_HiZSetupTime</references>
        <references refid="struct_f_s_m_c___n_a_n_d_init_type_def_1a2a33bd855240dba37e507f223dbca062" compoundref="stm32f10x__fsmc_8h" startline="210">FSMC_NANDInitTypeDef::FSMC_AttributeSpaceTimingStruct</references>
      </memberdef>
      <memberdef kind="function" id="group___f_s_m_c___exported___functions_1ga7a64ba0e0545b3f1913c9d1d28c05e62" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FSMC_PCCARDStructInit</definition>
        <argsstring>(FSMC_PCCARDInitTypeDef *FSMC_PCCARDInitStruct)</argsstring>
        <name>FSMC_PCCARDStructInit</name>
        <param>
          <type><ref refid="struct_f_s_m_c___p_c_c_a_r_d_init_type_def" kindref="compound">FSMC_PCCARDInitTypeDef</ref> *</type>
          <declname>FSMC_PCCARDInitStruct</declname>
        </param>
        <briefdescription>
<para>Fills each FSMC_PCCARDInitStruct member with its default value. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>FSMC_PCCARDInitStruct</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a <ref refid="struct_f_s_m_c___p_c_c_a_r_d_init_type_def" kindref="compound">FSMC_PCCARDInitTypeDef</ref> structure which will be initialized. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" line="704" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_fsmc.c" bodystart="444" bodyend="462"/>
        <references refid="struct_f_s_m_c___p_c_c_a_r_d_init_type_def_1a3ffd8c627ffe3ac90dfbfe93a8b97c26" compoundref="stm32f10x__fsmc_8h" startline="219">FSMC_PCCARDInitTypeDef::FSMC_Waitfeature</references>
        <references refid="group___f_s_m_c___wait__feature_1ga8a31f05576e66546fbbcdb06ff67da7d" compoundref="stm32f10x__fsmc_8h" startline="538">FSMC_Waitfeature_Disable</references>
        <references refid="struct_f_s_m_c___p_c_c_a_r_d_init_type_def_1a15db9675791f6f9c7fd82fe1084ff694" compoundref="stm32f10x__fsmc_8h" startline="222">FSMC_PCCARDInitTypeDef::FSMC_TCLRSetupTime</references>
        <references refid="struct_f_s_m_c___p_c_c_a_r_d_init_type_def_1ac83f977e01623595e0aa8dd0b1eb3fcc" compoundref="stm32f10x__fsmc_8h" startline="226">FSMC_PCCARDInitTypeDef::FSMC_TARSetupTime</references>
        <references refid="struct_f_s_m_c___p_c_c_a_r_d_init_type_def_1a87cb99ebe9b5ed570c6467abc9c2ef6d" compoundref="stm32f10x__fsmc_8h" startline="231">FSMC_PCCARDInitTypeDef::FSMC_CommonSpaceTimingStruct</references>
        <references refid="struct_f_s_m_c___n_a_n_d___p_c_c_a_r_d_timing_init_type_def_1a31632aeb49269a29a39e3b191590b6dc" compoundref="stm32f10x__fsmc_8h" startline="153">FSMC_NAND_PCCARDTimingInitTypeDef::FSMC_SetupTime</references>
        <references refid="struct_f_s_m_c___n_a_n_d___p_c_c_a_r_d_timing_init_type_def_1a99a7d54ed2674faa5a4e0f2669812855" compoundref="stm32f10x__fsmc_8h" startline="159">FSMC_NAND_PCCARDTimingInitTypeDef::FSMC_WaitSetupTime</references>
        <references refid="struct_f_s_m_c___n_a_n_d___p_c_c_a_r_d_timing_init_type_def_1ae2b53c2cfd55ff277f453613dcf7c8b2" compoundref="stm32f10x__fsmc_8h" startline="165">FSMC_NAND_PCCARDTimingInitTypeDef::FSMC_HoldSetupTime</references>
        <references refid="struct_f_s_m_c___n_a_n_d___p_c_c_a_r_d_timing_init_type_def_1a8a2a2a9e71dbf276fddad2bb32c0d256" compoundref="stm32f10x__fsmc_8h" startline="172">FSMC_NAND_PCCARDTimingInitTypeDef::FSMC_HiZSetupTime</references>
        <references refid="struct_f_s_m_c___p_c_c_a_r_d_init_type_def_1aee510f2e6e6ef18e7f5eedfed702f697" compoundref="stm32f10x__fsmc_8h" startline="233">FSMC_PCCARDInitTypeDef::FSMC_AttributeSpaceTimingStruct</references>
        <references refid="struct_f_s_m_c___p_c_c_a_r_d_init_type_def_1abd9b9e8d7623829a40e5255b0949a3a1" compoundref="stm32f10x__fsmc_8h" startline="235">FSMC_PCCARDInitTypeDef::FSMC_IOSpaceTimingStruct</references>
      </memberdef>
      <memberdef kind="function" id="group___f_s_m_c___exported___functions_1gaf943f0f2680168d3a95a3c2c9f3eca2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FSMC_NORSRAMCmd</definition>
        <argsstring>(uint32_t FSMC_Bank, FunctionalState NewState)</argsstring>
        <name>FSMC_NORSRAMCmd</name>
        <param>
          <type>uint32_t</type>
          <declname>FSMC_Bank</declname>
        </param>
        <param>
          <type><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref></type>
          <declname>NewState</declname>
        </param>
        <briefdescription>
<para>Enables or disables the specified NOR/SRAM Memory Bank. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>FSMC_Bank</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the FSMC Bank to be used This parameter can be one of the following values: <itemizedlist>
<listitem><para>FSMC_Bank1_NORSRAM1: FSMC Bank1 NOR/SRAM1 </para></listitem>
<listitem><para>FSMC_Bank1_NORSRAM2: FSMC Bank1 NOR/SRAM2 </para></listitem>
<listitem><para>FSMC_Bank1_NORSRAM3: FSMC Bank1 NOR/SRAM3 </para></listitem>
<listitem><para>FSMC_Bank1_NORSRAM4: FSMC Bank1 NOR/SRAM4 </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NewState</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of the FSMC_Bank. This parameter can be: ENABLE or DISABLE. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" line="705" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_fsmc.c" bodystart="475" bodyend="490"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___f_s_m_c___exported___constants_1ga3e3bed3dd83d38e63f11ac4cbcb87304" compoundref="stm32f10x__fsmc_8h" startline="274">IS_FSMC_NORSRAM_BANK</references>
        <references refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" compoundref="stm32f10x_8h" startline="522">IS_FUNCTIONAL_STATE</references>
        <references refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1ad3a9df141be0ccf10389b640f492b26d" compoundref="stm32f10x_8h" startline="521">DISABLE</references>
        <references refid="group___peripheral__declaration_1ga2a759bad07fe730c99f9e1490e646220" compoundref="stm32f10x_8h" startline="1448">FSMC_Bank1</references>
        <references refid="group___f_s_m_c___private___defines_1ga3c427afcf32b17fb72be67fd4638e6d5" compoundref="stm32f10x__fsmc_8c" startline="49">BCR_MBKEN_Set</references>
        <references refid="group___f_s_m_c___private___defines_1gaa63b72d32a32c53a057ee0a45bed0d3b" compoundref="stm32f10x__fsmc_8c" startline="50">BCR_MBKEN_Reset</references>
      </memberdef>
      <memberdef kind="function" id="group___f_s_m_c___exported___functions_1ga33ec7c39ea4d42e92c72c6e517d8235c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FSMC_NANDCmd</definition>
        <argsstring>(uint32_t FSMC_Bank, FunctionalState NewState)</argsstring>
        <name>FSMC_NANDCmd</name>
        <param>
          <type>uint32_t</type>
          <declname>FSMC_Bank</declname>
        </param>
        <param>
          <type><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref></type>
          <declname>NewState</declname>
        </param>
        <briefdescription>
<para>Enables or disables the specified NAND Memory Bank. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>FSMC_Bank</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the FSMC Bank to be used This parameter can be one of the following values: <itemizedlist>
<listitem><para>FSMC_Bank2_NAND: FSMC Bank2 NAND </para></listitem>
<listitem><para>FSMC_Bank3_NAND: FSMC Bank3 NAND </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NewState</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of the FSMC_Bank. This parameter can be: ENABLE or DISABLE. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" line="706" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_fsmc.c" bodystart="501" bodyend="530"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___f_s_m_c___exported___constants_1ga725bada099197f15f49dc0c5be00e19b" compoundref="stm32f10x__fsmc_8h" startline="279">IS_FSMC_NAND_BANK</references>
        <references refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" compoundref="stm32f10x_8h" startline="522">IS_FUNCTIONAL_STATE</references>
        <references refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1ad3a9df141be0ccf10389b640f492b26d" compoundref="stm32f10x_8h" startline="521">DISABLE</references>
        <references refid="group___f_s_m_c___n_a_n_d___bank_1ga294e7134aa329a09e56b61eec9882a27" compoundref="stm32f10x__fsmc_8h" startline="260">FSMC_Bank2_NAND</references>
        <references refid="group___peripheral__declaration_1gabb3dfb5e88694aa2983ecabd33a55e0a" compoundref="stm32f10x_8h" startline="1450">FSMC_Bank2</references>
        <references refid="group___f_s_m_c___private___defines_1gade871050f882b7f48582084b0e95f67c" compoundref="stm32f10x__fsmc_8c" startline="54">PCR_PBKEN_Set</references>
        <references refid="group___peripheral__declaration_1ga411eedc00b5b2b22b494004d4f41b736" compoundref="stm32f10x_8h" startline="1451">FSMC_Bank3</references>
        <references refid="group___f_s_m_c___private___defines_1gac6d0ddc3888a0554b032f0f484cfe332" compoundref="stm32f10x__fsmc_8c" startline="55">PCR_PBKEN_Reset</references>
      </memberdef>
      <memberdef kind="function" id="group___f_s_m_c___exported___functions_1ga2d410151ceb3428c6a1bf374a0472cde" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FSMC_PCCARDCmd</definition>
        <argsstring>(FunctionalState NewState)</argsstring>
        <name>FSMC_PCCARDCmd</name>
        <param>
          <type><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref></type>
          <declname>NewState</declname>
        </param>
        <briefdescription>
<para>Enables or disables the PCCARD Memory Bank. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>NewState</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of the PCCARD Memory Bank. This parameter can be: ENABLE or DISABLE. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" line="707" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_fsmc.c" bodystart="538" bodyend="552"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" compoundref="stm32f10x_8h" startline="522">IS_FUNCTIONAL_STATE</references>
        <references refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1ad3a9df141be0ccf10389b640f492b26d" compoundref="stm32f10x_8h" startline="521">DISABLE</references>
        <references refid="group___peripheral__declaration_1ga5aa00e4ac522693c6a21bc23ef5a96df" compoundref="stm32f10x_8h" startline="1452">FSMC_Bank4</references>
        <references refid="group___f_s_m_c___private___defines_1gade871050f882b7f48582084b0e95f67c" compoundref="stm32f10x__fsmc_8c" startline="54">PCR_PBKEN_Set</references>
        <references refid="group___f_s_m_c___private___defines_1gac6d0ddc3888a0554b032f0f484cfe332" compoundref="stm32f10x__fsmc_8c" startline="55">PCR_PBKEN_Reset</references>
      </memberdef>
      <memberdef kind="function" id="group___f_s_m_c___exported___functions_1ga5800301fc39bbe998a18ebd9ff191cdc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FSMC_NANDECCCmd</definition>
        <argsstring>(uint32_t FSMC_Bank, FunctionalState NewState)</argsstring>
        <name>FSMC_NANDECCCmd</name>
        <param>
          <type>uint32_t</type>
          <declname>FSMC_Bank</declname>
        </param>
        <param>
          <type><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref></type>
          <declname>NewState</declname>
        </param>
        <briefdescription>
<para>Enables or disables the FSMC NAND ECC feature. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>FSMC_Bank</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the FSMC Bank to be used This parameter can be one of the following values: <itemizedlist>
<listitem><para>FSMC_Bank2_NAND: FSMC Bank2 NAND </para></listitem>
<listitem><para>FSMC_Bank3_NAND: FSMC Bank3 NAND </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NewState</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of the FSMC NAND ECC feature. This parameter can be: ENABLE or DISABLE. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" line="708" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_fsmc.c" bodystart="564" bodyend="593"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___f_s_m_c___exported___constants_1ga725bada099197f15f49dc0c5be00e19b" compoundref="stm32f10x__fsmc_8h" startline="279">IS_FSMC_NAND_BANK</references>
        <references refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" compoundref="stm32f10x_8h" startline="522">IS_FUNCTIONAL_STATE</references>
        <references refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1ad3a9df141be0ccf10389b640f492b26d" compoundref="stm32f10x_8h" startline="521">DISABLE</references>
        <references refid="group___f_s_m_c___n_a_n_d___bank_1ga294e7134aa329a09e56b61eec9882a27" compoundref="stm32f10x__fsmc_8h" startline="260">FSMC_Bank2_NAND</references>
        <references refid="group___peripheral__declaration_1gabb3dfb5e88694aa2983ecabd33a55e0a" compoundref="stm32f10x_8h" startline="1450">FSMC_Bank2</references>
        <references refid="group___f_s_m_c___private___defines_1ga8a0d7950936e3869b449d421e03a19ac" compoundref="stm32f10x__fsmc_8c" startline="56">PCR_ECCEN_Set</references>
        <references refid="group___peripheral__declaration_1ga411eedc00b5b2b22b494004d4f41b736" compoundref="stm32f10x_8h" startline="1451">FSMC_Bank3</references>
        <references refid="group___f_s_m_c___private___defines_1gaca1a5c5cd46c8a32dab58c3eb3b865fa" compoundref="stm32f10x__fsmc_8c" startline="57">PCR_ECCEN_Reset</references>
      </memberdef>
      <memberdef kind="function" id="group___f_s_m_c___exported___functions_1gaad6d4f5b5a41684ce053fea55bdb98d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t FSMC_GetECC</definition>
        <argsstring>(uint32_t FSMC_Bank)</argsstring>
        <name>FSMC_GetECC</name>
        <param>
          <type>uint32_t</type>
          <declname>FSMC_Bank</declname>
        </param>
        <briefdescription>
<para>Returns the error correction code register value. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>FSMC_Bank</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the FSMC Bank to be used This parameter can be one of the following values: <itemizedlist>
<listitem><para>FSMC_Bank2_NAND: FSMC Bank2 NAND </para></listitem>
<listitem><para>FSMC_Bank3_NAND: FSMC Bank3 NAND </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>Error Correction Code (ECC) value. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" line="709" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_fsmc.c" bodystart="603" bodyend="619"/>
        <references refid="group___f_s_m_c___n_a_n_d___bank_1ga294e7134aa329a09e56b61eec9882a27" compoundref="stm32f10x__fsmc_8h" startline="260">FSMC_Bank2_NAND</references>
        <references refid="group___peripheral__declaration_1gabb3dfb5e88694aa2983ecabd33a55e0a" compoundref="stm32f10x_8h" startline="1450">FSMC_Bank2</references>
        <references refid="group___peripheral__declaration_1ga411eedc00b5b2b22b494004d4f41b736" compoundref="stm32f10x_8h" startline="1451">FSMC_Bank3</references>
      </memberdef>
      <memberdef kind="function" id="group___f_s_m_c___exported___functions_1ga217027ae3cd213b9076b6a1be197064c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FSMC_ITConfig</definition>
        <argsstring>(uint32_t FSMC_Bank, uint32_t FSMC_IT, FunctionalState NewState)</argsstring>
        <name>FSMC_ITConfig</name>
        <param>
          <type>uint32_t</type>
          <declname>FSMC_Bank</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>FSMC_IT</declname>
        </param>
        <param>
          <type><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref></type>
          <declname>NewState</declname>
        </param>
        <briefdescription>
<para>Enables or disables the specified FSMC interrupts. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>FSMC_Bank</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the FSMC Bank to be used This parameter can be one of the following values: <itemizedlist>
<listitem><para>FSMC_Bank2_NAND: FSMC Bank2 NAND </para></listitem>
<listitem><para>FSMC_Bank3_NAND: FSMC Bank3 NAND </para></listitem>
<listitem><para>FSMC_Bank4_PCCARD: FSMC Bank4 PCCARD </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FSMC_IT</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the FSMC interrupt sources to be enabled or disabled. This parameter can be any combination of the following values: <itemizedlist>
<listitem><para>FSMC_IT_RisingEdge: Rising edge detection interrupt. </para></listitem>
<listitem><para>FSMC_IT_Level: Level edge detection interrupt. </para></listitem>
<listitem><para>FSMC_IT_FallingEdge: Falling edge detection interrupt. </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NewState</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of the specified FSMC interrupts. This parameter can be: ENABLE or DISABLE. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" line="710" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_fsmc.c" bodystart="637" bodyend="680"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___f_s_m_c___exported___constants_1gaca216ea0c184b78f23df15296a10bac0" compoundref="stm32f10x__fsmc_8h" startline="286">IS_FSMC_IT_BANK</references>
        <references refid="group___f_s_m_c___interrupt__sources_1ga40a38f097a75f27a700e626905fa9a38" compoundref="stm32f10x__fsmc_8h" startline="649">IS_FSMC_IT</references>
        <references refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" compoundref="stm32f10x_8h" startline="522">IS_FUNCTIONAL_STATE</references>
        <references refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1ad3a9df141be0ccf10389b640f492b26d" compoundref="stm32f10x_8h" startline="521">DISABLE</references>
        <references refid="group___f_s_m_c___n_a_n_d___bank_1ga294e7134aa329a09e56b61eec9882a27" compoundref="stm32f10x__fsmc_8h" startline="260">FSMC_Bank2_NAND</references>
        <references refid="group___peripheral__declaration_1gabb3dfb5e88694aa2983ecabd33a55e0a" compoundref="stm32f10x_8h" startline="1450">FSMC_Bank2</references>
        <references refid="group___f_s_m_c___n_a_n_d___bank_1gaf72def0732c026b0245d721ee371c85b" compoundref="stm32f10x__fsmc_8h" startline="261">FSMC_Bank3_NAND</references>
        <references refid="group___peripheral__declaration_1ga411eedc00b5b2b22b494004d4f41b736" compoundref="stm32f10x_8h" startline="1451">FSMC_Bank3</references>
        <references refid="group___peripheral__declaration_1ga5aa00e4ac522693c6a21bc23ef5a96df" compoundref="stm32f10x_8h" startline="1452">FSMC_Bank4</references>
      </memberdef>
      <memberdef kind="function" id="group___f_s_m_c___exported___functions_1gae00355115b078f483f0771057bb849c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___exported__types_1ga89136caac2e14c55151f527ac02daaff" kindref="member">FlagStatus</ref></type>
        <definition>FlagStatus FSMC_GetFlagStatus</definition>
        <argsstring>(uint32_t FSMC_Bank, uint32_t FSMC_FLAG)</argsstring>
        <name>FSMC_GetFlagStatus</name>
        <param>
          <type>uint32_t</type>
          <declname>FSMC_Bank</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>FSMC_FLAG</declname>
        </param>
        <briefdescription>
<para>Checks whether the specified FSMC flag is set or not. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>FSMC_Bank</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the FSMC Bank to be used This parameter can be one of the following values: <itemizedlist>
<listitem><para>FSMC_Bank2_NAND: FSMC Bank2 NAND </para></listitem>
<listitem><para>FSMC_Bank3_NAND: FSMC Bank3 NAND </para></listitem>
<listitem><para>FSMC_Bank4_PCCARD: FSMC Bank4 PCCARD </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FSMC_FLAG</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the flag to check. This parameter can be one of the following values: <itemizedlist>
<listitem><para>FSMC_FLAG_RisingEdge: Rising egde detection Flag. </para></listitem>
<listitem><para>FSMC_FLAG_Level: Level detection Flag. </para></listitem>
<listitem><para>FSMC_FLAG_FallingEdge: Falling egde detection Flag. </para></listitem>
<listitem><para>FSMC_FLAG_FEMPT: Fifo empty Flag. </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of FSMC_FLAG (SET or RESET). </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" line="711" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_fsmc.c" bodystart="697" bodyend="731"/>
        <references refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffa589b7d94a3d91d145720e2fed0eb3a05" compoundref="stm32f10x_8h" startline="519">RESET</references>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___f_s_m_c___exported___constants_1ga884e28a365a738ad8a3199ee279a1f77" compoundref="stm32f10x__fsmc_8h" startline="282">IS_FSMC_GETFLAG_BANK</references>
        <references refid="group___f_s_m_c___flags_1gab8674160ef7884f939e07041bbf5b18b" compoundref="stm32f10x__fsmc_8h" startline="665">IS_FSMC_GET_FLAG</references>
        <references refid="group___f_s_m_c___n_a_n_d___bank_1ga294e7134aa329a09e56b61eec9882a27" compoundref="stm32f10x__fsmc_8h" startline="260">FSMC_Bank2_NAND</references>
        <references refid="group___peripheral__declaration_1gabb3dfb5e88694aa2983ecabd33a55e0a" compoundref="stm32f10x_8h" startline="1450">FSMC_Bank2</references>
        <references refid="group___f_s_m_c___n_a_n_d___bank_1gaf72def0732c026b0245d721ee371c85b" compoundref="stm32f10x__fsmc_8h" startline="261">FSMC_Bank3_NAND</references>
        <references refid="group___peripheral__declaration_1ga411eedc00b5b2b22b494004d4f41b736" compoundref="stm32f10x_8h" startline="1451">FSMC_Bank3</references>
        <references refid="group___peripheral__declaration_1ga5aa00e4ac522693c6a21bc23ef5a96df" compoundref="stm32f10x_8h" startline="1452">FSMC_Bank4</references>
        <references refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffab44c8101cc294c074709ec1b14211792" compoundref="stm32f10x_8h" startline="519">SET</references>
      </memberdef>
      <memberdef kind="function" id="group___f_s_m_c___exported___functions_1ga697618f2de0ad9a8a82461ddbebd5264" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FSMC_ClearFlag</definition>
        <argsstring>(uint32_t FSMC_Bank, uint32_t FSMC_FLAG)</argsstring>
        <name>FSMC_ClearFlag</name>
        <param>
          <type>uint32_t</type>
          <declname>FSMC_Bank</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>FSMC_FLAG</declname>
        </param>
        <briefdescription>
<para>Clears the FSMC&apos;s pending flags. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>FSMC_Bank</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the FSMC Bank to be used This parameter can be one of the following values: <itemizedlist>
<listitem><para>FSMC_Bank2_NAND: FSMC Bank2 NAND </para></listitem>
<listitem><para>FSMC_Bank3_NAND: FSMC Bank3 NAND </para></listitem>
<listitem><para>FSMC_Bank4_PCCARD: FSMC Bank4 PCCARD </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FSMC_FLAG</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the flag to clear. This parameter can be any combination of the following values: <itemizedlist>
<listitem><para>FSMC_FLAG_RisingEdge: Rising egde detection Flag. </para></listitem>
<listitem><para>FSMC_FLAG_Level: Level detection Flag. </para></listitem>
<listitem><para>FSMC_FLAG_FallingEdge: Falling egde detection Flag. </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" line="712" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_fsmc.c" bodystart="747" bodyend="766"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___f_s_m_c___exported___constants_1ga884e28a365a738ad8a3199ee279a1f77" compoundref="stm32f10x__fsmc_8h" startline="282">IS_FSMC_GETFLAG_BANK</references>
        <references refid="group___f_s_m_c___flags_1ga1114bf56b54e726831b38fc8c5daa14e" compoundref="stm32f10x__fsmc_8h" startline="670">IS_FSMC_CLEAR_FLAG</references>
        <references refid="group___f_s_m_c___n_a_n_d___bank_1ga294e7134aa329a09e56b61eec9882a27" compoundref="stm32f10x__fsmc_8h" startline="260">FSMC_Bank2_NAND</references>
        <references refid="group___peripheral__declaration_1gabb3dfb5e88694aa2983ecabd33a55e0a" compoundref="stm32f10x_8h" startline="1450">FSMC_Bank2</references>
        <references refid="group___f_s_m_c___n_a_n_d___bank_1gaf72def0732c026b0245d721ee371c85b" compoundref="stm32f10x__fsmc_8h" startline="261">FSMC_Bank3_NAND</references>
        <references refid="group___peripheral__declaration_1ga411eedc00b5b2b22b494004d4f41b736" compoundref="stm32f10x_8h" startline="1451">FSMC_Bank3</references>
        <references refid="group___peripheral__declaration_1ga5aa00e4ac522693c6a21bc23ef5a96df" compoundref="stm32f10x_8h" startline="1452">FSMC_Bank4</references>
      </memberdef>
      <memberdef kind="function" id="group___f_s_m_c___exported___functions_1ga7fce9ca889d33cd8b8b7413875dd4d73" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___exported__types_1gaacbd7ed539db0aacd973a0f6eca34074" kindref="member">ITStatus</ref></type>
        <definition>ITStatus FSMC_GetITStatus</definition>
        <argsstring>(uint32_t FSMC_Bank, uint32_t FSMC_IT)</argsstring>
        <name>FSMC_GetITStatus</name>
        <param>
          <type>uint32_t</type>
          <declname>FSMC_Bank</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>FSMC_IT</declname>
        </param>
        <briefdescription>
<para>Checks whether the specified FSMC interrupt has occurred or not. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>FSMC_Bank</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the FSMC Bank to be used This parameter can be one of the following values: <itemizedlist>
<listitem><para>FSMC_Bank2_NAND: FSMC Bank2 NAND </para></listitem>
<listitem><para>FSMC_Bank3_NAND: FSMC Bank3 NAND </para></listitem>
<listitem><para>FSMC_Bank4_PCCARD: FSMC Bank4 PCCARD </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FSMC_IT</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the FSMC interrupt source to check. This parameter can be one of the following values: <itemizedlist>
<listitem><para>FSMC_IT_RisingEdge: Rising edge detection interrupt. </para></listitem>
<listitem><para>FSMC_IT_Level: Level edge detection interrupt. </para></listitem>
<listitem><para>FSMC_IT_FallingEdge: Falling edge detection interrupt. </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of FSMC_IT (SET or RESET). </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" line="713" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_fsmc.c" bodystart="782" bodyend="817"/>
        <references refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffa589b7d94a3d91d145720e2fed0eb3a05" compoundref="stm32f10x_8h" startline="519">RESET</references>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___f_s_m_c___exported___constants_1gaca216ea0c184b78f23df15296a10bac0" compoundref="stm32f10x__fsmc_8h" startline="286">IS_FSMC_IT_BANK</references>
        <references refid="group___f_s_m_c___interrupt__sources_1gae2a57d0b15e025212489ec1421ff245d" compoundref="stm32f10x__fsmc_8h" startline="650">IS_FSMC_GET_IT</references>
        <references refid="group___f_s_m_c___n_a_n_d___bank_1ga294e7134aa329a09e56b61eec9882a27" compoundref="stm32f10x__fsmc_8h" startline="260">FSMC_Bank2_NAND</references>
        <references refid="group___peripheral__declaration_1gabb3dfb5e88694aa2983ecabd33a55e0a" compoundref="stm32f10x_8h" startline="1450">FSMC_Bank2</references>
        <references refid="group___f_s_m_c___n_a_n_d___bank_1gaf72def0732c026b0245d721ee371c85b" compoundref="stm32f10x__fsmc_8h" startline="261">FSMC_Bank3_NAND</references>
        <references refid="group___peripheral__declaration_1ga411eedc00b5b2b22b494004d4f41b736" compoundref="stm32f10x_8h" startline="1451">FSMC_Bank3</references>
        <references refid="group___peripheral__declaration_1ga5aa00e4ac522693c6a21bc23ef5a96df" compoundref="stm32f10x_8h" startline="1452">FSMC_Bank4</references>
        <references refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffab44c8101cc294c074709ec1b14211792" compoundref="stm32f10x_8h" startline="519">SET</references>
      </memberdef>
      <memberdef kind="function" id="group___f_s_m_c___exported___functions_1gad9387e7674b8a376256a3378649e004e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FSMC_ClearITPendingBit</definition>
        <argsstring>(uint32_t FSMC_Bank, uint32_t FSMC_IT)</argsstring>
        <name>FSMC_ClearITPendingBit</name>
        <param>
          <type>uint32_t</type>
          <declname>FSMC_Bank</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>FSMC_IT</declname>
        </param>
        <briefdescription>
<para>Clears the FSMC&apos;s interrupt pending bits. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>FSMC_Bank</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the FSMC Bank to be used This parameter can be one of the following values: <itemizedlist>
<listitem><para>FSMC_Bank2_NAND: FSMC Bank2 NAND </para></listitem>
<listitem><para>FSMC_Bank3_NAND: FSMC Bank3 NAND </para></listitem>
<listitem><para>FSMC_Bank4_PCCARD: FSMC Bank4 PCCARD </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FSMC_IT</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the interrupt pending bit to clear. This parameter can be any combination of the following values: <itemizedlist>
<listitem><para>FSMC_IT_RisingEdge: Rising edge detection interrupt. </para></listitem>
<listitem><para>FSMC_IT_Level: Level edge detection interrupt. </para></listitem>
<listitem><para>FSMC_IT_FallingEdge: Falling edge detection interrupt. </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h" line="714" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_fsmc.c" bodystart="833" bodyend="852"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___f_s_m_c___exported___constants_1gaca216ea0c184b78f23df15296a10bac0" compoundref="stm32f10x__fsmc_8h" startline="286">IS_FSMC_IT_BANK</references>
        <references refid="group___f_s_m_c___interrupt__sources_1ga40a38f097a75f27a700e626905fa9a38" compoundref="stm32f10x__fsmc_8h" startline="649">IS_FSMC_IT</references>
        <references refid="group___f_s_m_c___n_a_n_d___bank_1ga294e7134aa329a09e56b61eec9882a27" compoundref="stm32f10x__fsmc_8h" startline="260">FSMC_Bank2_NAND</references>
        <references refid="group___peripheral__declaration_1gabb3dfb5e88694aa2983ecabd33a55e0a" compoundref="stm32f10x_8h" startline="1450">FSMC_Bank2</references>
        <references refid="group___f_s_m_c___n_a_n_d___bank_1gaf72def0732c026b0245d721ee371c85b" compoundref="stm32f10x__fsmc_8h" startline="261">FSMC_Bank3_NAND</references>
        <references refid="group___peripheral__declaration_1ga411eedc00b5b2b22b494004d4f41b736" compoundref="stm32f10x_8h" startline="1451">FSMC_Bank3</references>
        <references refid="group___peripheral__declaration_1ga5aa00e4ac522693c6a21bc23ef5a96df" compoundref="stm32f10x_8h" startline="1452">FSMC_Bank4</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This file contains all the functions prototypes for the FSMC firmware library. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>MCD Application Team </para></simplesect>
<simplesect kind="version"><para>V3.5.0 </para></simplesect>
<simplesect kind="date"><para>11-March-2011 </para></simplesect>
<simplesect kind="attention"><para></para></simplesect>
THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.</para><para><heading level="2"><center><copy/> COPYRIGHT 2011 STMicroelectronics</center></heading>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="23"><highlight class="comment">/*<sp/>Define<sp/>to<sp/>prevent<sp/>recursive<sp/>inclusion<sp/>-------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__STM32F10x_FSMC_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__STM32F10x_FSMC_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Includes<sp/>------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="stm32f10x_8h" kindref="compound">stm32f10x.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="struct_f_s_m_c___n_o_r_s_r_a_m_timing_init_type_def" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal">{</highlight></codeline>
<codeline lineno="52" refid="struct_f_s_m_c___n_o_r_s_r_a_m_timing_init_type_def_1a2ba90f4ec16bc38a2c4fa29c593b713b" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_timing_init_type_def_1a2ba90f4ec16bc38a2c4fa29c593b713b" kindref="member">FSMC_AddressSetupTime</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="57" refid="struct_f_s_m_c___n_o_r_s_r_a_m_timing_init_type_def_1a917b227ccb0a765791897ce3647ab26b" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_timing_init_type_def_1a917b227ccb0a765791897ce3647ab26b" kindref="member">FSMC_AddressHoldTime</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="62" refid="struct_f_s_m_c___n_o_r_s_r_a_m_timing_init_type_def_1aaa0a9178766adeed424d5c4eb728d1b1" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_timing_init_type_def_1aaa0a9178766adeed424d5c4eb728d1b1" kindref="member">FSMC_DataSetupTime</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="67" refid="struct_f_s_m_c___n_o_r_s_r_a_m_timing_init_type_def_1a3d98d57618e46ec6aa5d876dcc047d32" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_timing_init_type_def_1a3d98d57618e46ec6aa5d876dcc047d32" kindref="member">FSMC_BusTurnAroundDuration</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="72" refid="struct_f_s_m_c___n_o_r_s_r_a_m_timing_init_type_def_1a251b439331b82eecea58aa3f8882ea15" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_timing_init_type_def_1a251b439331b82eecea58aa3f8882ea15" kindref="member">FSMC_CLKDivision</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="76" refid="struct_f_s_m_c___n_o_r_s_r_a_m_timing_init_type_def_1abc33886615fc3627448aa2dba11cfc77" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_timing_init_type_def_1abc33886615fc3627448aa2dba11cfc77" kindref="member">FSMC_DataLatency</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="84" refid="struct_f_s_m_c___n_o_r_s_r_a_m_timing_init_type_def_1a261d043a19cecf77e6859403be204efc" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_timing_init_type_def_1a261d043a19cecf77e6859403be204efc" kindref="member">FSMC_AccessMode</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="86"><highlight class="normal">}<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_timing_init_type_def" kindref="compound">FSMC_NORSRAMTimingInitTypeDef</ref>;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal">{</highlight></codeline>
<codeline lineno="94" refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1a7fcd864461cf0d1cf83b62fa2b4d3f86" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1a7fcd864461cf0d1cf83b62fa2b4d3f86" kindref="member">FSMC_Bank</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="97" refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1af4ff95085d3bb39e34c2f88ca3140ce5" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1af4ff95085d3bb39e34c2f88ca3140ce5" kindref="member">FSMC_DataAddressMux</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="101" refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1a979ad605c6a63923e060576ee01e888d" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1a979ad605c6a63923e060576ee01e888d" kindref="member">FSMC_MemoryType</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="105" refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1a1791c771ff86f5dc5422040409517e9d" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1a1791c771ff86f5dc5422040409517e9d" kindref="member">FSMC_MemoryDataWidth</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="108" refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1aec0bfff5c934c251c21450a50f5bdb79" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1aec0bfff5c934c251c21450a50f5bdb79" kindref="member">FSMC_BurstAccessMode</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="112" refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1ac350cc34377fe3d5f882a6801bab1ac9" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1ac350cc34377fe3d5f882a6801bab1ac9" kindref="member">FSMC_AsynchronousWait</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="116" refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1a5d4d76594fc201943b51095e3ef34791" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1a5d4d76594fc201943b51095e3ef34791" kindref="member">FSMC_WaitSignalPolarity</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="120" refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1a7e201c17bf7c5f6cc69fb6de29c8b024" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1a7e201c17bf7c5f6cc69fb6de29c8b024" kindref="member">FSMC_WrapMode</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="124" refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1a71c6e7cc8e7e1a8fd0562960ffd23e88" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1a71c6e7cc8e7e1a8fd0562960ffd23e88" kindref="member">FSMC_WaitSignalActive</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="129" refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1a596793d1735c4e38c87e3bf91d986370" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1a596793d1735c4e38c87e3bf91d986370" kindref="member">FSMC_WriteOperation</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="132" refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1aedbc7df3ff61cc93a910a64dc53c932b" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1aedbc7df3ff61cc93a910a64dc53c932b" kindref="member">FSMC_WaitSignal</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="136" refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1af33d0076b5bfea3a66e388ed7f3eb3f3" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1af33d0076b5bfea3a66e388ed7f3eb3f3" kindref="member">FSMC_ExtendedMode</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="139" refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1adac3756711f2d76e56a8cbcb7a03843d" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1adac3756711f2d76e56a8cbcb7a03843d" kindref="member">FSMC_WriteBurst</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="142" refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1a33f8e281b9ff3187906309d005b4159e" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_timing_init_type_def" kindref="compound">FSMC_NORSRAMTimingInitTypeDef</ref>*<sp/><ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1a33f8e281b9ff3187906309d005b4159e" kindref="member">FSMC_ReadWriteTimingStruct</ref>;<sp/></highlight></codeline>
<codeline lineno="144" refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1ac62cf7426a933ce6aa6efc3a8e82dac1" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_timing_init_type_def" kindref="compound">FSMC_NORSRAMTimingInitTypeDef</ref>*<sp/><ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1ac62cf7426a933ce6aa6efc3a8e82dac1" kindref="member">FSMC_WriteTimingStruct</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="145"><highlight class="normal">}<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def" kindref="compound">FSMC_NORSRAMInitTypeDef</ref>;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="151" refid="struct_f_s_m_c___n_a_n_d___p_c_c_a_r_d_timing_init_type_def" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal">{</highlight></codeline>
<codeline lineno="153" refid="struct_f_s_m_c___n_a_n_d___p_c_c_a_r_d_timing_init_type_def_1a31632aeb49269a29a39e3b191590b6dc" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="struct_f_s_m_c___n_a_n_d___p_c_c_a_r_d_timing_init_type_def_1a31632aeb49269a29a39e3b191590b6dc" kindref="member">FSMC_SetupTime</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="159" refid="struct_f_s_m_c___n_a_n_d___p_c_c_a_r_d_timing_init_type_def_1a99a7d54ed2674faa5a4e0f2669812855" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="struct_f_s_m_c___n_a_n_d___p_c_c_a_r_d_timing_init_type_def_1a99a7d54ed2674faa5a4e0f2669812855" kindref="member">FSMC_WaitSetupTime</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="165" refid="struct_f_s_m_c___n_a_n_d___p_c_c_a_r_d_timing_init_type_def_1ae2b53c2cfd55ff277f453613dcf7c8b2" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="struct_f_s_m_c___n_a_n_d___p_c_c_a_r_d_timing_init_type_def_1ae2b53c2cfd55ff277f453613dcf7c8b2" kindref="member">FSMC_HoldSetupTime</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="172" refid="struct_f_s_m_c___n_a_n_d___p_c_c_a_r_d_timing_init_type_def_1a8a2a2a9e71dbf276fddad2bb32c0d256" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="struct_f_s_m_c___n_a_n_d___p_c_c_a_r_d_timing_init_type_def_1a8a2a2a9e71dbf276fddad2bb32c0d256" kindref="member">FSMC_HiZSetupTime</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="177"><highlight class="normal">}<ref refid="struct_f_s_m_c___n_a_n_d___p_c_c_a_r_d_timing_init_type_def" kindref="compound">FSMC_NAND_PCCARDTimingInitTypeDef</ref>;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="183" refid="struct_f_s_m_c___n_a_n_d_init_type_def" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal">{</highlight></codeline>
<codeline lineno="185" refid="struct_f_s_m_c___n_a_n_d_init_type_def_1a60d3ead2188e1dbdf06810e952b3ce0f" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="struct_f_s_m_c___n_a_n_d_init_type_def_1a60d3ead2188e1dbdf06810e952b3ce0f" kindref="member">FSMC_Bank</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="188" refid="struct_f_s_m_c___n_a_n_d_init_type_def_1ab350e15014c4a9f4b2c2f2848f11eeca" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="struct_f_s_m_c___n_a_n_d_init_type_def_1ab350e15014c4a9f4b2c2f2848f11eeca" kindref="member">FSMC_Waitfeature</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="191" refid="struct_f_s_m_c___n_a_n_d_init_type_def_1ab4a4f56aab3150d8fb02aaf092db0235" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="struct_f_s_m_c___n_a_n_d_init_type_def_1ab4a4f56aab3150d8fb02aaf092db0235" kindref="member">FSMC_MemoryDataWidth</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="194" refid="struct_f_s_m_c___n_a_n_d_init_type_def_1a58d0510c0ce0ae3d1e3863bf8f571377" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="struct_f_s_m_c___n_a_n_d_init_type_def_1a58d0510c0ce0ae3d1e3863bf8f571377" kindref="member">FSMC_ECC</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="197" refid="struct_f_s_m_c___n_a_n_d_init_type_def_1a7ed6a25710ba724a7a8f90af60130cf6" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="struct_f_s_m_c___n_a_n_d_init_type_def_1a7ed6a25710ba724a7a8f90af60130cf6" kindref="member">FSMC_ECCPageSize</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="200" refid="struct_f_s_m_c___n_a_n_d_init_type_def_1a633c7be46a1d281916b9f2e34fa3d36a" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="struct_f_s_m_c___n_a_n_d_init_type_def_1a633c7be46a1d281916b9f2e34fa3d36a" kindref="member">FSMC_TCLRSetupTime</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="204" refid="struct_f_s_m_c___n_a_n_d_init_type_def_1a014c1b8977b454ac15654d93dbb7dff9" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="struct_f_s_m_c___n_a_n_d_init_type_def_1a014c1b8977b454ac15654d93dbb7dff9" kindref="member">FSMC_TARSetupTime</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="208" refid="struct_f_s_m_c___n_a_n_d_init_type_def_1a7ab117a15e780c02fcad5d844e71c425" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="struct_f_s_m_c___n_a_n_d___p_c_c_a_r_d_timing_init_type_def" kindref="compound">FSMC_NAND_PCCARDTimingInitTypeDef</ref>*<sp/><sp/><ref refid="struct_f_s_m_c___n_a_n_d_init_type_def_1a7ab117a15e780c02fcad5d844e71c425" kindref="member">FSMC_CommonSpaceTimingStruct</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="210" refid="struct_f_s_m_c___n_a_n_d_init_type_def_1a2a33bd855240dba37e507f223dbca062" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="struct_f_s_m_c___n_a_n_d___p_c_c_a_r_d_timing_init_type_def" kindref="compound">FSMC_NAND_PCCARDTimingInitTypeDef</ref>*<sp/><sp/><ref refid="struct_f_s_m_c___n_a_n_d_init_type_def_1a2a33bd855240dba37e507f223dbca062" kindref="member">FSMC_AttributeSpaceTimingStruct</ref>;<sp/></highlight></codeline>
<codeline lineno="211"><highlight class="normal">}<ref refid="struct_f_s_m_c___n_a_n_d_init_type_def" kindref="compound">FSMC_NANDInitTypeDef</ref>;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="217" refid="struct_f_s_m_c___p_c_c_a_r_d_init_type_def" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal">{</highlight></codeline>
<codeline lineno="219" refid="struct_f_s_m_c___p_c_c_a_r_d_init_type_def_1a3ffd8c627ffe3ac90dfbfe93a8b97c26" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="struct_f_s_m_c___p_c_c_a_r_d_init_type_def_1a3ffd8c627ffe3ac90dfbfe93a8b97c26" kindref="member">FSMC_Waitfeature</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="222" refid="struct_f_s_m_c___p_c_c_a_r_d_init_type_def_1a15db9675791f6f9c7fd82fe1084ff694" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="struct_f_s_m_c___p_c_c_a_r_d_init_type_def_1a15db9675791f6f9c7fd82fe1084ff694" kindref="member">FSMC_TCLRSetupTime</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="226" refid="struct_f_s_m_c___p_c_c_a_r_d_init_type_def_1ac83f977e01623595e0aa8dd0b1eb3fcc" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="struct_f_s_m_c___p_c_c_a_r_d_init_type_def_1ac83f977e01623595e0aa8dd0b1eb3fcc" kindref="member">FSMC_TARSetupTime</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="231" refid="struct_f_s_m_c___p_c_c_a_r_d_init_type_def_1a87cb99ebe9b5ed570c6467abc9c2ef6d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="struct_f_s_m_c___n_a_n_d___p_c_c_a_r_d_timing_init_type_def" kindref="compound">FSMC_NAND_PCCARDTimingInitTypeDef</ref>*<sp/><sp/><ref refid="struct_f_s_m_c___p_c_c_a_r_d_init_type_def_1a87cb99ebe9b5ed570c6467abc9c2ef6d" kindref="member">FSMC_CommonSpaceTimingStruct</ref>;<sp/></highlight></codeline>
<codeline lineno="233" refid="struct_f_s_m_c___p_c_c_a_r_d_init_type_def_1aee510f2e6e6ef18e7f5eedfed702f697" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="struct_f_s_m_c___n_a_n_d___p_c_c_a_r_d_timing_init_type_def" kindref="compound">FSMC_NAND_PCCARDTimingInitTypeDef</ref>*<sp/><sp/><ref refid="struct_f_s_m_c___p_c_c_a_r_d_init_type_def_1aee510f2e6e6ef18e7f5eedfed702f697" kindref="member">FSMC_AttributeSpaceTimingStruct</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="235" refid="struct_f_s_m_c___p_c_c_a_r_d_init_type_def_1abd9b9e8d7623829a40e5255b0949a3a1" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="struct_f_s_m_c___n_a_n_d___p_c_c_a_r_d_timing_init_type_def" kindref="compound">FSMC_NAND_PCCARDTimingInitTypeDef</ref>*<sp/><sp/><ref refid="struct_f_s_m_c___p_c_c_a_r_d_init_type_def_1abd9b9e8d7623829a40e5255b0949a3a1" kindref="member">FSMC_IOSpaceTimingStruct</ref>;<sp/></highlight></codeline>
<codeline lineno="236"><highlight class="normal">}<ref refid="struct_f_s_m_c___p_c_c_a_r_d_init_type_def" kindref="compound">FSMC_PCCARDInitTypeDef</ref>;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="249" refid="group___f_s_m_c___n_o_r_s_r_a_m___bank_1ga514a05828041fa1a13d464c9e4a0a4a9" refkind="member"><highlight class="preprocessor">#define<sp/>FSMC_Bank1_NORSRAM1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250" refid="group___f_s_m_c___n_o_r_s_r_a_m___bank_1gaef52862c652370b9a658478d275dd956" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FSMC_Bank1_NORSRAM2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000002)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251" refid="group___f_s_m_c___n_o_r_s_r_a_m___bank_1ga151b02506a318ac77382b52f3b5e16f4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FSMC_Bank1_NORSRAM3<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000004)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252" refid="group___f_s_m_c___n_o_r_s_r_a_m___bank_1ga1083572834aa084d21e6698c280f8f74" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FSMC_Bank1_NORSRAM4<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000006)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="260" refid="group___f_s_m_c___n_a_n_d___bank_1ga294e7134aa329a09e56b61eec9882a27" refkind="member"><highlight class="preprocessor">#define<sp/>FSMC_Bank2_NAND<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000010)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261" refid="group___f_s_m_c___n_a_n_d___bank_1gaf72def0732c026b0245d721ee371c85b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FSMC_Bank3_NAND<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000100)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="269" refid="group___f_s_m_c___p_c_c_a_r_d___bank_1gad08ce7c7afc462f3d9ef085b05d42387" refkind="member"><highlight class="preprocessor">#define<sp/>FSMC_Bank4_PCCARD<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00001000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="274" refid="group___f_s_m_c___exported___constants_1ga3e3bed3dd83d38e63f11ac4cbcb87304" refkind="member"><highlight class="preprocessor">#define<sp/>IS_FSMC_NORSRAM_BANK(BANK)<sp/>(((BANK)<sp/>==<sp/>FSMC_Bank1_NORSRAM1)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="275"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((BANK)<sp/>==<sp/>FSMC_Bank1_NORSRAM2)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="276"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((BANK)<sp/>==<sp/>FSMC_Bank1_NORSRAM3)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="277"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((BANK)<sp/>==<sp/>FSMC_Bank1_NORSRAM4))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279" refid="group___f_s_m_c___exported___constants_1ga725bada099197f15f49dc0c5be00e19b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_FSMC_NAND_BANK(BANK)<sp/>(((BANK)<sp/>==<sp/>FSMC_Bank2_NAND)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="280"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((BANK)<sp/>==<sp/>FSMC_Bank3_NAND))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282" refid="group___f_s_m_c___exported___constants_1ga884e28a365a738ad8a3199ee279a1f77" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_FSMC_GETFLAG_BANK(BANK)<sp/>(((BANK)<sp/>==<sp/>FSMC_Bank2_NAND)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="283"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((BANK)<sp/>==<sp/>FSMC_Bank3_NAND)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="284"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((BANK)<sp/>==<sp/>FSMC_Bank4_PCCARD))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286" refid="group___f_s_m_c___exported___constants_1gaca216ea0c184b78f23df15296a10bac0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_FSMC_IT_BANK(BANK)<sp/>(((BANK)<sp/>==<sp/>FSMC_Bank2_NAND)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="287"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((BANK)<sp/>==<sp/>FSMC_Bank3_NAND)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="288"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((BANK)<sp/>==<sp/>FSMC_Bank4_PCCARD))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="298" refid="group___f_s_m_c___data___address___bus___multiplexing_1ga62d92adbcbcc1d6ec9a04de1b343744a" refkind="member"><highlight class="preprocessor">#define<sp/>FSMC_DataAddressMux_Disable<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299" refid="group___f_s_m_c___data___address___bus___multiplexing_1ga1dd4d12e63aaf29dbb8ae4b613f2aa15" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FSMC_DataAddressMux_Enable<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000002)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300" refid="group___f_s_m_c___data___address___bus___multiplexing_1ga546fcab8c1b751b4a959ba2ce5b35d79" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_FSMC_MUX(MUX)<sp/>(((MUX)<sp/>==<sp/>FSMC_DataAddressMux_Disable)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="301"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((MUX)<sp/>==<sp/>FSMC_DataAddressMux_Enable))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="311" refid="group___f_s_m_c___memory___type_1ga8a24e8da42e67dcf6fb2f43659aa49cf" refkind="member"><highlight class="preprocessor">#define<sp/>FSMC_MemoryType_SRAM<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312" refid="group___f_s_m_c___memory___type_1gae3e680998b2fee8d56222634f5268a75" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FSMC_MemoryType_PSRAM<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000004)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313" refid="group___f_s_m_c___memory___type_1ga8b9390abe7c281947c550bf4365649e5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FSMC_MemoryType_NOR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000008)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314" refid="group___f_s_m_c___memory___type_1ga255cd500e141f4ac024cf5f896921233" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_FSMC_MEMORY(MEMORY)<sp/>(((MEMORY)<sp/>==<sp/>FSMC_MemoryType_SRAM)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="315"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((MEMORY)<sp/>==<sp/>FSMC_MemoryType_PSRAM)||<sp/>\</highlight></codeline>
<codeline lineno="316"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((MEMORY)<sp/>==<sp/>FSMC_MemoryType_NOR))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="326" refid="group___f_s_m_c___data___width_1ga5753e089830f19af70a724766e3c329f" refkind="member"><highlight class="preprocessor">#define<sp/>FSMC_MemoryDataWidth_8b<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327" refid="group___f_s_m_c___data___width_1ga65d85c3072e6790ae760ca2248e46df6" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FSMC_MemoryDataWidth_16b<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000010)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328" refid="group___f_s_m_c___data___width_1ga003d52b62f5950fb041f73f15ce20171" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_FSMC_MEMORY_WIDTH(WIDTH)<sp/>(((WIDTH)<sp/>==<sp/>FSMC_MemoryDataWidth_8b)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="329"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((WIDTH)<sp/>==<sp/>FSMC_MemoryDataWidth_16b))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="339" refid="group___f_s_m_c___burst___access___mode_1ga26fc544945415e350563a9b00684850c" refkind="member"><highlight class="preprocessor">#define<sp/>FSMC_BurstAccessMode_Disable<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000000)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340" refid="group___f_s_m_c___burst___access___mode_1ga841831dfacfdd8889dafe26cc594bf02" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FSMC_BurstAccessMode_Enable<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000100)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341" refid="group___f_s_m_c___burst___access___mode_1gaf8736659c5064c3c03753d7874401e71" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_FSMC_BURSTMODE(STATE)<sp/>(((STATE)<sp/>==<sp/>FSMC_BurstAccessMode_Disable)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="342"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((STATE)<sp/>==<sp/>FSMC_BurstAccessMode_Enable))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="350" refid="group___f_s_m_c___asynchronous_wait_1ga36c0dad6fe6c0e01632d3312c8f4c4cb" refkind="member"><highlight class="preprocessor">#define<sp/>FSMC_AsynchronousWait_Disable<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351" refid="group___f_s_m_c___asynchronous_wait_1gaff524bfa697106ede7d4b557a5ad7d8c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FSMC_AsynchronousWait_Enable<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00008000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352" refid="group___f_s_m_c___asynchronous_wait_1ga52d579de825316ee058baf11bfb749d6" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_FSMC_ASYNWAIT(STATE)<sp/>(((STATE)<sp/>==<sp/>FSMC_AsynchronousWait_Disable)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="353"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((STATE)<sp/>==<sp/>FSMC_AsynchronousWait_Enable))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="363" refid="group___f_s_m_c___wait___signal___polarity_1ga7dc72fdfc6225e5daa9b8efee8dff49f" refkind="member"><highlight class="preprocessor">#define<sp/>FSMC_WaitSignalPolarity_Low<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364" refid="group___f_s_m_c___wait___signal___polarity_1ga3418f29249a261edb1359d1bcdc43661" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FSMC_WaitSignalPolarity_High<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000200)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365" refid="group___f_s_m_c___wait___signal___polarity_1gabc5321807d5184fe5cdb7848e1be7bc6" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_FSMC_WAIT_POLARITY(POLARITY)<sp/>(((POLARITY)<sp/>==<sp/>FSMC_WaitSignalPolarity_Low)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="366"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((POLARITY)<sp/>==<sp/>FSMC_WaitSignalPolarity_High))<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="376" refid="group___f_s_m_c___wrap___mode_1ga6041f0d3055ea3811a5a19560092f266" refkind="member"><highlight class="preprocessor">#define<sp/>FSMC_WrapMode_Disable<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377" refid="group___f_s_m_c___wrap___mode_1gad07eb0ae0362b2f94071d0dab6473fda" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FSMC_WrapMode_Enable<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000400)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378" refid="group___f_s_m_c___wrap___mode_1ga0751d74b7fb1e17f6cedea091e8ebfc8" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_FSMC_WRAP_MODE(MODE)<sp/>(((MODE)<sp/>==<sp/>FSMC_WrapMode_Disable)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="379"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((MODE)<sp/>==<sp/>FSMC_WrapMode_Enable))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="389" refid="group___f_s_m_c___wait___timing_1ga62c6855a7cc65b20024085f09cdc65e8" refkind="member"><highlight class="preprocessor">#define<sp/>FSMC_WaitSignalActive_BeforeWaitState<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390" refid="group___f_s_m_c___wait___timing_1gae905fc59e5d99091d132d7c221c8b6d4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FSMC_WaitSignalActive_DuringWaitState<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000800)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391" refid="group___f_s_m_c___wait___timing_1ga3edb40c756afa8bb78550b7e22ded093" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_FSMC_WAIT_SIGNAL_ACTIVE(ACTIVE)<sp/>(((ACTIVE)<sp/>==<sp/>FSMC_WaitSignalActive_BeforeWaitState)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="392"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((ACTIVE)<sp/>==<sp/>FSMC_WaitSignalActive_DuringWaitState))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="402" refid="group___f_s_m_c___write___operation_1ga74176320484248f06abae854170f9d9f" refkind="member"><highlight class="preprocessor">#define<sp/>FSMC_WriteOperation_Disable<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403" refid="group___f_s_m_c___write___operation_1ga2478beb6dd8861b34a16b8a57a795e56" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FSMC_WriteOperation_Enable<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00001000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404" refid="group___f_s_m_c___write___operation_1ga87fc20d11761caa66c3e7d77a3a7d3e3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_FSMC_WRITE_OPERATION(OPERATION)<sp/>(((OPERATION)<sp/>==<sp/>FSMC_WriteOperation_Disable)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="405"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((OPERATION)<sp/>==<sp/>FSMC_WriteOperation_Enable))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="415" refid="group___f_s_m_c___wait___signal_1ga6ea66c8ddee073281c421533bdff7e19" refkind="member"><highlight class="preprocessor">#define<sp/>FSMC_WaitSignal_Disable<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416" refid="group___f_s_m_c___wait___signal_1gaf809e339f1cdc9d0a815fd98712e9ee3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FSMC_WaitSignal_Enable<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00002000)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417" refid="group___f_s_m_c___wait___signal_1gae617db4f15c82850d4f5c927f9a7db3e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_FSMC_WAITE_SIGNAL(SIGNAL)<sp/>(((SIGNAL)<sp/>==<sp/>FSMC_WaitSignal_Disable)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="418"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((SIGNAL)<sp/>==<sp/>FSMC_WaitSignal_Enable))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="427" refid="group___f_s_m_c___extended___mode_1ga5a1f1acdc44328158f59012748980dd3" refkind="member"><highlight class="preprocessor">#define<sp/>FSMC_ExtendedMode_Disable<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428" refid="group___f_s_m_c___extended___mode_1gaef9ff4c81a52fdb0471d2c4422271d2a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FSMC_ExtendedMode_Enable<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00004000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430" refid="group___f_s_m_c___extended___mode_1ga79849ea07bf2a8f09989a6babd9e66e2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_FSMC_EXTENDED_MODE(MODE)<sp/>(((MODE)<sp/>==<sp/>FSMC_ExtendedMode_Disable)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="431"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((MODE)<sp/>==<sp/>FSMC_ExtendedMode_Enable))<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="441" refid="group___f_s_m_c___write___burst_1ga65a49ecd05b3a128e8908c6a625adae7" refkind="member"><highlight class="preprocessor">#define<sp/>FSMC_WriteBurst_Disable<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442" refid="group___f_s_m_c___write___burst_1ga1b2b66a0eb42778c2cc9a05003cf7655" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FSMC_WriteBurst_Enable<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00080000)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443" refid="group___f_s_m_c___write___burst_1gab7b03a33fab765827832abbf07d01a10" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_FSMC_WRITE_BURST(BURST)<sp/>(((BURST)<sp/>==<sp/>FSMC_WriteBurst_Disable)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="444"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((BURST)<sp/>==<sp/>FSMC_WriteBurst_Enable))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="453" refid="group___f_s_m_c___address___setup___time_1ga8b77d090338011abc1be7f4a420e2d8f" refkind="member"><highlight class="preprocessor">#define<sp/>IS_FSMC_ADDRESS_SETUP_TIME(TIME)<sp/>((TIME)<sp/>&lt;=<sp/>0xF)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="463" refid="group___f_s_m_c___address___hold___time_1gae7d031a5b95ad00acf67e9bc95064998" refkind="member"><highlight class="preprocessor">#define<sp/>IS_FSMC_ADDRESS_HOLD_TIME(TIME)<sp/>((TIME)<sp/>&lt;=<sp/>0xF)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="473" refid="group___f_s_m_c___data___setup___time_1ga3d923de775489e844913b29e77e8cca7" refkind="member"><highlight class="preprocessor">#define<sp/>IS_FSMC_DATASETUP_TIME(TIME)<sp/>(((TIME)<sp/>&gt;<sp/>0)<sp/>&amp;&amp;<sp/>((TIME)<sp/>&lt;=<sp/>0xFF))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="483" refid="group___f_s_m_c___bus___turn__around___duration_1ga9ec626f30679a18af91bf48c52d9260d" refkind="member"><highlight class="preprocessor">#define<sp/>IS_FSMC_TURNAROUND_TIME(TIME)<sp/>((TIME)<sp/>&lt;=<sp/>0xF)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="493" refid="group___f_s_m_c___c_l_k___division_1ga9e5321b02ea049fd076ba705acd06b5f" refkind="member"><highlight class="preprocessor">#define<sp/>IS_FSMC_CLK_DIV(DIV)<sp/>((DIV)<sp/>&lt;=<sp/>0xF)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="503" refid="group___f_s_m_c___data___latency_1ga1ab8659a9631d8bb4f57d8be8580155c" refkind="member"><highlight class="preprocessor">#define<sp/>IS_FSMC_DATA_LATENCY(LATENCY)<sp/>((LATENCY)<sp/>&lt;=<sp/>0xF)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight></codeline>
<codeline lineno="513" refid="group___f_s_m_c___access___mode_1gae0f299b51c12257311694c4a8f5c00c3" refkind="member"><highlight class="preprocessor">#define<sp/>FSMC_AccessMode_A<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514" refid="group___f_s_m_c___access___mode_1ga2d6ce7481eb5e0e86fda727c646e4109" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FSMC_AccessMode_B<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x10000000)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="515" refid="group___f_s_m_c___access___mode_1ga83ffa035cf2e95c957b67a2e8b879e86" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FSMC_AccessMode_C<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x20000000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="516" refid="group___f_s_m_c___access___mode_1ga7c632e7ebeb0c0ab4919bb60b8714c7b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FSMC_AccessMode_D<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x30000000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="517" refid="group___f_s_m_c___access___mode_1ga1844335f297ea30e9d7fae09ce562092" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_FSMC_ACCESS_MODE(MODE)<sp/>(((MODE)<sp/>==<sp/>FSMC_AccessMode_A)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="518"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((MODE)<sp/>==<sp/>FSMC_AccessMode_B)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="519"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((MODE)<sp/>==<sp/>FSMC_AccessMode_C)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="520"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((MODE)<sp/>==<sp/>FSMC_AccessMode_D))<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="538" refid="group___f_s_m_c___wait__feature_1ga8a31f05576e66546fbbcdb06ff67da7d" refkind="member"><highlight class="preprocessor">#define<sp/>FSMC_Waitfeature_Disable<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="539" refid="group___f_s_m_c___wait__feature_1ga3113366130dfbf6d116f1afb94af1726" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FSMC_Waitfeature_Enable<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000002)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="540" refid="group___f_s_m_c___wait__feature_1ga07c2585b517df2c7afbe3ba16c22f236" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_FSMC_WAIT_FEATURE(FEATURE)<sp/>(((FEATURE)<sp/>==<sp/>FSMC_Waitfeature_Disable)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="541"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((FEATURE)<sp/>==<sp/>FSMC_Waitfeature_Enable))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight></codeline>
<codeline lineno="552" refid="group___f_s_m_c___e_c_c_1ga9a3264c0718f5023fd106abea7ef806d" refkind="member"><highlight class="preprocessor">#define<sp/>FSMC_ECC_Disable<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="553" refid="group___f_s_m_c___e_c_c_1ga9d940243830695412d4c98228bb5b763" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FSMC_ECC_Enable<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000040)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="554" refid="group___f_s_m_c___e_c_c_1gaf1a7cb45edd8707bf4ea8aac96799c77" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_FSMC_ECC_STATE(STATE)<sp/>(((STATE)<sp/>==<sp/>FSMC_ECC_Disable)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="555"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((STATE)<sp/>==<sp/>FSMC_ECC_Enable))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight></codeline>
<codeline lineno="565" refid="group___f_s_m_c___e_c_c___page___size_1gaaa1661267b44e6728fa64aca79de54b3" refkind="member"><highlight class="preprocessor">#define<sp/>FSMC_ECCPageSize_256Bytes<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="566" refid="group___f_s_m_c___e_c_c___page___size_1gacb4da17c28dde89e38ff4ed40497f6b5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FSMC_ECCPageSize_512Bytes<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00020000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567" refid="group___f_s_m_c___e_c_c___page___size_1ga8137931c96b63ec7e6f80a8c7391433f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FSMC_ECCPageSize_1024Bytes<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00040000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="568" refid="group___f_s_m_c___e_c_c___page___size_1gab8f3ae95becd59e71a976b97ded904b8" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FSMC_ECCPageSize_2048Bytes<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00060000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="569" refid="group___f_s_m_c___e_c_c___page___size_1gaec2e9e434685a1756bd171699248f65a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FSMC_ECCPageSize_4096Bytes<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00080000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="570" refid="group___f_s_m_c___e_c_c___page___size_1gab6877a99ddf02e7aa95cf04896ce731d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FSMC_ECCPageSize_8192Bytes<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x000A0000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="571" refid="group___f_s_m_c___e_c_c___page___size_1ga58fefa0d55875775a88f54ad7498178f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_FSMC_ECCPAGE_SIZE(SIZE)<sp/>(((SIZE)<sp/>==<sp/>FSMC_ECCPageSize_256Bytes)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="572"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((SIZE)<sp/>==<sp/>FSMC_ECCPageSize_512Bytes)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="573"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((SIZE)<sp/>==<sp/>FSMC_ECCPageSize_1024Bytes)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="574"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((SIZE)<sp/>==<sp/>FSMC_ECCPageSize_2048Bytes)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="575"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((SIZE)<sp/>==<sp/>FSMC_ECCPageSize_4096Bytes)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="576"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((SIZE)<sp/>==<sp/>FSMC_ECCPageSize_8192Bytes))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight></codeline>
<codeline lineno="586" refid="group___f_s_m_c___t_c_l_r___setup___time_1ga324848d0d9c0d2aad7ab70873b4a15e9" refkind="member"><highlight class="preprocessor">#define<sp/>IS_FSMC_TCLR_TIME(TIME)<sp/>((TIME)<sp/>&lt;=<sp/>0xFF)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight></codeline>
<codeline lineno="596" refid="group___f_s_m_c___t_a_r___setup___time_1ga5b9e0f64c44ab68afca90cd28dedd8e3" refkind="member"><highlight class="preprocessor">#define<sp/>IS_FSMC_TAR_TIME(TIME)<sp/>((TIME)<sp/>&lt;=<sp/>0xFF)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight></codeline>
<codeline lineno="606" refid="group___f_s_m_c___setup___time_1ga4f2fbb8f6ec492cc241a49c468e0d98d" refkind="member"><highlight class="preprocessor">#define<sp/>IS_FSMC_SETUP_TIME(TIME)<sp/>((TIME)<sp/>&lt;=<sp/>0xFF)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight></codeline>
<codeline lineno="616" refid="group___f_s_m_c___wait___setup___time_1ga5c0efc48afb916ceff32868940f81613" refkind="member"><highlight class="preprocessor">#define<sp/>IS_FSMC_WAIT_TIME(TIME)<sp/>((TIME)<sp/>&lt;=<sp/>0xFF)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight></codeline>
<codeline lineno="626" refid="group___f_s_m_c___hold___setup___time_1gab2abc8eb967495f2a2bafec8162d6385" refkind="member"><highlight class="preprocessor">#define<sp/>IS_FSMC_HOLD_TIME(TIME)<sp/>((TIME)<sp/>&lt;=<sp/>0xFF)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight></codeline>
<codeline lineno="636" refid="group___f_s_m_c___hi_z___setup___time_1gaeb6295e8cc1a524f060c5e780f868033" refkind="member"><highlight class="preprocessor">#define<sp/>IS_FSMC_HIZ_TIME(TIME)<sp/>((TIME)<sp/>&lt;=<sp/>0xFF)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight></codeline>
<codeline lineno="646" refid="group___f_s_m_c___interrupt__sources_1gac483854bd6f90d8c7899a597a0c0ab1a" refkind="member"><highlight class="preprocessor">#define<sp/>FSMC_IT_RisingEdge<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000008)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="647" refid="group___f_s_m_c___interrupt__sources_1ga59b5839854074008fb36fa86ec50a0c7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FSMC_IT_Level<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000010)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="648" refid="group___f_s_m_c___interrupt__sources_1ga8e4b9589c9981c900b5f2e84581a9693" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FSMC_IT_FallingEdge<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000020)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="649" refid="group___f_s_m_c___interrupt__sources_1ga40a38f097a75f27a700e626905fa9a38" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_FSMC_IT(IT)<sp/>((((IT)<sp/>&amp;<sp/>(uint32_t)0xFFFFFFC7)<sp/>==<sp/>0x00000000)<sp/>&amp;&amp;<sp/>((IT)<sp/>!=<sp/>0x00000000))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="650" refid="group___f_s_m_c___interrupt__sources_1gae2a57d0b15e025212489ec1421ff245d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_FSMC_GET_IT(IT)<sp/>(((IT)<sp/>==<sp/>FSMC_IT_RisingEdge)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="651"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((IT)<sp/>==<sp/>FSMC_IT_Level)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="652"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((IT)<sp/>==<sp/>FSMC_IT_FallingEdge))<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight></codeline>
<codeline lineno="661" refid="group___f_s_m_c___flags_1ga5aadbd5d9f1b6a25bcc1fc6f3bf4c9cc" refkind="member"><highlight class="preprocessor">#define<sp/>FSMC_FLAG_RisingEdge<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000001)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="662" refid="group___f_s_m_c___flags_1ga25868d35780998a52190c424ebb3823f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FSMC_FLAG_Level<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000002)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="663" refid="group___f_s_m_c___flags_1gaaaa85bce06ed962874686ad7af0f0cb7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FSMC_FLAG_FallingEdge<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000004)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="664" refid="group___f_s_m_c___flags_1ga8da2bd0b9d11877aaebaba0c77e8b0cc" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FSMC_FLAG_FEMPT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000040)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="665" refid="group___f_s_m_c___flags_1gab8674160ef7884f939e07041bbf5b18b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_FSMC_GET_FLAG(FLAG)<sp/>(((FLAG)<sp/>==<sp/>FSMC_FLAG_RisingEdge)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="666"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((FLAG)<sp/>==<sp/>FSMC_FLAG_Level)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="667"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((FLAG)<sp/>==<sp/>FSMC_FLAG_FallingEdge)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="668"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((FLAG)<sp/>==<sp/>FSMC_FLAG_FEMPT))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight></codeline>
<codeline lineno="670" refid="group___f_s_m_c___flags_1ga1114bf56b54e726831b38fc8c5daa14e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_FSMC_CLEAR_FLAG(FLAG)<sp/>((((FLAG)<sp/>&amp;<sp/>(uint32_t)0xFFFFFFF8)<sp/>==<sp/>0x00000000)<sp/>&amp;&amp;<sp/>((FLAG)<sp/>!=<sp/>0x00000000))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___f_s_m_c___exported___functions_1gaab3e6648e8a584e73785361ac960eded" kindref="member">FSMC_NORSRAMDeInit</ref>(uint32_t<sp/>FSMC_Bank);</highlight></codeline>
<codeline lineno="697"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___f_s_m_c___exported___functions_1gafb749503293474a68555961bd8f120e1" kindref="member">FSMC_NANDDeInit</ref>(uint32_t<sp/>FSMC_Bank);</highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___f_s_m_c___exported___functions_1ga2f53ccf3a4f3c80a5a56fb47ccd47ccd" kindref="member">FSMC_PCCARDDeInit</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___f_s_m_c___exported___functions_1ga9c27816e8b17394c9ee1ce9298917b4a" kindref="member">FSMC_NORSRAMInit</ref>(<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def" kindref="compound">FSMC_NORSRAMInitTypeDef</ref>*<sp/>FSMC_NORSRAMInitStruct);</highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___f_s_m_c___exported___functions_1ga9f81ccc4e126c11f1eb33077b1a68e6f" kindref="member">FSMC_NANDInit</ref>(<ref refid="struct_f_s_m_c___n_a_n_d_init_type_def" kindref="compound">FSMC_NANDInitTypeDef</ref>*<sp/>FSMC_NANDInitStruct);</highlight></codeline>
<codeline lineno="701"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___f_s_m_c___exported___functions_1gacee1351363e7700a296faa1734a910aa" kindref="member">FSMC_PCCARDInit</ref>(<ref refid="struct_f_s_m_c___p_c_c_a_r_d_init_type_def" kindref="compound">FSMC_PCCARDInitTypeDef</ref>*<sp/>FSMC_PCCARDInitStruct);</highlight></codeline>
<codeline lineno="702"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___f_s_m_c___exported___functions_1gaf33e6dfc34f62d16a0cb416de9e83d28" kindref="member">FSMC_NORSRAMStructInit</ref>(<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def" kindref="compound">FSMC_NORSRAMInitTypeDef</ref>*<sp/>FSMC_NORSRAMInitStruct);</highlight></codeline>
<codeline lineno="703"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___f_s_m_c___exported___functions_1ga8283ad94ad8e83d49d5b77d1c7e17862" kindref="member">FSMC_NANDStructInit</ref>(<ref refid="struct_f_s_m_c___n_a_n_d_init_type_def" kindref="compound">FSMC_NANDInitTypeDef</ref>*<sp/>FSMC_NANDInitStruct);</highlight></codeline>
<codeline lineno="704"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___f_s_m_c___exported___functions_1ga7a64ba0e0545b3f1913c9d1d28c05e62" kindref="member">FSMC_PCCARDStructInit</ref>(<ref refid="struct_f_s_m_c___p_c_c_a_r_d_init_type_def" kindref="compound">FSMC_PCCARDInitTypeDef</ref>*<sp/>FSMC_PCCARDInitStruct);</highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___f_s_m_c___exported___functions_1gaf943f0f2680168d3a95a3c2c9f3eca2a" kindref="member">FSMC_NORSRAMCmd</ref>(uint32_t<sp/>FSMC_Bank,<sp/><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref><sp/>NewState);</highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___f_s_m_c___exported___functions_1ga33ec7c39ea4d42e92c72c6e517d8235c" kindref="member">FSMC_NANDCmd</ref>(uint32_t<sp/>FSMC_Bank,<sp/><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref><sp/>NewState);</highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___f_s_m_c___exported___functions_1ga2d410151ceb3428c6a1bf374a0472cde" kindref="member">FSMC_PCCARDCmd</ref>(<ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref><sp/>NewState);</highlight></codeline>
<codeline lineno="708"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___f_s_m_c___exported___functions_1ga5800301fc39bbe998a18ebd9ff191cdc" kindref="member">FSMC_NANDECCCmd</ref>(uint32_t<sp/>FSMC_Bank,<sp/><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref><sp/>NewState);</highlight></codeline>
<codeline lineno="709"><highlight class="normal">uint32_t<sp/><ref refid="group___f_s_m_c___exported___functions_1gaad6d4f5b5a41684ce053fea55bdb98d8" kindref="member">FSMC_GetECC</ref>(uint32_t<sp/>FSMC_Bank);</highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___f_s_m_c___exported___functions_1ga217027ae3cd213b9076b6a1be197064c" kindref="member">FSMC_ITConfig</ref>(uint32_t<sp/>FSMC_Bank,<sp/>uint32_t<sp/>FSMC_IT,<sp/><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref><sp/>NewState);</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><ref refid="group___exported__types_1ga89136caac2e14c55151f527ac02daaff" kindref="member">FlagStatus</ref><sp/><ref refid="group___f_s_m_c___exported___functions_1gae00355115b078f483f0771057bb849c4" kindref="member">FSMC_GetFlagStatus</ref>(uint32_t<sp/>FSMC_Bank,<sp/>uint32_t<sp/>FSMC_FLAG);</highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___f_s_m_c___exported___functions_1ga697618f2de0ad9a8a82461ddbebd5264" kindref="member">FSMC_ClearFlag</ref>(uint32_t<sp/>FSMC_Bank,<sp/>uint32_t<sp/>FSMC_FLAG);</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><ref refid="group___exported__types_1gaacbd7ed539db0aacd973a0f6eca34074" kindref="member">ITStatus</ref><sp/><ref refid="group___f_s_m_c___exported___functions_1ga7fce9ca889d33cd8b8b7413875dd4d73" kindref="member">FSMC_GetITStatus</ref>(uint32_t<sp/>FSMC_Bank,<sp/>uint32_t<sp/>FSMC_IT);</highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___f_s_m_c___exported___functions_1gad9387e7674b8a376256a3378649e004e" kindref="member">FSMC_ClearITPendingBit</ref>(uint32_t<sp/>FSMC_Bank,<sp/>uint32_t<sp/>FSMC_IT);</highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal">}</highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*__STM32F10x_FSMC_H<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="comment">/*******************<sp/>(C)<sp/>COPYRIGHT<sp/>2011<sp/>STMicroelectronics<sp/>*****END<sp/>OF<sp/>FILE****/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_fsmc.h"/>
  </compounddef>
</doxygen>
