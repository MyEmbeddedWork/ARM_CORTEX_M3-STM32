<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="stm32f10x__fsmc_8c" kind="file" language="C++">
    <compoundname>stm32f10x_fsmc.c</compoundname>
    <includes refid="stm32f10x__fsmc_8h" local="yes">stm32f10x_fsmc.h</includes>
    <includes refid="stm32f10x__rcc_8h" local="yes">stm32f10x_rcc.h</includes>
    <incdepgraph>
      <node id="942">
        <label>system_stm32f10x.h</label>
        <link refid="system__stm32f10x_8h"/>
      </node>
      <node id="939">
        <label>stdint.h</label>
      </node>
      <node id="936">
        <label>stm32f10x_fsmc.h</label>
        <link refid="stm32f10x__fsmc_8h"/>
        <childnode refid="937" relation="include">
        </childnode>
      </node>
      <node id="938">
        <label>core_cm3.h</label>
        <link refid="core__cm3_8h"/>
        <childnode refid="939" relation="include">
        </childnode>
        <childnode refid="940" relation="include">
        </childnode>
        <childnode refid="941" relation="include">
        </childnode>
      </node>
      <node id="941">
        <label>core_cmFunc.h</label>
        <link refid="core__cm_func_8h"/>
      </node>
      <node id="935">
        <label>C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_fsmc.c</label>
        <link refid="stm32f10x__fsmc_8c"/>
        <childnode refid="936" relation="include">
        </childnode>
        <childnode refid="943" relation="include">
        </childnode>
      </node>
      <node id="943">
        <label>stm32f10x_rcc.h</label>
        <link refid="stm32f10x__rcc_8h"/>
        <childnode refid="937" relation="include">
        </childnode>
      </node>
      <node id="940">
        <label>core_cmInstr.h</label>
        <link refid="core__cm_instr_8h"/>
      </node>
      <node id="937">
        <label>stm32f10x.h</label>
        <link refid="stm32f10x_8h"/>
        <childnode refid="938" relation="include">
        </childnode>
        <childnode refid="942" relation="include">
        </childnode>
        <childnode refid="939" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="group___f_s_m_c___private___defines_1ga3c427afcf32b17fb72be67fd4638e6d5" prot="public" static="no">
        <name>BCR_MBKEN_Set</name>
        <initializer>((uint32_t)0x00000001)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_fsmc.c" line="49" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_fsmc.c" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_s_m_c___private___defines_1gaa63b72d32a32c53a057ee0a45bed0d3b" prot="public" static="no">
        <name>BCR_MBKEN_Reset</name>
        <initializer>((uint32_t)0x000FFFFE)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_fsmc.c" line="50" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_fsmc.c" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_s_m_c___private___defines_1ga38da33a73789b2c932962d75dfc1341f" prot="public" static="no">
        <name>BCR_FACCEN_Set</name>
        <initializer>((uint32_t)0x00000040)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_fsmc.c" line="51" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_fsmc.c" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_s_m_c___private___defines_1gade871050f882b7f48582084b0e95f67c" prot="public" static="no">
        <name>PCR_PBKEN_Set</name>
        <initializer>((uint32_t)0x00000004)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_fsmc.c" line="54" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_fsmc.c" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_s_m_c___private___defines_1gac6d0ddc3888a0554b032f0f484cfe332" prot="public" static="no">
        <name>PCR_PBKEN_Reset</name>
        <initializer>((uint32_t)0x000FFFFB)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_fsmc.c" line="55" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_fsmc.c" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_s_m_c___private___defines_1ga8a0d7950936e3869b449d421e03a19ac" prot="public" static="no">
        <name>PCR_ECCEN_Set</name>
        <initializer>((uint32_t)0x00000040)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_fsmc.c" line="56" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_fsmc.c" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_s_m_c___private___defines_1gaca1a5c5cd46c8a32dab58c3eb3b865fa" prot="public" static="no">
        <name>PCR_ECCEN_Reset</name>
        <initializer>((uint32_t)0x000FFFBF)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_fsmc.c" line="57" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_fsmc.c" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_s_m_c___private___defines_1gaf3992efb285ab994c41463af5107c501" prot="public" static="no">
        <name>PCR_MemoryType_NAND</name>
        <initializer>((uint32_t)0x00000008)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_fsmc.c" line="58" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_fsmc.c" bodystart="58" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group___f_s_m_c___private___functions_1gaab3e6648e8a584e73785361ac960eded" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FSMC_NORSRAMDeInit</definition>
        <argsstring>(uint32_t FSMC_Bank)</argsstring>
        <name>FSMC_NORSRAMDeInit</name>
        <param>
          <type>uint32_t</type>
          <declname>FSMC_Bank</declname>
        </param>
        <briefdescription>
<para>Deinitializes the FSMC NOR/SRAM Banks registers to their default reset values. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>FSMC_Bank</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the FSMC Bank to be used This parameter can be one of the following values: <itemizedlist>
<listitem><para>FSMC_Bank1_NORSRAM1: FSMC Bank1 NOR/SRAM1 </para></listitem>
<listitem><para>FSMC_Bank1_NORSRAM2: FSMC Bank1 NOR/SRAM2 </para></listitem>
<listitem><para>FSMC_Bank1_NORSRAM3: FSMC Bank1 NOR/SRAM3 </para></listitem>
<listitem><para>FSMC_Bank1_NORSRAM4: FSMC Bank1 NOR/SRAM4 </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_fsmc.c" line="102" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_fsmc.c" bodystart="102" bodyend="119"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___f_s_m_c___exported___constants_1ga3e3bed3dd83d38e63f11ac4cbcb87304" compoundref="stm32f10x__fsmc_8h" startline="274">IS_FSMC_NORSRAM_BANK</references>
        <references refid="group___f_s_m_c___n_o_r_s_r_a_m___bank_1ga514a05828041fa1a13d464c9e4a0a4a9" compoundref="stm32f10x__fsmc_8h" startline="249">FSMC_Bank1_NORSRAM1</references>
        <references refid="group___peripheral__declaration_1ga2a759bad07fe730c99f9e1490e646220" compoundref="stm32f10x_8h" startline="1448">FSMC_Bank1</references>
        <references refid="group___peripheral__declaration_1ga422986101f42a8811ae89ac69deb2759" compoundref="stm32f10x_8h" startline="1449">FSMC_Bank1E</references>
      </memberdef>
      <memberdef kind="function" id="group___f_s_m_c___private___functions_1gafb749503293474a68555961bd8f120e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FSMC_NANDDeInit</definition>
        <argsstring>(uint32_t FSMC_Bank)</argsstring>
        <name>FSMC_NANDDeInit</name>
        <param>
          <type>uint32_t</type>
          <declname>FSMC_Bank</declname>
        </param>
        <briefdescription>
<para>Deinitializes the FSMC NAND Banks registers to their default reset values. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>FSMC_Bank</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the FSMC Bank to be used This parameter can be one of the following values: <itemizedlist>
<listitem><para>FSMC_Bank2_NAND: FSMC Bank2 NAND </para></listitem>
<listitem><para>FSMC_Bank3_NAND: FSMC Bank3 NAND </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_fsmc.c" line="129" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_fsmc.c" bodystart="129" bodyend="151"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___f_s_m_c___exported___constants_1ga725bada099197f15f49dc0c5be00e19b" compoundref="stm32f10x__fsmc_8h" startline="279">IS_FSMC_NAND_BANK</references>
        <references refid="group___f_s_m_c___n_a_n_d___bank_1ga294e7134aa329a09e56b61eec9882a27" compoundref="stm32f10x__fsmc_8h" startline="260">FSMC_Bank2_NAND</references>
        <references refid="group___peripheral__declaration_1gabb3dfb5e88694aa2983ecabd33a55e0a" compoundref="stm32f10x_8h" startline="1450">FSMC_Bank2</references>
        <references refid="group___peripheral__declaration_1ga411eedc00b5b2b22b494004d4f41b736" compoundref="stm32f10x_8h" startline="1451">FSMC_Bank3</references>
      </memberdef>
      <memberdef kind="function" id="group___f_s_m_c___private___functions_1ga2f53ccf3a4f3c80a5a56fb47ccd47ccd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FSMC_PCCARDDeInit</definition>
        <argsstring>(void)</argsstring>
        <name>FSMC_PCCARDDeInit</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Deinitializes the FSMC PCCARD Bank registers to their default reset values. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_fsmc.c" line="158" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_fsmc.c" bodystart="158" bodyend="166"/>
        <references refid="group___peripheral__declaration_1ga5aa00e4ac522693c6a21bc23ef5a96df" compoundref="stm32f10x_8h" startline="1452">FSMC_Bank4</references>
      </memberdef>
      <memberdef kind="function" id="group___f_s_m_c___private___functions_1ga9c27816e8b17394c9ee1ce9298917b4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FSMC_NORSRAMInit</definition>
        <argsstring>(FSMC_NORSRAMInitTypeDef *FSMC_NORSRAMInitStruct)</argsstring>
        <name>FSMC_NORSRAMInit</name>
        <param>
          <type><ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def" kindref="compound">FSMC_NORSRAMInitTypeDef</ref> *</type>
          <declname>FSMC_NORSRAMInitStruct</declname>
        </param>
        <briefdescription>
<para>Initializes the FSMC NOR/SRAM Banks according to the specified parameters in the FSMC_NORSRAMInitStruct. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>FSMC_NORSRAMInitStruct</parametername>
</parameternamelist>
<parameterdescription>
<para>: pointer to a <ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def" kindref="compound">FSMC_NORSRAMInitTypeDef</ref> structure that contains the configuration information for the FSMC NOR/SRAM specified Banks. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_fsmc.c" line="176" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_fsmc.c" bodystart="176" bodyend="252"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___f_s_m_c___exported___constants_1ga3e3bed3dd83d38e63f11ac4cbcb87304" compoundref="stm32f10x__fsmc_8h" startline="274">IS_FSMC_NORSRAM_BANK</references>
        <references refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1a7fcd864461cf0d1cf83b62fa2b4d3f86" compoundref="stm32f10x__fsmc_8h" startline="94">FSMC_NORSRAMInitTypeDef::FSMC_Bank</references>
        <references refid="group___f_s_m_c___data___address___bus___multiplexing_1ga546fcab8c1b751b4a959ba2ce5b35d79" compoundref="stm32f10x__fsmc_8h" startline="300">IS_FSMC_MUX</references>
        <references refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1af4ff95085d3bb39e34c2f88ca3140ce5" compoundref="stm32f10x__fsmc_8h" startline="97">FSMC_NORSRAMInitTypeDef::FSMC_DataAddressMux</references>
        <references refid="group___f_s_m_c___memory___type_1ga255cd500e141f4ac024cf5f896921233" compoundref="stm32f10x__fsmc_8h" startline="314">IS_FSMC_MEMORY</references>
        <references refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1a979ad605c6a63923e060576ee01e888d" compoundref="stm32f10x__fsmc_8h" startline="101">FSMC_NORSRAMInitTypeDef::FSMC_MemoryType</references>
        <references refid="group___f_s_m_c___data___width_1ga003d52b62f5950fb041f73f15ce20171" compoundref="stm32f10x__fsmc_8h" startline="328">IS_FSMC_MEMORY_WIDTH</references>
        <references refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1a1791c771ff86f5dc5422040409517e9d" compoundref="stm32f10x__fsmc_8h" startline="105">FSMC_NORSRAMInitTypeDef::FSMC_MemoryDataWidth</references>
        <references refid="group___f_s_m_c___burst___access___mode_1gaf8736659c5064c3c03753d7874401e71" compoundref="stm32f10x__fsmc_8h" startline="341">IS_FSMC_BURSTMODE</references>
        <references refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1aec0bfff5c934c251c21450a50f5bdb79" compoundref="stm32f10x__fsmc_8h" startline="108">FSMC_NORSRAMInitTypeDef::FSMC_BurstAccessMode</references>
        <references refid="group___f_s_m_c___asynchronous_wait_1ga52d579de825316ee058baf11bfb749d6" compoundref="stm32f10x__fsmc_8h" startline="352">IS_FSMC_ASYNWAIT</references>
        <references refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1ac350cc34377fe3d5f882a6801bab1ac9" compoundref="stm32f10x__fsmc_8h" startline="112">FSMC_NORSRAMInitTypeDef::FSMC_AsynchronousWait</references>
        <references refid="group___f_s_m_c___wait___signal___polarity_1gabc5321807d5184fe5cdb7848e1be7bc6" compoundref="stm32f10x__fsmc_8h" startline="365">IS_FSMC_WAIT_POLARITY</references>
        <references refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1a5d4d76594fc201943b51095e3ef34791" compoundref="stm32f10x__fsmc_8h" startline="116">FSMC_NORSRAMInitTypeDef::FSMC_WaitSignalPolarity</references>
        <references refid="group___f_s_m_c___wrap___mode_1ga0751d74b7fb1e17f6cedea091e8ebfc8" compoundref="stm32f10x__fsmc_8h" startline="378">IS_FSMC_WRAP_MODE</references>
        <references refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1a7e201c17bf7c5f6cc69fb6de29c8b024" compoundref="stm32f10x__fsmc_8h" startline="120">FSMC_NORSRAMInitTypeDef::FSMC_WrapMode</references>
        <references refid="group___f_s_m_c___wait___timing_1ga3edb40c756afa8bb78550b7e22ded093" compoundref="stm32f10x__fsmc_8h" startline="391">IS_FSMC_WAIT_SIGNAL_ACTIVE</references>
        <references refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1a71c6e7cc8e7e1a8fd0562960ffd23e88" compoundref="stm32f10x__fsmc_8h" startline="124">FSMC_NORSRAMInitTypeDef::FSMC_WaitSignalActive</references>
        <references refid="group___f_s_m_c___write___operation_1ga87fc20d11761caa66c3e7d77a3a7d3e3" compoundref="stm32f10x__fsmc_8h" startline="404">IS_FSMC_WRITE_OPERATION</references>
        <references refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1a596793d1735c4e38c87e3bf91d986370" compoundref="stm32f10x__fsmc_8h" startline="129">FSMC_NORSRAMInitTypeDef::FSMC_WriteOperation</references>
        <references refid="group___f_s_m_c___wait___signal_1gae617db4f15c82850d4f5c927f9a7db3e" compoundref="stm32f10x__fsmc_8h" startline="417">IS_FSMC_WAITE_SIGNAL</references>
        <references refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1aedbc7df3ff61cc93a910a64dc53c932b" compoundref="stm32f10x__fsmc_8h" startline="132">FSMC_NORSRAMInitTypeDef::FSMC_WaitSignal</references>
        <references refid="group___f_s_m_c___extended___mode_1ga79849ea07bf2a8f09989a6babd9e66e2" compoundref="stm32f10x__fsmc_8h" startline="430">IS_FSMC_EXTENDED_MODE</references>
        <references refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1af33d0076b5bfea3a66e388ed7f3eb3f3" compoundref="stm32f10x__fsmc_8h" startline="136">FSMC_NORSRAMInitTypeDef::FSMC_ExtendedMode</references>
        <references refid="group___f_s_m_c___write___burst_1gab7b03a33fab765827832abbf07d01a10" compoundref="stm32f10x__fsmc_8h" startline="443">IS_FSMC_WRITE_BURST</references>
        <references refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1adac3756711f2d76e56a8cbcb7a03843d" compoundref="stm32f10x__fsmc_8h" startline="139">FSMC_NORSRAMInitTypeDef::FSMC_WriteBurst</references>
        <references refid="group___f_s_m_c___address___setup___time_1ga8b77d090338011abc1be7f4a420e2d8f" compoundref="stm32f10x__fsmc_8h" startline="453">IS_FSMC_ADDRESS_SETUP_TIME</references>
        <references refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1a33f8e281b9ff3187906309d005b4159e" compoundref="stm32f10x__fsmc_8h" startline="142">FSMC_NORSRAMInitTypeDef::FSMC_ReadWriteTimingStruct</references>
        <references refid="struct_f_s_m_c___n_o_r_s_r_a_m_timing_init_type_def_1a2ba90f4ec16bc38a2c4fa29c593b713b" compoundref="stm32f10x__fsmc_8h" startline="52">FSMC_NORSRAMTimingInitTypeDef::FSMC_AddressSetupTime</references>
        <references refid="group___f_s_m_c___address___hold___time_1gae7d031a5b95ad00acf67e9bc95064998" compoundref="stm32f10x__fsmc_8h" startline="463">IS_FSMC_ADDRESS_HOLD_TIME</references>
        <references refid="struct_f_s_m_c___n_o_r_s_r_a_m_timing_init_type_def_1a917b227ccb0a765791897ce3647ab26b" compoundref="stm32f10x__fsmc_8h" startline="57">FSMC_NORSRAMTimingInitTypeDef::FSMC_AddressHoldTime</references>
        <references refid="group___f_s_m_c___data___setup___time_1ga3d923de775489e844913b29e77e8cca7" compoundref="stm32f10x__fsmc_8h" startline="473">IS_FSMC_DATASETUP_TIME</references>
        <references refid="struct_f_s_m_c___n_o_r_s_r_a_m_timing_init_type_def_1aaa0a9178766adeed424d5c4eb728d1b1" compoundref="stm32f10x__fsmc_8h" startline="62">FSMC_NORSRAMTimingInitTypeDef::FSMC_DataSetupTime</references>
        <references refid="group___f_s_m_c___bus___turn__around___duration_1ga9ec626f30679a18af91bf48c52d9260d" compoundref="stm32f10x__fsmc_8h" startline="483">IS_FSMC_TURNAROUND_TIME</references>
        <references refid="struct_f_s_m_c___n_o_r_s_r_a_m_timing_init_type_def_1a3d98d57618e46ec6aa5d876dcc047d32" compoundref="stm32f10x__fsmc_8h" startline="67">FSMC_NORSRAMTimingInitTypeDef::FSMC_BusTurnAroundDuration</references>
        <references refid="group___f_s_m_c___c_l_k___division_1ga9e5321b02ea049fd076ba705acd06b5f" compoundref="stm32f10x__fsmc_8h" startline="493">IS_FSMC_CLK_DIV</references>
        <references refid="struct_f_s_m_c___n_o_r_s_r_a_m_timing_init_type_def_1a251b439331b82eecea58aa3f8882ea15" compoundref="stm32f10x__fsmc_8h" startline="72">FSMC_NORSRAMTimingInitTypeDef::FSMC_CLKDivision</references>
        <references refid="group___f_s_m_c___data___latency_1ga1ab8659a9631d8bb4f57d8be8580155c" compoundref="stm32f10x__fsmc_8h" startline="503">IS_FSMC_DATA_LATENCY</references>
        <references refid="struct_f_s_m_c___n_o_r_s_r_a_m_timing_init_type_def_1abc33886615fc3627448aa2dba11cfc77" compoundref="stm32f10x__fsmc_8h" startline="76">FSMC_NORSRAMTimingInitTypeDef::FSMC_DataLatency</references>
        <references refid="group___f_s_m_c___access___mode_1ga1844335f297ea30e9d7fae09ce562092" compoundref="stm32f10x__fsmc_8h" startline="517">IS_FSMC_ACCESS_MODE</references>
        <references refid="struct_f_s_m_c___n_o_r_s_r_a_m_timing_init_type_def_1a261d043a19cecf77e6859403be204efc" compoundref="stm32f10x__fsmc_8h" startline="84">FSMC_NORSRAMTimingInitTypeDef::FSMC_AccessMode</references>
        <references refid="group___peripheral__declaration_1ga2a759bad07fe730c99f9e1490e646220" compoundref="stm32f10x_8h" startline="1448">FSMC_Bank1</references>
        <references refid="group___f_s_m_c___memory___type_1ga8b9390abe7c281947c550bf4365649e5" compoundref="stm32f10x__fsmc_8h" startline="313">FSMC_MemoryType_NOR</references>
        <references refid="group___f_s_m_c___private___defines_1ga38da33a73789b2c932962d75dfc1341f" compoundref="stm32f10x__fsmc_8c" startline="51">BCR_FACCEN_Set</references>
        <references refid="group___f_s_m_c___extended___mode_1gaef9ff4c81a52fdb0471d2c4422271d2a" compoundref="stm32f10x__fsmc_8h" startline="428">FSMC_ExtendedMode_Enable</references>
        <references refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1ac62cf7426a933ce6aa6efc3a8e82dac1" compoundref="stm32f10x__fsmc_8h" startline="144">FSMC_NORSRAMInitTypeDef::FSMC_WriteTimingStruct</references>
        <references refid="group___peripheral__declaration_1ga422986101f42a8811ae89ac69deb2759" compoundref="stm32f10x_8h" startline="1449">FSMC_Bank1E</references>
      </memberdef>
      <memberdef kind="function" id="group___f_s_m_c___private___functions_1ga9f81ccc4e126c11f1eb33077b1a68e6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FSMC_NANDInit</definition>
        <argsstring>(FSMC_NANDInitTypeDef *FSMC_NANDInitStruct)</argsstring>
        <name>FSMC_NANDInit</name>
        <param>
          <type><ref refid="struct_f_s_m_c___n_a_n_d_init_type_def" kindref="compound">FSMC_NANDInitTypeDef</ref> *</type>
          <declname>FSMC_NANDInitStruct</declname>
        </param>
        <briefdescription>
<para>Initializes the FSMC NAND Banks according to the specified parameters in the FSMC_NANDInitStruct. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>FSMC_NANDInitStruct</parametername>
</parameternamelist>
<parameterdescription>
<para>: pointer to a <ref refid="struct_f_s_m_c___n_a_n_d_init_type_def" kindref="compound">FSMC_NANDInitTypeDef</ref> structure that contains the configuration information for the FSMC NAND specified Banks. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_fsmc.c" line="262" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_fsmc.c" bodystart="262" bodyend="318"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___f_s_m_c___exported___constants_1ga725bada099197f15f49dc0c5be00e19b" compoundref="stm32f10x__fsmc_8h" startline="279">IS_FSMC_NAND_BANK</references>
        <references refid="struct_f_s_m_c___n_a_n_d_init_type_def_1a60d3ead2188e1dbdf06810e952b3ce0f" compoundref="stm32f10x__fsmc_8h" startline="185">FSMC_NANDInitTypeDef::FSMC_Bank</references>
        <references refid="group___f_s_m_c___wait__feature_1ga07c2585b517df2c7afbe3ba16c22f236" compoundref="stm32f10x__fsmc_8h" startline="540">IS_FSMC_WAIT_FEATURE</references>
        <references refid="struct_f_s_m_c___n_a_n_d_init_type_def_1ab350e15014c4a9f4b2c2f2848f11eeca" compoundref="stm32f10x__fsmc_8h" startline="188">FSMC_NANDInitTypeDef::FSMC_Waitfeature</references>
        <references refid="group___f_s_m_c___data___width_1ga003d52b62f5950fb041f73f15ce20171" compoundref="stm32f10x__fsmc_8h" startline="328">IS_FSMC_MEMORY_WIDTH</references>
        <references refid="struct_f_s_m_c___n_a_n_d_init_type_def_1ab4a4f56aab3150d8fb02aaf092db0235" compoundref="stm32f10x__fsmc_8h" startline="191">FSMC_NANDInitTypeDef::FSMC_MemoryDataWidth</references>
        <references refid="group___f_s_m_c___e_c_c_1gaf1a7cb45edd8707bf4ea8aac96799c77" compoundref="stm32f10x__fsmc_8h" startline="554">IS_FSMC_ECC_STATE</references>
        <references refid="struct_f_s_m_c___n_a_n_d_init_type_def_1a58d0510c0ce0ae3d1e3863bf8f571377" compoundref="stm32f10x__fsmc_8h" startline="194">FSMC_NANDInitTypeDef::FSMC_ECC</references>
        <references refid="group___f_s_m_c___e_c_c___page___size_1ga58fefa0d55875775a88f54ad7498178f" compoundref="stm32f10x__fsmc_8h" startline="571">IS_FSMC_ECCPAGE_SIZE</references>
        <references refid="struct_f_s_m_c___n_a_n_d_init_type_def_1a7ed6a25710ba724a7a8f90af60130cf6" compoundref="stm32f10x__fsmc_8h" startline="197">FSMC_NANDInitTypeDef::FSMC_ECCPageSize</references>
        <references refid="group___f_s_m_c___t_c_l_r___setup___time_1ga324848d0d9c0d2aad7ab70873b4a15e9" compoundref="stm32f10x__fsmc_8h" startline="586">IS_FSMC_TCLR_TIME</references>
        <references refid="struct_f_s_m_c___n_a_n_d_init_type_def_1a633c7be46a1d281916b9f2e34fa3d36a" compoundref="stm32f10x__fsmc_8h" startline="200">FSMC_NANDInitTypeDef::FSMC_TCLRSetupTime</references>
        <references refid="group___f_s_m_c___t_a_r___setup___time_1ga5b9e0f64c44ab68afca90cd28dedd8e3" compoundref="stm32f10x__fsmc_8h" startline="596">IS_FSMC_TAR_TIME</references>
        <references refid="struct_f_s_m_c___n_a_n_d_init_type_def_1a014c1b8977b454ac15654d93dbb7dff9" compoundref="stm32f10x__fsmc_8h" startline="204">FSMC_NANDInitTypeDef::FSMC_TARSetupTime</references>
        <references refid="group___f_s_m_c___setup___time_1ga4f2fbb8f6ec492cc241a49c468e0d98d" compoundref="stm32f10x__fsmc_8h" startline="606">IS_FSMC_SETUP_TIME</references>
        <references refid="struct_f_s_m_c___n_a_n_d_init_type_def_1a7ab117a15e780c02fcad5d844e71c425" compoundref="stm32f10x__fsmc_8h" startline="208">FSMC_NANDInitTypeDef::FSMC_CommonSpaceTimingStruct</references>
        <references refid="struct_f_s_m_c___n_a_n_d___p_c_c_a_r_d_timing_init_type_def_1a31632aeb49269a29a39e3b191590b6dc" compoundref="stm32f10x__fsmc_8h" startline="153">FSMC_NAND_PCCARDTimingInitTypeDef::FSMC_SetupTime</references>
        <references refid="group___f_s_m_c___wait___setup___time_1ga5c0efc48afb916ceff32868940f81613" compoundref="stm32f10x__fsmc_8h" startline="616">IS_FSMC_WAIT_TIME</references>
        <references refid="struct_f_s_m_c___n_a_n_d___p_c_c_a_r_d_timing_init_type_def_1a99a7d54ed2674faa5a4e0f2669812855" compoundref="stm32f10x__fsmc_8h" startline="159">FSMC_NAND_PCCARDTimingInitTypeDef::FSMC_WaitSetupTime</references>
        <references refid="group___f_s_m_c___hold___setup___time_1gab2abc8eb967495f2a2bafec8162d6385" compoundref="stm32f10x__fsmc_8h" startline="626">IS_FSMC_HOLD_TIME</references>
        <references refid="struct_f_s_m_c___n_a_n_d___p_c_c_a_r_d_timing_init_type_def_1ae2b53c2cfd55ff277f453613dcf7c8b2" compoundref="stm32f10x__fsmc_8h" startline="165">FSMC_NAND_PCCARDTimingInitTypeDef::FSMC_HoldSetupTime</references>
        <references refid="group___f_s_m_c___hi_z___setup___time_1gaeb6295e8cc1a524f060c5e780f868033" compoundref="stm32f10x__fsmc_8h" startline="636">IS_FSMC_HIZ_TIME</references>
        <references refid="struct_f_s_m_c___n_a_n_d___p_c_c_a_r_d_timing_init_type_def_1a8a2a2a9e71dbf276fddad2bb32c0d256" compoundref="stm32f10x__fsmc_8h" startline="172">FSMC_NAND_PCCARDTimingInitTypeDef::FSMC_HiZSetupTime</references>
        <references refid="struct_f_s_m_c___n_a_n_d_init_type_def_1a2a33bd855240dba37e507f223dbca062" compoundref="stm32f10x__fsmc_8h" startline="210">FSMC_NANDInitTypeDef::FSMC_AttributeSpaceTimingStruct</references>
        <references refid="group___f_s_m_c___private___defines_1gaf3992efb285ab994c41463af5107c501" compoundref="stm32f10x__fsmc_8c" startline="58">PCR_MemoryType_NAND</references>
        <references refid="group___f_s_m_c___n_a_n_d___bank_1ga294e7134aa329a09e56b61eec9882a27" compoundref="stm32f10x__fsmc_8h" startline="260">FSMC_Bank2_NAND</references>
        <references refid="group___peripheral__declaration_1gabb3dfb5e88694aa2983ecabd33a55e0a" compoundref="stm32f10x_8h" startline="1450">FSMC_Bank2</references>
        <references refid="group___peripheral__declaration_1ga411eedc00b5b2b22b494004d4f41b736" compoundref="stm32f10x_8h" startline="1451">FSMC_Bank3</references>
      </memberdef>
      <memberdef kind="function" id="group___f_s_m_c___private___functions_1gacee1351363e7700a296faa1734a910aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FSMC_PCCARDInit</definition>
        <argsstring>(FSMC_PCCARDInitTypeDef *FSMC_PCCARDInitStruct)</argsstring>
        <name>FSMC_PCCARDInit</name>
        <param>
          <type><ref refid="struct_f_s_m_c___p_c_c_a_r_d_init_type_def" kindref="compound">FSMC_PCCARDInitTypeDef</ref> *</type>
          <declname>FSMC_PCCARDInitStruct</declname>
        </param>
        <briefdescription>
<para>Initializes the FSMC PCCARD Bank according to the specified parameters in the FSMC_PCCARDInitStruct. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>FSMC_PCCARDInitStruct</parametername>
</parameternamelist>
<parameterdescription>
<para>: pointer to a <ref refid="struct_f_s_m_c___p_c_c_a_r_d_init_type_def" kindref="compound">FSMC_PCCARDInitTypeDef</ref> structure that contains the configuration information for the FSMC PCCARD Bank. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_fsmc.c" line="328" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_fsmc.c" bodystart="328" bodyend="372"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___f_s_m_c___wait__feature_1ga07c2585b517df2c7afbe3ba16c22f236" compoundref="stm32f10x__fsmc_8h" startline="540">IS_FSMC_WAIT_FEATURE</references>
        <references refid="struct_f_s_m_c___p_c_c_a_r_d_init_type_def_1a3ffd8c627ffe3ac90dfbfe93a8b97c26" compoundref="stm32f10x__fsmc_8h" startline="219">FSMC_PCCARDInitTypeDef::FSMC_Waitfeature</references>
        <references refid="group___f_s_m_c___t_c_l_r___setup___time_1ga324848d0d9c0d2aad7ab70873b4a15e9" compoundref="stm32f10x__fsmc_8h" startline="586">IS_FSMC_TCLR_TIME</references>
        <references refid="struct_f_s_m_c___p_c_c_a_r_d_init_type_def_1a15db9675791f6f9c7fd82fe1084ff694" compoundref="stm32f10x__fsmc_8h" startline="222">FSMC_PCCARDInitTypeDef::FSMC_TCLRSetupTime</references>
        <references refid="group___f_s_m_c___t_a_r___setup___time_1ga5b9e0f64c44ab68afca90cd28dedd8e3" compoundref="stm32f10x__fsmc_8h" startline="596">IS_FSMC_TAR_TIME</references>
        <references refid="struct_f_s_m_c___p_c_c_a_r_d_init_type_def_1ac83f977e01623595e0aa8dd0b1eb3fcc" compoundref="stm32f10x__fsmc_8h" startline="226">FSMC_PCCARDInitTypeDef::FSMC_TARSetupTime</references>
        <references refid="group___f_s_m_c___setup___time_1ga4f2fbb8f6ec492cc241a49c468e0d98d" compoundref="stm32f10x__fsmc_8h" startline="606">IS_FSMC_SETUP_TIME</references>
        <references refid="struct_f_s_m_c___p_c_c_a_r_d_init_type_def_1a87cb99ebe9b5ed570c6467abc9c2ef6d" compoundref="stm32f10x__fsmc_8h" startline="231">FSMC_PCCARDInitTypeDef::FSMC_CommonSpaceTimingStruct</references>
        <references refid="struct_f_s_m_c___n_a_n_d___p_c_c_a_r_d_timing_init_type_def_1a31632aeb49269a29a39e3b191590b6dc" compoundref="stm32f10x__fsmc_8h" startline="153">FSMC_NAND_PCCARDTimingInitTypeDef::FSMC_SetupTime</references>
        <references refid="group___f_s_m_c___wait___setup___time_1ga5c0efc48afb916ceff32868940f81613" compoundref="stm32f10x__fsmc_8h" startline="616">IS_FSMC_WAIT_TIME</references>
        <references refid="struct_f_s_m_c___n_a_n_d___p_c_c_a_r_d_timing_init_type_def_1a99a7d54ed2674faa5a4e0f2669812855" compoundref="stm32f10x__fsmc_8h" startline="159">FSMC_NAND_PCCARDTimingInitTypeDef::FSMC_WaitSetupTime</references>
        <references refid="group___f_s_m_c___hold___setup___time_1gab2abc8eb967495f2a2bafec8162d6385" compoundref="stm32f10x__fsmc_8h" startline="626">IS_FSMC_HOLD_TIME</references>
        <references refid="struct_f_s_m_c___n_a_n_d___p_c_c_a_r_d_timing_init_type_def_1ae2b53c2cfd55ff277f453613dcf7c8b2" compoundref="stm32f10x__fsmc_8h" startline="165">FSMC_NAND_PCCARDTimingInitTypeDef::FSMC_HoldSetupTime</references>
        <references refid="group___f_s_m_c___hi_z___setup___time_1gaeb6295e8cc1a524f060c5e780f868033" compoundref="stm32f10x__fsmc_8h" startline="636">IS_FSMC_HIZ_TIME</references>
        <references refid="struct_f_s_m_c___n_a_n_d___p_c_c_a_r_d_timing_init_type_def_1a8a2a2a9e71dbf276fddad2bb32c0d256" compoundref="stm32f10x__fsmc_8h" startline="172">FSMC_NAND_PCCARDTimingInitTypeDef::FSMC_HiZSetupTime</references>
        <references refid="struct_f_s_m_c___p_c_c_a_r_d_init_type_def_1aee510f2e6e6ef18e7f5eedfed702f697" compoundref="stm32f10x__fsmc_8h" startline="233">FSMC_PCCARDInitTypeDef::FSMC_AttributeSpaceTimingStruct</references>
        <references refid="struct_f_s_m_c___p_c_c_a_r_d_init_type_def_1abd9b9e8d7623829a40e5255b0949a3a1" compoundref="stm32f10x__fsmc_8h" startline="235">FSMC_PCCARDInitTypeDef::FSMC_IOSpaceTimingStruct</references>
        <references refid="group___peripheral__declaration_1ga5aa00e4ac522693c6a21bc23ef5a96df" compoundref="stm32f10x_8h" startline="1452">FSMC_Bank4</references>
        <references refid="group___f_s_m_c___data___width_1ga65d85c3072e6790ae760ca2248e46df6" compoundref="stm32f10x__fsmc_8h" startline="327">FSMC_MemoryDataWidth_16b</references>
      </memberdef>
      <memberdef kind="function" id="group___f_s_m_c___private___functions_1gaf33e6dfc34f62d16a0cb416de9e83d28" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FSMC_NORSRAMStructInit</definition>
        <argsstring>(FSMC_NORSRAMInitTypeDef *FSMC_NORSRAMInitStruct)</argsstring>
        <name>FSMC_NORSRAMStructInit</name>
        <param>
          <type><ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def" kindref="compound">FSMC_NORSRAMInitTypeDef</ref> *</type>
          <declname>FSMC_NORSRAMInitStruct</declname>
        </param>
        <briefdescription>
<para>Fills each FSMC_NORSRAMInitStruct member with its default value. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>FSMC_NORSRAMInitStruct</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a <ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def" kindref="compound">FSMC_NORSRAMInitTypeDef</ref> structure which will be initialized. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_fsmc.c" line="380" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_fsmc.c" bodystart="380" bodyend="410"/>
        <references refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1a7fcd864461cf0d1cf83b62fa2b4d3f86" compoundref="stm32f10x__fsmc_8h" startline="94">FSMC_NORSRAMInitTypeDef::FSMC_Bank</references>
        <references refid="group___f_s_m_c___n_o_r_s_r_a_m___bank_1ga514a05828041fa1a13d464c9e4a0a4a9" compoundref="stm32f10x__fsmc_8h" startline="249">FSMC_Bank1_NORSRAM1</references>
        <references refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1af4ff95085d3bb39e34c2f88ca3140ce5" compoundref="stm32f10x__fsmc_8h" startline="97">FSMC_NORSRAMInitTypeDef::FSMC_DataAddressMux</references>
        <references refid="group___f_s_m_c___data___address___bus___multiplexing_1ga1dd4d12e63aaf29dbb8ae4b613f2aa15" compoundref="stm32f10x__fsmc_8h" startline="299">FSMC_DataAddressMux_Enable</references>
        <references refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1a979ad605c6a63923e060576ee01e888d" compoundref="stm32f10x__fsmc_8h" startline="101">FSMC_NORSRAMInitTypeDef::FSMC_MemoryType</references>
        <references refid="group___f_s_m_c___memory___type_1ga8a24e8da42e67dcf6fb2f43659aa49cf" compoundref="stm32f10x__fsmc_8h" startline="311">FSMC_MemoryType_SRAM</references>
        <references refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1a1791c771ff86f5dc5422040409517e9d" compoundref="stm32f10x__fsmc_8h" startline="105">FSMC_NORSRAMInitTypeDef::FSMC_MemoryDataWidth</references>
        <references refid="group___f_s_m_c___data___width_1ga5753e089830f19af70a724766e3c329f" compoundref="stm32f10x__fsmc_8h" startline="326">FSMC_MemoryDataWidth_8b</references>
        <references refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1aec0bfff5c934c251c21450a50f5bdb79" compoundref="stm32f10x__fsmc_8h" startline="108">FSMC_NORSRAMInitTypeDef::FSMC_BurstAccessMode</references>
        <references refid="group___f_s_m_c___burst___access___mode_1ga26fc544945415e350563a9b00684850c" compoundref="stm32f10x__fsmc_8h" startline="339">FSMC_BurstAccessMode_Disable</references>
        <references refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1ac350cc34377fe3d5f882a6801bab1ac9" compoundref="stm32f10x__fsmc_8h" startline="112">FSMC_NORSRAMInitTypeDef::FSMC_AsynchronousWait</references>
        <references refid="group___f_s_m_c___asynchronous_wait_1ga36c0dad6fe6c0e01632d3312c8f4c4cb" compoundref="stm32f10x__fsmc_8h" startline="350">FSMC_AsynchronousWait_Disable</references>
        <references refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1a5d4d76594fc201943b51095e3ef34791" compoundref="stm32f10x__fsmc_8h" startline="116">FSMC_NORSRAMInitTypeDef::FSMC_WaitSignalPolarity</references>
        <references refid="group___f_s_m_c___wait___signal___polarity_1ga7dc72fdfc6225e5daa9b8efee8dff49f" compoundref="stm32f10x__fsmc_8h" startline="363">FSMC_WaitSignalPolarity_Low</references>
        <references refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1a7e201c17bf7c5f6cc69fb6de29c8b024" compoundref="stm32f10x__fsmc_8h" startline="120">FSMC_NORSRAMInitTypeDef::FSMC_WrapMode</references>
        <references refid="group___f_s_m_c___wrap___mode_1ga6041f0d3055ea3811a5a19560092f266" compoundref="stm32f10x__fsmc_8h" startline="376">FSMC_WrapMode_Disable</references>
        <references refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1a71c6e7cc8e7e1a8fd0562960ffd23e88" compoundref="stm32f10x__fsmc_8h" startline="124">FSMC_NORSRAMInitTypeDef::FSMC_WaitSignalActive</references>
        <references refid="group___f_s_m_c___wait___timing_1ga62c6855a7cc65b20024085f09cdc65e8" compoundref="stm32f10x__fsmc_8h" startline="389">FSMC_WaitSignalActive_BeforeWaitState</references>
        <references refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1a596793d1735c4e38c87e3bf91d986370" compoundref="stm32f10x__fsmc_8h" startline="129">FSMC_NORSRAMInitTypeDef::FSMC_WriteOperation</references>
        <references refid="group___f_s_m_c___write___operation_1ga2478beb6dd8861b34a16b8a57a795e56" compoundref="stm32f10x__fsmc_8h" startline="403">FSMC_WriteOperation_Enable</references>
        <references refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1aedbc7df3ff61cc93a910a64dc53c932b" compoundref="stm32f10x__fsmc_8h" startline="132">FSMC_NORSRAMInitTypeDef::FSMC_WaitSignal</references>
        <references refid="group___f_s_m_c___wait___signal_1gaf809e339f1cdc9d0a815fd98712e9ee3" compoundref="stm32f10x__fsmc_8h" startline="416">FSMC_WaitSignal_Enable</references>
        <references refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1af33d0076b5bfea3a66e388ed7f3eb3f3" compoundref="stm32f10x__fsmc_8h" startline="136">FSMC_NORSRAMInitTypeDef::FSMC_ExtendedMode</references>
        <references refid="group___f_s_m_c___extended___mode_1ga5a1f1acdc44328158f59012748980dd3" compoundref="stm32f10x__fsmc_8h" startline="427">FSMC_ExtendedMode_Disable</references>
        <references refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1adac3756711f2d76e56a8cbcb7a03843d" compoundref="stm32f10x__fsmc_8h" startline="139">FSMC_NORSRAMInitTypeDef::FSMC_WriteBurst</references>
        <references refid="group___f_s_m_c___write___burst_1ga65a49ecd05b3a128e8908c6a625adae7" compoundref="stm32f10x__fsmc_8h" startline="441">FSMC_WriteBurst_Disable</references>
        <references refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1a33f8e281b9ff3187906309d005b4159e" compoundref="stm32f10x__fsmc_8h" startline="142">FSMC_NORSRAMInitTypeDef::FSMC_ReadWriteTimingStruct</references>
        <references refid="struct_f_s_m_c___n_o_r_s_r_a_m_timing_init_type_def_1a2ba90f4ec16bc38a2c4fa29c593b713b" compoundref="stm32f10x__fsmc_8h" startline="52">FSMC_NORSRAMTimingInitTypeDef::FSMC_AddressSetupTime</references>
        <references refid="struct_f_s_m_c___n_o_r_s_r_a_m_timing_init_type_def_1a917b227ccb0a765791897ce3647ab26b" compoundref="stm32f10x__fsmc_8h" startline="57">FSMC_NORSRAMTimingInitTypeDef::FSMC_AddressHoldTime</references>
        <references refid="struct_f_s_m_c___n_o_r_s_r_a_m_timing_init_type_def_1aaa0a9178766adeed424d5c4eb728d1b1" compoundref="stm32f10x__fsmc_8h" startline="62">FSMC_NORSRAMTimingInitTypeDef::FSMC_DataSetupTime</references>
        <references refid="struct_f_s_m_c___n_o_r_s_r_a_m_timing_init_type_def_1a3d98d57618e46ec6aa5d876dcc047d32" compoundref="stm32f10x__fsmc_8h" startline="67">FSMC_NORSRAMTimingInitTypeDef::FSMC_BusTurnAroundDuration</references>
        <references refid="struct_f_s_m_c___n_o_r_s_r_a_m_timing_init_type_def_1a251b439331b82eecea58aa3f8882ea15" compoundref="stm32f10x__fsmc_8h" startline="72">FSMC_NORSRAMTimingInitTypeDef::FSMC_CLKDivision</references>
        <references refid="struct_f_s_m_c___n_o_r_s_r_a_m_timing_init_type_def_1abc33886615fc3627448aa2dba11cfc77" compoundref="stm32f10x__fsmc_8h" startline="76">FSMC_NORSRAMTimingInitTypeDef::FSMC_DataLatency</references>
        <references refid="struct_f_s_m_c___n_o_r_s_r_a_m_timing_init_type_def_1a261d043a19cecf77e6859403be204efc" compoundref="stm32f10x__fsmc_8h" startline="84">FSMC_NORSRAMTimingInitTypeDef::FSMC_AccessMode</references>
        <references refid="group___f_s_m_c___access___mode_1gae0f299b51c12257311694c4a8f5c00c3" compoundref="stm32f10x__fsmc_8h" startline="513">FSMC_AccessMode_A</references>
        <references refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1ac62cf7426a933ce6aa6efc3a8e82dac1" compoundref="stm32f10x__fsmc_8h" startline="144">FSMC_NORSRAMInitTypeDef::FSMC_WriteTimingStruct</references>
      </memberdef>
      <memberdef kind="function" id="group___f_s_m_c___private___functions_1ga8283ad94ad8e83d49d5b77d1c7e17862" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FSMC_NANDStructInit</definition>
        <argsstring>(FSMC_NANDInitTypeDef *FSMC_NANDInitStruct)</argsstring>
        <name>FSMC_NANDStructInit</name>
        <param>
          <type><ref refid="struct_f_s_m_c___n_a_n_d_init_type_def" kindref="compound">FSMC_NANDInitTypeDef</ref> *</type>
          <declname>FSMC_NANDInitStruct</declname>
        </param>
        <briefdescription>
<para>Fills each FSMC_NANDInitStruct member with its default value. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>FSMC_NANDInitStruct</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a <ref refid="struct_f_s_m_c___n_a_n_d_init_type_def" kindref="compound">FSMC_NANDInitTypeDef</ref> structure which will be initialized. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_fsmc.c" line="418" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_fsmc.c" bodystart="418" bodyend="436"/>
        <references refid="struct_f_s_m_c___n_a_n_d_init_type_def_1a60d3ead2188e1dbdf06810e952b3ce0f" compoundref="stm32f10x__fsmc_8h" startline="185">FSMC_NANDInitTypeDef::FSMC_Bank</references>
        <references refid="group___f_s_m_c___n_a_n_d___bank_1ga294e7134aa329a09e56b61eec9882a27" compoundref="stm32f10x__fsmc_8h" startline="260">FSMC_Bank2_NAND</references>
        <references refid="struct_f_s_m_c___n_a_n_d_init_type_def_1ab350e15014c4a9f4b2c2f2848f11eeca" compoundref="stm32f10x__fsmc_8h" startline="188">FSMC_NANDInitTypeDef::FSMC_Waitfeature</references>
        <references refid="group___f_s_m_c___wait__feature_1ga8a31f05576e66546fbbcdb06ff67da7d" compoundref="stm32f10x__fsmc_8h" startline="538">FSMC_Waitfeature_Disable</references>
        <references refid="struct_f_s_m_c___n_a_n_d_init_type_def_1ab4a4f56aab3150d8fb02aaf092db0235" compoundref="stm32f10x__fsmc_8h" startline="191">FSMC_NANDInitTypeDef::FSMC_MemoryDataWidth</references>
        <references refid="group___f_s_m_c___data___width_1ga5753e089830f19af70a724766e3c329f" compoundref="stm32f10x__fsmc_8h" startline="326">FSMC_MemoryDataWidth_8b</references>
        <references refid="struct_f_s_m_c___n_a_n_d_init_type_def_1a58d0510c0ce0ae3d1e3863bf8f571377" compoundref="stm32f10x__fsmc_8h" startline="194">FSMC_NANDInitTypeDef::FSMC_ECC</references>
        <references refid="group___f_s_m_c___e_c_c_1ga9a3264c0718f5023fd106abea7ef806d" compoundref="stm32f10x__fsmc_8h" startline="552">FSMC_ECC_Disable</references>
        <references refid="struct_f_s_m_c___n_a_n_d_init_type_def_1a7ed6a25710ba724a7a8f90af60130cf6" compoundref="stm32f10x__fsmc_8h" startline="197">FSMC_NANDInitTypeDef::FSMC_ECCPageSize</references>
        <references refid="group___f_s_m_c___e_c_c___page___size_1gaaa1661267b44e6728fa64aca79de54b3" compoundref="stm32f10x__fsmc_8h" startline="565">FSMC_ECCPageSize_256Bytes</references>
        <references refid="struct_f_s_m_c___n_a_n_d_init_type_def_1a633c7be46a1d281916b9f2e34fa3d36a" compoundref="stm32f10x__fsmc_8h" startline="200">FSMC_NANDInitTypeDef::FSMC_TCLRSetupTime</references>
        <references refid="struct_f_s_m_c___n_a_n_d_init_type_def_1a014c1b8977b454ac15654d93dbb7dff9" compoundref="stm32f10x__fsmc_8h" startline="204">FSMC_NANDInitTypeDef::FSMC_TARSetupTime</references>
        <references refid="struct_f_s_m_c___n_a_n_d_init_type_def_1a7ab117a15e780c02fcad5d844e71c425" compoundref="stm32f10x__fsmc_8h" startline="208">FSMC_NANDInitTypeDef::FSMC_CommonSpaceTimingStruct</references>
        <references refid="struct_f_s_m_c___n_a_n_d___p_c_c_a_r_d_timing_init_type_def_1a31632aeb49269a29a39e3b191590b6dc" compoundref="stm32f10x__fsmc_8h" startline="153">FSMC_NAND_PCCARDTimingInitTypeDef::FSMC_SetupTime</references>
        <references refid="struct_f_s_m_c___n_a_n_d___p_c_c_a_r_d_timing_init_type_def_1a99a7d54ed2674faa5a4e0f2669812855" compoundref="stm32f10x__fsmc_8h" startline="159">FSMC_NAND_PCCARDTimingInitTypeDef::FSMC_WaitSetupTime</references>
        <references refid="struct_f_s_m_c___n_a_n_d___p_c_c_a_r_d_timing_init_type_def_1ae2b53c2cfd55ff277f453613dcf7c8b2" compoundref="stm32f10x__fsmc_8h" startline="165">FSMC_NAND_PCCARDTimingInitTypeDef::FSMC_HoldSetupTime</references>
        <references refid="struct_f_s_m_c___n_a_n_d___p_c_c_a_r_d_timing_init_type_def_1a8a2a2a9e71dbf276fddad2bb32c0d256" compoundref="stm32f10x__fsmc_8h" startline="172">FSMC_NAND_PCCARDTimingInitTypeDef::FSMC_HiZSetupTime</references>
        <references refid="struct_f_s_m_c___n_a_n_d_init_type_def_1a2a33bd855240dba37e507f223dbca062" compoundref="stm32f10x__fsmc_8h" startline="210">FSMC_NANDInitTypeDef::FSMC_AttributeSpaceTimingStruct</references>
      </memberdef>
      <memberdef kind="function" id="group___f_s_m_c___private___functions_1ga7a64ba0e0545b3f1913c9d1d28c05e62" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FSMC_PCCARDStructInit</definition>
        <argsstring>(FSMC_PCCARDInitTypeDef *FSMC_PCCARDInitStruct)</argsstring>
        <name>FSMC_PCCARDStructInit</name>
        <param>
          <type><ref refid="struct_f_s_m_c___p_c_c_a_r_d_init_type_def" kindref="compound">FSMC_PCCARDInitTypeDef</ref> *</type>
          <declname>FSMC_PCCARDInitStruct</declname>
        </param>
        <briefdescription>
<para>Fills each FSMC_PCCARDInitStruct member with its default value. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>FSMC_PCCARDInitStruct</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a <ref refid="struct_f_s_m_c___p_c_c_a_r_d_init_type_def" kindref="compound">FSMC_PCCARDInitTypeDef</ref> structure which will be initialized. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_fsmc.c" line="444" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_fsmc.c" bodystart="444" bodyend="462"/>
        <references refid="struct_f_s_m_c___p_c_c_a_r_d_init_type_def_1a3ffd8c627ffe3ac90dfbfe93a8b97c26" compoundref="stm32f10x__fsmc_8h" startline="219">FSMC_PCCARDInitTypeDef::FSMC_Waitfeature</references>
        <references refid="group___f_s_m_c___wait__feature_1ga8a31f05576e66546fbbcdb06ff67da7d" compoundref="stm32f10x__fsmc_8h" startline="538">FSMC_Waitfeature_Disable</references>
        <references refid="struct_f_s_m_c___p_c_c_a_r_d_init_type_def_1a15db9675791f6f9c7fd82fe1084ff694" compoundref="stm32f10x__fsmc_8h" startline="222">FSMC_PCCARDInitTypeDef::FSMC_TCLRSetupTime</references>
        <references refid="struct_f_s_m_c___p_c_c_a_r_d_init_type_def_1ac83f977e01623595e0aa8dd0b1eb3fcc" compoundref="stm32f10x__fsmc_8h" startline="226">FSMC_PCCARDInitTypeDef::FSMC_TARSetupTime</references>
        <references refid="struct_f_s_m_c___p_c_c_a_r_d_init_type_def_1a87cb99ebe9b5ed570c6467abc9c2ef6d" compoundref="stm32f10x__fsmc_8h" startline="231">FSMC_PCCARDInitTypeDef::FSMC_CommonSpaceTimingStruct</references>
        <references refid="struct_f_s_m_c___n_a_n_d___p_c_c_a_r_d_timing_init_type_def_1a31632aeb49269a29a39e3b191590b6dc" compoundref="stm32f10x__fsmc_8h" startline="153">FSMC_NAND_PCCARDTimingInitTypeDef::FSMC_SetupTime</references>
        <references refid="struct_f_s_m_c___n_a_n_d___p_c_c_a_r_d_timing_init_type_def_1a99a7d54ed2674faa5a4e0f2669812855" compoundref="stm32f10x__fsmc_8h" startline="159">FSMC_NAND_PCCARDTimingInitTypeDef::FSMC_WaitSetupTime</references>
        <references refid="struct_f_s_m_c___n_a_n_d___p_c_c_a_r_d_timing_init_type_def_1ae2b53c2cfd55ff277f453613dcf7c8b2" compoundref="stm32f10x__fsmc_8h" startline="165">FSMC_NAND_PCCARDTimingInitTypeDef::FSMC_HoldSetupTime</references>
        <references refid="struct_f_s_m_c___n_a_n_d___p_c_c_a_r_d_timing_init_type_def_1a8a2a2a9e71dbf276fddad2bb32c0d256" compoundref="stm32f10x__fsmc_8h" startline="172">FSMC_NAND_PCCARDTimingInitTypeDef::FSMC_HiZSetupTime</references>
        <references refid="struct_f_s_m_c___p_c_c_a_r_d_init_type_def_1aee510f2e6e6ef18e7f5eedfed702f697" compoundref="stm32f10x__fsmc_8h" startline="233">FSMC_PCCARDInitTypeDef::FSMC_AttributeSpaceTimingStruct</references>
        <references refid="struct_f_s_m_c___p_c_c_a_r_d_init_type_def_1abd9b9e8d7623829a40e5255b0949a3a1" compoundref="stm32f10x__fsmc_8h" startline="235">FSMC_PCCARDInitTypeDef::FSMC_IOSpaceTimingStruct</references>
      </memberdef>
      <memberdef kind="function" id="group___f_s_m_c___private___functions_1gaf943f0f2680168d3a95a3c2c9f3eca2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FSMC_NORSRAMCmd</definition>
        <argsstring>(uint32_t FSMC_Bank, FunctionalState NewState)</argsstring>
        <name>FSMC_NORSRAMCmd</name>
        <param>
          <type>uint32_t</type>
          <declname>FSMC_Bank</declname>
        </param>
        <param>
          <type><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref></type>
          <declname>NewState</declname>
        </param>
        <briefdescription>
<para>Enables or disables the specified NOR/SRAM Memory Bank. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>FSMC_Bank</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the FSMC Bank to be used This parameter can be one of the following values: <itemizedlist>
<listitem><para>FSMC_Bank1_NORSRAM1: FSMC Bank1 NOR/SRAM1 </para></listitem>
<listitem><para>FSMC_Bank1_NORSRAM2: FSMC Bank1 NOR/SRAM2 </para></listitem>
<listitem><para>FSMC_Bank1_NORSRAM3: FSMC Bank1 NOR/SRAM3 </para></listitem>
<listitem><para>FSMC_Bank1_NORSRAM4: FSMC Bank1 NOR/SRAM4 </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NewState</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of the FSMC_Bank. This parameter can be: ENABLE or DISABLE. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_fsmc.c" line="475" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_fsmc.c" bodystart="475" bodyend="490"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___f_s_m_c___exported___constants_1ga3e3bed3dd83d38e63f11ac4cbcb87304" compoundref="stm32f10x__fsmc_8h" startline="274">IS_FSMC_NORSRAM_BANK</references>
        <references refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" compoundref="stm32f10x_8h" startline="522">IS_FUNCTIONAL_STATE</references>
        <references refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1ad3a9df141be0ccf10389b640f492b26d" compoundref="stm32f10x_8h" startline="521">DISABLE</references>
        <references refid="group___peripheral__declaration_1ga2a759bad07fe730c99f9e1490e646220" compoundref="stm32f10x_8h" startline="1448">FSMC_Bank1</references>
        <references refid="group___f_s_m_c___private___defines_1ga3c427afcf32b17fb72be67fd4638e6d5" compoundref="stm32f10x__fsmc_8c" startline="49">BCR_MBKEN_Set</references>
        <references refid="group___f_s_m_c___private___defines_1gaa63b72d32a32c53a057ee0a45bed0d3b" compoundref="stm32f10x__fsmc_8c" startline="50">BCR_MBKEN_Reset</references>
      </memberdef>
      <memberdef kind="function" id="group___f_s_m_c___private___functions_1ga33ec7c39ea4d42e92c72c6e517d8235c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FSMC_NANDCmd</definition>
        <argsstring>(uint32_t FSMC_Bank, FunctionalState NewState)</argsstring>
        <name>FSMC_NANDCmd</name>
        <param>
          <type>uint32_t</type>
          <declname>FSMC_Bank</declname>
        </param>
        <param>
          <type><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref></type>
          <declname>NewState</declname>
        </param>
        <briefdescription>
<para>Enables or disables the specified NAND Memory Bank. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>FSMC_Bank</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the FSMC Bank to be used This parameter can be one of the following values: <itemizedlist>
<listitem><para>FSMC_Bank2_NAND: FSMC Bank2 NAND </para></listitem>
<listitem><para>FSMC_Bank3_NAND: FSMC Bank3 NAND </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NewState</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of the FSMC_Bank. This parameter can be: ENABLE or DISABLE. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_fsmc.c" line="501" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_fsmc.c" bodystart="501" bodyend="530"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___f_s_m_c___exported___constants_1ga725bada099197f15f49dc0c5be00e19b" compoundref="stm32f10x__fsmc_8h" startline="279">IS_FSMC_NAND_BANK</references>
        <references refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" compoundref="stm32f10x_8h" startline="522">IS_FUNCTIONAL_STATE</references>
        <references refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1ad3a9df141be0ccf10389b640f492b26d" compoundref="stm32f10x_8h" startline="521">DISABLE</references>
        <references refid="group___f_s_m_c___n_a_n_d___bank_1ga294e7134aa329a09e56b61eec9882a27" compoundref="stm32f10x__fsmc_8h" startline="260">FSMC_Bank2_NAND</references>
        <references refid="group___peripheral__declaration_1gabb3dfb5e88694aa2983ecabd33a55e0a" compoundref="stm32f10x_8h" startline="1450">FSMC_Bank2</references>
        <references refid="group___f_s_m_c___private___defines_1gade871050f882b7f48582084b0e95f67c" compoundref="stm32f10x__fsmc_8c" startline="54">PCR_PBKEN_Set</references>
        <references refid="group___peripheral__declaration_1ga411eedc00b5b2b22b494004d4f41b736" compoundref="stm32f10x_8h" startline="1451">FSMC_Bank3</references>
        <references refid="group___f_s_m_c___private___defines_1gac6d0ddc3888a0554b032f0f484cfe332" compoundref="stm32f10x__fsmc_8c" startline="55">PCR_PBKEN_Reset</references>
      </memberdef>
      <memberdef kind="function" id="group___f_s_m_c___private___functions_1ga2d410151ceb3428c6a1bf374a0472cde" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FSMC_PCCARDCmd</definition>
        <argsstring>(FunctionalState NewState)</argsstring>
        <name>FSMC_PCCARDCmd</name>
        <param>
          <type><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref></type>
          <declname>NewState</declname>
        </param>
        <briefdescription>
<para>Enables or disables the PCCARD Memory Bank. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>NewState</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of the PCCARD Memory Bank. This parameter can be: ENABLE or DISABLE. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_fsmc.c" line="538" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_fsmc.c" bodystart="538" bodyend="552"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" compoundref="stm32f10x_8h" startline="522">IS_FUNCTIONAL_STATE</references>
        <references refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1ad3a9df141be0ccf10389b640f492b26d" compoundref="stm32f10x_8h" startline="521">DISABLE</references>
        <references refid="group___peripheral__declaration_1ga5aa00e4ac522693c6a21bc23ef5a96df" compoundref="stm32f10x_8h" startline="1452">FSMC_Bank4</references>
        <references refid="group___f_s_m_c___private___defines_1gade871050f882b7f48582084b0e95f67c" compoundref="stm32f10x__fsmc_8c" startline="54">PCR_PBKEN_Set</references>
        <references refid="group___f_s_m_c___private___defines_1gac6d0ddc3888a0554b032f0f484cfe332" compoundref="stm32f10x__fsmc_8c" startline="55">PCR_PBKEN_Reset</references>
      </memberdef>
      <memberdef kind="function" id="group___f_s_m_c___private___functions_1ga5800301fc39bbe998a18ebd9ff191cdc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FSMC_NANDECCCmd</definition>
        <argsstring>(uint32_t FSMC_Bank, FunctionalState NewState)</argsstring>
        <name>FSMC_NANDECCCmd</name>
        <param>
          <type>uint32_t</type>
          <declname>FSMC_Bank</declname>
        </param>
        <param>
          <type><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref></type>
          <declname>NewState</declname>
        </param>
        <briefdescription>
<para>Enables or disables the FSMC NAND ECC feature. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>FSMC_Bank</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the FSMC Bank to be used This parameter can be one of the following values: <itemizedlist>
<listitem><para>FSMC_Bank2_NAND: FSMC Bank2 NAND </para></listitem>
<listitem><para>FSMC_Bank3_NAND: FSMC Bank3 NAND </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NewState</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of the FSMC NAND ECC feature. This parameter can be: ENABLE or DISABLE. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_fsmc.c" line="564" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_fsmc.c" bodystart="564" bodyend="593"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___f_s_m_c___exported___constants_1ga725bada099197f15f49dc0c5be00e19b" compoundref="stm32f10x__fsmc_8h" startline="279">IS_FSMC_NAND_BANK</references>
        <references refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" compoundref="stm32f10x_8h" startline="522">IS_FUNCTIONAL_STATE</references>
        <references refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1ad3a9df141be0ccf10389b640f492b26d" compoundref="stm32f10x_8h" startline="521">DISABLE</references>
        <references refid="group___f_s_m_c___n_a_n_d___bank_1ga294e7134aa329a09e56b61eec9882a27" compoundref="stm32f10x__fsmc_8h" startline="260">FSMC_Bank2_NAND</references>
        <references refid="group___peripheral__declaration_1gabb3dfb5e88694aa2983ecabd33a55e0a" compoundref="stm32f10x_8h" startline="1450">FSMC_Bank2</references>
        <references refid="group___f_s_m_c___private___defines_1ga8a0d7950936e3869b449d421e03a19ac" compoundref="stm32f10x__fsmc_8c" startline="56">PCR_ECCEN_Set</references>
        <references refid="group___peripheral__declaration_1ga411eedc00b5b2b22b494004d4f41b736" compoundref="stm32f10x_8h" startline="1451">FSMC_Bank3</references>
        <references refid="group___f_s_m_c___private___defines_1gaca1a5c5cd46c8a32dab58c3eb3b865fa" compoundref="stm32f10x__fsmc_8c" startline="57">PCR_ECCEN_Reset</references>
      </memberdef>
      <memberdef kind="function" id="group___f_s_m_c___private___functions_1gaad6d4f5b5a41684ce053fea55bdb98d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t FSMC_GetECC</definition>
        <argsstring>(uint32_t FSMC_Bank)</argsstring>
        <name>FSMC_GetECC</name>
        <param>
          <type>uint32_t</type>
          <declname>FSMC_Bank</declname>
        </param>
        <briefdescription>
<para>Returns the error correction code register value. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>FSMC_Bank</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the FSMC Bank to be used This parameter can be one of the following values: <itemizedlist>
<listitem><para>FSMC_Bank2_NAND: FSMC Bank2 NAND </para></listitem>
<listitem><para>FSMC_Bank3_NAND: FSMC Bank3 NAND </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>Error Correction Code (ECC) value. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_fsmc.c" line="603" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_fsmc.c" bodystart="603" bodyend="619"/>
        <references refid="group___f_s_m_c___n_a_n_d___bank_1ga294e7134aa329a09e56b61eec9882a27" compoundref="stm32f10x__fsmc_8h" startline="260">FSMC_Bank2_NAND</references>
        <references refid="group___peripheral__declaration_1gabb3dfb5e88694aa2983ecabd33a55e0a" compoundref="stm32f10x_8h" startline="1450">FSMC_Bank2</references>
        <references refid="group___peripheral__declaration_1ga411eedc00b5b2b22b494004d4f41b736" compoundref="stm32f10x_8h" startline="1451">FSMC_Bank3</references>
      </memberdef>
      <memberdef kind="function" id="group___f_s_m_c___private___functions_1ga217027ae3cd213b9076b6a1be197064c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FSMC_ITConfig</definition>
        <argsstring>(uint32_t FSMC_Bank, uint32_t FSMC_IT, FunctionalState NewState)</argsstring>
        <name>FSMC_ITConfig</name>
        <param>
          <type>uint32_t</type>
          <declname>FSMC_Bank</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>FSMC_IT</declname>
        </param>
        <param>
          <type><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref></type>
          <declname>NewState</declname>
        </param>
        <briefdescription>
<para>Enables or disables the specified FSMC interrupts. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>FSMC_Bank</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the FSMC Bank to be used This parameter can be one of the following values: <itemizedlist>
<listitem><para>FSMC_Bank2_NAND: FSMC Bank2 NAND </para></listitem>
<listitem><para>FSMC_Bank3_NAND: FSMC Bank3 NAND </para></listitem>
<listitem><para>FSMC_Bank4_PCCARD: FSMC Bank4 PCCARD </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FSMC_IT</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the FSMC interrupt sources to be enabled or disabled. This parameter can be any combination of the following values: <itemizedlist>
<listitem><para>FSMC_IT_RisingEdge: Rising edge detection interrupt. </para></listitem>
<listitem><para>FSMC_IT_Level: Level edge detection interrupt. </para></listitem>
<listitem><para>FSMC_IT_FallingEdge: Falling edge detection interrupt. </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NewState</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of the specified FSMC interrupts. This parameter can be: ENABLE or DISABLE. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_fsmc.c" line="637" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_fsmc.c" bodystart="637" bodyend="680"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___f_s_m_c___exported___constants_1gaca216ea0c184b78f23df15296a10bac0" compoundref="stm32f10x__fsmc_8h" startline="286">IS_FSMC_IT_BANK</references>
        <references refid="group___f_s_m_c___interrupt__sources_1ga40a38f097a75f27a700e626905fa9a38" compoundref="stm32f10x__fsmc_8h" startline="649">IS_FSMC_IT</references>
        <references refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" compoundref="stm32f10x_8h" startline="522">IS_FUNCTIONAL_STATE</references>
        <references refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1ad3a9df141be0ccf10389b640f492b26d" compoundref="stm32f10x_8h" startline="521">DISABLE</references>
        <references refid="group___f_s_m_c___n_a_n_d___bank_1ga294e7134aa329a09e56b61eec9882a27" compoundref="stm32f10x__fsmc_8h" startline="260">FSMC_Bank2_NAND</references>
        <references refid="group___peripheral__declaration_1gabb3dfb5e88694aa2983ecabd33a55e0a" compoundref="stm32f10x_8h" startline="1450">FSMC_Bank2</references>
        <references refid="group___f_s_m_c___n_a_n_d___bank_1gaf72def0732c026b0245d721ee371c85b" compoundref="stm32f10x__fsmc_8h" startline="261">FSMC_Bank3_NAND</references>
        <references refid="group___peripheral__declaration_1ga411eedc00b5b2b22b494004d4f41b736" compoundref="stm32f10x_8h" startline="1451">FSMC_Bank3</references>
        <references refid="group___peripheral__declaration_1ga5aa00e4ac522693c6a21bc23ef5a96df" compoundref="stm32f10x_8h" startline="1452">FSMC_Bank4</references>
      </memberdef>
      <memberdef kind="function" id="group___f_s_m_c___private___functions_1gae00355115b078f483f0771057bb849c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___exported__types_1ga89136caac2e14c55151f527ac02daaff" kindref="member">FlagStatus</ref></type>
        <definition>FlagStatus FSMC_GetFlagStatus</definition>
        <argsstring>(uint32_t FSMC_Bank, uint32_t FSMC_FLAG)</argsstring>
        <name>FSMC_GetFlagStatus</name>
        <param>
          <type>uint32_t</type>
          <declname>FSMC_Bank</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>FSMC_FLAG</declname>
        </param>
        <briefdescription>
<para>Checks whether the specified FSMC flag is set or not. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>FSMC_Bank</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the FSMC Bank to be used This parameter can be one of the following values: <itemizedlist>
<listitem><para>FSMC_Bank2_NAND: FSMC Bank2 NAND </para></listitem>
<listitem><para>FSMC_Bank3_NAND: FSMC Bank3 NAND </para></listitem>
<listitem><para>FSMC_Bank4_PCCARD: FSMC Bank4 PCCARD </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FSMC_FLAG</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the flag to check. This parameter can be one of the following values: <itemizedlist>
<listitem><para>FSMC_FLAG_RisingEdge: Rising egde detection Flag. </para></listitem>
<listitem><para>FSMC_FLAG_Level: Level detection Flag. </para></listitem>
<listitem><para>FSMC_FLAG_FallingEdge: Falling egde detection Flag. </para></listitem>
<listitem><para>FSMC_FLAG_FEMPT: Fifo empty Flag. </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of FSMC_FLAG (SET or RESET). </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_fsmc.c" line="697" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_fsmc.c" bodystart="697" bodyend="731"/>
        <references refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffa589b7d94a3d91d145720e2fed0eb3a05" compoundref="stm32f10x_8h" startline="519">RESET</references>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___f_s_m_c___exported___constants_1ga884e28a365a738ad8a3199ee279a1f77" compoundref="stm32f10x__fsmc_8h" startline="282">IS_FSMC_GETFLAG_BANK</references>
        <references refid="group___f_s_m_c___flags_1gab8674160ef7884f939e07041bbf5b18b" compoundref="stm32f10x__fsmc_8h" startline="665">IS_FSMC_GET_FLAG</references>
        <references refid="group___f_s_m_c___n_a_n_d___bank_1ga294e7134aa329a09e56b61eec9882a27" compoundref="stm32f10x__fsmc_8h" startline="260">FSMC_Bank2_NAND</references>
        <references refid="group___peripheral__declaration_1gabb3dfb5e88694aa2983ecabd33a55e0a" compoundref="stm32f10x_8h" startline="1450">FSMC_Bank2</references>
        <references refid="group___f_s_m_c___n_a_n_d___bank_1gaf72def0732c026b0245d721ee371c85b" compoundref="stm32f10x__fsmc_8h" startline="261">FSMC_Bank3_NAND</references>
        <references refid="group___peripheral__declaration_1ga411eedc00b5b2b22b494004d4f41b736" compoundref="stm32f10x_8h" startline="1451">FSMC_Bank3</references>
        <references refid="group___peripheral__declaration_1ga5aa00e4ac522693c6a21bc23ef5a96df" compoundref="stm32f10x_8h" startline="1452">FSMC_Bank4</references>
        <references refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffab44c8101cc294c074709ec1b14211792" compoundref="stm32f10x_8h" startline="519">SET</references>
      </memberdef>
      <memberdef kind="function" id="group___f_s_m_c___private___functions_1ga697618f2de0ad9a8a82461ddbebd5264" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FSMC_ClearFlag</definition>
        <argsstring>(uint32_t FSMC_Bank, uint32_t FSMC_FLAG)</argsstring>
        <name>FSMC_ClearFlag</name>
        <param>
          <type>uint32_t</type>
          <declname>FSMC_Bank</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>FSMC_FLAG</declname>
        </param>
        <briefdescription>
<para>Clears the FSMC&apos;s pending flags. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>FSMC_Bank</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the FSMC Bank to be used This parameter can be one of the following values: <itemizedlist>
<listitem><para>FSMC_Bank2_NAND: FSMC Bank2 NAND </para></listitem>
<listitem><para>FSMC_Bank3_NAND: FSMC Bank3 NAND </para></listitem>
<listitem><para>FSMC_Bank4_PCCARD: FSMC Bank4 PCCARD </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FSMC_FLAG</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the flag to clear. This parameter can be any combination of the following values: <itemizedlist>
<listitem><para>FSMC_FLAG_RisingEdge: Rising egde detection Flag. </para></listitem>
<listitem><para>FSMC_FLAG_Level: Level detection Flag. </para></listitem>
<listitem><para>FSMC_FLAG_FallingEdge: Falling egde detection Flag. </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_fsmc.c" line="747" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_fsmc.c" bodystart="747" bodyend="766"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___f_s_m_c___exported___constants_1ga884e28a365a738ad8a3199ee279a1f77" compoundref="stm32f10x__fsmc_8h" startline="282">IS_FSMC_GETFLAG_BANK</references>
        <references refid="group___f_s_m_c___flags_1ga1114bf56b54e726831b38fc8c5daa14e" compoundref="stm32f10x__fsmc_8h" startline="670">IS_FSMC_CLEAR_FLAG</references>
        <references refid="group___f_s_m_c___n_a_n_d___bank_1ga294e7134aa329a09e56b61eec9882a27" compoundref="stm32f10x__fsmc_8h" startline="260">FSMC_Bank2_NAND</references>
        <references refid="group___peripheral__declaration_1gabb3dfb5e88694aa2983ecabd33a55e0a" compoundref="stm32f10x_8h" startline="1450">FSMC_Bank2</references>
        <references refid="group___f_s_m_c___n_a_n_d___bank_1gaf72def0732c026b0245d721ee371c85b" compoundref="stm32f10x__fsmc_8h" startline="261">FSMC_Bank3_NAND</references>
        <references refid="group___peripheral__declaration_1ga411eedc00b5b2b22b494004d4f41b736" compoundref="stm32f10x_8h" startline="1451">FSMC_Bank3</references>
        <references refid="group___peripheral__declaration_1ga5aa00e4ac522693c6a21bc23ef5a96df" compoundref="stm32f10x_8h" startline="1452">FSMC_Bank4</references>
      </memberdef>
      <memberdef kind="function" id="group___f_s_m_c___private___functions_1ga7fce9ca889d33cd8b8b7413875dd4d73" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___exported__types_1gaacbd7ed539db0aacd973a0f6eca34074" kindref="member">ITStatus</ref></type>
        <definition>ITStatus FSMC_GetITStatus</definition>
        <argsstring>(uint32_t FSMC_Bank, uint32_t FSMC_IT)</argsstring>
        <name>FSMC_GetITStatus</name>
        <param>
          <type>uint32_t</type>
          <declname>FSMC_Bank</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>FSMC_IT</declname>
        </param>
        <briefdescription>
<para>Checks whether the specified FSMC interrupt has occurred or not. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>FSMC_Bank</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the FSMC Bank to be used This parameter can be one of the following values: <itemizedlist>
<listitem><para>FSMC_Bank2_NAND: FSMC Bank2 NAND </para></listitem>
<listitem><para>FSMC_Bank3_NAND: FSMC Bank3 NAND </para></listitem>
<listitem><para>FSMC_Bank4_PCCARD: FSMC Bank4 PCCARD </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FSMC_IT</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the FSMC interrupt source to check. This parameter can be one of the following values: <itemizedlist>
<listitem><para>FSMC_IT_RisingEdge: Rising edge detection interrupt. </para></listitem>
<listitem><para>FSMC_IT_Level: Level edge detection interrupt. </para></listitem>
<listitem><para>FSMC_IT_FallingEdge: Falling edge detection interrupt. </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of FSMC_IT (SET or RESET). </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_fsmc.c" line="782" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_fsmc.c" bodystart="782" bodyend="817"/>
        <references refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffa589b7d94a3d91d145720e2fed0eb3a05" compoundref="stm32f10x_8h" startline="519">RESET</references>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___f_s_m_c___exported___constants_1gaca216ea0c184b78f23df15296a10bac0" compoundref="stm32f10x__fsmc_8h" startline="286">IS_FSMC_IT_BANK</references>
        <references refid="group___f_s_m_c___interrupt__sources_1gae2a57d0b15e025212489ec1421ff245d" compoundref="stm32f10x__fsmc_8h" startline="650">IS_FSMC_GET_IT</references>
        <references refid="group___f_s_m_c___n_a_n_d___bank_1ga294e7134aa329a09e56b61eec9882a27" compoundref="stm32f10x__fsmc_8h" startline="260">FSMC_Bank2_NAND</references>
        <references refid="group___peripheral__declaration_1gabb3dfb5e88694aa2983ecabd33a55e0a" compoundref="stm32f10x_8h" startline="1450">FSMC_Bank2</references>
        <references refid="group___f_s_m_c___n_a_n_d___bank_1gaf72def0732c026b0245d721ee371c85b" compoundref="stm32f10x__fsmc_8h" startline="261">FSMC_Bank3_NAND</references>
        <references refid="group___peripheral__declaration_1ga411eedc00b5b2b22b494004d4f41b736" compoundref="stm32f10x_8h" startline="1451">FSMC_Bank3</references>
        <references refid="group___peripheral__declaration_1ga5aa00e4ac522693c6a21bc23ef5a96df" compoundref="stm32f10x_8h" startline="1452">FSMC_Bank4</references>
        <references refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffab44c8101cc294c074709ec1b14211792" compoundref="stm32f10x_8h" startline="519">SET</references>
      </memberdef>
      <memberdef kind="function" id="group___f_s_m_c___private___functions_1gad9387e7674b8a376256a3378649e004e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FSMC_ClearITPendingBit</definition>
        <argsstring>(uint32_t FSMC_Bank, uint32_t FSMC_IT)</argsstring>
        <name>FSMC_ClearITPendingBit</name>
        <param>
          <type>uint32_t</type>
          <declname>FSMC_Bank</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>FSMC_IT</declname>
        </param>
        <briefdescription>
<para>Clears the FSMC&apos;s interrupt pending bits. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>FSMC_Bank</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the FSMC Bank to be used This parameter can be one of the following values: <itemizedlist>
<listitem><para>FSMC_Bank2_NAND: FSMC Bank2 NAND </para></listitem>
<listitem><para>FSMC_Bank3_NAND: FSMC Bank3 NAND </para></listitem>
<listitem><para>FSMC_Bank4_PCCARD: FSMC Bank4 PCCARD </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FSMC_IT</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the interrupt pending bit to clear. This parameter can be any combination of the following values: <itemizedlist>
<listitem><para>FSMC_IT_RisingEdge: Rising edge detection interrupt. </para></listitem>
<listitem><para>FSMC_IT_Level: Level edge detection interrupt. </para></listitem>
<listitem><para>FSMC_IT_FallingEdge: Falling edge detection interrupt. </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_fsmc.c" line="833" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_fsmc.c" bodystart="833" bodyend="852"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___f_s_m_c___exported___constants_1gaca216ea0c184b78f23df15296a10bac0" compoundref="stm32f10x__fsmc_8h" startline="286">IS_FSMC_IT_BANK</references>
        <references refid="group___f_s_m_c___interrupt__sources_1ga40a38f097a75f27a700e626905fa9a38" compoundref="stm32f10x__fsmc_8h" startline="649">IS_FSMC_IT</references>
        <references refid="group___f_s_m_c___n_a_n_d___bank_1ga294e7134aa329a09e56b61eec9882a27" compoundref="stm32f10x__fsmc_8h" startline="260">FSMC_Bank2_NAND</references>
        <references refid="group___peripheral__declaration_1gabb3dfb5e88694aa2983ecabd33a55e0a" compoundref="stm32f10x_8h" startline="1450">FSMC_Bank2</references>
        <references refid="group___f_s_m_c___n_a_n_d___bank_1gaf72def0732c026b0245d721ee371c85b" compoundref="stm32f10x__fsmc_8h" startline="261">FSMC_Bank3_NAND</references>
        <references refid="group___peripheral__declaration_1ga411eedc00b5b2b22b494004d4f41b736" compoundref="stm32f10x_8h" startline="1451">FSMC_Bank3</references>
        <references refid="group___peripheral__declaration_1ga5aa00e4ac522693c6a21bc23ef5a96df" compoundref="stm32f10x_8h" startline="1452">FSMC_Bank4</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This file provides all the FSMC firmware functions. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>MCD Application Team </para></simplesect>
<simplesect kind="version"><para>V3.5.0 </para></simplesect>
<simplesect kind="date"><para>11-March-2011 </para></simplesect>
<simplesect kind="attention"><para></para></simplesect>
THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.</para><para><heading level="2"><center><copy/> COPYRIGHT 2011 STMicroelectronics</center></heading>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="22"><highlight class="comment">/*<sp/>Includes<sp/>------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="stm32f10x__fsmc_8h" kindref="compound">stm32f10x_fsmc.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="stm32f10x__rcc_8h" kindref="compound">stm32f10x_rcc.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="comment">/*<sp/>---------------------<sp/>FSMC<sp/>registers<sp/>bit<sp/>mask<sp/>----------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>FSMC<sp/>BCRx<sp/>Mask<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="group___f_s_m_c___private___defines_1ga3c427afcf32b17fb72be67fd4638e6d5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BCR_MBKEN_Set<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000001)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="group___f_s_m_c___private___defines_1gaa63b72d32a32c53a057ee0a45bed0d3b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BCR_MBKEN_Reset<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x000FFFFE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="group___f_s_m_c___private___defines_1ga38da33a73789b2c932962d75dfc1341f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BCR_FACCEN_Set<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000040)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>FSMC<sp/>PCRx<sp/>Mask<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="group___f_s_m_c___private___defines_1gade871050f882b7f48582084b0e95f67c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PCR_PBKEN_Set<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000004)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="group___f_s_m_c___private___defines_1gac6d0ddc3888a0554b032f0f484cfe332" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PCR_PBKEN_Reset<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x000FFFFB)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="group___f_s_m_c___private___defines_1ga8a0d7950936e3869b449d421e03a19ac" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PCR_ECCEN_Set<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000040)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="group___f_s_m_c___private___defines_1gaca1a5c5cd46c8a32dab58c3eb3b865fa" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PCR_ECCEN_Reset<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x000FFFBF)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="group___f_s_m_c___private___defines_1gaf3992efb285ab994c41463af5107c501" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PCR_MemoryType_NAND<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000008)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="102" refid="group___f_s_m_c___private___functions_1gaab3e6648e8a584e73785361ac960eded" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___f_s_m_c___private___functions_1gaab3e6648e8a584e73785361ac960eded" kindref="member">FSMC_NORSRAMDeInit</ref>(uint32_t<sp/>FSMC_Bank)</highlight></codeline>
<codeline lineno="103"><highlight class="normal">{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___f_s_m_c___exported___constants_1ga3e3bed3dd83d38e63f11ac4cbcb87304" kindref="member">IS_FSMC_NORSRAM_BANK</ref>(FSMC_Bank));</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>FSMC_Bank1_NORSRAM1<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(FSMC_Bank<sp/>==<sp/><ref refid="group___f_s_m_c___n_o_r_s_r_a_m___bank_1ga514a05828041fa1a13d464c9e4a0a4a9" kindref="member">FSMC_Bank1_NORSRAM1</ref>)</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga2a759bad07fe730c99f9e1490e646220" kindref="member">FSMC_Bank1</ref>-&gt;BTCR[FSMC_Bank]<sp/>=<sp/>0x000030DB;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>FSMC_Bank1_NORSRAM2,<sp/><sp/>FSMC_Bank1_NORSRAM3<sp/>or<sp/>FSMC_Bank1_NORSRAM4<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga2a759bad07fe730c99f9e1490e646220" kindref="member">FSMC_Bank1</ref>-&gt;BTCR[FSMC_Bank]<sp/>=<sp/>0x000030D2;<sp/></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><ref refid="group___peripheral__declaration_1ga2a759bad07fe730c99f9e1490e646220" kindref="member">FSMC_Bank1</ref>-&gt;BTCR[FSMC_Bank<sp/>+<sp/>1]<sp/>=<sp/>0x0FFFFFFF;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><ref refid="group___peripheral__declaration_1ga422986101f42a8811ae89ac69deb2759" kindref="member">FSMC_Bank1E</ref>-&gt;BWTR[FSMC_Bank]<sp/>=<sp/>0x0FFFFFFF;<sp/><sp/></highlight></codeline>
<codeline lineno="119"><highlight class="normal">}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="129" refid="group___f_s_m_c___private___functions_1gafb749503293474a68555961bd8f120e1" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___f_s_m_c___private___functions_1gafb749503293474a68555961bd8f120e1" kindref="member">FSMC_NANDDeInit</ref>(uint32_t<sp/>FSMC_Bank)</highlight></codeline>
<codeline lineno="130"><highlight class="normal">{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___f_s_m_c___exported___constants_1ga725bada099197f15f49dc0c5be00e19b" kindref="member">IS_FSMC_NAND_BANK</ref>(FSMC_Bank));</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(FSMC_Bank<sp/>==<sp/><ref refid="group___f_s_m_c___n_a_n_d___bank_1ga294e7134aa329a09e56b61eec9882a27" kindref="member">FSMC_Bank2_NAND</ref>)</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>the<sp/>FSMC_Bank2<sp/>registers<sp/>to<sp/>their<sp/>reset<sp/>values<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1gabb3dfb5e88694aa2983ecabd33a55e0a" kindref="member">FSMC_Bank2</ref>-&gt;PCR2<sp/>=<sp/>0x00000018;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1gabb3dfb5e88694aa2983ecabd33a55e0a" kindref="member">FSMC_Bank2</ref>-&gt;SR2<sp/>=<sp/>0x00000040;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1gabb3dfb5e88694aa2983ecabd33a55e0a" kindref="member">FSMC_Bank2</ref>-&gt;PMEM2<sp/>=<sp/>0xFCFCFCFC;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1gabb3dfb5e88694aa2983ecabd33a55e0a" kindref="member">FSMC_Bank2</ref>-&gt;PATT2<sp/>=<sp/>0xFCFCFCFC;<sp/><sp/></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>FSMC_Bank3_NAND<sp/>*/</highlight><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>the<sp/>FSMC_Bank3<sp/>registers<sp/>to<sp/>their<sp/>reset<sp/>values<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga411eedc00b5b2b22b494004d4f41b736" kindref="member">FSMC_Bank3</ref>-&gt;PCR3<sp/>=<sp/>0x00000018;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga411eedc00b5b2b22b494004d4f41b736" kindref="member">FSMC_Bank3</ref>-&gt;SR3<sp/>=<sp/>0x00000040;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga411eedc00b5b2b22b494004d4f41b736" kindref="member">FSMC_Bank3</ref>-&gt;PMEM3<sp/>=<sp/>0xFCFCFCFC;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga411eedc00b5b2b22b494004d4f41b736" kindref="member">FSMC_Bank3</ref>-&gt;PATT3<sp/>=<sp/>0xFCFCFCFC;<sp/></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>}<sp/><sp/></highlight></codeline>
<codeline lineno="151"><highlight class="normal">}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="158" refid="group___f_s_m_c___private___functions_1ga2f53ccf3a4f3c80a5a56fb47ccd47ccd" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___f_s_m_c___private___functions_1ga2f53ccf3a4f3c80a5a56fb47ccd47ccd" kindref="member">FSMC_PCCARDDeInit</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="159"><highlight class="normal">{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>the<sp/>FSMC_Bank4<sp/>registers<sp/>to<sp/>their<sp/>reset<sp/>values<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><ref refid="group___peripheral__declaration_1ga5aa00e4ac522693c6a21bc23ef5a96df" kindref="member">FSMC_Bank4</ref>-&gt;PCR4<sp/>=<sp/>0x00000018;<sp/></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><ref refid="group___peripheral__declaration_1ga5aa00e4ac522693c6a21bc23ef5a96df" kindref="member">FSMC_Bank4</ref>-&gt;SR4<sp/>=<sp/>0x00000000;<sp/></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><ref refid="group___peripheral__declaration_1ga5aa00e4ac522693c6a21bc23ef5a96df" kindref="member">FSMC_Bank4</ref>-&gt;PMEM4<sp/>=<sp/>0xFCFCFCFC;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><ref refid="group___peripheral__declaration_1ga5aa00e4ac522693c6a21bc23ef5a96df" kindref="member">FSMC_Bank4</ref>-&gt;PATT4<sp/>=<sp/>0xFCFCFCFC;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><ref refid="group___peripheral__declaration_1ga5aa00e4ac522693c6a21bc23ef5a96df" kindref="member">FSMC_Bank4</ref>-&gt;PIO4<sp/>=<sp/>0xFCFCFCFC;</highlight></codeline>
<codeline lineno="166"><highlight class="normal">}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="176" refid="group___f_s_m_c___private___functions_1ga9c27816e8b17394c9ee1ce9298917b4a" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___f_s_m_c___private___functions_1ga9c27816e8b17394c9ee1ce9298917b4a" kindref="member">FSMC_NORSRAMInit</ref>(<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def" kindref="compound">FSMC_NORSRAMInitTypeDef</ref>*<sp/>FSMC_NORSRAMInitStruct)</highlight></codeline>
<codeline lineno="177"><highlight class="normal">{<sp/></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___f_s_m_c___exported___constants_1ga3e3bed3dd83d38e63f11ac4cbcb87304" kindref="member">IS_FSMC_NORSRAM_BANK</ref>(FSMC_NORSRAMInitStruct-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1a7fcd864461cf0d1cf83b62fa2b4d3f86" kindref="member">FSMC_Bank</ref>));</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___f_s_m_c___data___address___bus___multiplexing_1ga546fcab8c1b751b4a959ba2ce5b35d79" kindref="member">IS_FSMC_MUX</ref>(FSMC_NORSRAMInitStruct-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1af4ff95085d3bb39e34c2f88ca3140ce5" kindref="member">FSMC_DataAddressMux</ref>));</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___f_s_m_c___memory___type_1ga255cd500e141f4ac024cf5f896921233" kindref="member">IS_FSMC_MEMORY</ref>(FSMC_NORSRAMInitStruct-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1a979ad605c6a63923e060576ee01e888d" kindref="member">FSMC_MemoryType</ref>));</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___f_s_m_c___data___width_1ga003d52b62f5950fb041f73f15ce20171" kindref="member">IS_FSMC_MEMORY_WIDTH</ref>(FSMC_NORSRAMInitStruct-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1a1791c771ff86f5dc5422040409517e9d" kindref="member">FSMC_MemoryDataWidth</ref>));</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___f_s_m_c___burst___access___mode_1gaf8736659c5064c3c03753d7874401e71" kindref="member">IS_FSMC_BURSTMODE</ref>(FSMC_NORSRAMInitStruct-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1aec0bfff5c934c251c21450a50f5bdb79" kindref="member">FSMC_BurstAccessMode</ref>));</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___f_s_m_c___asynchronous_wait_1ga52d579de825316ee058baf11bfb749d6" kindref="member">IS_FSMC_ASYNWAIT</ref>(FSMC_NORSRAMInitStruct-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1ac350cc34377fe3d5f882a6801bab1ac9" kindref="member">FSMC_AsynchronousWait</ref>));</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___f_s_m_c___wait___signal___polarity_1gabc5321807d5184fe5cdb7848e1be7bc6" kindref="member">IS_FSMC_WAIT_POLARITY</ref>(FSMC_NORSRAMInitStruct-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1a5d4d76594fc201943b51095e3ef34791" kindref="member">FSMC_WaitSignalPolarity</ref>));</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___f_s_m_c___wrap___mode_1ga0751d74b7fb1e17f6cedea091e8ebfc8" kindref="member">IS_FSMC_WRAP_MODE</ref>(FSMC_NORSRAMInitStruct-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1a7e201c17bf7c5f6cc69fb6de29c8b024" kindref="member">FSMC_WrapMode</ref>));</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___f_s_m_c___wait___timing_1ga3edb40c756afa8bb78550b7e22ded093" kindref="member">IS_FSMC_WAIT_SIGNAL_ACTIVE</ref>(FSMC_NORSRAMInitStruct-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1a71c6e7cc8e7e1a8fd0562960ffd23e88" kindref="member">FSMC_WaitSignalActive</ref>));</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___f_s_m_c___write___operation_1ga87fc20d11761caa66c3e7d77a3a7d3e3" kindref="member">IS_FSMC_WRITE_OPERATION</ref>(FSMC_NORSRAMInitStruct-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1a596793d1735c4e38c87e3bf91d986370" kindref="member">FSMC_WriteOperation</ref>));</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___f_s_m_c___wait___signal_1gae617db4f15c82850d4f5c927f9a7db3e" kindref="member">IS_FSMC_WAITE_SIGNAL</ref>(FSMC_NORSRAMInitStruct-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1aedbc7df3ff61cc93a910a64dc53c932b" kindref="member">FSMC_WaitSignal</ref>));</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___f_s_m_c___extended___mode_1ga79849ea07bf2a8f09989a6babd9e66e2" kindref="member">IS_FSMC_EXTENDED_MODE</ref>(FSMC_NORSRAMInitStruct-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1af33d0076b5bfea3a66e388ed7f3eb3f3" kindref="member">FSMC_ExtendedMode</ref>));</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___f_s_m_c___write___burst_1gab7b03a33fab765827832abbf07d01a10" kindref="member">IS_FSMC_WRITE_BURST</ref>(FSMC_NORSRAMInitStruct-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1adac3756711f2d76e56a8cbcb7a03843d" kindref="member">FSMC_WriteBurst</ref>));<sp/><sp/></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___f_s_m_c___address___setup___time_1ga8b77d090338011abc1be7f4a420e2d8f" kindref="member">IS_FSMC_ADDRESS_SETUP_TIME</ref>(FSMC_NORSRAMInitStruct-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1a33f8e281b9ff3187906309d005b4159e" kindref="member">FSMC_ReadWriteTimingStruct</ref>-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_timing_init_type_def_1a2ba90f4ec16bc38a2c4fa29c593b713b" kindref="member">FSMC_AddressSetupTime</ref>));</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___f_s_m_c___address___hold___time_1gae7d031a5b95ad00acf67e9bc95064998" kindref="member">IS_FSMC_ADDRESS_HOLD_TIME</ref>(FSMC_NORSRAMInitStruct-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1a33f8e281b9ff3187906309d005b4159e" kindref="member">FSMC_ReadWriteTimingStruct</ref>-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_timing_init_type_def_1a917b227ccb0a765791897ce3647ab26b" kindref="member">FSMC_AddressHoldTime</ref>));</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___f_s_m_c___data___setup___time_1ga3d923de775489e844913b29e77e8cca7" kindref="member">IS_FSMC_DATASETUP_TIME</ref>(FSMC_NORSRAMInitStruct-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1a33f8e281b9ff3187906309d005b4159e" kindref="member">FSMC_ReadWriteTimingStruct</ref>-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_timing_init_type_def_1aaa0a9178766adeed424d5c4eb728d1b1" kindref="member">FSMC_DataSetupTime</ref>));</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___f_s_m_c___bus___turn__around___duration_1ga9ec626f30679a18af91bf48c52d9260d" kindref="member">IS_FSMC_TURNAROUND_TIME</ref>(FSMC_NORSRAMInitStruct-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1a33f8e281b9ff3187906309d005b4159e" kindref="member">FSMC_ReadWriteTimingStruct</ref>-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_timing_init_type_def_1a3d98d57618e46ec6aa5d876dcc047d32" kindref="member">FSMC_BusTurnAroundDuration</ref>));</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___f_s_m_c___c_l_k___division_1ga9e5321b02ea049fd076ba705acd06b5f" kindref="member">IS_FSMC_CLK_DIV</ref>(FSMC_NORSRAMInitStruct-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1a33f8e281b9ff3187906309d005b4159e" kindref="member">FSMC_ReadWriteTimingStruct</ref>-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_timing_init_type_def_1a251b439331b82eecea58aa3f8882ea15" kindref="member">FSMC_CLKDivision</ref>));</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___f_s_m_c___data___latency_1ga1ab8659a9631d8bb4f57d8be8580155c" kindref="member">IS_FSMC_DATA_LATENCY</ref>(FSMC_NORSRAMInitStruct-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1a33f8e281b9ff3187906309d005b4159e" kindref="member">FSMC_ReadWriteTimingStruct</ref>-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_timing_init_type_def_1abc33886615fc3627448aa2dba11cfc77" kindref="member">FSMC_DataLatency</ref>));</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___f_s_m_c___access___mode_1ga1844335f297ea30e9d7fae09ce562092" kindref="member">IS_FSMC_ACCESS_MODE</ref>(FSMC_NORSRAMInitStruct-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1a33f8e281b9ff3187906309d005b4159e" kindref="member">FSMC_ReadWriteTimingStruct</ref>-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_timing_init_type_def_1a261d043a19cecf77e6859403be204efc" kindref="member">FSMC_AccessMode</ref>));<sp/></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Bank1<sp/>NOR/SRAM<sp/>control<sp/>register<sp/>configuration<sp/>*/</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><ref refid="group___peripheral__declaration_1ga2a759bad07fe730c99f9e1490e646220" kindref="member">FSMC_Bank1</ref>-&gt;BTCR[FSMC_NORSRAMInitStruct-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1a7fcd864461cf0d1cf83b62fa2b4d3f86" kindref="member">FSMC_Bank</ref>]<sp/>=<sp/></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(uint32_t)FSMC_NORSRAMInitStruct-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1af4ff95085d3bb39e34c2f88ca3140ce5" kindref="member">FSMC_DataAddressMux</ref><sp/>|</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FSMC_NORSRAMInitStruct-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1a979ad605c6a63923e060576ee01e888d" kindref="member">FSMC_MemoryType</ref><sp/>|</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FSMC_NORSRAMInitStruct-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1a1791c771ff86f5dc5422040409517e9d" kindref="member">FSMC_MemoryDataWidth</ref><sp/>|</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FSMC_NORSRAMInitStruct-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1aec0bfff5c934c251c21450a50f5bdb79" kindref="member">FSMC_BurstAccessMode</ref><sp/>|</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FSMC_NORSRAMInitStruct-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1ac350cc34377fe3d5f882a6801bab1ac9" kindref="member">FSMC_AsynchronousWait</ref><sp/>|</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FSMC_NORSRAMInitStruct-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1a5d4d76594fc201943b51095e3ef34791" kindref="member">FSMC_WaitSignalPolarity</ref><sp/>|</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FSMC_NORSRAMInitStruct-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1a7e201c17bf7c5f6cc69fb6de29c8b024" kindref="member">FSMC_WrapMode</ref><sp/>|</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FSMC_NORSRAMInitStruct-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1a71c6e7cc8e7e1a8fd0562960ffd23e88" kindref="member">FSMC_WaitSignalActive</ref><sp/>|</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FSMC_NORSRAMInitStruct-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1a596793d1735c4e38c87e3bf91d986370" kindref="member">FSMC_WriteOperation</ref><sp/>|</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FSMC_NORSRAMInitStruct-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1aedbc7df3ff61cc93a910a64dc53c932b" kindref="member">FSMC_WaitSignal</ref><sp/>|</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FSMC_NORSRAMInitStruct-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1af33d0076b5bfea3a66e388ed7f3eb3f3" kindref="member">FSMC_ExtendedMode</ref><sp/>|</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FSMC_NORSRAMInitStruct-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1adac3756711f2d76e56a8cbcb7a03843d" kindref="member">FSMC_WriteBurst</ref>;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(FSMC_NORSRAMInitStruct-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1a979ad605c6a63923e060576ee01e888d" kindref="member">FSMC_MemoryType</ref><sp/>==<sp/><ref refid="group___f_s_m_c___memory___type_1ga8b9390abe7c281947c550bf4365649e5" kindref="member">FSMC_MemoryType_NOR</ref>)</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga2a759bad07fe730c99f9e1490e646220" kindref="member">FSMC_Bank1</ref>-&gt;BTCR[FSMC_NORSRAMInitStruct-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1a7fcd864461cf0d1cf83b62fa2b4d3f86" kindref="member">FSMC_Bank</ref>]<sp/>|=<sp/>(uint32_t)<ref refid="group___f_s_m_c___private___defines_1ga38da33a73789b2c932962d75dfc1341f" kindref="member">BCR_FACCEN_Set</ref>;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Bank1<sp/>NOR/SRAM<sp/>timing<sp/>register<sp/>configuration<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><ref refid="group___peripheral__declaration_1ga2a759bad07fe730c99f9e1490e646220" kindref="member">FSMC_Bank1</ref>-&gt;BTCR[FSMC_NORSRAMInitStruct-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1a7fcd864461cf0d1cf83b62fa2b4d3f86" kindref="member">FSMC_Bank</ref>+1]<sp/>=<sp/></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(uint32_t)FSMC_NORSRAMInitStruct-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1a33f8e281b9ff3187906309d005b4159e" kindref="member">FSMC_ReadWriteTimingStruct</ref>-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_timing_init_type_def_1a2ba90f4ec16bc38a2c4fa29c593b713b" kindref="member">FSMC_AddressSetupTime</ref><sp/>|</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(FSMC_NORSRAMInitStruct-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1a33f8e281b9ff3187906309d005b4159e" kindref="member">FSMC_ReadWriteTimingStruct</ref>-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_timing_init_type_def_1a917b227ccb0a765791897ce3647ab26b" kindref="member">FSMC_AddressHoldTime</ref><sp/>&lt;&lt;<sp/>4)<sp/>|</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(FSMC_NORSRAMInitStruct-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1a33f8e281b9ff3187906309d005b4159e" kindref="member">FSMC_ReadWriteTimingStruct</ref>-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_timing_init_type_def_1aaa0a9178766adeed424d5c4eb728d1b1" kindref="member">FSMC_DataSetupTime</ref><sp/>&lt;&lt;<sp/>8)<sp/>|</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(FSMC_NORSRAMInitStruct-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1a33f8e281b9ff3187906309d005b4159e" kindref="member">FSMC_ReadWriteTimingStruct</ref>-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_timing_init_type_def_1a3d98d57618e46ec6aa5d876dcc047d32" kindref="member">FSMC_BusTurnAroundDuration</ref><sp/>&lt;&lt;<sp/>16)<sp/>|</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(FSMC_NORSRAMInitStruct-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1a33f8e281b9ff3187906309d005b4159e" kindref="member">FSMC_ReadWriteTimingStruct</ref>-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_timing_init_type_def_1a251b439331b82eecea58aa3f8882ea15" kindref="member">FSMC_CLKDivision</ref><sp/>&lt;&lt;<sp/>20)<sp/>|</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(FSMC_NORSRAMInitStruct-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1a33f8e281b9ff3187906309d005b4159e" kindref="member">FSMC_ReadWriteTimingStruct</ref>-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_timing_init_type_def_1abc33886615fc3627448aa2dba11cfc77" kindref="member">FSMC_DataLatency</ref><sp/>&lt;&lt;<sp/>24)<sp/>|</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FSMC_NORSRAMInitStruct-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1a33f8e281b9ff3187906309d005b4159e" kindref="member">FSMC_ReadWriteTimingStruct</ref>-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_timing_init_type_def_1a261d043a19cecf77e6859403be204efc" kindref="member">FSMC_AccessMode</ref>;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Bank1<sp/>NOR/SRAM<sp/>timing<sp/>register<sp/>for<sp/>write<sp/>configuration,<sp/>if<sp/>extended<sp/>mode<sp/>is<sp/>used<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(FSMC_NORSRAMInitStruct-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1af33d0076b5bfea3a66e388ed7f3eb3f3" kindref="member">FSMC_ExtendedMode</ref><sp/>==<sp/><ref refid="group___f_s_m_c___extended___mode_1gaef9ff4c81a52fdb0471d2c4422271d2a" kindref="member">FSMC_ExtendedMode_Enable</ref>)</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___f_s_m_c___address___setup___time_1ga8b77d090338011abc1be7f4a420e2d8f" kindref="member">IS_FSMC_ADDRESS_SETUP_TIME</ref>(FSMC_NORSRAMInitStruct-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1ac62cf7426a933ce6aa6efc3a8e82dac1" kindref="member">FSMC_WriteTimingStruct</ref>-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_timing_init_type_def_1a2ba90f4ec16bc38a2c4fa29c593b713b" kindref="member">FSMC_AddressSetupTime</ref>));</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___f_s_m_c___address___hold___time_1gae7d031a5b95ad00acf67e9bc95064998" kindref="member">IS_FSMC_ADDRESS_HOLD_TIME</ref>(FSMC_NORSRAMInitStruct-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1ac62cf7426a933ce6aa6efc3a8e82dac1" kindref="member">FSMC_WriteTimingStruct</ref>-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_timing_init_type_def_1a917b227ccb0a765791897ce3647ab26b" kindref="member">FSMC_AddressHoldTime</ref>));</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___f_s_m_c___data___setup___time_1ga3d923de775489e844913b29e77e8cca7" kindref="member">IS_FSMC_DATASETUP_TIME</ref>(FSMC_NORSRAMInitStruct-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1ac62cf7426a933ce6aa6efc3a8e82dac1" kindref="member">FSMC_WriteTimingStruct</ref>-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_timing_init_type_def_1aaa0a9178766adeed424d5c4eb728d1b1" kindref="member">FSMC_DataSetupTime</ref>));</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___f_s_m_c___c_l_k___division_1ga9e5321b02ea049fd076ba705acd06b5f" kindref="member">IS_FSMC_CLK_DIV</ref>(FSMC_NORSRAMInitStruct-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1ac62cf7426a933ce6aa6efc3a8e82dac1" kindref="member">FSMC_WriteTimingStruct</ref>-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_timing_init_type_def_1a251b439331b82eecea58aa3f8882ea15" kindref="member">FSMC_CLKDivision</ref>));</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___f_s_m_c___data___latency_1ga1ab8659a9631d8bb4f57d8be8580155c" kindref="member">IS_FSMC_DATA_LATENCY</ref>(FSMC_NORSRAMInitStruct-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1ac62cf7426a933ce6aa6efc3a8e82dac1" kindref="member">FSMC_WriteTimingStruct</ref>-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_timing_init_type_def_1abc33886615fc3627448aa2dba11cfc77" kindref="member">FSMC_DataLatency</ref>));</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___f_s_m_c___access___mode_1ga1844335f297ea30e9d7fae09ce562092" kindref="member">IS_FSMC_ACCESS_MODE</ref>(FSMC_NORSRAMInitStruct-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1ac62cf7426a933ce6aa6efc3a8e82dac1" kindref="member">FSMC_WriteTimingStruct</ref>-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_timing_init_type_def_1a261d043a19cecf77e6859403be204efc" kindref="member">FSMC_AccessMode</ref>));</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga422986101f42a8811ae89ac69deb2759" kindref="member">FSMC_Bank1E</ref>-&gt;BWTR[FSMC_NORSRAMInitStruct-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1a7fcd864461cf0d1cf83b62fa2b4d3f86" kindref="member">FSMC_Bank</ref>]<sp/>=<sp/></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(uint32_t)FSMC_NORSRAMInitStruct-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1ac62cf7426a933ce6aa6efc3a8e82dac1" kindref="member">FSMC_WriteTimingStruct</ref>-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_timing_init_type_def_1a2ba90f4ec16bc38a2c4fa29c593b713b" kindref="member">FSMC_AddressSetupTime</ref><sp/>|</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(FSMC_NORSRAMInitStruct-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1ac62cf7426a933ce6aa6efc3a8e82dac1" kindref="member">FSMC_WriteTimingStruct</ref>-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_timing_init_type_def_1a917b227ccb0a765791897ce3647ab26b" kindref="member">FSMC_AddressHoldTime</ref><sp/>&lt;&lt;<sp/>4<sp/>)|</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(FSMC_NORSRAMInitStruct-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1ac62cf7426a933ce6aa6efc3a8e82dac1" kindref="member">FSMC_WriteTimingStruct</ref>-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_timing_init_type_def_1aaa0a9178766adeed424d5c4eb728d1b1" kindref="member">FSMC_DataSetupTime</ref><sp/>&lt;&lt;<sp/>8)<sp/>|</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(FSMC_NORSRAMInitStruct-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1ac62cf7426a933ce6aa6efc3a8e82dac1" kindref="member">FSMC_WriteTimingStruct</ref>-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_timing_init_type_def_1a251b439331b82eecea58aa3f8882ea15" kindref="member">FSMC_CLKDivision</ref><sp/>&lt;&lt;<sp/>20)<sp/>|</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(FSMC_NORSRAMInitStruct-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1ac62cf7426a933ce6aa6efc3a8e82dac1" kindref="member">FSMC_WriteTimingStruct</ref>-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_timing_init_type_def_1abc33886615fc3627448aa2dba11cfc77" kindref="member">FSMC_DataLatency</ref><sp/>&lt;&lt;<sp/>24)<sp/>|</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FSMC_NORSRAMInitStruct-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1ac62cf7426a933ce6aa6efc3a8e82dac1" kindref="member">FSMC_WriteTimingStruct</ref>-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_timing_init_type_def_1a261d043a19cecf77e6859403be204efc" kindref="member">FSMC_AccessMode</ref>;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga422986101f42a8811ae89ac69deb2759" kindref="member">FSMC_Bank1E</ref>-&gt;BWTR[FSMC_NORSRAMInitStruct-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1a7fcd864461cf0d1cf83b62fa2b4d3f86" kindref="member">FSMC_Bank</ref>]<sp/>=<sp/>0x0FFFFFFF;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="252"><highlight class="normal">}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="262" refid="group___f_s_m_c___private___functions_1ga9f81ccc4e126c11f1eb33077b1a68e6f" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___f_s_m_c___private___functions_1ga9f81ccc4e126c11f1eb33077b1a68e6f" kindref="member">FSMC_NANDInit</ref>(<ref refid="struct_f_s_m_c___n_a_n_d_init_type_def" kindref="compound">FSMC_NANDInitTypeDef</ref>*<sp/>FSMC_NANDInitStruct)</highlight></codeline>
<codeline lineno="263"><highlight class="normal">{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/>uint32_t<sp/>tmppcr<sp/>=<sp/>0x00000000,<sp/>tmppmem<sp/>=<sp/>0x00000000,<sp/>tmppatt<sp/>=<sp/>0x00000000;<sp/></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<sp/><ref refid="group___f_s_m_c___exported___constants_1ga725bada099197f15f49dc0c5be00e19b" kindref="member">IS_FSMC_NAND_BANK</ref>(FSMC_NANDInitStruct-&gt;<ref refid="struct_f_s_m_c___n_a_n_d_init_type_def_1a60d3ead2188e1dbdf06810e952b3ce0f" kindref="member">FSMC_Bank</ref>));</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<sp/><ref refid="group___f_s_m_c___wait__feature_1ga07c2585b517df2c7afbe3ba16c22f236" kindref="member">IS_FSMC_WAIT_FEATURE</ref>(FSMC_NANDInitStruct-&gt;<ref refid="struct_f_s_m_c___n_a_n_d_init_type_def_1ab350e15014c4a9f4b2c2f2848f11eeca" kindref="member">FSMC_Waitfeature</ref>));</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<sp/><ref refid="group___f_s_m_c___data___width_1ga003d52b62f5950fb041f73f15ce20171" kindref="member">IS_FSMC_MEMORY_WIDTH</ref>(FSMC_NANDInitStruct-&gt;<ref refid="struct_f_s_m_c___n_a_n_d_init_type_def_1ab4a4f56aab3150d8fb02aaf092db0235" kindref="member">FSMC_MemoryDataWidth</ref>));</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<sp/><ref refid="group___f_s_m_c___e_c_c_1gaf1a7cb45edd8707bf4ea8aac96799c77" kindref="member">IS_FSMC_ECC_STATE</ref>(FSMC_NANDInitStruct-&gt;<ref refid="struct_f_s_m_c___n_a_n_d_init_type_def_1a58d0510c0ce0ae3d1e3863bf8f571377" kindref="member">FSMC_ECC</ref>));</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<sp/><ref refid="group___f_s_m_c___e_c_c___page___size_1ga58fefa0d55875775a88f54ad7498178f" kindref="member">IS_FSMC_ECCPAGE_SIZE</ref>(FSMC_NANDInitStruct-&gt;<ref refid="struct_f_s_m_c___n_a_n_d_init_type_def_1a7ed6a25710ba724a7a8f90af60130cf6" kindref="member">FSMC_ECCPageSize</ref>));</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<sp/><ref refid="group___f_s_m_c___t_c_l_r___setup___time_1ga324848d0d9c0d2aad7ab70873b4a15e9" kindref="member">IS_FSMC_TCLR_TIME</ref>(FSMC_NANDInitStruct-&gt;<ref refid="struct_f_s_m_c___n_a_n_d_init_type_def_1a633c7be46a1d281916b9f2e34fa3d36a" kindref="member">FSMC_TCLRSetupTime</ref>));</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<sp/><ref refid="group___f_s_m_c___t_a_r___setup___time_1ga5b9e0f64c44ab68afca90cd28dedd8e3" kindref="member">IS_FSMC_TAR_TIME</ref>(FSMC_NANDInitStruct-&gt;<ref refid="struct_f_s_m_c___n_a_n_d_init_type_def_1a014c1b8977b454ac15654d93dbb7dff9" kindref="member">FSMC_TARSetupTime</ref>));</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___f_s_m_c___setup___time_1ga4f2fbb8f6ec492cc241a49c468e0d98d" kindref="member">IS_FSMC_SETUP_TIME</ref>(FSMC_NANDInitStruct-&gt;<ref refid="struct_f_s_m_c___n_a_n_d_init_type_def_1a7ab117a15e780c02fcad5d844e71c425" kindref="member">FSMC_CommonSpaceTimingStruct</ref>-&gt;<ref refid="struct_f_s_m_c___n_a_n_d___p_c_c_a_r_d_timing_init_type_def_1a31632aeb49269a29a39e3b191590b6dc" kindref="member">FSMC_SetupTime</ref>));</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___f_s_m_c___wait___setup___time_1ga5c0efc48afb916ceff32868940f81613" kindref="member">IS_FSMC_WAIT_TIME</ref>(FSMC_NANDInitStruct-&gt;<ref refid="struct_f_s_m_c___n_a_n_d_init_type_def_1a7ab117a15e780c02fcad5d844e71c425" kindref="member">FSMC_CommonSpaceTimingStruct</ref>-&gt;<ref refid="struct_f_s_m_c___n_a_n_d___p_c_c_a_r_d_timing_init_type_def_1a99a7d54ed2674faa5a4e0f2669812855" kindref="member">FSMC_WaitSetupTime</ref>));</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___f_s_m_c___hold___setup___time_1gab2abc8eb967495f2a2bafec8162d6385" kindref="member">IS_FSMC_HOLD_TIME</ref>(FSMC_NANDInitStruct-&gt;<ref refid="struct_f_s_m_c___n_a_n_d_init_type_def_1a7ab117a15e780c02fcad5d844e71c425" kindref="member">FSMC_CommonSpaceTimingStruct</ref>-&gt;<ref refid="struct_f_s_m_c___n_a_n_d___p_c_c_a_r_d_timing_init_type_def_1ae2b53c2cfd55ff277f453613dcf7c8b2" kindref="member">FSMC_HoldSetupTime</ref>));</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___f_s_m_c___hi_z___setup___time_1gaeb6295e8cc1a524f060c5e780f868033" kindref="member">IS_FSMC_HIZ_TIME</ref>(FSMC_NANDInitStruct-&gt;<ref refid="struct_f_s_m_c___n_a_n_d_init_type_def_1a7ab117a15e780c02fcad5d844e71c425" kindref="member">FSMC_CommonSpaceTimingStruct</ref>-&gt;<ref refid="struct_f_s_m_c___n_a_n_d___p_c_c_a_r_d_timing_init_type_def_1a8a2a2a9e71dbf276fddad2bb32c0d256" kindref="member">FSMC_HiZSetupTime</ref>));</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___f_s_m_c___setup___time_1ga4f2fbb8f6ec492cc241a49c468e0d98d" kindref="member">IS_FSMC_SETUP_TIME</ref>(FSMC_NANDInitStruct-&gt;<ref refid="struct_f_s_m_c___n_a_n_d_init_type_def_1a2a33bd855240dba37e507f223dbca062" kindref="member">FSMC_AttributeSpaceTimingStruct</ref>-&gt;<ref refid="struct_f_s_m_c___n_a_n_d___p_c_c_a_r_d_timing_init_type_def_1a31632aeb49269a29a39e3b191590b6dc" kindref="member">FSMC_SetupTime</ref>));</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___f_s_m_c___wait___setup___time_1ga5c0efc48afb916ceff32868940f81613" kindref="member">IS_FSMC_WAIT_TIME</ref>(FSMC_NANDInitStruct-&gt;<ref refid="struct_f_s_m_c___n_a_n_d_init_type_def_1a2a33bd855240dba37e507f223dbca062" kindref="member">FSMC_AttributeSpaceTimingStruct</ref>-&gt;<ref refid="struct_f_s_m_c___n_a_n_d___p_c_c_a_r_d_timing_init_type_def_1a99a7d54ed2674faa5a4e0f2669812855" kindref="member">FSMC_WaitSetupTime</ref>));</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___f_s_m_c___hold___setup___time_1gab2abc8eb967495f2a2bafec8162d6385" kindref="member">IS_FSMC_HOLD_TIME</ref>(FSMC_NANDInitStruct-&gt;<ref refid="struct_f_s_m_c___n_a_n_d_init_type_def_1a2a33bd855240dba37e507f223dbca062" kindref="member">FSMC_AttributeSpaceTimingStruct</ref>-&gt;<ref refid="struct_f_s_m_c___n_a_n_d___p_c_c_a_r_d_timing_init_type_def_1ae2b53c2cfd55ff277f453613dcf7c8b2" kindref="member">FSMC_HoldSetupTime</ref>));</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___f_s_m_c___hi_z___setup___time_1gaeb6295e8cc1a524f060c5e780f868033" kindref="member">IS_FSMC_HIZ_TIME</ref>(FSMC_NANDInitStruct-&gt;<ref refid="struct_f_s_m_c___n_a_n_d_init_type_def_1a2a33bd855240dba37e507f223dbca062" kindref="member">FSMC_AttributeSpaceTimingStruct</ref>-&gt;<ref refid="struct_f_s_m_c___n_a_n_d___p_c_c_a_r_d_timing_init_type_def_1a8a2a2a9e71dbf276fddad2bb32c0d256" kindref="member">FSMC_HiZSetupTime</ref>));</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>the<sp/>tmppcr<sp/>value<sp/>according<sp/>to<sp/>FSMC_NANDInitStruct<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/>tmppcr<sp/>=<sp/>(uint32_t)FSMC_NANDInitStruct-&gt;<ref refid="struct_f_s_m_c___n_a_n_d_init_type_def_1ab350e15014c4a9f4b2c2f2848f11eeca" kindref="member">FSMC_Waitfeature</ref><sp/>|</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___f_s_m_c___private___defines_1gaf3992efb285ab994c41463af5107c501" kindref="member">PCR_MemoryType_NAND</ref><sp/>|</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FSMC_NANDInitStruct-&gt;<ref refid="struct_f_s_m_c___n_a_n_d_init_type_def_1ab4a4f56aab3150d8fb02aaf092db0235" kindref="member">FSMC_MemoryDataWidth</ref><sp/>|</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FSMC_NANDInitStruct-&gt;<ref refid="struct_f_s_m_c___n_a_n_d_init_type_def_1a58d0510c0ce0ae3d1e3863bf8f571377" kindref="member">FSMC_ECC</ref><sp/>|</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FSMC_NANDInitStruct-&gt;<ref refid="struct_f_s_m_c___n_a_n_d_init_type_def_1a7ed6a25710ba724a7a8f90af60130cf6" kindref="member">FSMC_ECCPageSize</ref><sp/>|</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(FSMC_NANDInitStruct-&gt;<ref refid="struct_f_s_m_c___n_a_n_d_init_type_def_1a633c7be46a1d281916b9f2e34fa3d36a" kindref="member">FSMC_TCLRSetupTime</ref><sp/>&lt;&lt;<sp/>9<sp/>)|</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(FSMC_NANDInitStruct-&gt;<ref refid="struct_f_s_m_c___n_a_n_d_init_type_def_1a014c1b8977b454ac15654d93dbb7dff9" kindref="member">FSMC_TARSetupTime</ref><sp/>&lt;&lt;<sp/>13);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>tmppmem<sp/>value<sp/>according<sp/>to<sp/>FSMC_CommonSpaceTimingStructure<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/>tmppmem<sp/>=<sp/>(uint32_t)FSMC_NANDInitStruct-&gt;<ref refid="struct_f_s_m_c___n_a_n_d_init_type_def_1a7ab117a15e780c02fcad5d844e71c425" kindref="member">FSMC_CommonSpaceTimingStruct</ref>-&gt;<ref refid="struct_f_s_m_c___n_a_n_d___p_c_c_a_r_d_timing_init_type_def_1a31632aeb49269a29a39e3b191590b6dc" kindref="member">FSMC_SetupTime</ref><sp/>|</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(FSMC_NANDInitStruct-&gt;<ref refid="struct_f_s_m_c___n_a_n_d_init_type_def_1a7ab117a15e780c02fcad5d844e71c425" kindref="member">FSMC_CommonSpaceTimingStruct</ref>-&gt;<ref refid="struct_f_s_m_c___n_a_n_d___p_c_c_a_r_d_timing_init_type_def_1a99a7d54ed2674faa5a4e0f2669812855" kindref="member">FSMC_WaitSetupTime</ref><sp/>&lt;&lt;<sp/>8)<sp/>|</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(FSMC_NANDInitStruct-&gt;<ref refid="struct_f_s_m_c___n_a_n_d_init_type_def_1a7ab117a15e780c02fcad5d844e71c425" kindref="member">FSMC_CommonSpaceTimingStruct</ref>-&gt;<ref refid="struct_f_s_m_c___n_a_n_d___p_c_c_a_r_d_timing_init_type_def_1ae2b53c2cfd55ff277f453613dcf7c8b2" kindref="member">FSMC_HoldSetupTime</ref><sp/>&lt;&lt;<sp/>16)|</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(FSMC_NANDInitStruct-&gt;<ref refid="struct_f_s_m_c___n_a_n_d_init_type_def_1a7ab117a15e780c02fcad5d844e71c425" kindref="member">FSMC_CommonSpaceTimingStruct</ref>-&gt;<ref refid="struct_f_s_m_c___n_a_n_d___p_c_c_a_r_d_timing_init_type_def_1a8a2a2a9e71dbf276fddad2bb32c0d256" kindref="member">FSMC_HiZSetupTime</ref><sp/>&lt;&lt;<sp/>24);<sp/></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>tmppatt<sp/>value<sp/>according<sp/>to<sp/>FSMC_AttributeSpaceTimingStructure<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/>tmppatt<sp/>=<sp/>(uint32_t)FSMC_NANDInitStruct-&gt;<ref refid="struct_f_s_m_c___n_a_n_d_init_type_def_1a2a33bd855240dba37e507f223dbca062" kindref="member">FSMC_AttributeSpaceTimingStruct</ref>-&gt;<ref refid="struct_f_s_m_c___n_a_n_d___p_c_c_a_r_d_timing_init_type_def_1a31632aeb49269a29a39e3b191590b6dc" kindref="member">FSMC_SetupTime</ref><sp/>|</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(FSMC_NANDInitStruct-&gt;<ref refid="struct_f_s_m_c___n_a_n_d_init_type_def_1a2a33bd855240dba37e507f223dbca062" kindref="member">FSMC_AttributeSpaceTimingStruct</ref>-&gt;<ref refid="struct_f_s_m_c___n_a_n_d___p_c_c_a_r_d_timing_init_type_def_1a99a7d54ed2674faa5a4e0f2669812855" kindref="member">FSMC_WaitSetupTime</ref><sp/>&lt;&lt;<sp/>8)<sp/>|</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(FSMC_NANDInitStruct-&gt;<ref refid="struct_f_s_m_c___n_a_n_d_init_type_def_1a2a33bd855240dba37e507f223dbca062" kindref="member">FSMC_AttributeSpaceTimingStruct</ref>-&gt;<ref refid="struct_f_s_m_c___n_a_n_d___p_c_c_a_r_d_timing_init_type_def_1ae2b53c2cfd55ff277f453613dcf7c8b2" kindref="member">FSMC_HoldSetupTime</ref><sp/>&lt;&lt;<sp/>16)|</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(FSMC_NANDInitStruct-&gt;<ref refid="struct_f_s_m_c___n_a_n_d_init_type_def_1a2a33bd855240dba37e507f223dbca062" kindref="member">FSMC_AttributeSpaceTimingStruct</ref>-&gt;<ref refid="struct_f_s_m_c___n_a_n_d___p_c_c_a_r_d_timing_init_type_def_1a8a2a2a9e71dbf276fddad2bb32c0d256" kindref="member">FSMC_HiZSetupTime</ref><sp/>&lt;&lt;<sp/>24);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(FSMC_NANDInitStruct-&gt;<ref refid="struct_f_s_m_c___n_a_n_d_init_type_def_1a60d3ead2188e1dbdf06810e952b3ce0f" kindref="member">FSMC_Bank</ref><sp/>==<sp/><ref refid="group___f_s_m_c___n_a_n_d___bank_1ga294e7134aa329a09e56b61eec9882a27" kindref="member">FSMC_Bank2_NAND</ref>)</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>FSMC_Bank2_NAND<sp/>registers<sp/>configuration<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1gabb3dfb5e88694aa2983ecabd33a55e0a" kindref="member">FSMC_Bank2</ref>-&gt;PCR2<sp/>=<sp/>tmppcr;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1gabb3dfb5e88694aa2983ecabd33a55e0a" kindref="member">FSMC_Bank2</ref>-&gt;PMEM2<sp/>=<sp/>tmppmem;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1gabb3dfb5e88694aa2983ecabd33a55e0a" kindref="member">FSMC_Bank2</ref>-&gt;PATT2<sp/>=<sp/>tmppatt;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>FSMC_Bank3_NAND<sp/>registers<sp/>configuration<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga411eedc00b5b2b22b494004d4f41b736" kindref="member">FSMC_Bank3</ref>-&gt;PCR3<sp/>=<sp/>tmppcr;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga411eedc00b5b2b22b494004d4f41b736" kindref="member">FSMC_Bank3</ref>-&gt;PMEM3<sp/>=<sp/>tmppmem;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga411eedc00b5b2b22b494004d4f41b736" kindref="member">FSMC_Bank3</ref>-&gt;PATT3<sp/>=<sp/>tmppatt;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="318"><highlight class="normal">}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="328" refid="group___f_s_m_c___private___functions_1gacee1351363e7700a296faa1734a910aa" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___f_s_m_c___private___functions_1gacee1351363e7700a296faa1734a910aa" kindref="member">FSMC_PCCARDInit</ref>(<ref refid="struct_f_s_m_c___p_c_c_a_r_d_init_type_def" kindref="compound">FSMC_PCCARDInitTypeDef</ref>*<sp/>FSMC_PCCARDInitStruct)</highlight></codeline>
<codeline lineno="329"><highlight class="normal">{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___f_s_m_c___wait__feature_1ga07c2585b517df2c7afbe3ba16c22f236" kindref="member">IS_FSMC_WAIT_FEATURE</ref>(FSMC_PCCARDInitStruct-&gt;<ref refid="struct_f_s_m_c___p_c_c_a_r_d_init_type_def_1a3ffd8c627ffe3ac90dfbfe93a8b97c26" kindref="member">FSMC_Waitfeature</ref>));</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___f_s_m_c___t_c_l_r___setup___time_1ga324848d0d9c0d2aad7ab70873b4a15e9" kindref="member">IS_FSMC_TCLR_TIME</ref>(FSMC_PCCARDInitStruct-&gt;<ref refid="struct_f_s_m_c___p_c_c_a_r_d_init_type_def_1a15db9675791f6f9c7fd82fe1084ff694" kindref="member">FSMC_TCLRSetupTime</ref>));</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___f_s_m_c___t_a_r___setup___time_1ga5b9e0f64c44ab68afca90cd28dedd8e3" kindref="member">IS_FSMC_TAR_TIME</ref>(FSMC_PCCARDInitStruct-&gt;<ref refid="struct_f_s_m_c___p_c_c_a_r_d_init_type_def_1ac83f977e01623595e0aa8dd0b1eb3fcc" kindref="member">FSMC_TARSetupTime</ref>));</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___f_s_m_c___setup___time_1ga4f2fbb8f6ec492cc241a49c468e0d98d" kindref="member">IS_FSMC_SETUP_TIME</ref>(FSMC_PCCARDInitStruct-&gt;<ref refid="struct_f_s_m_c___p_c_c_a_r_d_init_type_def_1a87cb99ebe9b5ed570c6467abc9c2ef6d" kindref="member">FSMC_CommonSpaceTimingStruct</ref>-&gt;<ref refid="struct_f_s_m_c___n_a_n_d___p_c_c_a_r_d_timing_init_type_def_1a31632aeb49269a29a39e3b191590b6dc" kindref="member">FSMC_SetupTime</ref>));</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___f_s_m_c___wait___setup___time_1ga5c0efc48afb916ceff32868940f81613" kindref="member">IS_FSMC_WAIT_TIME</ref>(FSMC_PCCARDInitStruct-&gt;<ref refid="struct_f_s_m_c___p_c_c_a_r_d_init_type_def_1a87cb99ebe9b5ed570c6467abc9c2ef6d" kindref="member">FSMC_CommonSpaceTimingStruct</ref>-&gt;<ref refid="struct_f_s_m_c___n_a_n_d___p_c_c_a_r_d_timing_init_type_def_1a99a7d54ed2674faa5a4e0f2669812855" kindref="member">FSMC_WaitSetupTime</ref>));</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___f_s_m_c___hold___setup___time_1gab2abc8eb967495f2a2bafec8162d6385" kindref="member">IS_FSMC_HOLD_TIME</ref>(FSMC_PCCARDInitStruct-&gt;<ref refid="struct_f_s_m_c___p_c_c_a_r_d_init_type_def_1a87cb99ebe9b5ed570c6467abc9c2ef6d" kindref="member">FSMC_CommonSpaceTimingStruct</ref>-&gt;<ref refid="struct_f_s_m_c___n_a_n_d___p_c_c_a_r_d_timing_init_type_def_1ae2b53c2cfd55ff277f453613dcf7c8b2" kindref="member">FSMC_HoldSetupTime</ref>));</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___f_s_m_c___hi_z___setup___time_1gaeb6295e8cc1a524f060c5e780f868033" kindref="member">IS_FSMC_HIZ_TIME</ref>(FSMC_PCCARDInitStruct-&gt;<ref refid="struct_f_s_m_c___p_c_c_a_r_d_init_type_def_1a87cb99ebe9b5ed570c6467abc9c2ef6d" kindref="member">FSMC_CommonSpaceTimingStruct</ref>-&gt;<ref refid="struct_f_s_m_c___n_a_n_d___p_c_c_a_r_d_timing_init_type_def_1a8a2a2a9e71dbf276fddad2bb32c0d256" kindref="member">FSMC_HiZSetupTime</ref>));</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___f_s_m_c___setup___time_1ga4f2fbb8f6ec492cc241a49c468e0d98d" kindref="member">IS_FSMC_SETUP_TIME</ref>(FSMC_PCCARDInitStruct-&gt;<ref refid="struct_f_s_m_c___p_c_c_a_r_d_init_type_def_1aee510f2e6e6ef18e7f5eedfed702f697" kindref="member">FSMC_AttributeSpaceTimingStruct</ref>-&gt;<ref refid="struct_f_s_m_c___n_a_n_d___p_c_c_a_r_d_timing_init_type_def_1a31632aeb49269a29a39e3b191590b6dc" kindref="member">FSMC_SetupTime</ref>));</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___f_s_m_c___wait___setup___time_1ga5c0efc48afb916ceff32868940f81613" kindref="member">IS_FSMC_WAIT_TIME</ref>(FSMC_PCCARDInitStruct-&gt;<ref refid="struct_f_s_m_c___p_c_c_a_r_d_init_type_def_1aee510f2e6e6ef18e7f5eedfed702f697" kindref="member">FSMC_AttributeSpaceTimingStruct</ref>-&gt;<ref refid="struct_f_s_m_c___n_a_n_d___p_c_c_a_r_d_timing_init_type_def_1a99a7d54ed2674faa5a4e0f2669812855" kindref="member">FSMC_WaitSetupTime</ref>));</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___f_s_m_c___hold___setup___time_1gab2abc8eb967495f2a2bafec8162d6385" kindref="member">IS_FSMC_HOLD_TIME</ref>(FSMC_PCCARDInitStruct-&gt;<ref refid="struct_f_s_m_c___p_c_c_a_r_d_init_type_def_1aee510f2e6e6ef18e7f5eedfed702f697" kindref="member">FSMC_AttributeSpaceTimingStruct</ref>-&gt;<ref refid="struct_f_s_m_c___n_a_n_d___p_c_c_a_r_d_timing_init_type_def_1ae2b53c2cfd55ff277f453613dcf7c8b2" kindref="member">FSMC_HoldSetupTime</ref>));</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___f_s_m_c___hi_z___setup___time_1gaeb6295e8cc1a524f060c5e780f868033" kindref="member">IS_FSMC_HIZ_TIME</ref>(FSMC_PCCARDInitStruct-&gt;<ref refid="struct_f_s_m_c___p_c_c_a_r_d_init_type_def_1aee510f2e6e6ef18e7f5eedfed702f697" kindref="member">FSMC_AttributeSpaceTimingStruct</ref>-&gt;<ref refid="struct_f_s_m_c___n_a_n_d___p_c_c_a_r_d_timing_init_type_def_1a8a2a2a9e71dbf276fddad2bb32c0d256" kindref="member">FSMC_HiZSetupTime</ref>));</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___f_s_m_c___setup___time_1ga4f2fbb8f6ec492cc241a49c468e0d98d" kindref="member">IS_FSMC_SETUP_TIME</ref>(FSMC_PCCARDInitStruct-&gt;<ref refid="struct_f_s_m_c___p_c_c_a_r_d_init_type_def_1abd9b9e8d7623829a40e5255b0949a3a1" kindref="member">FSMC_IOSpaceTimingStruct</ref>-&gt;<ref refid="struct_f_s_m_c___n_a_n_d___p_c_c_a_r_d_timing_init_type_def_1a31632aeb49269a29a39e3b191590b6dc" kindref="member">FSMC_SetupTime</ref>));</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___f_s_m_c___wait___setup___time_1ga5c0efc48afb916ceff32868940f81613" kindref="member">IS_FSMC_WAIT_TIME</ref>(FSMC_PCCARDInitStruct-&gt;<ref refid="struct_f_s_m_c___p_c_c_a_r_d_init_type_def_1abd9b9e8d7623829a40e5255b0949a3a1" kindref="member">FSMC_IOSpaceTimingStruct</ref>-&gt;<ref refid="struct_f_s_m_c___n_a_n_d___p_c_c_a_r_d_timing_init_type_def_1a99a7d54ed2674faa5a4e0f2669812855" kindref="member">FSMC_WaitSetupTime</ref>));</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___f_s_m_c___hold___setup___time_1gab2abc8eb967495f2a2bafec8162d6385" kindref="member">IS_FSMC_HOLD_TIME</ref>(FSMC_PCCARDInitStruct-&gt;<ref refid="struct_f_s_m_c___p_c_c_a_r_d_init_type_def_1abd9b9e8d7623829a40e5255b0949a3a1" kindref="member">FSMC_IOSpaceTimingStruct</ref>-&gt;<ref refid="struct_f_s_m_c___n_a_n_d___p_c_c_a_r_d_timing_init_type_def_1ae2b53c2cfd55ff277f453613dcf7c8b2" kindref="member">FSMC_HoldSetupTime</ref>));</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___f_s_m_c___hi_z___setup___time_1gaeb6295e8cc1a524f060c5e780f868033" kindref="member">IS_FSMC_HIZ_TIME</ref>(FSMC_PCCARDInitStruct-&gt;<ref refid="struct_f_s_m_c___p_c_c_a_r_d_init_type_def_1abd9b9e8d7623829a40e5255b0949a3a1" kindref="member">FSMC_IOSpaceTimingStruct</ref>-&gt;<ref refid="struct_f_s_m_c___n_a_n_d___p_c_c_a_r_d_timing_init_type_def_1a8a2a2a9e71dbf276fddad2bb32c0d256" kindref="member">FSMC_HiZSetupTime</ref>));</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>the<sp/>PCR4<sp/>register<sp/>value<sp/>according<sp/>to<sp/>FSMC_PCCARDInitStruct<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><ref refid="group___peripheral__declaration_1ga5aa00e4ac522693c6a21bc23ef5a96df" kindref="member">FSMC_Bank4</ref>-&gt;PCR4<sp/>=<sp/>(uint32_t)FSMC_PCCARDInitStruct-&gt;<ref refid="struct_f_s_m_c___p_c_c_a_r_d_init_type_def_1a3ffd8c627ffe3ac90dfbfe93a8b97c26" kindref="member">FSMC_Waitfeature</ref><sp/>|</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___f_s_m_c___data___width_1ga65d85c3072e6790ae760ca2248e46df6" kindref="member">FSMC_MemoryDataWidth_16b</ref><sp/>|<sp/><sp/></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(FSMC_PCCARDInitStruct-&gt;<ref refid="struct_f_s_m_c___p_c_c_a_r_d_init_type_def_1a15db9675791f6f9c7fd82fe1084ff694" kindref="member">FSMC_TCLRSetupTime</ref><sp/>&lt;&lt;<sp/>9)<sp/>|</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(FSMC_PCCARDInitStruct-&gt;<ref refid="struct_f_s_m_c___p_c_c_a_r_d_init_type_def_1ac83f977e01623595e0aa8dd0b1eb3fcc" kindref="member">FSMC_TARSetupTime</ref><sp/>&lt;&lt;<sp/>13);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>PMEM4<sp/>register<sp/>value<sp/>according<sp/>to<sp/>FSMC_CommonSpaceTimingStructure<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><ref refid="group___peripheral__declaration_1ga5aa00e4ac522693c6a21bc23ef5a96df" kindref="member">FSMC_Bank4</ref>-&gt;PMEM4<sp/>=<sp/>(uint32_t)FSMC_PCCARDInitStruct-&gt;<ref refid="struct_f_s_m_c___p_c_c_a_r_d_init_type_def_1a87cb99ebe9b5ed570c6467abc9c2ef6d" kindref="member">FSMC_CommonSpaceTimingStruct</ref>-&gt;<ref refid="struct_f_s_m_c___n_a_n_d___p_c_c_a_r_d_timing_init_type_def_1a31632aeb49269a29a39e3b191590b6dc" kindref="member">FSMC_SetupTime</ref><sp/>|</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(FSMC_PCCARDInitStruct-&gt;<ref refid="struct_f_s_m_c___p_c_c_a_r_d_init_type_def_1a87cb99ebe9b5ed570c6467abc9c2ef6d" kindref="member">FSMC_CommonSpaceTimingStruct</ref>-&gt;<ref refid="struct_f_s_m_c___n_a_n_d___p_c_c_a_r_d_timing_init_type_def_1a99a7d54ed2674faa5a4e0f2669812855" kindref="member">FSMC_WaitSetupTime</ref><sp/>&lt;&lt;<sp/>8)<sp/>|</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(FSMC_PCCARDInitStruct-&gt;<ref refid="struct_f_s_m_c___p_c_c_a_r_d_init_type_def_1a87cb99ebe9b5ed570c6467abc9c2ef6d" kindref="member">FSMC_CommonSpaceTimingStruct</ref>-&gt;<ref refid="struct_f_s_m_c___n_a_n_d___p_c_c_a_r_d_timing_init_type_def_1ae2b53c2cfd55ff277f453613dcf7c8b2" kindref="member">FSMC_HoldSetupTime</ref><sp/>&lt;&lt;<sp/>16)|</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(FSMC_PCCARDInitStruct-&gt;<ref refid="struct_f_s_m_c___p_c_c_a_r_d_init_type_def_1a87cb99ebe9b5ed570c6467abc9c2ef6d" kindref="member">FSMC_CommonSpaceTimingStruct</ref>-&gt;<ref refid="struct_f_s_m_c___n_a_n_d___p_c_c_a_r_d_timing_init_type_def_1a8a2a2a9e71dbf276fddad2bb32c0d256" kindref="member">FSMC_HiZSetupTime</ref><sp/>&lt;&lt;<sp/>24);<sp/></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>PATT4<sp/>register<sp/>value<sp/>according<sp/>to<sp/>FSMC_AttributeSpaceTimingStructure<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><ref refid="group___peripheral__declaration_1ga5aa00e4ac522693c6a21bc23ef5a96df" kindref="member">FSMC_Bank4</ref>-&gt;PATT4<sp/>=<sp/>(uint32_t)FSMC_PCCARDInitStruct-&gt;<ref refid="struct_f_s_m_c___p_c_c_a_r_d_init_type_def_1aee510f2e6e6ef18e7f5eedfed702f697" kindref="member">FSMC_AttributeSpaceTimingStruct</ref>-&gt;<ref refid="struct_f_s_m_c___n_a_n_d___p_c_c_a_r_d_timing_init_type_def_1a31632aeb49269a29a39e3b191590b6dc" kindref="member">FSMC_SetupTime</ref><sp/>|</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(FSMC_PCCARDInitStruct-&gt;<ref refid="struct_f_s_m_c___p_c_c_a_r_d_init_type_def_1aee510f2e6e6ef18e7f5eedfed702f697" kindref="member">FSMC_AttributeSpaceTimingStruct</ref>-&gt;<ref refid="struct_f_s_m_c___n_a_n_d___p_c_c_a_r_d_timing_init_type_def_1a99a7d54ed2674faa5a4e0f2669812855" kindref="member">FSMC_WaitSetupTime</ref><sp/>&lt;&lt;<sp/>8)<sp/>|</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(FSMC_PCCARDInitStruct-&gt;<ref refid="struct_f_s_m_c___p_c_c_a_r_d_init_type_def_1aee510f2e6e6ef18e7f5eedfed702f697" kindref="member">FSMC_AttributeSpaceTimingStruct</ref>-&gt;<ref refid="struct_f_s_m_c___n_a_n_d___p_c_c_a_r_d_timing_init_type_def_1ae2b53c2cfd55ff277f453613dcf7c8b2" kindref="member">FSMC_HoldSetupTime</ref><sp/>&lt;&lt;<sp/>16)|</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(FSMC_PCCARDInitStruct-&gt;<ref refid="struct_f_s_m_c___p_c_c_a_r_d_init_type_def_1aee510f2e6e6ef18e7f5eedfed702f697" kindref="member">FSMC_AttributeSpaceTimingStruct</ref>-&gt;<ref refid="struct_f_s_m_c___n_a_n_d___p_c_c_a_r_d_timing_init_type_def_1a8a2a2a9e71dbf276fddad2bb32c0d256" kindref="member">FSMC_HiZSetupTime</ref><sp/>&lt;&lt;<sp/>24);<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>PIO4<sp/>register<sp/>value<sp/>according<sp/>to<sp/>FSMC_IOSpaceTimingStructure<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><ref refid="group___peripheral__declaration_1ga5aa00e4ac522693c6a21bc23ef5a96df" kindref="member">FSMC_Bank4</ref>-&gt;PIO4<sp/>=<sp/>(uint32_t)FSMC_PCCARDInitStruct-&gt;<ref refid="struct_f_s_m_c___p_c_c_a_r_d_init_type_def_1abd9b9e8d7623829a40e5255b0949a3a1" kindref="member">FSMC_IOSpaceTimingStruct</ref>-&gt;<ref refid="struct_f_s_m_c___n_a_n_d___p_c_c_a_r_d_timing_init_type_def_1a31632aeb49269a29a39e3b191590b6dc" kindref="member">FSMC_SetupTime</ref><sp/>|</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(FSMC_PCCARDInitStruct-&gt;<ref refid="struct_f_s_m_c___p_c_c_a_r_d_init_type_def_1abd9b9e8d7623829a40e5255b0949a3a1" kindref="member">FSMC_IOSpaceTimingStruct</ref>-&gt;<ref refid="struct_f_s_m_c___n_a_n_d___p_c_c_a_r_d_timing_init_type_def_1a99a7d54ed2674faa5a4e0f2669812855" kindref="member">FSMC_WaitSetupTime</ref><sp/>&lt;&lt;<sp/>8)<sp/>|</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(FSMC_PCCARDInitStruct-&gt;<ref refid="struct_f_s_m_c___p_c_c_a_r_d_init_type_def_1abd9b9e8d7623829a40e5255b0949a3a1" kindref="member">FSMC_IOSpaceTimingStruct</ref>-&gt;<ref refid="struct_f_s_m_c___n_a_n_d___p_c_c_a_r_d_timing_init_type_def_1ae2b53c2cfd55ff277f453613dcf7c8b2" kindref="member">FSMC_HoldSetupTime</ref><sp/>&lt;&lt;<sp/>16)|</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(FSMC_PCCARDInitStruct-&gt;<ref refid="struct_f_s_m_c___p_c_c_a_r_d_init_type_def_1abd9b9e8d7623829a40e5255b0949a3a1" kindref="member">FSMC_IOSpaceTimingStruct</ref>-&gt;<ref refid="struct_f_s_m_c___n_a_n_d___p_c_c_a_r_d_timing_init_type_def_1a8a2a2a9e71dbf276fddad2bb32c0d256" kindref="member">FSMC_HiZSetupTime</ref><sp/>&lt;&lt;<sp/>24);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="372"><highlight class="normal">}</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="380" refid="group___f_s_m_c___private___functions_1gaf33e6dfc34f62d16a0cb416de9e83d28" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___f_s_m_c___private___functions_1gaf33e6dfc34f62d16a0cb416de9e83d28" kindref="member">FSMC_NORSRAMStructInit</ref>(<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def" kindref="compound">FSMC_NORSRAMInitTypeDef</ref>*<sp/>FSMC_NORSRAMInitStruct)</highlight></codeline>
<codeline lineno="381"><highlight class="normal">{<sp/><sp/></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>NOR/SRAM<sp/>Init<sp/>structure<sp/>parameters<sp/>values<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/>FSMC_NORSRAMInitStruct-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1a7fcd864461cf0d1cf83b62fa2b4d3f86" kindref="member">FSMC_Bank</ref><sp/>=<sp/><ref refid="group___f_s_m_c___n_o_r_s_r_a_m___bank_1ga514a05828041fa1a13d464c9e4a0a4a9" kindref="member">FSMC_Bank1_NORSRAM1</ref>;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/>FSMC_NORSRAMInitStruct-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1af4ff95085d3bb39e34c2f88ca3140ce5" kindref="member">FSMC_DataAddressMux</ref><sp/>=<sp/><ref refid="group___f_s_m_c___data___address___bus___multiplexing_1ga1dd4d12e63aaf29dbb8ae4b613f2aa15" kindref="member">FSMC_DataAddressMux_Enable</ref>;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/>FSMC_NORSRAMInitStruct-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1a979ad605c6a63923e060576ee01e888d" kindref="member">FSMC_MemoryType</ref><sp/>=<sp/><ref refid="group___f_s_m_c___memory___type_1ga8a24e8da42e67dcf6fb2f43659aa49cf" kindref="member">FSMC_MemoryType_SRAM</ref>;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/>FSMC_NORSRAMInitStruct-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1a1791c771ff86f5dc5422040409517e9d" kindref="member">FSMC_MemoryDataWidth</ref><sp/>=<sp/><ref refid="group___f_s_m_c___data___width_1ga5753e089830f19af70a724766e3c329f" kindref="member">FSMC_MemoryDataWidth_8b</ref>;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/>FSMC_NORSRAMInitStruct-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1aec0bfff5c934c251c21450a50f5bdb79" kindref="member">FSMC_BurstAccessMode</ref><sp/>=<sp/><ref refid="group___f_s_m_c___burst___access___mode_1ga26fc544945415e350563a9b00684850c" kindref="member">FSMC_BurstAccessMode_Disable</ref>;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/>FSMC_NORSRAMInitStruct-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1ac350cc34377fe3d5f882a6801bab1ac9" kindref="member">FSMC_AsynchronousWait</ref><sp/>=<sp/><ref refid="group___f_s_m_c___asynchronous_wait_1ga36c0dad6fe6c0e01632d3312c8f4c4cb" kindref="member">FSMC_AsynchronousWait_Disable</ref>;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/>FSMC_NORSRAMInitStruct-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1a5d4d76594fc201943b51095e3ef34791" kindref="member">FSMC_WaitSignalPolarity</ref><sp/>=<sp/><ref refid="group___f_s_m_c___wait___signal___polarity_1ga7dc72fdfc6225e5daa9b8efee8dff49f" kindref="member">FSMC_WaitSignalPolarity_Low</ref>;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/>FSMC_NORSRAMInitStruct-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1a7e201c17bf7c5f6cc69fb6de29c8b024" kindref="member">FSMC_WrapMode</ref><sp/>=<sp/><ref refid="group___f_s_m_c___wrap___mode_1ga6041f0d3055ea3811a5a19560092f266" kindref="member">FSMC_WrapMode_Disable</ref>;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/>FSMC_NORSRAMInitStruct-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1a71c6e7cc8e7e1a8fd0562960ffd23e88" kindref="member">FSMC_WaitSignalActive</ref><sp/>=<sp/><ref refid="group___f_s_m_c___wait___timing_1ga62c6855a7cc65b20024085f09cdc65e8" kindref="member">FSMC_WaitSignalActive_BeforeWaitState</ref>;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/>FSMC_NORSRAMInitStruct-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1a596793d1735c4e38c87e3bf91d986370" kindref="member">FSMC_WriteOperation</ref><sp/>=<sp/><ref refid="group___f_s_m_c___write___operation_1ga2478beb6dd8861b34a16b8a57a795e56" kindref="member">FSMC_WriteOperation_Enable</ref>;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/>FSMC_NORSRAMInitStruct-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1aedbc7df3ff61cc93a910a64dc53c932b" kindref="member">FSMC_WaitSignal</ref><sp/>=<sp/><ref refid="group___f_s_m_c___wait___signal_1gaf809e339f1cdc9d0a815fd98712e9ee3" kindref="member">FSMC_WaitSignal_Enable</ref>;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/>FSMC_NORSRAMInitStruct-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1af33d0076b5bfea3a66e388ed7f3eb3f3" kindref="member">FSMC_ExtendedMode</ref><sp/>=<sp/><ref refid="group___f_s_m_c___extended___mode_1ga5a1f1acdc44328158f59012748980dd3" kindref="member">FSMC_ExtendedMode_Disable</ref>;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/>FSMC_NORSRAMInitStruct-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1adac3756711f2d76e56a8cbcb7a03843d" kindref="member">FSMC_WriteBurst</ref><sp/>=<sp/><ref refid="group___f_s_m_c___write___burst_1ga65a49ecd05b3a128e8908c6a625adae7" kindref="member">FSMC_WriteBurst_Disable</ref>;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/>FSMC_NORSRAMInitStruct-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1a33f8e281b9ff3187906309d005b4159e" kindref="member">FSMC_ReadWriteTimingStruct</ref>-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_timing_init_type_def_1a2ba90f4ec16bc38a2c4fa29c593b713b" kindref="member">FSMC_AddressSetupTime</ref><sp/>=<sp/>0xF;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/>FSMC_NORSRAMInitStruct-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1a33f8e281b9ff3187906309d005b4159e" kindref="member">FSMC_ReadWriteTimingStruct</ref>-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_timing_init_type_def_1a917b227ccb0a765791897ce3647ab26b" kindref="member">FSMC_AddressHoldTime</ref><sp/>=<sp/>0xF;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/>FSMC_NORSRAMInitStruct-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1a33f8e281b9ff3187906309d005b4159e" kindref="member">FSMC_ReadWriteTimingStruct</ref>-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_timing_init_type_def_1aaa0a9178766adeed424d5c4eb728d1b1" kindref="member">FSMC_DataSetupTime</ref><sp/>=<sp/>0xFF;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/>FSMC_NORSRAMInitStruct-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1a33f8e281b9ff3187906309d005b4159e" kindref="member">FSMC_ReadWriteTimingStruct</ref>-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_timing_init_type_def_1a3d98d57618e46ec6aa5d876dcc047d32" kindref="member">FSMC_BusTurnAroundDuration</ref><sp/>=<sp/>0xF;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/>FSMC_NORSRAMInitStruct-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1a33f8e281b9ff3187906309d005b4159e" kindref="member">FSMC_ReadWriteTimingStruct</ref>-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_timing_init_type_def_1a251b439331b82eecea58aa3f8882ea15" kindref="member">FSMC_CLKDivision</ref><sp/>=<sp/>0xF;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/>FSMC_NORSRAMInitStruct-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1a33f8e281b9ff3187906309d005b4159e" kindref="member">FSMC_ReadWriteTimingStruct</ref>-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_timing_init_type_def_1abc33886615fc3627448aa2dba11cfc77" kindref="member">FSMC_DataLatency</ref><sp/>=<sp/>0xF;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/>FSMC_NORSRAMInitStruct-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1a33f8e281b9ff3187906309d005b4159e" kindref="member">FSMC_ReadWriteTimingStruct</ref>-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_timing_init_type_def_1a261d043a19cecf77e6859403be204efc" kindref="member">FSMC_AccessMode</ref><sp/>=<sp/><ref refid="group___f_s_m_c___access___mode_1gae0f299b51c12257311694c4a8f5c00c3" kindref="member">FSMC_AccessMode_A</ref>;<sp/></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/>FSMC_NORSRAMInitStruct-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1ac62cf7426a933ce6aa6efc3a8e82dac1" kindref="member">FSMC_WriteTimingStruct</ref>-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_timing_init_type_def_1a2ba90f4ec16bc38a2c4fa29c593b713b" kindref="member">FSMC_AddressSetupTime</ref><sp/>=<sp/>0xF;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/>FSMC_NORSRAMInitStruct-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1ac62cf7426a933ce6aa6efc3a8e82dac1" kindref="member">FSMC_WriteTimingStruct</ref>-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_timing_init_type_def_1a917b227ccb0a765791897ce3647ab26b" kindref="member">FSMC_AddressHoldTime</ref><sp/>=<sp/>0xF;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/>FSMC_NORSRAMInitStruct-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1ac62cf7426a933ce6aa6efc3a8e82dac1" kindref="member">FSMC_WriteTimingStruct</ref>-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_timing_init_type_def_1aaa0a9178766adeed424d5c4eb728d1b1" kindref="member">FSMC_DataSetupTime</ref><sp/>=<sp/>0xFF;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/>FSMC_NORSRAMInitStruct-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1ac62cf7426a933ce6aa6efc3a8e82dac1" kindref="member">FSMC_WriteTimingStruct</ref>-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_timing_init_type_def_1a3d98d57618e46ec6aa5d876dcc047d32" kindref="member">FSMC_BusTurnAroundDuration</ref><sp/>=<sp/>0xF;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/>FSMC_NORSRAMInitStruct-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1ac62cf7426a933ce6aa6efc3a8e82dac1" kindref="member">FSMC_WriteTimingStruct</ref>-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_timing_init_type_def_1a251b439331b82eecea58aa3f8882ea15" kindref="member">FSMC_CLKDivision</ref><sp/>=<sp/>0xF;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/>FSMC_NORSRAMInitStruct-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1ac62cf7426a933ce6aa6efc3a8e82dac1" kindref="member">FSMC_WriteTimingStruct</ref>-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_timing_init_type_def_1abc33886615fc3627448aa2dba11cfc77" kindref="member">FSMC_DataLatency</ref><sp/>=<sp/>0xF;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/>FSMC_NORSRAMInitStruct-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_init_type_def_1ac62cf7426a933ce6aa6efc3a8e82dac1" kindref="member">FSMC_WriteTimingStruct</ref>-&gt;<ref refid="struct_f_s_m_c___n_o_r_s_r_a_m_timing_init_type_def_1a261d043a19cecf77e6859403be204efc" kindref="member">FSMC_AccessMode</ref><sp/>=<sp/><ref refid="group___f_s_m_c___access___mode_1gae0f299b51c12257311694c4a8f5c00c3" kindref="member">FSMC_AccessMode_A</ref>;</highlight></codeline>
<codeline lineno="410"><highlight class="normal">}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="418" refid="group___f_s_m_c___private___functions_1ga8283ad94ad8e83d49d5b77d1c7e17862" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___f_s_m_c___private___functions_1ga8283ad94ad8e83d49d5b77d1c7e17862" kindref="member">FSMC_NANDStructInit</ref>(<ref refid="struct_f_s_m_c___n_a_n_d_init_type_def" kindref="compound">FSMC_NANDInitTypeDef</ref>*<sp/>FSMC_NANDInitStruct)</highlight></codeline>
<codeline lineno="419"><highlight class="normal">{<sp/></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>NAND<sp/>Init<sp/>structure<sp/>parameters<sp/>values<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/>FSMC_NANDInitStruct-&gt;<ref refid="struct_f_s_m_c___n_a_n_d_init_type_def_1a60d3ead2188e1dbdf06810e952b3ce0f" kindref="member">FSMC_Bank</ref><sp/>=<sp/><ref refid="group___f_s_m_c___n_a_n_d___bank_1ga294e7134aa329a09e56b61eec9882a27" kindref="member">FSMC_Bank2_NAND</ref>;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/>FSMC_NANDInitStruct-&gt;<ref refid="struct_f_s_m_c___n_a_n_d_init_type_def_1ab350e15014c4a9f4b2c2f2848f11eeca" kindref="member">FSMC_Waitfeature</ref><sp/>=<sp/><ref refid="group___f_s_m_c___wait__feature_1ga8a31f05576e66546fbbcdb06ff67da7d" kindref="member">FSMC_Waitfeature_Disable</ref>;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/>FSMC_NANDInitStruct-&gt;<ref refid="struct_f_s_m_c___n_a_n_d_init_type_def_1ab4a4f56aab3150d8fb02aaf092db0235" kindref="member">FSMC_MemoryDataWidth</ref><sp/>=<sp/><ref refid="group___f_s_m_c___data___width_1ga5753e089830f19af70a724766e3c329f" kindref="member">FSMC_MemoryDataWidth_8b</ref>;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/>FSMC_NANDInitStruct-&gt;<ref refid="struct_f_s_m_c___n_a_n_d_init_type_def_1a58d0510c0ce0ae3d1e3863bf8f571377" kindref="member">FSMC_ECC</ref><sp/>=<sp/><ref refid="group___f_s_m_c___e_c_c_1ga9a3264c0718f5023fd106abea7ef806d" kindref="member">FSMC_ECC_Disable</ref>;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/>FSMC_NANDInitStruct-&gt;<ref refid="struct_f_s_m_c___n_a_n_d_init_type_def_1a7ed6a25710ba724a7a8f90af60130cf6" kindref="member">FSMC_ECCPageSize</ref><sp/>=<sp/><ref refid="group___f_s_m_c___e_c_c___page___size_1gaaa1661267b44e6728fa64aca79de54b3" kindref="member">FSMC_ECCPageSize_256Bytes</ref>;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/>FSMC_NANDInitStruct-&gt;<ref refid="struct_f_s_m_c___n_a_n_d_init_type_def_1a633c7be46a1d281916b9f2e34fa3d36a" kindref="member">FSMC_TCLRSetupTime</ref><sp/>=<sp/>0x0;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/>FSMC_NANDInitStruct-&gt;<ref refid="struct_f_s_m_c___n_a_n_d_init_type_def_1a014c1b8977b454ac15654d93dbb7dff9" kindref="member">FSMC_TARSetupTime</ref><sp/>=<sp/>0x0;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/>FSMC_NANDInitStruct-&gt;<ref refid="struct_f_s_m_c___n_a_n_d_init_type_def_1a7ab117a15e780c02fcad5d844e71c425" kindref="member">FSMC_CommonSpaceTimingStruct</ref>-&gt;<ref refid="struct_f_s_m_c___n_a_n_d___p_c_c_a_r_d_timing_init_type_def_1a31632aeb49269a29a39e3b191590b6dc" kindref="member">FSMC_SetupTime</ref><sp/>=<sp/>0xFC;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/>FSMC_NANDInitStruct-&gt;<ref refid="struct_f_s_m_c___n_a_n_d_init_type_def_1a7ab117a15e780c02fcad5d844e71c425" kindref="member">FSMC_CommonSpaceTimingStruct</ref>-&gt;<ref refid="struct_f_s_m_c___n_a_n_d___p_c_c_a_r_d_timing_init_type_def_1a99a7d54ed2674faa5a4e0f2669812855" kindref="member">FSMC_WaitSetupTime</ref><sp/>=<sp/>0xFC;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/>FSMC_NANDInitStruct-&gt;<ref refid="struct_f_s_m_c___n_a_n_d_init_type_def_1a7ab117a15e780c02fcad5d844e71c425" kindref="member">FSMC_CommonSpaceTimingStruct</ref>-&gt;<ref refid="struct_f_s_m_c___n_a_n_d___p_c_c_a_r_d_timing_init_type_def_1ae2b53c2cfd55ff277f453613dcf7c8b2" kindref="member">FSMC_HoldSetupTime</ref><sp/>=<sp/>0xFC;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/>FSMC_NANDInitStruct-&gt;<ref refid="struct_f_s_m_c___n_a_n_d_init_type_def_1a7ab117a15e780c02fcad5d844e71c425" kindref="member">FSMC_CommonSpaceTimingStruct</ref>-&gt;<ref refid="struct_f_s_m_c___n_a_n_d___p_c_c_a_r_d_timing_init_type_def_1a8a2a2a9e71dbf276fddad2bb32c0d256" kindref="member">FSMC_HiZSetupTime</ref><sp/>=<sp/>0xFC;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/>FSMC_NANDInitStruct-&gt;<ref refid="struct_f_s_m_c___n_a_n_d_init_type_def_1a2a33bd855240dba37e507f223dbca062" kindref="member">FSMC_AttributeSpaceTimingStruct</ref>-&gt;<ref refid="struct_f_s_m_c___n_a_n_d___p_c_c_a_r_d_timing_init_type_def_1a31632aeb49269a29a39e3b191590b6dc" kindref="member">FSMC_SetupTime</ref><sp/>=<sp/>0xFC;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/>FSMC_NANDInitStruct-&gt;<ref refid="struct_f_s_m_c___n_a_n_d_init_type_def_1a2a33bd855240dba37e507f223dbca062" kindref="member">FSMC_AttributeSpaceTimingStruct</ref>-&gt;<ref refid="struct_f_s_m_c___n_a_n_d___p_c_c_a_r_d_timing_init_type_def_1a99a7d54ed2674faa5a4e0f2669812855" kindref="member">FSMC_WaitSetupTime</ref><sp/>=<sp/>0xFC;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/>FSMC_NANDInitStruct-&gt;<ref refid="struct_f_s_m_c___n_a_n_d_init_type_def_1a2a33bd855240dba37e507f223dbca062" kindref="member">FSMC_AttributeSpaceTimingStruct</ref>-&gt;<ref refid="struct_f_s_m_c___n_a_n_d___p_c_c_a_r_d_timing_init_type_def_1ae2b53c2cfd55ff277f453613dcf7c8b2" kindref="member">FSMC_HoldSetupTime</ref><sp/>=<sp/>0xFC;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/>FSMC_NANDInitStruct-&gt;<ref refid="struct_f_s_m_c___n_a_n_d_init_type_def_1a2a33bd855240dba37e507f223dbca062" kindref="member">FSMC_AttributeSpaceTimingStruct</ref>-&gt;<ref refid="struct_f_s_m_c___n_a_n_d___p_c_c_a_r_d_timing_init_type_def_1a8a2a2a9e71dbf276fddad2bb32c0d256" kindref="member">FSMC_HiZSetupTime</ref><sp/>=<sp/>0xFC;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="436"><highlight class="normal">}</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="444" refid="group___f_s_m_c___private___functions_1ga7a64ba0e0545b3f1913c9d1d28c05e62" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___f_s_m_c___private___functions_1ga7a64ba0e0545b3f1913c9d1d28c05e62" kindref="member">FSMC_PCCARDStructInit</ref>(<ref refid="struct_f_s_m_c___p_c_c_a_r_d_init_type_def" kindref="compound">FSMC_PCCARDInitTypeDef</ref>*<sp/>FSMC_PCCARDInitStruct)</highlight></codeline>
<codeline lineno="445"><highlight class="normal">{</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>PCCARD<sp/>Init<sp/>structure<sp/>parameters<sp/>values<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/>FSMC_PCCARDInitStruct-&gt;<ref refid="struct_f_s_m_c___p_c_c_a_r_d_init_type_def_1a3ffd8c627ffe3ac90dfbfe93a8b97c26" kindref="member">FSMC_Waitfeature</ref><sp/>=<sp/><ref refid="group___f_s_m_c___wait__feature_1ga8a31f05576e66546fbbcdb06ff67da7d" kindref="member">FSMC_Waitfeature_Disable</ref>;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/>FSMC_PCCARDInitStruct-&gt;<ref refid="struct_f_s_m_c___p_c_c_a_r_d_init_type_def_1a15db9675791f6f9c7fd82fe1084ff694" kindref="member">FSMC_TCLRSetupTime</ref><sp/>=<sp/>0x0;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/>FSMC_PCCARDInitStruct-&gt;<ref refid="struct_f_s_m_c___p_c_c_a_r_d_init_type_def_1ac83f977e01623595e0aa8dd0b1eb3fcc" kindref="member">FSMC_TARSetupTime</ref><sp/>=<sp/>0x0;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/>FSMC_PCCARDInitStruct-&gt;<ref refid="struct_f_s_m_c___p_c_c_a_r_d_init_type_def_1a87cb99ebe9b5ed570c6467abc9c2ef6d" kindref="member">FSMC_CommonSpaceTimingStruct</ref>-&gt;<ref refid="struct_f_s_m_c___n_a_n_d___p_c_c_a_r_d_timing_init_type_def_1a31632aeb49269a29a39e3b191590b6dc" kindref="member">FSMC_SetupTime</ref><sp/>=<sp/>0xFC;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/>FSMC_PCCARDInitStruct-&gt;<ref refid="struct_f_s_m_c___p_c_c_a_r_d_init_type_def_1a87cb99ebe9b5ed570c6467abc9c2ef6d" kindref="member">FSMC_CommonSpaceTimingStruct</ref>-&gt;<ref refid="struct_f_s_m_c___n_a_n_d___p_c_c_a_r_d_timing_init_type_def_1a99a7d54ed2674faa5a4e0f2669812855" kindref="member">FSMC_WaitSetupTime</ref><sp/>=<sp/>0xFC;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/>FSMC_PCCARDInitStruct-&gt;<ref refid="struct_f_s_m_c___p_c_c_a_r_d_init_type_def_1a87cb99ebe9b5ed570c6467abc9c2ef6d" kindref="member">FSMC_CommonSpaceTimingStruct</ref>-&gt;<ref refid="struct_f_s_m_c___n_a_n_d___p_c_c_a_r_d_timing_init_type_def_1ae2b53c2cfd55ff277f453613dcf7c8b2" kindref="member">FSMC_HoldSetupTime</ref><sp/>=<sp/>0xFC;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/>FSMC_PCCARDInitStruct-&gt;<ref refid="struct_f_s_m_c___p_c_c_a_r_d_init_type_def_1a87cb99ebe9b5ed570c6467abc9c2ef6d" kindref="member">FSMC_CommonSpaceTimingStruct</ref>-&gt;<ref refid="struct_f_s_m_c___n_a_n_d___p_c_c_a_r_d_timing_init_type_def_1a8a2a2a9e71dbf276fddad2bb32c0d256" kindref="member">FSMC_HiZSetupTime</ref><sp/>=<sp/>0xFC;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/>FSMC_PCCARDInitStruct-&gt;<ref refid="struct_f_s_m_c___p_c_c_a_r_d_init_type_def_1aee510f2e6e6ef18e7f5eedfed702f697" kindref="member">FSMC_AttributeSpaceTimingStruct</ref>-&gt;<ref refid="struct_f_s_m_c___n_a_n_d___p_c_c_a_r_d_timing_init_type_def_1a31632aeb49269a29a39e3b191590b6dc" kindref="member">FSMC_SetupTime</ref><sp/>=<sp/>0xFC;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/>FSMC_PCCARDInitStruct-&gt;<ref refid="struct_f_s_m_c___p_c_c_a_r_d_init_type_def_1aee510f2e6e6ef18e7f5eedfed702f697" kindref="member">FSMC_AttributeSpaceTimingStruct</ref>-&gt;<ref refid="struct_f_s_m_c___n_a_n_d___p_c_c_a_r_d_timing_init_type_def_1a99a7d54ed2674faa5a4e0f2669812855" kindref="member">FSMC_WaitSetupTime</ref><sp/>=<sp/>0xFC;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/>FSMC_PCCARDInitStruct-&gt;<ref refid="struct_f_s_m_c___p_c_c_a_r_d_init_type_def_1aee510f2e6e6ef18e7f5eedfed702f697" kindref="member">FSMC_AttributeSpaceTimingStruct</ref>-&gt;<ref refid="struct_f_s_m_c___n_a_n_d___p_c_c_a_r_d_timing_init_type_def_1ae2b53c2cfd55ff277f453613dcf7c8b2" kindref="member">FSMC_HoldSetupTime</ref><sp/>=<sp/>0xFC;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/>FSMC_PCCARDInitStruct-&gt;<ref refid="struct_f_s_m_c___p_c_c_a_r_d_init_type_def_1aee510f2e6e6ef18e7f5eedfed702f697" kindref="member">FSMC_AttributeSpaceTimingStruct</ref>-&gt;<ref refid="struct_f_s_m_c___n_a_n_d___p_c_c_a_r_d_timing_init_type_def_1a8a2a2a9e71dbf276fddad2bb32c0d256" kindref="member">FSMC_HiZSetupTime</ref><sp/>=<sp/>0xFC;<sp/></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/>FSMC_PCCARDInitStruct-&gt;<ref refid="struct_f_s_m_c___p_c_c_a_r_d_init_type_def_1abd9b9e8d7623829a40e5255b0949a3a1" kindref="member">FSMC_IOSpaceTimingStruct</ref>-&gt;<ref refid="struct_f_s_m_c___n_a_n_d___p_c_c_a_r_d_timing_init_type_def_1a31632aeb49269a29a39e3b191590b6dc" kindref="member">FSMC_SetupTime</ref><sp/>=<sp/>0xFC;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/>FSMC_PCCARDInitStruct-&gt;<ref refid="struct_f_s_m_c___p_c_c_a_r_d_init_type_def_1abd9b9e8d7623829a40e5255b0949a3a1" kindref="member">FSMC_IOSpaceTimingStruct</ref>-&gt;<ref refid="struct_f_s_m_c___n_a_n_d___p_c_c_a_r_d_timing_init_type_def_1a99a7d54ed2674faa5a4e0f2669812855" kindref="member">FSMC_WaitSetupTime</ref><sp/>=<sp/>0xFC;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/>FSMC_PCCARDInitStruct-&gt;<ref refid="struct_f_s_m_c___p_c_c_a_r_d_init_type_def_1abd9b9e8d7623829a40e5255b0949a3a1" kindref="member">FSMC_IOSpaceTimingStruct</ref>-&gt;<ref refid="struct_f_s_m_c___n_a_n_d___p_c_c_a_r_d_timing_init_type_def_1ae2b53c2cfd55ff277f453613dcf7c8b2" kindref="member">FSMC_HoldSetupTime</ref><sp/>=<sp/>0xFC;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/>FSMC_PCCARDInitStruct-&gt;<ref refid="struct_f_s_m_c___p_c_c_a_r_d_init_type_def_1abd9b9e8d7623829a40e5255b0949a3a1" kindref="member">FSMC_IOSpaceTimingStruct</ref>-&gt;<ref refid="struct_f_s_m_c___n_a_n_d___p_c_c_a_r_d_timing_init_type_def_1a8a2a2a9e71dbf276fddad2bb32c0d256" kindref="member">FSMC_HiZSetupTime</ref><sp/>=<sp/>0xFC;</highlight></codeline>
<codeline lineno="462"><highlight class="normal">}</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="475" refid="group___f_s_m_c___private___functions_1gaf943f0f2680168d3a95a3c2c9f3eca2a" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___f_s_m_c___private___functions_1gaf943f0f2680168d3a95a3c2c9f3eca2a" kindref="member">FSMC_NORSRAMCmd</ref>(uint32_t<sp/>FSMC_Bank,<sp/><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref><sp/>NewState)</highlight></codeline>
<codeline lineno="476"><highlight class="normal">{</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___f_s_m_c___exported___constants_1ga3e3bed3dd83d38e63f11ac4cbcb87304" kindref="member">IS_FSMC_NORSRAM_BANK</ref>(FSMC_Bank));</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" kindref="member">IS_FUNCTIONAL_STATE</ref>(NewState));</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(NewState<sp/>!=<sp/><ref refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1ad3a9df141be0ccf10389b640f492b26d" kindref="member">DISABLE</ref>)</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Enable<sp/>the<sp/>selected<sp/>NOR/SRAM<sp/>Bank<sp/>by<sp/>setting<sp/>the<sp/>PBKEN<sp/>bit<sp/>in<sp/>the<sp/>BCRx<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga2a759bad07fe730c99f9e1490e646220" kindref="member">FSMC_Bank1</ref>-&gt;BTCR[FSMC_Bank]<sp/>|=<sp/><ref refid="group___f_s_m_c___private___defines_1ga3c427afcf32b17fb72be67fd4638e6d5" kindref="member">BCR_MBKEN_Set</ref>;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Disable<sp/>the<sp/>selected<sp/>NOR/SRAM<sp/>Bank<sp/>by<sp/>clearing<sp/>the<sp/>PBKEN<sp/>bit<sp/>in<sp/>the<sp/>BCRx<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga2a759bad07fe730c99f9e1490e646220" kindref="member">FSMC_Bank1</ref>-&gt;BTCR[FSMC_Bank]<sp/>&amp;=<sp/><ref refid="group___f_s_m_c___private___defines_1gaa63b72d32a32c53a057ee0a45bed0d3b" kindref="member">BCR_MBKEN_Reset</ref>;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="490"><highlight class="normal">}</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="501" refid="group___f_s_m_c___private___functions_1ga33ec7c39ea4d42e92c72c6e517d8235c" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___f_s_m_c___private___functions_1ga33ec7c39ea4d42e92c72c6e517d8235c" kindref="member">FSMC_NANDCmd</ref>(uint32_t<sp/>FSMC_Bank,<sp/><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref><sp/>NewState)</highlight></codeline>
<codeline lineno="502"><highlight class="normal">{</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___f_s_m_c___exported___constants_1ga725bada099197f15f49dc0c5be00e19b" kindref="member">IS_FSMC_NAND_BANK</ref>(FSMC_Bank));</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" kindref="member">IS_FUNCTIONAL_STATE</ref>(NewState));</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(NewState<sp/>!=<sp/><ref refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1ad3a9df141be0ccf10389b640f492b26d" kindref="member">DISABLE</ref>)</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Enable<sp/>the<sp/>selected<sp/>NAND<sp/>Bank<sp/>by<sp/>setting<sp/>the<sp/>PBKEN<sp/>bit<sp/>in<sp/>the<sp/>PCRx<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(FSMC_Bank<sp/>==<sp/><ref refid="group___f_s_m_c___n_a_n_d___bank_1ga294e7134aa329a09e56b61eec9882a27" kindref="member">FSMC_Bank2_NAND</ref>)</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1gabb3dfb5e88694aa2983ecabd33a55e0a" kindref="member">FSMC_Bank2</ref>-&gt;PCR2<sp/>|=<sp/><ref refid="group___f_s_m_c___private___defines_1gade871050f882b7f48582084b0e95f67c" kindref="member">PCR_PBKEN_Set</ref>;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga411eedc00b5b2b22b494004d4f41b736" kindref="member">FSMC_Bank3</ref>-&gt;PCR3<sp/>|=<sp/><ref refid="group___f_s_m_c___private___defines_1gade871050f882b7f48582084b0e95f67c" kindref="member">PCR_PBKEN_Set</ref>;</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Disable<sp/>the<sp/>selected<sp/>NAND<sp/>Bank<sp/>by<sp/>clearing<sp/>the<sp/>PBKEN<sp/>bit<sp/>in<sp/>the<sp/>PCRx<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(FSMC_Bank<sp/>==<sp/><ref refid="group___f_s_m_c___n_a_n_d___bank_1ga294e7134aa329a09e56b61eec9882a27" kindref="member">FSMC_Bank2_NAND</ref>)</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1gabb3dfb5e88694aa2983ecabd33a55e0a" kindref="member">FSMC_Bank2</ref>-&gt;PCR2<sp/>&amp;=<sp/><ref refid="group___f_s_m_c___private___defines_1gac6d0ddc3888a0554b032f0f484cfe332" kindref="member">PCR_PBKEN_Reset</ref>;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga411eedc00b5b2b22b494004d4f41b736" kindref="member">FSMC_Bank3</ref>-&gt;PCR3<sp/>&amp;=<sp/><ref refid="group___f_s_m_c___private___defines_1gac6d0ddc3888a0554b032f0f484cfe332" kindref="member">PCR_PBKEN_Reset</ref>;</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="530"><highlight class="normal">}</highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="538" refid="group___f_s_m_c___private___functions_1ga2d410151ceb3428c6a1bf374a0472cde" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___f_s_m_c___private___functions_1ga2d410151ceb3428c6a1bf374a0472cde" kindref="member">FSMC_PCCARDCmd</ref>(<ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref><sp/>NewState)</highlight></codeline>
<codeline lineno="539"><highlight class="normal">{</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" kindref="member">IS_FUNCTIONAL_STATE</ref>(NewState));</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(NewState<sp/>!=<sp/><ref refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1ad3a9df141be0ccf10389b640f492b26d" kindref="member">DISABLE</ref>)</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Enable<sp/>the<sp/>PCCARD<sp/>Bank<sp/>by<sp/>setting<sp/>the<sp/>PBKEN<sp/>bit<sp/>in<sp/>the<sp/>PCR4<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga5aa00e4ac522693c6a21bc23ef5a96df" kindref="member">FSMC_Bank4</ref>-&gt;PCR4<sp/>|=<sp/><ref refid="group___f_s_m_c___private___defines_1gade871050f882b7f48582084b0e95f67c" kindref="member">PCR_PBKEN_Set</ref>;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Disable<sp/>the<sp/>PCCARD<sp/>Bank<sp/>by<sp/>clearing<sp/>the<sp/>PBKEN<sp/>bit<sp/>in<sp/>the<sp/>PCR4<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga5aa00e4ac522693c6a21bc23ef5a96df" kindref="member">FSMC_Bank4</ref>-&gt;PCR4<sp/>&amp;=<sp/><ref refid="group___f_s_m_c___private___defines_1gac6d0ddc3888a0554b032f0f484cfe332" kindref="member">PCR_PBKEN_Reset</ref>;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="552"><highlight class="normal">}</highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="564" refid="group___f_s_m_c___private___functions_1ga5800301fc39bbe998a18ebd9ff191cdc" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___f_s_m_c___private___functions_1ga5800301fc39bbe998a18ebd9ff191cdc" kindref="member">FSMC_NANDECCCmd</ref>(uint32_t<sp/>FSMC_Bank,<sp/><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref><sp/>NewState)</highlight></codeline>
<codeline lineno="565"><highlight class="normal">{</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___f_s_m_c___exported___constants_1ga725bada099197f15f49dc0c5be00e19b" kindref="member">IS_FSMC_NAND_BANK</ref>(FSMC_Bank));</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" kindref="member">IS_FUNCTIONAL_STATE</ref>(NewState));</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(NewState<sp/>!=<sp/><ref refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1ad3a9df141be0ccf10389b640f492b26d" kindref="member">DISABLE</ref>)</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Enable<sp/>the<sp/>selected<sp/>NAND<sp/>Bank<sp/>ECC<sp/>function<sp/>by<sp/>setting<sp/>the<sp/>ECCEN<sp/>bit<sp/>in<sp/>the<sp/>PCRx<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(FSMC_Bank<sp/>==<sp/><ref refid="group___f_s_m_c___n_a_n_d___bank_1ga294e7134aa329a09e56b61eec9882a27" kindref="member">FSMC_Bank2_NAND</ref>)</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1gabb3dfb5e88694aa2983ecabd33a55e0a" kindref="member">FSMC_Bank2</ref>-&gt;PCR2<sp/>|=<sp/><ref refid="group___f_s_m_c___private___defines_1ga8a0d7950936e3869b449d421e03a19ac" kindref="member">PCR_ECCEN_Set</ref>;</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga411eedc00b5b2b22b494004d4f41b736" kindref="member">FSMC_Bank3</ref>-&gt;PCR3<sp/>|=<sp/><ref refid="group___f_s_m_c___private___defines_1ga8a0d7950936e3869b449d421e03a19ac" kindref="member">PCR_ECCEN_Set</ref>;</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Disable<sp/>the<sp/>selected<sp/>NAND<sp/>Bank<sp/>ECC<sp/>function<sp/>by<sp/>clearing<sp/>the<sp/>ECCEN<sp/>bit<sp/>in<sp/>the<sp/>PCRx<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(FSMC_Bank<sp/>==<sp/><ref refid="group___f_s_m_c___n_a_n_d___bank_1ga294e7134aa329a09e56b61eec9882a27" kindref="member">FSMC_Bank2_NAND</ref>)</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1gabb3dfb5e88694aa2983ecabd33a55e0a" kindref="member">FSMC_Bank2</ref>-&gt;PCR2<sp/>&amp;=<sp/><ref refid="group___f_s_m_c___private___defines_1gaca1a5c5cd46c8a32dab58c3eb3b865fa" kindref="member">PCR_ECCEN_Reset</ref>;</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga411eedc00b5b2b22b494004d4f41b736" kindref="member">FSMC_Bank3</ref>-&gt;PCR3<sp/>&amp;=<sp/><ref refid="group___f_s_m_c___private___defines_1gaca1a5c5cd46c8a32dab58c3eb3b865fa" kindref="member">PCR_ECCEN_Reset</ref>;</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="593"><highlight class="normal">}</highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight></codeline>
<codeline lineno="603" refid="group___f_s_m_c___private___functions_1gaad6d4f5b5a41684ce053fea55bdb98d8" refkind="member"><highlight class="normal">uint32_t<sp/><ref refid="group___f_s_m_c___private___functions_1gaad6d4f5b5a41684ce053fea55bdb98d8" kindref="member">FSMC_GetECC</ref>(uint32_t<sp/>FSMC_Bank)</highlight></codeline>
<codeline lineno="604"><highlight class="normal">{</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/>uint32_t<sp/>eccval<sp/>=<sp/>0x00000000;</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(FSMC_Bank<sp/>==<sp/><ref refid="group___f_s_m_c___n_a_n_d___bank_1ga294e7134aa329a09e56b61eec9882a27" kindref="member">FSMC_Bank2_NAND</ref>)</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>the<sp/>ECCR2<sp/>register<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/>eccval<sp/>=<sp/><ref refid="group___peripheral__declaration_1gabb3dfb5e88694aa2983ecabd33a55e0a" kindref="member">FSMC_Bank2</ref>-&gt;ECCR2;</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>the<sp/>ECCR3<sp/>register<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/>eccval<sp/>=<sp/><ref refid="group___peripheral__declaration_1ga411eedc00b5b2b22b494004d4f41b736" kindref="member">FSMC_Bank3</ref>-&gt;ECCR3;</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Return<sp/>the<sp/>error<sp/>correction<sp/>code<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(eccval);</highlight></codeline>
<codeline lineno="619"><highlight class="normal">}</highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight></codeline>
<codeline lineno="637" refid="group___f_s_m_c___private___functions_1ga217027ae3cd213b9076b6a1be197064c" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___f_s_m_c___private___functions_1ga217027ae3cd213b9076b6a1be197064c" kindref="member">FSMC_ITConfig</ref>(uint32_t<sp/>FSMC_Bank,<sp/>uint32_t<sp/>FSMC_IT,<sp/><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref><sp/>NewState)</highlight></codeline>
<codeline lineno="638"><highlight class="normal">{</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___f_s_m_c___exported___constants_1gaca216ea0c184b78f23df15296a10bac0" kindref="member">IS_FSMC_IT_BANK</ref>(FSMC_Bank));</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___f_s_m_c___interrupt__sources_1ga40a38f097a75f27a700e626905fa9a38" kindref="member">IS_FSMC_IT</ref>(FSMC_IT));<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" kindref="member">IS_FUNCTIONAL_STATE</ref>(NewState));</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(NewState<sp/>!=<sp/><ref refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1ad3a9df141be0ccf10389b640f492b26d" kindref="member">DISABLE</ref>)</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Enable<sp/>the<sp/>selected<sp/>FSMC_Bank2<sp/>interrupts<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(FSMC_Bank<sp/>==<sp/><ref refid="group___f_s_m_c___n_a_n_d___bank_1ga294e7134aa329a09e56b61eec9882a27" kindref="member">FSMC_Bank2_NAND</ref>)</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1gabb3dfb5e88694aa2983ecabd33a55e0a" kindref="member">FSMC_Bank2</ref>-&gt;SR2<sp/>|=<sp/>FSMC_IT;</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Enable<sp/>the<sp/>selected<sp/>FSMC_Bank3<sp/>interrupts<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(FSMC_Bank<sp/>==<sp/><ref refid="group___f_s_m_c___n_a_n_d___bank_1gaf72def0732c026b0245d721ee371c85b" kindref="member">FSMC_Bank3_NAND</ref>)</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga411eedc00b5b2b22b494004d4f41b736" kindref="member">FSMC_Bank3</ref>-&gt;SR3<sp/>|=<sp/>FSMC_IT;</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Enable<sp/>the<sp/>selected<sp/>FSMC_Bank4<sp/>interrupts<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga5aa00e4ac522693c6a21bc23ef5a96df" kindref="member">FSMC_Bank4</ref>-&gt;SR4<sp/>|=<sp/>FSMC_IT;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Disable<sp/>the<sp/>selected<sp/>FSMC_Bank2<sp/>interrupts<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(FSMC_Bank<sp/>==<sp/><ref refid="group___f_s_m_c___n_a_n_d___bank_1ga294e7134aa329a09e56b61eec9882a27" kindref="member">FSMC_Bank2_NAND</ref>)</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1gabb3dfb5e88694aa2983ecabd33a55e0a" kindref="member">FSMC_Bank2</ref>-&gt;SR2<sp/>&amp;=<sp/>(uint32_t)~FSMC_IT;</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Disable<sp/>the<sp/>selected<sp/>FSMC_Bank3<sp/>interrupts<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(FSMC_Bank<sp/>==<sp/><ref refid="group___f_s_m_c___n_a_n_d___bank_1gaf72def0732c026b0245d721ee371c85b" kindref="member">FSMC_Bank3_NAND</ref>)</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga411eedc00b5b2b22b494004d4f41b736" kindref="member">FSMC_Bank3</ref>-&gt;SR3<sp/>&amp;=<sp/>(uint32_t)~FSMC_IT;</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Disable<sp/>the<sp/>selected<sp/>FSMC_Bank4<sp/>interrupts<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga5aa00e4ac522693c6a21bc23ef5a96df" kindref="member">FSMC_Bank4</ref>-&gt;SR4<sp/>&amp;=<sp/>(uint32_t)~FSMC_IT;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="680"><highlight class="normal">}</highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight></codeline>
<codeline lineno="697" refid="group___f_s_m_c___private___functions_1gae00355115b078f483f0771057bb849c4" refkind="member"><highlight class="normal"><ref refid="group___exported__types_1ga89136caac2e14c55151f527ac02daaff" kindref="member">FlagStatus</ref><sp/><ref refid="group___f_s_m_c___private___functions_1gae00355115b078f483f0771057bb849c4" kindref="member">FSMC_GetFlagStatus</ref>(uint32_t<sp/>FSMC_Bank,<sp/>uint32_t<sp/>FSMC_FLAG)</highlight></codeline>
<codeline lineno="698"><highlight class="normal">{</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><ref refid="group___exported__types_1ga89136caac2e14c55151f527ac02daaff" kindref="member">FlagStatus</ref><sp/>bitstatus<sp/>=<sp/><ref refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffa589b7d94a3d91d145720e2fed0eb3a05" kindref="member">RESET</ref>;</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/>uint32_t<sp/>tmpsr<sp/>=<sp/>0x00000000;</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___f_s_m_c___exported___constants_1ga884e28a365a738ad8a3199ee279a1f77" kindref="member">IS_FSMC_GETFLAG_BANK</ref>(FSMC_Bank));</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___f_s_m_c___flags_1gab8674160ef7884f939e07041bbf5b18b" kindref="member">IS_FSMC_GET_FLAG</ref>(FSMC_FLAG));</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(FSMC_Bank<sp/>==<sp/><ref refid="group___f_s_m_c___n_a_n_d___bank_1ga294e7134aa329a09e56b61eec9882a27" kindref="member">FSMC_Bank2_NAND</ref>)</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/>tmpsr<sp/>=<sp/><ref refid="group___peripheral__declaration_1gabb3dfb5e88694aa2983ecabd33a55e0a" kindref="member">FSMC_Bank2</ref>-&gt;SR2;</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/>}<sp/><sp/></highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(FSMC_Bank<sp/>==<sp/><ref refid="group___f_s_m_c___n_a_n_d___bank_1gaf72def0732c026b0245d721ee371c85b" kindref="member">FSMC_Bank3_NAND</ref>)</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/>tmpsr<sp/>=<sp/><ref refid="group___peripheral__declaration_1ga411eedc00b5b2b22b494004d4f41b736" kindref="member">FSMC_Bank3</ref>-&gt;SR3;</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>FSMC_Bank4_PCCARD*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/>tmpsr<sp/>=<sp/><ref refid="group___peripheral__declaration_1ga5aa00e4ac522693c6a21bc23ef5a96df" kindref="member">FSMC_Bank4</ref>-&gt;SR4;</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>the<sp/>flag<sp/>status<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((tmpsr<sp/>&amp;<sp/>FSMC_FLAG)<sp/>!=<sp/>(uint16_t)<ref refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffa589b7d94a3d91d145720e2fed0eb3a05" kindref="member">RESET</ref><sp/>)</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/>bitstatus<sp/>=<sp/><ref refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffab44c8101cc294c074709ec1b14211792" kindref="member">SET</ref>;</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/>bitstatus<sp/>=<sp/><ref refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffa589b7d94a3d91d145720e2fed0eb3a05" kindref="member">RESET</ref>;</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Return<sp/>the<sp/>flag<sp/>status<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bitstatus;</highlight></codeline>
<codeline lineno="731"><highlight class="normal">}</highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight></codeline>
<codeline lineno="747" refid="group___f_s_m_c___private___functions_1ga697618f2de0ad9a8a82461ddbebd5264" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___f_s_m_c___private___functions_1ga697618f2de0ad9a8a82461ddbebd5264" kindref="member">FSMC_ClearFlag</ref>(uint32_t<sp/>FSMC_Bank,<sp/>uint32_t<sp/>FSMC_FLAG)</highlight></codeline>
<codeline lineno="748"><highlight class="normal">{</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___f_s_m_c___exported___constants_1ga884e28a365a738ad8a3199ee279a1f77" kindref="member">IS_FSMC_GETFLAG_BANK</ref>(FSMC_Bank));</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___f_s_m_c___flags_1ga1114bf56b54e726831b38fc8c5daa14e" kindref="member">IS_FSMC_CLEAR_FLAG</ref>(FSMC_FLAG))<sp/>;</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(FSMC_Bank<sp/>==<sp/><ref refid="group___f_s_m_c___n_a_n_d___bank_1ga294e7134aa329a09e56b61eec9882a27" kindref="member">FSMC_Bank2_NAND</ref>)</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1gabb3dfb5e88694aa2983ecabd33a55e0a" kindref="member">FSMC_Bank2</ref>-&gt;SR2<sp/>&amp;=<sp/>~FSMC_FLAG;<sp/></highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/>}<sp/><sp/></highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(FSMC_Bank<sp/>==<sp/><ref refid="group___f_s_m_c___n_a_n_d___bank_1gaf72def0732c026b0245d721ee371c85b" kindref="member">FSMC_Bank3_NAND</ref>)</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga411eedc00b5b2b22b494004d4f41b736" kindref="member">FSMC_Bank3</ref>-&gt;SR3<sp/>&amp;=<sp/>~FSMC_FLAG;</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>FSMC_Bank4_PCCARD*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga5aa00e4ac522693c6a21bc23ef5a96df" kindref="member">FSMC_Bank4</ref>-&gt;SR4<sp/>&amp;=<sp/>~FSMC_FLAG;</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="766"><highlight class="normal">}</highlight></codeline>
<codeline lineno="767"><highlight class="normal"></highlight></codeline>
<codeline lineno="782" refid="group___f_s_m_c___private___functions_1ga7fce9ca889d33cd8b8b7413875dd4d73" refkind="member"><highlight class="normal"><ref refid="group___exported__types_1gaacbd7ed539db0aacd973a0f6eca34074" kindref="member">ITStatus</ref><sp/><ref refid="group___f_s_m_c___private___functions_1ga7fce9ca889d33cd8b8b7413875dd4d73" kindref="member">FSMC_GetITStatus</ref>(uint32_t<sp/>FSMC_Bank,<sp/>uint32_t<sp/>FSMC_IT)</highlight></codeline>
<codeline lineno="783"><highlight class="normal">{</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><ref refid="group___exported__types_1gaacbd7ed539db0aacd973a0f6eca34074" kindref="member">ITStatus</ref><sp/>bitstatus<sp/>=<sp/><ref refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffa589b7d94a3d91d145720e2fed0eb3a05" kindref="member">RESET</ref>;</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/>uint32_t<sp/>tmpsr<sp/>=<sp/>0x0,<sp/>itstatus<sp/>=<sp/>0x0,<sp/>itenable<sp/>=<sp/>0x0;<sp/></highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___f_s_m_c___exported___constants_1gaca216ea0c184b78f23df15296a10bac0" kindref="member">IS_FSMC_IT_BANK</ref>(FSMC_Bank));</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___f_s_m_c___interrupt__sources_1gae2a57d0b15e025212489ec1421ff245d" kindref="member">IS_FSMC_GET_IT</ref>(FSMC_IT));</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(FSMC_Bank<sp/>==<sp/><ref refid="group___f_s_m_c___n_a_n_d___bank_1ga294e7134aa329a09e56b61eec9882a27" kindref="member">FSMC_Bank2_NAND</ref>)</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/>tmpsr<sp/>=<sp/><ref refid="group___peripheral__declaration_1gabb3dfb5e88694aa2983ecabd33a55e0a" kindref="member">FSMC_Bank2</ref>-&gt;SR2;</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/>}<sp/><sp/></highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(FSMC_Bank<sp/>==<sp/><ref refid="group___f_s_m_c___n_a_n_d___bank_1gaf72def0732c026b0245d721ee371c85b" kindref="member">FSMC_Bank3_NAND</ref>)</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/>tmpsr<sp/>=<sp/><ref refid="group___peripheral__declaration_1ga411eedc00b5b2b22b494004d4f41b736" kindref="member">FSMC_Bank3</ref>-&gt;SR3;</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>FSMC_Bank4_PCCARD*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/>tmpsr<sp/>=<sp/><ref refid="group___peripheral__declaration_1ga5aa00e4ac522693c6a21bc23ef5a96df" kindref="member">FSMC_Bank4</ref>-&gt;SR4;</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/>itstatus<sp/>=<sp/>tmpsr<sp/>&amp;<sp/>FSMC_IT;</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/>itenable<sp/>=<sp/>tmpsr<sp/>&amp;<sp/>(FSMC_IT<sp/>&gt;&gt;<sp/>3);</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((itstatus<sp/>!=<sp/>(uint32_t)<ref refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffa589b7d94a3d91d145720e2fed0eb3a05" kindref="member">RESET</ref>)<sp/><sp/>&amp;&amp;<sp/>(itenable<sp/>!=<sp/>(uint32_t)RESET))</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/>bitstatus<sp/>=<sp/><ref refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffab44c8101cc294c074709ec1b14211792" kindref="member">SET</ref>;</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/>bitstatus<sp/>=<sp/><ref refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffa589b7d94a3d91d145720e2fed0eb3a05" kindref="member">RESET</ref>;</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bitstatus;<sp/></highlight></codeline>
<codeline lineno="817"><highlight class="normal">}</highlight></codeline>
<codeline lineno="818"><highlight class="normal"></highlight></codeline>
<codeline lineno="833" refid="group___f_s_m_c___private___functions_1gad9387e7674b8a376256a3378649e004e" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___f_s_m_c___private___functions_1gad9387e7674b8a376256a3378649e004e" kindref="member">FSMC_ClearITPendingBit</ref>(uint32_t<sp/>FSMC_Bank,<sp/>uint32_t<sp/>FSMC_IT)</highlight></codeline>
<codeline lineno="834"><highlight class="normal">{</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___f_s_m_c___exported___constants_1gaca216ea0c184b78f23df15296a10bac0" kindref="member">IS_FSMC_IT_BANK</ref>(FSMC_Bank));</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___f_s_m_c___interrupt__sources_1ga40a38f097a75f27a700e626905fa9a38" kindref="member">IS_FSMC_IT</ref>(FSMC_IT));</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(FSMC_Bank<sp/>==<sp/><ref refid="group___f_s_m_c___n_a_n_d___bank_1ga294e7134aa329a09e56b61eec9882a27" kindref="member">FSMC_Bank2_NAND</ref>)</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1gabb3dfb5e88694aa2983ecabd33a55e0a" kindref="member">FSMC_Bank2</ref>-&gt;SR2<sp/>&amp;=<sp/>~(FSMC_IT<sp/>&gt;&gt;<sp/>3);<sp/></highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/>}<sp/><sp/></highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(FSMC_Bank<sp/>==<sp/><ref refid="group___f_s_m_c___n_a_n_d___bank_1gaf72def0732c026b0245d721ee371c85b" kindref="member">FSMC_Bank3_NAND</ref>)</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga411eedc00b5b2b22b494004d4f41b736" kindref="member">FSMC_Bank3</ref>-&gt;SR3<sp/>&amp;=<sp/>~(FSMC_IT<sp/>&gt;&gt;<sp/>3);</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>FSMC_Bank4_PCCARD*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga5aa00e4ac522693c6a21bc23ef5a96df" kindref="member">FSMC_Bank4</ref>-&gt;SR4<sp/>&amp;=<sp/>~(FSMC_IT<sp/>&gt;&gt;<sp/>3);</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="852"><highlight class="normal">}</highlight></codeline>
<codeline lineno="853"><highlight class="normal"></highlight></codeline>
<codeline lineno="866"><highlight class="comment">/*******************<sp/>(C)<sp/>COPYRIGHT<sp/>2011<sp/>STMicroelectronics<sp/>*****END<sp/>OF<sp/>FILE****/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_fsmc.c"/>
  </compounddef>
</doxygen>
