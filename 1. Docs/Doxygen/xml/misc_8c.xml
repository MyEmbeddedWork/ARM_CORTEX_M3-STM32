<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="misc_8c" kind="file" language="C++">
    <compoundname>misc.c</compoundname>
    <includes refid="misc_8h" local="yes">misc.h</includes>
    <incdepgraph>
      <node id="837">
        <label>system_stm32f10x.h</label>
        <link refid="system__stm32f10x_8h"/>
      </node>
      <node id="831">
        <label>misc.h</label>
        <link refid="misc_8h"/>
        <childnode refid="832" relation="include">
        </childnode>
      </node>
      <node id="834">
        <label>stdint.h</label>
      </node>
      <node id="833">
        <label>core_cm3.h</label>
        <link refid="core__cm3_8h"/>
        <childnode refid="834" relation="include">
        </childnode>
        <childnode refid="835" relation="include">
        </childnode>
        <childnode refid="836" relation="include">
        </childnode>
      </node>
      <node id="836">
        <label>core_cmFunc.h</label>
        <link refid="core__cm_func_8h"/>
      </node>
      <node id="830">
        <label>C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/misc.c</label>
        <link refid="misc_8c"/>
        <childnode refid="831" relation="include">
        </childnode>
      </node>
      <node id="835">
        <label>core_cmInstr.h</label>
        <link refid="core__cm_instr_8h"/>
      </node>
      <node id="832">
        <label>stm32f10x.h</label>
        <link refid="stm32f10x_8h"/>
        <childnode refid="833" relation="include">
        </childnode>
        <childnode refid="837" relation="include">
        </childnode>
        <childnode refid="834" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="group___m_i_s_c___private___defines_1gad6905141fba3a2d8d5570db40805dc6a" prot="public" static="no">
        <name>AIRCR_VECTKEY_MASK</name>
        <initializer>((uint32_t)0x05FA0000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/misc.c" line="47" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/misc.c" bodystart="47" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group___m_i_s_c___private___functions_1gadfb1f34f803ce54c976643db8c484442" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NVIC_PriorityGroupConfig</definition>
        <argsstring>(uint32_t NVIC_PriorityGroup)</argsstring>
        <name>NVIC_PriorityGroupConfig</name>
        <param>
          <type>uint32_t</type>
          <declname>NVIC_PriorityGroup</declname>
        </param>
        <briefdescription>
<para>Configures the priority grouping: pre-emption priority and subpriority. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>NVIC_PriorityGroup</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the priority grouping bits length. This parameter can be one of the following values: <itemizedlist>
<listitem><para>NVIC_PriorityGroup_0: 0 bits for pre-emption priority 4 bits for subpriority </para></listitem>
<listitem><para>NVIC_PriorityGroup_1: 1 bits for pre-emption priority 3 bits for subpriority </para></listitem>
<listitem><para>NVIC_PriorityGroup_2: 2 bits for pre-emption priority 2 bits for subpriority </para></listitem>
<listitem><para>NVIC_PriorityGroup_3: 3 bits for pre-emption priority 1 bits for subpriority </para></listitem>
<listitem><para>NVIC_PriorityGroup_4: 4 bits for pre-emption priority 0 bits for subpriority </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/misc.c" line="96" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/misc.c" bodystart="96" bodyend="103"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___preemption___priority___group_1ga6569304a39fe4f91bd59b6a586c8ede9" compoundref="misc_8h" startline="157">IS_NVIC_PRIORITY_GROUP</references>
        <references refid="group___c_m_s_i_s__core__base_1gaaaf6477c2bde2f00f99e3c2fd1060b01" compoundref="core__cm0_8h" startline="595">SCB</references>
        <references refid="group___m_i_s_c___private___defines_1gad6905141fba3a2d8d5570db40805dc6a" compoundref="misc_8c" startline="47">AIRCR_VECTKEY_MASK</references>
      </memberdef>
      <memberdef kind="function" id="group___m_i_s_c___private___functions_1ga4ab373ed0870c06fca5eb51d639adf41" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NVIC_Init</definition>
        <argsstring>(NVIC_InitTypeDef *NVIC_InitStruct)</argsstring>
        <name>NVIC_Init</name>
        <param>
          <type><ref refid="struct_n_v_i_c___init_type_def" kindref="compound">NVIC_InitTypeDef</ref> *</type>
          <declname>NVIC_InitStruct</declname>
        </param>
        <briefdescription>
<para>Initializes the NVIC peripheral according to the specified parameters in the NVIC_InitStruct. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>NVIC_InitStruct</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a <ref refid="struct_n_v_i_c___init_type_def" kindref="compound">NVIC_InitTypeDef</ref> structure that contains the configuration information for the specified NVIC peripheral. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/misc.c" line="112" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/misc.c" bodystart="112" bodyend="155"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" compoundref="stm32f10x_8h" startline="522">IS_FUNCTIONAL_STATE</references>
        <references refid="struct_n_v_i_c___init_type_def_1acb23fabb995fa4980c768825f12f5815" compoundref="misc_8h" startline="65">NVIC_InitTypeDef::NVIC_IRQChannelCmd</references>
        <references refid="group___preemption___priority___group_1gaf30fd8f5960c2e28a772d8f16bb156dd" compoundref="misc_8h" startline="163">IS_NVIC_PREEMPTION_PRIORITY</references>
        <references refid="struct_n_v_i_c___init_type_def_1aa3fe262c30188404a6e31f922c5ae513" compoundref="misc_8h" startline="57">NVIC_InitTypeDef::NVIC_IRQChannelPreemptionPriority</references>
        <references refid="group___preemption___priority___group_1ga010705bc997dcff935b965b372cba61d" compoundref="misc_8h" startline="165">IS_NVIC_SUB_PRIORITY</references>
        <references refid="struct_n_v_i_c___init_type_def_1aecc22a002244e3f1f9448dbe46c1db4b" compoundref="misc_8h" startline="61">NVIC_InitTypeDef::NVIC_IRQChannelSubPriority</references>
        <references refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1ad3a9df141be0ccf10389b640f492b26d" compoundref="stm32f10x_8h" startline="521">DISABLE</references>
        <references refid="group___c_m_s_i_s__core__base_1gaaaf6477c2bde2f00f99e3c2fd1060b01" compoundref="core__cm0_8h" startline="595">SCB</references>
        <references refid="group___c_m_s_i_s__core__base_1gac8e97e8ce56ae9f57da1363a937f8a17" compoundref="core__cm0_8h" startline="597">NVIC</references>
        <references refid="struct_n_v_i_c___init_type_def_1afa04cf6e559bb690bdd9fcb7e3d93dcf" compoundref="misc_8h" startline="52">NVIC_InitTypeDef::NVIC_IRQChannel</references>
      </memberdef>
      <memberdef kind="function" id="group___m_i_s_c___private___functions_1ga1145208ad70edfc2fab19b8b8ef1b1a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NVIC_SetVectorTable</definition>
        <argsstring>(uint32_t NVIC_VectTab, uint32_t Offset)</argsstring>
        <name>NVIC_SetVectorTable</name>
        <param>
          <type>uint32_t</type>
          <declname>NVIC_VectTab</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>Offset</declname>
        </param>
        <briefdescription>
<para>Sets the vector table location and Offset. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>NVIC_VectTab</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies if the vector table is in RAM or FLASH memory. This parameter can be one of the following values: <itemizedlist>
<listitem><para>NVIC_VectTab_RAM </para></listitem>
<listitem><para>NVIC_VectTab_FLASH </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Offset</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector Table base offset field. This value must be a multiple of 0x200. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/misc.c" line="167" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/misc.c" bodystart="167" bodyend="174"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___vector___table___base_1ga26b9d493ccb98fcce9a27303078940c8" compoundref="misc_8h" startline="117">IS_NVIC_VECTTAB</references>
        <references refid="group___preemption___priority___group_1ga1184bbb97d758385f98ab40dd5e5af59" compoundref="misc_8h" startline="167">IS_NVIC_OFFSET</references>
        <references refid="group___c_m_s_i_s__core__base_1gaaaf6477c2bde2f00f99e3c2fd1060b01" compoundref="core__cm0_8h" startline="595">SCB</references>
      </memberdef>
      <memberdef kind="function" id="group___m_i_s_c___private___functions_1gae21011c5232f5b8f366acbecd12a1d4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NVIC_SystemLPConfig</definition>
        <argsstring>(uint8_t LowPowerMode, FunctionalState NewState)</argsstring>
        <name>NVIC_SystemLPConfig</name>
        <param>
          <type>uint8_t</type>
          <declname>LowPowerMode</declname>
        </param>
        <param>
          <type><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref></type>
          <declname>NewState</declname>
        </param>
        <briefdescription>
<para>Selects the condition for the system to enter low power mode. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>LowPowerMode</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the new mode for the system to enter low power mode. This parameter can be one of the following values: <itemizedlist>
<listitem><para>NVIC_LP_SEVONPEND </para></listitem>
<listitem><para>NVIC_LP_SLEEPDEEP </para></listitem>
<listitem><para>NVIC_LP_SLEEPONEXIT </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NewState</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of LP condition. This parameter can be: ENABLE or DISABLE. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/misc.c" line="186" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/misc.c" bodystart="186" bodyend="200"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___system___low___power_1ga985896f03bc1d7b3da17a212f1bc3de9" compoundref="misc_8h" startline="130">IS_NVIC_LP</references>
        <references refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" compoundref="stm32f10x_8h" startline="522">IS_FUNCTIONAL_STATE</references>
        <references refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1ad3a9df141be0ccf10389b640f492b26d" compoundref="stm32f10x_8h" startline="521">DISABLE</references>
        <references refid="group___c_m_s_i_s__core__base_1gaaaf6477c2bde2f00f99e3c2fd1060b01" compoundref="core__cm0_8h" startline="595">SCB</references>
      </memberdef>
      <memberdef kind="function" id="group___m_i_s_c___private___functions_1ga2777d255bb06ad62bb6372a9db1ff385" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SysTick_CLKSourceConfig</definition>
        <argsstring>(uint32_t SysTick_CLKSource)</argsstring>
        <name>SysTick_CLKSourceConfig</name>
        <param>
          <type>uint32_t</type>
          <declname>SysTick_CLKSource</declname>
        </param>
        <briefdescription>
<para>Configures the SysTick clock source. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>SysTick_CLKSource</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the SysTick clock source. This parameter can be one of the following values: <itemizedlist>
<listitem><para>SysTick_CLKSource_HCLK_Div8: AHB clock divided by 8 selected as SysTick clock source. </para></listitem>
<listitem><para>SysTick_CLKSource_HCLK: AHB clock selected as SysTick clock source. </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/misc.c" line="210" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/misc.c" bodystart="210" bodyend="222"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___sys_tick__clock__source_1ga22d6291f6aed29442cf4cd9098fa0784" compoundref="misc_8h" startline="179">IS_SYSTICK_CLK_SOURCE</references>
        <references refid="group___sys_tick__clock__source_1ga8a885ce2632ad4c35e229bb7c6e60191" compoundref="misc_8h" startline="178">SysTick_CLKSource_HCLK</references>
        <references refid="group___c_m_s_i_s__core__base_1gacd96c53beeaff8f603fcda425eb295de" compoundref="core__cm0_8h" startline="596">SysTick</references>
        <references refid="group___sys_tick__clock__source_1ga545c387ce43db90f15faad5f354f890d" compoundref="misc_8h" startline="177">SysTick_CLKSource_HCLK_Div8</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This file provides all the miscellaneous firmware functions (add-on to CMSIS functions). </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>MCD Application Team </para></simplesect>
<simplesect kind="version"><para>V3.5.0 </para></simplesect>
<simplesect kind="date"><para>11-March-2011 </para></simplesect>
<simplesect kind="attention"><para></para></simplesect>
THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.</para><para><heading level="2"><center><copy/> COPYRIGHT 2011 STMicroelectronics</center></heading>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="23"><highlight class="comment">/*<sp/>Includes<sp/>------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="misc_8h" kindref="compound">misc.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="group___m_i_s_c___private___defines_1gad6905141fba3a2d8d5570db40805dc6a" refkind="member"><highlight class="preprocessor">#define<sp/>AIRCR_VECTKEY_MASK<sp/><sp/><sp/><sp/>((uint32_t)0x05FA0000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="group___m_i_s_c___private___functions_1gadfb1f34f803ce54c976643db8c484442" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___m_i_s_c___private___functions_1gadfb1f34f803ce54c976643db8c484442" kindref="member">NVIC_PriorityGroupConfig</ref>(uint32_t<sp/>NVIC_PriorityGroup)</highlight></codeline>
<codeline lineno="97"><highlight class="normal">{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___preemption___priority___group_1ga6569304a39fe4f91bd59b6a586c8ede9" kindref="member">IS_NVIC_PRIORITY_GROUP</ref>(NVIC_PriorityGroup));</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>the<sp/>PRIGROUP[10:8]<sp/>bits<sp/>according<sp/>to<sp/>NVIC_PriorityGroup<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><ref refid="group___c_m_s_i_s__core__base_1gaaaf6477c2bde2f00f99e3c2fd1060b01" kindref="member">SCB</ref>-&gt;AIRCR<sp/>=<sp/><ref refid="group___m_i_s_c___private___defines_1gad6905141fba3a2d8d5570db40805dc6a" kindref="member">AIRCR_VECTKEY_MASK</ref><sp/>|<sp/>NVIC_PriorityGroup;</highlight></codeline>
<codeline lineno="103"><highlight class="normal">}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="112" refid="group___m_i_s_c___private___functions_1ga4ab373ed0870c06fca5eb51d639adf41" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___m_i_s_c___private___functions_1ga4ab373ed0870c06fca5eb51d639adf41" kindref="member">NVIC_Init</ref>(<ref refid="struct_n_v_i_c___init_type_def" kindref="compound">NVIC_InitTypeDef</ref>*<sp/>NVIC_InitStruct)</highlight></codeline>
<codeline lineno="113"><highlight class="normal">{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>uint32_t<sp/>tmppriority<sp/>=<sp/>0x00,<sp/>tmppre<sp/>=<sp/>0x00,<sp/>tmpsub<sp/>=<sp/>0x0F;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" kindref="member">IS_FUNCTIONAL_STATE</ref>(NVIC_InitStruct-&gt;<ref refid="struct_n_v_i_c___init_type_def_1acb23fabb995fa4980c768825f12f5815" kindref="member">NVIC_IRQChannelCmd</ref>));</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___preemption___priority___group_1gaf30fd8f5960c2e28a772d8f16bb156dd" kindref="member">IS_NVIC_PREEMPTION_PRIORITY</ref>(NVIC_InitStruct-&gt;<ref refid="struct_n_v_i_c___init_type_def_1aa3fe262c30188404a6e31f922c5ae513" kindref="member">NVIC_IRQChannelPreemptionPriority</ref>));<sp/><sp/></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___preemption___priority___group_1ga010705bc997dcff935b965b372cba61d" kindref="member">IS_NVIC_SUB_PRIORITY</ref>(NVIC_InitStruct-&gt;<ref refid="struct_n_v_i_c___init_type_def_1aecc22a002244e3f1f9448dbe46c1db4b" kindref="member">NVIC_IRQChannelSubPriority</ref>));</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(NVIC_InitStruct-&gt;<ref refid="struct_n_v_i_c___init_type_def_1acb23fabb995fa4980c768825f12f5815" kindref="member">NVIC_IRQChannelCmd</ref><sp/>!=<sp/><ref refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1ad3a9df141be0ccf10389b640f492b26d" kindref="member">DISABLE</ref>)</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Compute<sp/>the<sp/>Corresponding<sp/>IRQ<sp/>Priority<sp/>--------------------------------*/</highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>tmppriority<sp/>=<sp/>(0x700<sp/>-<sp/>((<ref refid="group___c_m_s_i_s__core__base_1gaaaf6477c2bde2f00f99e3c2fd1060b01" kindref="member">SCB</ref>-&gt;AIRCR)<sp/>&amp;<sp/>(uint32_t)0x700))&gt;&gt;<sp/>0x08;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>tmppre<sp/>=<sp/>(0x4<sp/>-<sp/>tmppriority);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>tmpsub<sp/>=<sp/>tmpsub<sp/>&gt;&gt;<sp/>tmppriority;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>tmppriority<sp/>=<sp/>(uint32_t)NVIC_InitStruct-&gt;<ref refid="struct_n_v_i_c___init_type_def_1aa3fe262c30188404a6e31f922c5ae513" kindref="member">NVIC_IRQChannelPreemptionPriority</ref><sp/>&lt;&lt;<sp/>tmppre;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>tmppriority<sp/>|=<sp/><sp/>NVIC_InitStruct-&gt;<ref refid="struct_n_v_i_c___init_type_def_1aecc22a002244e3f1f9448dbe46c1db4b" kindref="member">NVIC_IRQChannelSubPriority</ref><sp/>&amp;<sp/>tmpsub;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>tmppriority<sp/>=<sp/>tmppriority<sp/>&lt;&lt;<sp/>0x04;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>[ILG]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>#</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>defined<sp/>(<sp/>__GNUC__<sp/>)</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#pragma<sp/>GCC<sp/>diagnostic<sp/>push</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#pragma<sp/>GCC<sp/>diagnostic<sp/>ignored<sp/>&quot;-Wconversion&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___c_m_s_i_s__core__base_1gac8e97e8ce56ae9f57da1363a937f8a17" kindref="member">NVIC</ref>-&gt;IP[NVIC_InitStruct-&gt;<ref refid="struct_n_v_i_c___init_type_def_1afa04cf6e559bb690bdd9fcb7e3d93dcf" kindref="member">NVIC_IRQChannel</ref>]<sp/>=<sp/>tmppriority;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>[ILG]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#if<sp/>defined<sp/>(<sp/>__GNUC__<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#pragma<sp/>GCC<sp/>diagnostic<sp/>pop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Enable<sp/>the<sp/>Selected<sp/>IRQ<sp/>Channels<sp/>--------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___c_m_s_i_s__core__base_1gac8e97e8ce56ae9f57da1363a937f8a17" kindref="member">NVIC</ref>-&gt;ISER[NVIC_InitStruct-&gt;<ref refid="struct_n_v_i_c___init_type_def_1afa04cf6e559bb690bdd9fcb7e3d93dcf" kindref="member">NVIC_IRQChannel</ref><sp/>&gt;&gt;<sp/>0x05]<sp/>=</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(uint32_t)0x01<sp/>&lt;&lt;<sp/>(NVIC_InitStruct-&gt;<ref refid="struct_n_v_i_c___init_type_def_1afa04cf6e559bb690bdd9fcb7e3d93dcf" kindref="member">NVIC_IRQChannel</ref><sp/>&amp;<sp/>(uint8_t)0x1F);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Disable<sp/>the<sp/>Selected<sp/>IRQ<sp/>Channels<sp/>-------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___c_m_s_i_s__core__base_1gac8e97e8ce56ae9f57da1363a937f8a17" kindref="member">NVIC</ref>-&gt;ICER[NVIC_InitStruct-&gt;<ref refid="struct_n_v_i_c___init_type_def_1afa04cf6e559bb690bdd9fcb7e3d93dcf" kindref="member">NVIC_IRQChannel</ref><sp/>&gt;&gt;<sp/>0x05]<sp/>=</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(uint32_t)0x01<sp/>&lt;&lt;<sp/>(NVIC_InitStruct-&gt;<ref refid="struct_n_v_i_c___init_type_def_1afa04cf6e559bb690bdd9fcb7e3d93dcf" kindref="member">NVIC_IRQChannel</ref><sp/>&amp;<sp/>(uint8_t)0x1F);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal">}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="167" refid="group___m_i_s_c___private___functions_1ga1145208ad70edfc2fab19b8b8ef1b1a1" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___m_i_s_c___private___functions_1ga1145208ad70edfc2fab19b8b8ef1b1a1" kindref="member">NVIC_SetVectorTable</ref>(uint32_t<sp/>NVIC_VectTab,<sp/>uint32_t<sp/>Offset)</highlight></codeline>
<codeline lineno="168"><highlight class="normal">{<sp/></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___vector___table___base_1ga26b9d493ccb98fcce9a27303078940c8" kindref="member">IS_NVIC_VECTTAB</ref>(NVIC_VectTab));</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___preemption___priority___group_1ga1184bbb97d758385f98ab40dd5e5af59" kindref="member">IS_NVIC_OFFSET</ref>(Offset));<sp/><sp/></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><ref refid="group___c_m_s_i_s__core__base_1gaaaf6477c2bde2f00f99e3c2fd1060b01" kindref="member">SCB</ref>-&gt;VTOR<sp/>=<sp/>NVIC_VectTab<sp/>|<sp/>(Offset<sp/>&amp;<sp/>(uint32_t)0x1FFFFF80);</highlight></codeline>
<codeline lineno="174"><highlight class="normal">}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="186" refid="group___m_i_s_c___private___functions_1gae21011c5232f5b8f366acbecd12a1d4a" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___m_i_s_c___private___functions_1gae21011c5232f5b8f366acbecd12a1d4a" kindref="member">NVIC_SystemLPConfig</ref>(uint8_t<sp/>LowPowerMode,<sp/><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref><sp/>NewState)</highlight></codeline>
<codeline lineno="187"><highlight class="normal">{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___system___low___power_1ga985896f03bc1d7b3da17a212f1bc3de9" kindref="member">IS_NVIC_LP</ref>(LowPowerMode));</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" kindref="member">IS_FUNCTIONAL_STATE</ref>(NewState));<sp/><sp/></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(NewState<sp/>!=<sp/><ref refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1ad3a9df141be0ccf10389b640f492b26d" kindref="member">DISABLE</ref>)</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___c_m_s_i_s__core__base_1gaaaf6477c2bde2f00f99e3c2fd1060b01" kindref="member">SCB</ref>-&gt;SCR<sp/>|=<sp/>LowPowerMode;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___c_m_s_i_s__core__base_1gaaaf6477c2bde2f00f99e3c2fd1060b01" kindref="member">SCB</ref>-&gt;SCR<sp/>&amp;=<sp/>(uint32_t)(~(uint32_t)LowPowerMode);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal">}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="210" refid="group___m_i_s_c___private___functions_1ga2777d255bb06ad62bb6372a9db1ff385" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___m_i_s_c___private___functions_1ga2777d255bb06ad62bb6372a9db1ff385" kindref="member">SysTick_CLKSourceConfig</ref>(uint32_t<sp/>SysTick_CLKSource)</highlight></codeline>
<codeline lineno="211"><highlight class="normal">{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___sys_tick__clock__source_1ga22d6291f6aed29442cf4cd9098fa0784" kindref="member">IS_SYSTICK_CLK_SOURCE</ref>(SysTick_CLKSource));</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(SysTick_CLKSource<sp/>==<sp/><ref refid="group___sys_tick__clock__source_1ga8a885ce2632ad4c35e229bb7c6e60191" kindref="member">SysTick_CLKSource_HCLK</ref>)</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___c_m_s_i_s__core__base_1gacd96c53beeaff8f603fcda425eb295de" kindref="member">SysTick</ref>-&gt;CTRL<sp/>|=<sp/><ref refid="group___sys_tick__clock__source_1ga8a885ce2632ad4c35e229bb7c6e60191" kindref="member">SysTick_CLKSource_HCLK</ref>;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___c_m_s_i_s__core__base_1gacd96c53beeaff8f603fcda425eb295de" kindref="member">SysTick</ref>-&gt;CTRL<sp/>&amp;=<sp/><ref refid="group___sys_tick__clock__source_1ga545c387ce43db90f15faad5f354f890d" kindref="member">SysTick_CLKSource_HCLK_Div8</ref>;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal">}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="comment">/*******************<sp/>(C)<sp/>COPYRIGHT<sp/>2011<sp/>STMicroelectronics<sp/>*****END<sp/>OF<sp/>FILE****/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/misc.c"/>
  </compounddef>
</doxygen>
