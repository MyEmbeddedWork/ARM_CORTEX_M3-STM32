<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="stm32f10x__dac_8h" kind="file" language="C++">
    <compoundname>stm32f10x_dac.h</compoundname>
    <includes refid="stm32f10x_8h" local="yes">stm32f10x.h</includes>
    <includedby refid="stm32f10x__conf_8h" local="yes">C:/Users/anilj/Desktop/cmsis/sorc/include/stm32f10x_conf.h</includedby>
    <includedby refid="stm32f10x__dac_8c" local="yes">C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_dac.c</includedby>
    <incdepgraph>
      <node id="567">
        <label>system_stm32f10x.h</label>
        <link refid="system__stm32f10x_8h"/>
      </node>
      <node id="564">
        <label>stdint.h</label>
      </node>
      <node id="563">
        <label>core_cm3.h</label>
        <link refid="core__cm3_8h"/>
        <childnode refid="564" relation="include">
        </childnode>
        <childnode refid="565" relation="include">
        </childnode>
        <childnode refid="566" relation="include">
        </childnode>
      </node>
      <node id="566">
        <label>core_cmFunc.h</label>
        <link refid="core__cm_func_8h"/>
      </node>
      <node id="561">
        <label>C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h</label>
        <link refid="stm32f10x__dac_8h"/>
        <childnode refid="562" relation="include">
        </childnode>
      </node>
      <node id="565">
        <label>core_cmInstr.h</label>
        <link refid="core__cm_instr_8h"/>
      </node>
      <node id="562">
        <label>stm32f10x.h</label>
        <link refid="stm32f10x_8h"/>
        <childnode refid="563" relation="include">
        </childnode>
        <childnode refid="567" relation="include">
        </childnode>
        <childnode refid="564" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="569">
        <label>C:/Users/anilj/Desktop/cmsis/sorc/include/stm32f10x_conf.h</label>
        <link refid="stm32f10x__conf_8h"/>
      </node>
      <node id="568">
        <label>C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h</label>
        <link refid="stm32f10x__dac_8h"/>
        <childnode refid="569" relation="include">
        </childnode>
        <childnode refid="570" relation="include">
        </childnode>
      </node>
      <node id="570">
        <label>C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_dac.c</label>
        <link refid="stm32f10x__dac_8c"/>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_d_a_c___init_type_def" prot="public">DAC_InitTypeDef</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="group___d_a_c__trigger__selection_1ga7849138e043267668d755390d923e4ba" prot="public" static="no">
        <name>DAC_Trigger_None</name>
        <initializer>((uint32_t)0x00000000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Conversion is automatic once the DAC1_DHRxxxx register has been loaded, and not by external trigger </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" line="80" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___d_a_c__trigger__selection_1ga083307783678a2f1d3066db57dc84cfe" prot="public" static="no">
        <name>DAC_Trigger_T6_TRGO</name>
        <initializer>((uint32_t)0x00000004)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>TIM6 TRGO selected as external conversion trigger for DAC channel </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" line="81" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___d_a_c__trigger__selection_1ga756700c6621eadb807e21a16966580a0" prot="public" static="no">
        <name>DAC_Trigger_T8_TRGO</name>
        <initializer>((uint32_t)0x0000000C)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>TIM8 TRGO selected as external conversion trigger for DAC channel only in High-density devices </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" line="83" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___d_a_c__trigger__selection_1ga82cbaedc35164c8b9fe0be2faec9b909" prot="public" static="no">
        <name>DAC_Trigger_T3_TRGO</name>
        <initializer>((uint32_t)0x0000000C)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>TIM8 TRGO selected as external conversion trigger for DAC channel only in Connectivity line, Medium-density and Low-density Value Line devices </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" line="85" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___d_a_c__trigger__selection_1ga9b92d497746be54af46ae4e9c1fc4a6f" prot="public" static="no">
        <name>DAC_Trigger_T7_TRGO</name>
        <initializer>((uint32_t)0x00000014)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>TIM7 TRGO selected as external conversion trigger for DAC channel </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" line="86" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___d_a_c__trigger__selection_1ga35352cebfd1ae8a3d63e374a5d86a85d" prot="public" static="no">
        <name>DAC_Trigger_T5_TRGO</name>
        <initializer>((uint32_t)0x0000001C)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>TIM5 TRGO selected as external conversion trigger for DAC channel </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" line="87" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___d_a_c__trigger__selection_1ga9f738c0c1366a588ac4fa9e060278c70" prot="public" static="no">
        <name>DAC_Trigger_T15_TRGO</name>
        <initializer>((uint32_t)0x0000001C)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>TIM15 TRGO selected as external conversion trigger for DAC channel only in Medium-density and Low-density Value Line devices </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" line="89" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___d_a_c__trigger__selection_1ga3bfbff1e03af1fd17a57a43e57420fe6" prot="public" static="no">
        <name>DAC_Trigger_T2_TRGO</name>
        <initializer>((uint32_t)0x00000024)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>TIM2 TRGO selected as external conversion trigger for DAC channel </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" line="90" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___d_a_c__trigger__selection_1ga58ccb2de3d22d66ee975152f5edb330a" prot="public" static="no">
        <name>DAC_Trigger_T4_TRGO</name>
        <initializer>((uint32_t)0x0000002C)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>TIM4 TRGO selected as external conversion trigger for DAC channel </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" line="91" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___d_a_c__trigger__selection_1ga67c15b2c26246a2304f9db28e25adcc4" prot="public" static="no">
        <name>DAC_Trigger_Ext_IT9</name>
        <initializer>((uint32_t)0x00000034)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>EXTI Line9 event selected as external conversion trigger for DAC channel </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" line="92" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___d_a_c__trigger__selection_1gadef77bb8bbd109232900902402ef637f" prot="public" static="no">
        <name>DAC_Trigger_Software</name>
        <initializer>((uint32_t)0x0000003C)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Conversion started by software trigger for DAC channel </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" line="93" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___d_a_c__trigger__selection_1ga4409b79639e6ae3b1f0ed61a33c810a3" prot="public" static="no">
        <name>IS_DAC_TRIGGER</name>
        <param><defname>TRIGGER</defname></param>
        <initializer>(((TRIGGER) == <ref refid="group___d_a_c__trigger__selection_1ga7849138e043267668d755390d923e4ba" kindref="member">DAC_Trigger_None</ref>) || \
                                 ((TRIGGER) == <ref refid="group___d_a_c__trigger__selection_1ga083307783678a2f1d3066db57dc84cfe" kindref="member">DAC_Trigger_T6_TRGO</ref>) || \
                                 ((TRIGGER) == <ref refid="group___d_a_c__trigger__selection_1ga756700c6621eadb807e21a16966580a0" kindref="member">DAC_Trigger_T8_TRGO</ref>) || \
                                 ((TRIGGER) == <ref refid="group___d_a_c__trigger__selection_1ga9b92d497746be54af46ae4e9c1fc4a6f" kindref="member">DAC_Trigger_T7_TRGO</ref>) || \
                                 ((TRIGGER) == <ref refid="group___d_a_c__trigger__selection_1ga35352cebfd1ae8a3d63e374a5d86a85d" kindref="member">DAC_Trigger_T5_TRGO</ref>) || \
                                 ((TRIGGER) == <ref refid="group___d_a_c__trigger__selection_1ga3bfbff1e03af1fd17a57a43e57420fe6" kindref="member">DAC_Trigger_T2_TRGO</ref>) || \
                                 ((TRIGGER) == <ref refid="group___d_a_c__trigger__selection_1ga58ccb2de3d22d66ee975152f5edb330a" kindref="member">DAC_Trigger_T4_TRGO</ref>) || \
                                 ((TRIGGER) == <ref refid="group___d_a_c__trigger__selection_1ga67c15b2c26246a2304f9db28e25adcc4" kindref="member">DAC_Trigger_Ext_IT9</ref>) || \
                                 ((TRIGGER) == <ref refid="group___d_a_c__trigger__selection_1gadef77bb8bbd109232900902402ef637f" kindref="member">DAC_Trigger_Software</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" line="95" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___d_a_c__wave__generation_1gaabbcd575d6106267f6b65ce988158f29" prot="public" static="no">
        <name>DAC_WaveGeneration_None</name>
        <initializer>((uint32_t)0x00000000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" line="113" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___d_a_c__wave__generation_1ga1692990325098cae6f32182c1fa0f61e" prot="public" static="no">
        <name>DAC_WaveGeneration_Noise</name>
        <initializer>((uint32_t)0x00000040)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" line="114" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___d_a_c__wave__generation_1ga68f1a71011437a5ea6298ab039554714" prot="public" static="no">
        <name>DAC_WaveGeneration_Triangle</name>
        <initializer>((uint32_t)0x00000080)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" line="115" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___d_a_c__wave__generation_1ga50fb2dd12305cd7bd0b738a1f6388d3c" prot="public" static="no">
        <name>IS_DAC_GENERATE_WAVE</name>
        <param><defname>WAVE</defname></param>
        <initializer>(((WAVE) == <ref refid="group___d_a_c__wave__generation_1gaabbcd575d6106267f6b65ce988158f29" kindref="member">DAC_WaveGeneration_None</ref>) || \
                                    ((WAVE) == <ref refid="group___d_a_c__wave__generation_1ga1692990325098cae6f32182c1fa0f61e" kindref="member">DAC_WaveGeneration_Noise</ref>) || \
                                    ((WAVE) == <ref refid="group___d_a_c__wave__generation_1ga68f1a71011437a5ea6298ab039554714" kindref="member">DAC_WaveGeneration_Triangle</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" line="116" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___d_a_c__lfsrunmask__triangleamplitude_1ga60794fd5092a332cfa82e1cee13945fc" prot="public" static="no">
        <name>DAC_LFSRUnmask_Bit0</name>
        <initializer>((uint32_t)0x00000000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Unmask DAC channel LFSR bit0 for noise wave generation </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" line="127" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" bodystart="131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___d_a_c__lfsrunmask__triangleamplitude_1ga09f47cfa563252a1add4662284350c07" prot="public" static="no">
        <name>DAC_LFSRUnmask_Bits1_0</name>
        <initializer>((uint32_t)0x00000100)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Unmask DAC channel LFSR bit[1:0] for noise wave generation </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" line="128" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" bodystart="132" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___d_a_c__lfsrunmask__triangleamplitude_1ga60b800857b7e33d9c0be2846fc56849f" prot="public" static="no">
        <name>DAC_LFSRUnmask_Bits2_0</name>
        <initializer>((uint32_t)0x00000200)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Unmask DAC channel LFSR bit[2:0] for noise wave generation </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" line="129" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" bodystart="133" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___d_a_c__lfsrunmask__triangleamplitude_1gafe219362b3a48d8678a65ef38cb45532" prot="public" static="no">
        <name>DAC_LFSRUnmask_Bits3_0</name>
        <initializer>((uint32_t)0x00000300)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Unmask DAC channel LFSR bit[3:0] for noise wave generation </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" line="130" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" bodystart="134" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___d_a_c__lfsrunmask__triangleamplitude_1ga2543d802e19d592a26c8231be663cdac" prot="public" static="no">
        <name>DAC_LFSRUnmask_Bits4_0</name>
        <initializer>((uint32_t)0x00000400)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Unmask DAC channel LFSR bit[4:0] for noise wave generation </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" line="131" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" bodystart="135" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___d_a_c__lfsrunmask__triangleamplitude_1ga71a01660d410823bfe76a603080dc125" prot="public" static="no">
        <name>DAC_LFSRUnmask_Bits5_0</name>
        <initializer>((uint32_t)0x00000500)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Unmask DAC channel LFSR bit[5:0] for noise wave generation </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" line="132" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" bodystart="136" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___d_a_c__lfsrunmask__triangleamplitude_1ga48fe2d3f4274d6bf28e446ca0001ed5d" prot="public" static="no">
        <name>DAC_LFSRUnmask_Bits6_0</name>
        <initializer>((uint32_t)0x00000600)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Unmask DAC channel LFSR bit[6:0] for noise wave generation </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" line="133" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" bodystart="137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___d_a_c__lfsrunmask__triangleamplitude_1gaf0a93c1ee1e13776fae7558b36243431" prot="public" static="no">
        <name>DAC_LFSRUnmask_Bits7_0</name>
        <initializer>((uint32_t)0x00000700)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Unmask DAC channel LFSR bit[7:0] for noise wave generation </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" line="134" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" bodystart="138" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___d_a_c__lfsrunmask__triangleamplitude_1ga4f56965841d9d91ca5b6de43ee589598" prot="public" static="no">
        <name>DAC_LFSRUnmask_Bits8_0</name>
        <initializer>((uint32_t)0x00000800)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Unmask DAC channel LFSR bit[8:0] for noise wave generation </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" line="135" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" bodystart="139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___d_a_c__lfsrunmask__triangleamplitude_1gaf7f4540d9ec6efe074e1e4485f9a347a" prot="public" static="no">
        <name>DAC_LFSRUnmask_Bits9_0</name>
        <initializer>((uint32_t)0x00000900)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Unmask DAC channel LFSR bit[9:0] for noise wave generation </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" line="136" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" bodystart="140" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___d_a_c__lfsrunmask__triangleamplitude_1ga7670f0e10f062571d0e56027ef653228" prot="public" static="no">
        <name>DAC_LFSRUnmask_Bits10_0</name>
        <initializer>((uint32_t)0x00000A00)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Unmask DAC channel LFSR bit[10:0] for noise wave generation </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" line="137" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" bodystart="141" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___d_a_c__lfsrunmask__triangleamplitude_1gaeb9b5992b771f9a14587eeda58227831" prot="public" static="no">
        <name>DAC_LFSRUnmask_Bits11_0</name>
        <initializer>((uint32_t)0x00000B00)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Unmask DAC channel LFSR bit[11:0] for noise wave generation </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" line="138" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" bodystart="142" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___d_a_c__lfsrunmask__triangleamplitude_1ga49b1eddf4e6371b4be8751162dc94ac4" prot="public" static="no">
        <name>DAC_TriangleAmplitude_1</name>
        <initializer>((uint32_t)0x00000000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Select max triangle amplitude of 1 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" line="139" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" bodystart="143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___d_a_c__lfsrunmask__triangleamplitude_1ga9798d68c3bbf0a57306bf2f962697377" prot="public" static="no">
        <name>DAC_TriangleAmplitude_3</name>
        <initializer>((uint32_t)0x00000100)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Select max triangle amplitude of 3 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" line="140" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" bodystart="144" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___d_a_c__lfsrunmask__triangleamplitude_1gad3f31de1277836df1109576a53c47e87" prot="public" static="no">
        <name>DAC_TriangleAmplitude_7</name>
        <initializer>((uint32_t)0x00000200)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Select max triangle amplitude of 7 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" line="141" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" bodystart="145" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___d_a_c__lfsrunmask__triangleamplitude_1ga42653712ce783d33ecb2f3e97e9c2ece" prot="public" static="no">
        <name>DAC_TriangleAmplitude_15</name>
        <initializer>((uint32_t)0x00000300)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Select max triangle amplitude of 15 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" line="142" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" bodystart="146" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___d_a_c__lfsrunmask__triangleamplitude_1ga10b15745b749c62a56bd3d7bd5a27e1b" prot="public" static="no">
        <name>DAC_TriangleAmplitude_31</name>
        <initializer>((uint32_t)0x00000400)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Select max triangle amplitude of 31 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" line="143" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" bodystart="147" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___d_a_c__lfsrunmask__triangleamplitude_1gaaae92dae9c4da55e29c645396825e36b" prot="public" static="no">
        <name>DAC_TriangleAmplitude_63</name>
        <initializer>((uint32_t)0x00000500)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Select max triangle amplitude of 63 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" line="144" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" bodystart="148" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___d_a_c__lfsrunmask__triangleamplitude_1gaacec0af3f69db46f8984be3af9ecadfb" prot="public" static="no">
        <name>DAC_TriangleAmplitude_127</name>
        <initializer>((uint32_t)0x00000600)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Select max triangle amplitude of 127 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" line="145" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" bodystart="149" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___d_a_c__lfsrunmask__triangleamplitude_1gadb404422c86a7b92d78e6d9617e8ce4d" prot="public" static="no">
        <name>DAC_TriangleAmplitude_255</name>
        <initializer>((uint32_t)0x00000700)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Select max triangle amplitude of 255 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" line="146" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" bodystart="150" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___d_a_c__lfsrunmask__triangleamplitude_1ga565b0c97bbdf152756617d491bf8ef85" prot="public" static="no">
        <name>DAC_TriangleAmplitude_511</name>
        <initializer>((uint32_t)0x00000800)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Select max triangle amplitude of 511 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" line="147" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" bodystart="151" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___d_a_c__lfsrunmask__triangleamplitude_1ga7d573b0cebb1b939bd83367effb93d89" prot="public" static="no">
        <name>DAC_TriangleAmplitude_1023</name>
        <initializer>((uint32_t)0x00000900)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Select max triangle amplitude of 1023 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" line="148" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" bodystart="152" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___d_a_c__lfsrunmask__triangleamplitude_1gad33d28d7fcc09d84500ea9b6e6c5feed" prot="public" static="no">
        <name>DAC_TriangleAmplitude_2047</name>
        <initializer>((uint32_t)0x00000A00)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Select max triangle amplitude of 2047 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" line="149" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" bodystart="153" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___d_a_c__lfsrunmask__triangleamplitude_1ga3ce69f5a63a2464dc4b5f73cb6fe72f5" prot="public" static="no">
        <name>DAC_TriangleAmplitude_4095</name>
        <initializer>((uint32_t)0x00000B00)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Select max triangle amplitude of 4095 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" line="150" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" bodystart="154" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___d_a_c__lfsrunmask__triangleamplitude_1ga20f7c3c43f917f14593f0c478c2412e1" prot="public" static="no">
        <name>IS_DAC_LFSR_UNMASK_TRIANGLE_AMPLITUDE</name>
        <param><defname>VALUE</defname></param>
        <initializer>(((VALUE) == <ref refid="group___d_a_c__lfsrunmask__triangleamplitude_1ga60794fd5092a332cfa82e1cee13945fc" kindref="member">DAC_LFSRUnmask_Bit0</ref>) || \
                                                      ((VALUE) == <ref refid="group___d_a_c__lfsrunmask__triangleamplitude_1ga09f47cfa563252a1add4662284350c07" kindref="member">DAC_LFSRUnmask_Bits1_0</ref>) || \
                                                      ((VALUE) == <ref refid="group___d_a_c__lfsrunmask__triangleamplitude_1ga60b800857b7e33d9c0be2846fc56849f" kindref="member">DAC_LFSRUnmask_Bits2_0</ref>) || \
                                                      ((VALUE) == <ref refid="group___d_a_c__lfsrunmask__triangleamplitude_1gafe219362b3a48d8678a65ef38cb45532" kindref="member">DAC_LFSRUnmask_Bits3_0</ref>) || \
                                                      ((VALUE) == <ref refid="group___d_a_c__lfsrunmask__triangleamplitude_1ga2543d802e19d592a26c8231be663cdac" kindref="member">DAC_LFSRUnmask_Bits4_0</ref>) || \
                                                      ((VALUE) == <ref refid="group___d_a_c__lfsrunmask__triangleamplitude_1ga71a01660d410823bfe76a603080dc125" kindref="member">DAC_LFSRUnmask_Bits5_0</ref>) || \
                                                      ((VALUE) == <ref refid="group___d_a_c__lfsrunmask__triangleamplitude_1ga48fe2d3f4274d6bf28e446ca0001ed5d" kindref="member">DAC_LFSRUnmask_Bits6_0</ref>) || \
                                                      ((VALUE) == <ref refid="group___d_a_c__lfsrunmask__triangleamplitude_1gaf0a93c1ee1e13776fae7558b36243431" kindref="member">DAC_LFSRUnmask_Bits7_0</ref>) || \
                                                      ((VALUE) == <ref refid="group___d_a_c__lfsrunmask__triangleamplitude_1ga4f56965841d9d91ca5b6de43ee589598" kindref="member">DAC_LFSRUnmask_Bits8_0</ref>) || \
                                                      ((VALUE) == <ref refid="group___d_a_c__lfsrunmask__triangleamplitude_1gaf7f4540d9ec6efe074e1e4485f9a347a" kindref="member">DAC_LFSRUnmask_Bits9_0</ref>) || \
                                                      ((VALUE) == <ref refid="group___d_a_c__lfsrunmask__triangleamplitude_1ga7670f0e10f062571d0e56027ef653228" kindref="member">DAC_LFSRUnmask_Bits10_0</ref>) || \
                                                      ((VALUE) == <ref refid="group___d_a_c__lfsrunmask__triangleamplitude_1gaeb9b5992b771f9a14587eeda58227831" kindref="member">DAC_LFSRUnmask_Bits11_0</ref>) || \
                                                      ((VALUE) == <ref refid="group___d_a_c__lfsrunmask__triangleamplitude_1ga49b1eddf4e6371b4be8751162dc94ac4" kindref="member">DAC_TriangleAmplitude_1</ref>) || \
                                                      ((VALUE) == <ref refid="group___d_a_c__lfsrunmask__triangleamplitude_1ga9798d68c3bbf0a57306bf2f962697377" kindref="member">DAC_TriangleAmplitude_3</ref>) || \
                                                      ((VALUE) == <ref refid="group___d_a_c__lfsrunmask__triangleamplitude_1gad3f31de1277836df1109576a53c47e87" kindref="member">DAC_TriangleAmplitude_7</ref>) || \
                                                      ((VALUE) == <ref refid="group___d_a_c__lfsrunmask__triangleamplitude_1ga42653712ce783d33ecb2f3e97e9c2ece" kindref="member">DAC_TriangleAmplitude_15</ref>) || \
                                                      ((VALUE) == <ref refid="group___d_a_c__lfsrunmask__triangleamplitude_1ga10b15745b749c62a56bd3d7bd5a27e1b" kindref="member">DAC_TriangleAmplitude_31</ref>) || \
                                                      ((VALUE) == <ref refid="group___d_a_c__lfsrunmask__triangleamplitude_1gaaae92dae9c4da55e29c645396825e36b" kindref="member">DAC_TriangleAmplitude_63</ref>) || \
                                                      ((VALUE) == <ref refid="group___d_a_c__lfsrunmask__triangleamplitude_1gaacec0af3f69db46f8984be3af9ecadfb" kindref="member">DAC_TriangleAmplitude_127</ref>) || \
                                                      ((VALUE) == <ref refid="group___d_a_c__lfsrunmask__triangleamplitude_1gadb404422c86a7b92d78e6d9617e8ce4d" kindref="member">DAC_TriangleAmplitude_255</ref>) || \
                                                      ((VALUE) == <ref refid="group___d_a_c__lfsrunmask__triangleamplitude_1ga565b0c97bbdf152756617d491bf8ef85" kindref="member">DAC_TriangleAmplitude_511</ref>) || \
                                                      ((VALUE) == <ref refid="group___d_a_c__lfsrunmask__triangleamplitude_1ga7d573b0cebb1b939bd83367effb93d89" kindref="member">DAC_TriangleAmplitude_1023</ref>) || \
                                                      ((VALUE) == <ref refid="group___d_a_c__lfsrunmask__triangleamplitude_1gad33d28d7fcc09d84500ea9b6e6c5feed" kindref="member">DAC_TriangleAmplitude_2047</ref>) || \
                                                      ((VALUE) == <ref refid="group___d_a_c__lfsrunmask__triangleamplitude_1ga3ce69f5a63a2464dc4b5f73cb6fe72f5" kindref="member">DAC_TriangleAmplitude_4095</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" line="152" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" bodystart="156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___d_a_c__output__buffer_1gab3f92803a8b6bc5fb3e4859908b5161f" prot="public" static="no">
        <name>DAC_OutputBuffer_Enable</name>
        <initializer>((uint32_t)0x00000000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" line="184" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" bodystart="188" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___d_a_c__output__buffer_1gad41f919d7141398cfdedf8218ce64450" prot="public" static="no">
        <name>DAC_OutputBuffer_Disable</name>
        <initializer>((uint32_t)0x00000002)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" line="185" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" bodystart="189" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___d_a_c__output__buffer_1gaa5a56816d641129fb62d11133c9dcccd" prot="public" static="no">
        <name>IS_DAC_OUTPUT_BUFFER_STATE</name>
        <param><defname>STATE</defname></param>
        <initializer>(((STATE) == <ref refid="group___d_a_c__output__buffer_1gab3f92803a8b6bc5fb3e4859908b5161f" kindref="member">DAC_OutputBuffer_Enable</ref>) || \
                                           ((STATE) == <ref refid="group___d_a_c__output__buffer_1gad41f919d7141398cfdedf8218ce64450" kindref="member">DAC_OutputBuffer_Disable</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" line="186" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" bodystart="190" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___d_a_c___channel__selection_1gacf6585474ed2a302b69a3725daa91555" prot="public" static="no">
        <name>DAC_Channel_1</name>
        <initializer>((uint32_t)0x00000000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" line="196" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" bodystart="200" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___d_a_c___channel__selection_1ga0e9b0096866bb06e8a82b3e4e66943bb" prot="public" static="no">
        <name>DAC_Channel_2</name>
        <initializer>((uint32_t)0x00000010)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" line="197" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" bodystart="201" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___d_a_c___channel__selection_1gafb2b9bdaccb3a5e3396925d7cba02cc3" prot="public" static="no">
        <name>IS_DAC_CHANNEL</name>
        <param><defname>CHANNEL</defname></param>
        <initializer>(((CHANNEL) == <ref refid="group___d_a_c___channel__selection_1gacf6585474ed2a302b69a3725daa91555" kindref="member">DAC_Channel_1</ref>) || \
                                 ((CHANNEL) == <ref refid="group___d_a_c___channel__selection_1ga0e9b0096866bb06e8a82b3e4e66943bb" kindref="member">DAC_Channel_2</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" line="198" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" bodystart="202" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___d_a_c__data__alignment_1ga0f2a6fc71aaf90a27b0caf1bd06e73f2" prot="public" static="no">
        <name>DAC_Align_12b_R</name>
        <initializer>((uint32_t)0x00000000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" line="208" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" bodystart="212" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___d_a_c__data__alignment_1gaf3a46d37092eac0d4c9c1039e68208d4" prot="public" static="no">
        <name>DAC_Align_12b_L</name>
        <initializer>((uint32_t)0x00000004)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" line="209" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" bodystart="213" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___d_a_c__data__alignment_1gaa633fbcf85e97e12c4894eaed530dd8f" prot="public" static="no">
        <name>DAC_Align_8b_R</name>
        <initializer>((uint32_t)0x00000008)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" line="210" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" bodystart="214" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___d_a_c__data__alignment_1ga7779c36606827a6a2c4423414a441bde" prot="public" static="no">
        <name>IS_DAC_ALIGN</name>
        <param><defname>ALIGN</defname></param>
        <initializer>(((ALIGN) == <ref refid="group___d_a_c__data__alignment_1ga0f2a6fc71aaf90a27b0caf1bd06e73f2" kindref="member">DAC_Align_12b_R</ref>) || \
                             ((ALIGN) == <ref refid="group___d_a_c__data__alignment_1gaf3a46d37092eac0d4c9c1039e68208d4" kindref="member">DAC_Align_12b_L</ref>) || \
                             ((ALIGN) == <ref refid="group___d_a_c__data__alignment_1gaa633fbcf85e97e12c4894eaed530dd8f" kindref="member">DAC_Align_8b_R</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" line="211" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" bodystart="215" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___d_a_c__wave__generation_1ga09c5ee68f8e726b1c039df1f6e195965" prot="public" static="no">
        <name>DAC_Wave_Noise</name>
        <initializer>((uint32_t)0x00000040)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" line="222" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" bodystart="226" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___d_a_c__wave__generation_1ga95a1566e1728e1e345e8f3b50629a075" prot="public" static="no">
        <name>DAC_Wave_Triangle</name>
        <initializer>((uint32_t)0x00000080)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" line="223" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" bodystart="227" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___d_a_c__wave__generation_1ga45c25065fb713820f6dbae0009376e1c" prot="public" static="no">
        <name>IS_DAC_WAVE</name>
        <param><defname>WAVE</defname></param>
        <initializer>(((WAVE) == <ref refid="group___d_a_c__wave__generation_1ga09c5ee68f8e726b1c039df1f6e195965" kindref="member">DAC_Wave_Noise</ref>) || \
                           ((WAVE) == <ref refid="group___d_a_c__wave__generation_1ga95a1566e1728e1e345e8f3b50629a075" kindref="member">DAC_Wave_Triangle</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" line="224" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" bodystart="228" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___d_a_c__data_1ga903e28d4971e172b37c1c2fc17c2a884" prot="public" static="no">
        <name>IS_DAC_DATA</name>
        <param><defname>DATA</defname></param>
        <initializer>((DATA) &lt;= 0xFFF0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" line="234" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" bodystart="238" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group___d_a_c___exported___functions_1ga1fae225204e1e049d6795319e99ba8bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DAC_DeInit</definition>
        <argsstring>(void)</argsstring>
        <name>DAC_DeInit</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Deinitializes the DAC peripheral registers to their default reset values. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" line="282" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_dac.c" bodystart="98" bodyend="104"/>
        <references refid="group___r_c_c___exported___functions_1gab197ae4369c10b92640a733b40ed2801" compoundref="stm32f10x__rcc_8c" startline="1216" endline="1229">RCC_APB1PeriphResetCmd</references>
        <references refid="group___a_p_b1__peripheral_1ga8d019a727701634822c19371b6aaabb5" compoundref="stm32f10x__rcc_8h" startline="551">RCC_APB1Periph_DAC</references>
        <references refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1a7d46875fa3ebd2c34d2756950eda83bf" compoundref="stm32f10x_8h" startline="521">ENABLE</references>
        <references refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1ad3a9df141be0ccf10389b640f492b26d" compoundref="stm32f10x_8h" startline="521">DISABLE</references>
      </memberdef>
      <memberdef kind="function" id="group___d_a_c___exported___functions_1ga7c59850468ed4bf0659663fe495441da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DAC_Init</definition>
        <argsstring>(uint32_t DAC_Channel, DAC_InitTypeDef *DAC_InitStruct)</argsstring>
        <name>DAC_Init</name>
        <param>
          <type>uint32_t</type>
          <declname>DAC_Channel</declname>
        </param>
        <param>
          <type><ref refid="struct_d_a_c___init_type_def" kindref="compound">DAC_InitTypeDef</ref> *</type>
          <declname>DAC_InitStruct</declname>
        </param>
        <briefdescription>
<para>Initializes the DAC peripheral according to the specified parameters in the DAC_InitStruct. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>DAC_Channel</parametername>
</parameternamelist>
<parameterdescription>
<para>the selected DAC channel. This parameter can be one of the following values: <itemizedlist>
<listitem><para>DAC_Channel_1: DAC Channel1 selected </para></listitem>
<listitem><para>DAC_Channel_2: DAC Channel2 selected </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>DAC_InitStruct</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a <ref refid="struct_d_a_c___init_type_def" kindref="compound">DAC_InitTypeDef</ref> structure that contains the configuration information for the specified DAC channel. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" line="283" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_dac.c" bodystart="117" bodyend="142"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___d_a_c__trigger__selection_1ga4409b79639e6ae3b1f0ed61a33c810a3" compoundref="stm32f10x__dac_8h" startline="99">IS_DAC_TRIGGER</references>
        <references refid="struct_d_a_c___init_type_def_1a7b26ebaeb51a0157a781f7de8ba779e5" compoundref="stm32f10x__dac_8h" startline="52">DAC_InitTypeDef::DAC_Trigger</references>
        <references refid="group___d_a_c__wave__generation_1ga50fb2dd12305cd7bd0b738a1f6388d3c" compoundref="stm32f10x__dac_8h" startline="120">IS_DAC_GENERATE_WAVE</references>
        <references refid="struct_d_a_c___init_type_def_1a6753e78ddd2dc8273444ba01a272d63a" compoundref="stm32f10x__dac_8h" startline="55">DAC_InitTypeDef::DAC_WaveGeneration</references>
        <references refid="group___d_a_c__lfsrunmask__triangleamplitude_1ga20f7c3c43f917f14593f0c478c2412e1" compoundref="stm32f10x__dac_8h" startline="156">IS_DAC_LFSR_UNMASK_TRIANGLE_AMPLITUDE</references>
        <references refid="struct_d_a_c___init_type_def_1a27ed27a544d50781b20d59cc55e6cef8" compoundref="stm32f10x__dac_8h" startline="59">DAC_InitTypeDef::DAC_LFSRUnmask_TriangleAmplitude</references>
        <references refid="group___d_a_c__output__buffer_1gaa5a56816d641129fb62d11133c9dcccd" compoundref="stm32f10x__dac_8h" startline="190">IS_DAC_OUTPUT_BUFFER_STATE</references>
        <references refid="struct_d_a_c___init_type_def_1ad3e9e01486443e99f19e65a446b03ca6" compoundref="stm32f10x__dac_8h" startline="63">DAC_InitTypeDef::DAC_OutputBuffer</references>
        <references refid="group___peripheral__declaration_1ga4aa2a4ab86ce00c23035e5cee2e7fc7e" compoundref="stm32f10x_8h" startline="1404">DAC</references>
        <references refid="group___d_a_c___private___defines_1ga8a5812a1d5ced986bb997a4bb7ae697d" compoundref="stm32f10x__dac_8c" startline="48">CR_CLEAR_MASK</references>
      </memberdef>
      <memberdef kind="function" id="group___d_a_c___exported___functions_1gadfc270974d54cb5fa5f92556015c4046" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DAC_StructInit</definition>
        <argsstring>(DAC_InitTypeDef *DAC_InitStruct)</argsstring>
        <name>DAC_StructInit</name>
        <param>
          <type><ref refid="struct_d_a_c___init_type_def" kindref="compound">DAC_InitTypeDef</ref> *</type>
          <declname>DAC_InitStruct</declname>
        </param>
        <briefdescription>
<para>Fills each DAC_InitStruct member with its default value. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>DAC_InitStruct</parametername>
</parameternamelist>
<parameterdescription>
<para>: pointer to a <ref refid="struct_d_a_c___init_type_def" kindref="compound">DAC_InitTypeDef</ref> structure which will be initialized. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" line="284" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_dac.c" bodystart="150" bodyend="161"/>
        <references refid="struct_d_a_c___init_type_def_1a7b26ebaeb51a0157a781f7de8ba779e5" compoundref="stm32f10x__dac_8h" startline="52">DAC_InitTypeDef::DAC_Trigger</references>
        <references refid="group___d_a_c__trigger__selection_1ga7849138e043267668d755390d923e4ba" compoundref="stm32f10x__dac_8h" startline="79">DAC_Trigger_None</references>
        <references refid="struct_d_a_c___init_type_def_1a6753e78ddd2dc8273444ba01a272d63a" compoundref="stm32f10x__dac_8h" startline="55">DAC_InitTypeDef::DAC_WaveGeneration</references>
        <references refid="group___d_a_c__wave__generation_1gaabbcd575d6106267f6b65ce988158f29" compoundref="stm32f10x__dac_8h" startline="117">DAC_WaveGeneration_None</references>
        <references refid="struct_d_a_c___init_type_def_1a27ed27a544d50781b20d59cc55e6cef8" compoundref="stm32f10x__dac_8h" startline="59">DAC_InitTypeDef::DAC_LFSRUnmask_TriangleAmplitude</references>
        <references refid="group___d_a_c__lfsrunmask__triangleamplitude_1ga60794fd5092a332cfa82e1cee13945fc" compoundref="stm32f10x__dac_8h" startline="131">DAC_LFSRUnmask_Bit0</references>
        <references refid="struct_d_a_c___init_type_def_1ad3e9e01486443e99f19e65a446b03ca6" compoundref="stm32f10x__dac_8h" startline="63">DAC_InitTypeDef::DAC_OutputBuffer</references>
        <references refid="group___d_a_c__output__buffer_1gab3f92803a8b6bc5fb3e4859908b5161f" compoundref="stm32f10x__dac_8h" startline="188">DAC_OutputBuffer_Enable</references>
      </memberdef>
      <memberdef kind="function" id="group___d_a_c___exported___functions_1ga323e61530d7fa9396c3bce9edb61f733" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DAC_Cmd</definition>
        <argsstring>(uint32_t DAC_Channel, FunctionalState NewState)</argsstring>
        <name>DAC_Cmd</name>
        <param>
          <type>uint32_t</type>
          <declname>DAC_Channel</declname>
        </param>
        <param>
          <type><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref></type>
          <declname>NewState</declname>
        </param>
        <briefdescription>
<para>Enables or disables the specified DAC channel. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>DAC_Channel</parametername>
</parameternamelist>
<parameterdescription>
<para>the selected DAC channel. This parameter can be one of the following values: <itemizedlist>
<listitem><para>DAC_Channel_1: DAC Channel1 selected </para></listitem>
<listitem><para>DAC_Channel_2: DAC Channel2 selected </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NewState</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of the DAC channel. This parameter can be: ENABLE or DISABLE. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" line="285" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_dac.c" bodystart="173" bodyend="188"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___d_a_c___channel__selection_1gafb2b9bdaccb3a5e3396925d7cba02cc3" compoundref="stm32f10x__dac_8h" startline="202">IS_DAC_CHANNEL</references>
        <references refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" compoundref="stm32f10x_8h" startline="522">IS_FUNCTIONAL_STATE</references>
        <references refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1ad3a9df141be0ccf10389b640f492b26d" compoundref="stm32f10x_8h" startline="521">DISABLE</references>
        <references refid="group___peripheral__declaration_1ga4aa2a4ab86ce00c23035e5cee2e7fc7e" compoundref="stm32f10x_8h" startline="1404">DAC</references>
        <references refid="group___peripheral___registers___bits___definition_1gabd8cedbb3dda03d56ac0ba92d2d9cefd" compoundref="stm32f10x_8h" startline="4053">DAC_CR_EN1</references>
      </memberdef>
      <memberdef kind="function" id="group___d_a_c___exported___functions_1ga194cba38f60ace11658824f0250121f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DAC_DMACmd</definition>
        <argsstring>(uint32_t DAC_Channel, FunctionalState NewState)</argsstring>
        <name>DAC_DMACmd</name>
        <param>
          <type>uint32_t</type>
          <declname>DAC_Channel</declname>
        </param>
        <param>
          <type><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref></type>
          <declname>NewState</declname>
        </param>
        <briefdescription>
<para>Enables or disables the specified DAC channel DMA request. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>DAC_Channel</parametername>
</parameternamelist>
<parameterdescription>
<para>the selected DAC channel. This parameter can be one of the following values: <itemizedlist>
<listitem><para>DAC_Channel_1: DAC Channel1 selected </para></listitem>
<listitem><para>DAC_Channel_2: DAC Channel2 selected </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NewState</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of the selected DAC channel DMA request. This parameter can be: ENABLE or DISABLE. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" line="289" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_dac.c" bodystart="233" bodyend="248"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___d_a_c___channel__selection_1gafb2b9bdaccb3a5e3396925d7cba02cc3" compoundref="stm32f10x__dac_8h" startline="202">IS_DAC_CHANNEL</references>
        <references refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" compoundref="stm32f10x_8h" startline="522">IS_FUNCTIONAL_STATE</references>
        <references refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1ad3a9df141be0ccf10389b640f492b26d" compoundref="stm32f10x_8h" startline="521">DISABLE</references>
        <references refid="group___peripheral__declaration_1ga4aa2a4ab86ce00c23035e5cee2e7fc7e" compoundref="stm32f10x_8h" startline="1404">DAC</references>
        <references refid="group___peripheral___registers___bits___definition_1ga995c19d8c8de9ee09057ec6151154e17" compoundref="stm32f10x_8h" startline="4072">DAC_CR_DMAEN1</references>
      </memberdef>
      <memberdef kind="function" id="group___d_a_c___exported___functions_1ga46f9f7f6b9520a86e300fe966afe5fb3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DAC_SoftwareTriggerCmd</definition>
        <argsstring>(uint32_t DAC_Channel, FunctionalState NewState)</argsstring>
        <name>DAC_SoftwareTriggerCmd</name>
        <param>
          <type>uint32_t</type>
          <declname>DAC_Channel</declname>
        </param>
        <param>
          <type><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref></type>
          <declname>NewState</declname>
        </param>
        <briefdescription>
<para>Enables or disables the selected DAC channel software trigger. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>DAC_Channel</parametername>
</parameternamelist>
<parameterdescription>
<para>the selected DAC channel. This parameter can be one of the following values: <itemizedlist>
<listitem><para>DAC_Channel_1: DAC Channel1 selected </para></listitem>
<listitem><para>DAC_Channel_2: DAC Channel2 selected </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NewState</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of the selected DAC channel software trigger. This parameter can be: ENABLE or DISABLE. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" line="290" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_dac.c" bodystart="260" bodyend="275"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___d_a_c___channel__selection_1gafb2b9bdaccb3a5e3396925d7cba02cc3" compoundref="stm32f10x__dac_8h" startline="202">IS_DAC_CHANNEL</references>
        <references refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" compoundref="stm32f10x_8h" startline="522">IS_FUNCTIONAL_STATE</references>
        <references refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1ad3a9df141be0ccf10389b640f492b26d" compoundref="stm32f10x_8h" startline="521">DISABLE</references>
        <references refid="group___peripheral__declaration_1ga4aa2a4ab86ce00c23035e5cee2e7fc7e" compoundref="stm32f10x_8h" startline="1404">DAC</references>
        <references refid="group___peripheral___registers___bits___definition_1ga970ef02dffaceb35ff1dd7aceb67acdd" compoundref="stm32f10x_8h" startline="4095">DAC_SWTRIGR_SWTRIG1</references>
      </memberdef>
      <memberdef kind="function" id="group___d_a_c___exported___functions_1gab4d3b364a6b184dcd65f3b294ebf56dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DAC_DualSoftwareTriggerCmd</definition>
        <argsstring>(FunctionalState NewState)</argsstring>
        <name>DAC_DualSoftwareTriggerCmd</name>
        <param>
          <type><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref></type>
          <declname>NewState</declname>
        </param>
        <briefdescription>
<para>Enables or disables simultaneously the two DAC channels software triggers. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>NewState</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of the DAC channels software triggers. This parameter can be: ENABLE or DISABLE. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" line="291" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_dac.c" bodystart="284" bodyend="298"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" compoundref="stm32f10x_8h" startline="522">IS_FUNCTIONAL_STATE</references>
        <references refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1ad3a9df141be0ccf10389b640f492b26d" compoundref="stm32f10x_8h" startline="521">DISABLE</references>
        <references refid="group___peripheral__declaration_1ga4aa2a4ab86ce00c23035e5cee2e7fc7e" compoundref="stm32f10x_8h" startline="1404">DAC</references>
        <references refid="group___d_a_c___private___defines_1ga6401668f65168b2b689b49155f380bdd" compoundref="stm32f10x__dac_8c" startline="51">DUAL_SWTRIG_SET</references>
        <references refid="group___d_a_c___private___defines_1gacd3ce00f8b25892532af267f26932ed7" compoundref="stm32f10x__dac_8c" startline="52">DUAL_SWTRIG_RESET</references>
      </memberdef>
      <memberdef kind="function" id="group___d_a_c___exported___functions_1gabd51ae6880821d4dcd923969ec19a19e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DAC_WaveGenerationCmd</definition>
        <argsstring>(uint32_t DAC_Channel, uint32_t DAC_Wave, FunctionalState NewState)</argsstring>
        <name>DAC_WaveGenerationCmd</name>
        <param>
          <type>uint32_t</type>
          <declname>DAC_Channel</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>DAC_Wave</declname>
        </param>
        <param>
          <type><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref></type>
          <declname>NewState</declname>
        </param>
        <briefdescription>
<para>Enables or disables the selected DAC channel wave generation. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>DAC_Channel</parametername>
</parameternamelist>
<parameterdescription>
<para>the selected DAC channel. This parameter can be one of the following values: <itemizedlist>
<listitem><para>DAC_Channel_1: DAC Channel1 selected </para></listitem>
<listitem><para>DAC_Channel_2: DAC Channel2 selected </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>DAC_Wave</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the wave type to enable or disable. This parameter can be one of the following values: <itemizedlist>
<listitem><para>DAC_Wave_Noise: noise wave generation </para></listitem>
<listitem><para>DAC_Wave_Triangle: triangle wave generation </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NewState</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of the selected DAC channel wave generation. This parameter can be: ENABLE or DISABLE. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" line="292" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_dac.c" bodystart="314" bodyend="330"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___d_a_c___channel__selection_1gafb2b9bdaccb3a5e3396925d7cba02cc3" compoundref="stm32f10x__dac_8h" startline="202">IS_DAC_CHANNEL</references>
        <references refid="group___d_a_c__wave__generation_1ga45c25065fb713820f6dbae0009376e1c" compoundref="stm32f10x__dac_8h" startline="228">IS_DAC_WAVE</references>
        <references refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" compoundref="stm32f10x_8h" startline="522">IS_FUNCTIONAL_STATE</references>
        <references refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1ad3a9df141be0ccf10389b640f492b26d" compoundref="stm32f10x_8h" startline="521">DISABLE</references>
        <references refid="group___peripheral__declaration_1ga4aa2a4ab86ce00c23035e5cee2e7fc7e" compoundref="stm32f10x_8h" startline="1404">DAC</references>
      </memberdef>
      <memberdef kind="function" id="group___d_a_c___exported___functions_1gad06b4230d2b17d1d13f41dce4c782461" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DAC_SetChannel1Data</definition>
        <argsstring>(uint32_t DAC_Align, uint16_t Data)</argsstring>
        <name>DAC_SetChannel1Data</name>
        <param>
          <type>uint32_t</type>
          <declname>DAC_Align</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>Data</declname>
        </param>
        <briefdescription>
<para>Set the specified data holding register value for DAC channel1. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>DAC_Align</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the data alignment for DAC channel1. This parameter can be one of the following values: <itemizedlist>
<listitem><para>DAC_Align_8b_R: 8bit right data alignment selected </para></listitem>
<listitem><para>DAC_Align_12b_L: 12bit left data alignment selected </para></listitem>
<listitem><para>DAC_Align_12b_R: 12bit right data alignment selected </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Data</parametername>
</parameternamelist>
<parameterdescription>
<para>: Data to be loaded in the selected data holding register. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" line="293" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_dac.c" bodystart="342" bodyend="355"/>
        <references refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" compoundref="core__cm0_8h" startline="221">__IO</references>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___d_a_c__data__alignment_1ga7779c36606827a6a2c4423414a441bde" compoundref="stm32f10x__dac_8h" startline="215">IS_DAC_ALIGN</references>
        <references refid="group___d_a_c__data_1ga903e28d4971e172b37c1c2fc17c2a884" compoundref="stm32f10x__dac_8h" startline="238">IS_DAC_DATA</references>
        <references refid="group___peripheral__memory__map_1gad18d0b914c7f68cecbee1a2d23a67d38" compoundref="stm32f10x_8h" startline="1310">DAC_BASE</references>
        <references refid="group___d_a_c___private___defines_1gaf1305e3b7cfb0f898678baeab6e91cbf" compoundref="stm32f10x__dac_8c" startline="55">DHR12R1_OFFSET</references>
      </memberdef>
      <memberdef kind="function" id="group___d_a_c___exported___functions_1ga44e12006ec186791378d132da8541552" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DAC_SetChannel2Data</definition>
        <argsstring>(uint32_t DAC_Align, uint16_t Data)</argsstring>
        <name>DAC_SetChannel2Data</name>
        <param>
          <type>uint32_t</type>
          <declname>DAC_Align</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>Data</declname>
        </param>
        <briefdescription>
<para>Set the specified data holding register value for DAC channel2. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>DAC_Align</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the data alignment for DAC channel2. This parameter can be one of the following values: <itemizedlist>
<listitem><para>DAC_Align_8b_R: 8bit right data alignment selected </para></listitem>
<listitem><para>DAC_Align_12b_L: 12bit left data alignment selected </para></listitem>
<listitem><para>DAC_Align_12b_R: 12bit right data alignment selected </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Data</parametername>
</parameternamelist>
<parameterdescription>
<para>: Data to be loaded in the selected data holding register. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" line="294" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_dac.c" bodystart="367" bodyend="380"/>
        <references refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" compoundref="core__cm0_8h" startline="221">__IO</references>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___d_a_c__data__alignment_1ga7779c36606827a6a2c4423414a441bde" compoundref="stm32f10x__dac_8h" startline="215">IS_DAC_ALIGN</references>
        <references refid="group___d_a_c__data_1ga903e28d4971e172b37c1c2fc17c2a884" compoundref="stm32f10x__dac_8h" startline="238">IS_DAC_DATA</references>
        <references refid="group___peripheral__memory__map_1gad18d0b914c7f68cecbee1a2d23a67d38" compoundref="stm32f10x_8h" startline="1310">DAC_BASE</references>
        <references refid="group___d_a_c___private___defines_1ga157b0fbccea090637eea09172fdd6a39" compoundref="stm32f10x__dac_8c" startline="56">DHR12R2_OFFSET</references>
      </memberdef>
      <memberdef kind="function" id="group___d_a_c___exported___functions_1ga4ca2cfdf56ab35a23f2517f23d7fbb24" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DAC_SetDualChannelData</definition>
        <argsstring>(uint32_t DAC_Align, uint16_t Data2, uint16_t Data1)</argsstring>
        <name>DAC_SetDualChannelData</name>
        <param>
          <type>uint32_t</type>
          <declname>DAC_Align</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>Data2</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>Data1</declname>
        </param>
        <briefdescription>
<para>Set the specified data holding register value for dual channel DAC. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>DAC_Align</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the data alignment for dual channel DAC. This parameter can be one of the following values: <itemizedlist>
<listitem><para>DAC_Align_8b_R: 8bit right data alignment selected </para></listitem>
<listitem><para>DAC_Align_12b_L: 12bit left data alignment selected </para></listitem>
<listitem><para>DAC_Align_12b_R: 12bit right data alignment selected </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Data2</parametername>
</parameternamelist>
<parameterdescription>
<para>Data for DAC Channel2 to be loaded in the selected data holding register. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Data1</parametername>
</parameternamelist>
<parameterdescription>
<para>Data for DAC Channel1 to be loaded in the selected data holding register. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" line="295" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_dac.c" bodystart="396" bodyend="420"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___d_a_c__data__alignment_1ga7779c36606827a6a2c4423414a441bde" compoundref="stm32f10x__dac_8h" startline="215">IS_DAC_ALIGN</references>
        <references refid="group___d_a_c__data_1ga903e28d4971e172b37c1c2fc17c2a884" compoundref="stm32f10x__dac_8h" startline="238">IS_DAC_DATA</references>
        <references refid="group___d_a_c__data__alignment_1gaa633fbcf85e97e12c4894eaed530dd8f" compoundref="stm32f10x__dac_8h" startline="214">DAC_Align_8b_R</references>
        <references refid="group___peripheral__memory__map_1gad18d0b914c7f68cecbee1a2d23a67d38" compoundref="stm32f10x_8h" startline="1310">DAC_BASE</references>
        <references refid="group___d_a_c___private___defines_1ga2893b0491ec29a95fd061e5e0fa029e3" compoundref="stm32f10x__dac_8c" startline="57">DHR12RD_OFFSET</references>
        <references refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" compoundref="core__cm0_8h" startline="221">__IO</references>
      </memberdef>
      <memberdef kind="function" id="group___d_a_c___exported___functions_1ga51274838de1e5dd012a82d7f44d7a50b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t DAC_GetDataOutputValue</definition>
        <argsstring>(uint32_t DAC_Channel)</argsstring>
        <name>DAC_GetDataOutputValue</name>
        <param>
          <type>uint32_t</type>
          <declname>DAC_Channel</declname>
        </param>
        <briefdescription>
<para>Returns the last data output value of the selected DAC channel. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>DAC_Channel</parametername>
</parameternamelist>
<parameterdescription>
<para>the selected DAC channel. This parameter can be one of the following values: <itemizedlist>
<listitem><para>DAC_Channel_1: DAC Channel1 selected </para></listitem>
<listitem><para>DAC_Channel_2: DAC Channel2 selected </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>selected DAC channel data output value. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" line="296" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_dac.c" bodystart="430" bodyend="442"/>
        <references refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" compoundref="core__cm0_8h" startline="221">__IO</references>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___d_a_c___channel__selection_1gafb2b9bdaccb3a5e3396925d7cba02cc3" compoundref="stm32f10x__dac_8h" startline="202">IS_DAC_CHANNEL</references>
        <references refid="group___peripheral__memory__map_1gad18d0b914c7f68cecbee1a2d23a67d38" compoundref="stm32f10x_8h" startline="1310">DAC_BASE</references>
        <references refid="group___d_a_c___private___defines_1ga051bab7263211bd232d13665339c1745" compoundref="stm32f10x__dac_8c" startline="60">DOR_OFFSET</references>
        <references refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffa589b7d94a3d91d145720e2fed0eb3a05" compoundref="stm32f10x_8h" startline="519">RESET</references>
        <references refid="group___peripheral__declaration_1ga4aa2a4ab86ce00c23035e5cee2e7fc7e" compoundref="stm32f10x_8h" startline="1404">DAC</references>
        <references refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffab44c8101cc294c074709ec1b14211792" compoundref="stm32f10x_8h" startline="519">SET</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This file contains all the functions prototypes for the DAC firmware library. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>MCD Application Team </para></simplesect>
<simplesect kind="version"><para>V3.5.0 </para></simplesect>
<simplesect kind="date"><para>11-March-2011 </para></simplesect>
<simplesect kind="attention"><para></para></simplesect>
THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.</para><para><heading level="2"><center><copy/> COPYRIGHT 2011 STMicroelectronics</center></heading>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="23"><highlight class="comment">/*<sp/>Define<sp/>to<sp/>prevent<sp/>recursive<sp/>inclusion<sp/>-------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__STM32F10x_DAC_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__STM32F10x_DAC_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Includes<sp/>------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="stm32f10x_8h" kindref="compound">stm32f10x.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="struct_d_a_c___init_type_def" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal">{</highlight></codeline>
<codeline lineno="52" refid="struct_d_a_c___init_type_def_1a7b26ebaeb51a0157a781f7de8ba779e5" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="struct_d_a_c___init_type_def_1a7b26ebaeb51a0157a781f7de8ba779e5" kindref="member">DAC_Trigger</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="55" refid="struct_d_a_c___init_type_def_1a6753e78ddd2dc8273444ba01a272d63a" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="struct_d_a_c___init_type_def_1a6753e78ddd2dc8273444ba01a272d63a" kindref="member">DAC_WaveGeneration</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="59" refid="struct_d_a_c___init_type_def_1a27ed27a544d50781b20d59cc55e6cef8" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="struct_d_a_c___init_type_def_1a27ed27a544d50781b20d59cc55e6cef8" kindref="member">DAC_LFSRUnmask_TriangleAmplitude</ref>;<sp/></highlight></codeline>
<codeline lineno="63" refid="struct_d_a_c___init_type_def_1ad3e9e01486443e99f19e65a446b03ca6" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="struct_d_a_c___init_type_def_1ad3e9e01486443e99f19e65a446b03ca6" kindref="member">DAC_OutputBuffer</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="65"><highlight class="normal">}<ref refid="struct_d_a_c___init_type_def" kindref="compound">DAC_InitTypeDef</ref>;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="group___d_a_c__trigger__selection_1ga7849138e043267668d755390d923e4ba" refkind="member"><highlight class="preprocessor">#define<sp/>DAC_Trigger_None<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000000)<sp/></highlight></codeline>
<codeline lineno="81"><highlight class="preprocessor">#define<sp/>DAC_Trigger_T6_TRGO<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000004)<sp/></highlight></codeline>
<codeline lineno="82" refid="group___d_a_c__trigger__selection_1ga083307783678a2f1d3066db57dc84cfe" refkind="member"><highlight class="preprocessor">#define<sp/>DAC_Trigger_T8_TRGO<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x0000000C)<sp/></highlight></codeline>
<codeline lineno="84"><highlight class="preprocessor">#define<sp/>DAC_Trigger_T3_TRGO<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x0000000C)<sp/></highlight></codeline>
<codeline lineno="86" refid="group___d_a_c__trigger__selection_1ga82cbaedc35164c8b9fe0be2faec9b909" refkind="member"><highlight class="preprocessor">#define<sp/>DAC_Trigger_T7_TRGO<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000014)<sp/></highlight></codeline>
<codeline lineno="87"><highlight class="preprocessor">#define<sp/>DAC_Trigger_T5_TRGO<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x0000001C)<sp/></highlight></codeline>
<codeline lineno="88"><highlight class="preprocessor">#define<sp/>DAC_Trigger_T15_TRGO<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x0000001C)<sp/></highlight></codeline>
<codeline lineno="90" refid="group___d_a_c__trigger__selection_1ga35352cebfd1ae8a3d63e374a5d86a85d" refkind="member"><highlight class="preprocessor">#define<sp/>DAC_Trigger_T2_TRGO<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000024)<sp/></highlight></codeline>
<codeline lineno="91" refid="group___d_a_c__trigger__selection_1ga9f738c0c1366a588ac4fa9e060278c70" refkind="member"><highlight class="preprocessor">#define<sp/>DAC_Trigger_T4_TRGO<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x0000002C)<sp/></highlight></codeline>
<codeline lineno="92"><highlight class="preprocessor">#define<sp/>DAC_Trigger_Ext_IT9<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000034)<sp/></highlight></codeline>
<codeline lineno="93"><highlight class="preprocessor">#define<sp/>DAC_Trigger_Software<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x0000003C)<sp/></highlight></codeline>
<codeline lineno="95" refid="group___d_a_c__trigger__selection_1ga58ccb2de3d22d66ee975152f5edb330a" refkind="member"><highlight class="preprocessor">#define<sp/>IS_DAC_TRIGGER(TRIGGER)<sp/>(((TRIGGER)<sp/>==<sp/>DAC_Trigger_None)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="96" refid="group___d_a_c__trigger__selection_1ga67c15b2c26246a2304f9db28e25adcc4" refkind="member"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((TRIGGER)<sp/>==<sp/>DAC_Trigger_T6_TRGO)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="97" refid="group___d_a_c__trigger__selection_1gadef77bb8bbd109232900902402ef637f" refkind="member"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((TRIGGER)<sp/>==<sp/>DAC_Trigger_T8_TRGO)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="98"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((TRIGGER)<sp/>==<sp/>DAC_Trigger_T7_TRGO)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="99" refid="group___d_a_c__trigger__selection_1ga4409b79639e6ae3b1f0ed61a33c810a3" refkind="member"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((TRIGGER)<sp/>==<sp/>DAC_Trigger_T5_TRGO)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="100"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((TRIGGER)<sp/>==<sp/>DAC_Trigger_T2_TRGO)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="101"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((TRIGGER)<sp/>==<sp/>DAC_Trigger_T4_TRGO)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="102"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((TRIGGER)<sp/>==<sp/>DAC_Trigger_Ext_IT9)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="103"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((TRIGGER)<sp/>==<sp/>DAC_Trigger_Software))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="preprocessor">#define<sp/>DAC_WaveGeneration_None<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DAC_WaveGeneration_Noise<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000040)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DAC_WaveGeneration_Triangle<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000080)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_DAC_GENERATE_WAVE(WAVE)<sp/>(((WAVE)<sp/>==<sp/>DAC_WaveGeneration_None)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="117" refid="group___d_a_c__wave__generation_1gaabbcd575d6106267f6b65ce988158f29" refkind="member"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((WAVE)<sp/>==<sp/>DAC_WaveGeneration_Noise)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="118" refid="group___d_a_c__wave__generation_1ga1692990325098cae6f32182c1fa0f61e" refkind="member"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((WAVE)<sp/>==<sp/>DAC_WaveGeneration_Triangle))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119" refid="group___d_a_c__wave__generation_1ga68f1a71011437a5ea6298ab039554714" refkind="member"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="preprocessor">#define<sp/>DAC_LFSRUnmask_Bit0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000000)<sp/></highlight></codeline>
<codeline lineno="128"><highlight class="preprocessor">#define<sp/>DAC_LFSRUnmask_Bits1_0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000100)<sp/></highlight></codeline>
<codeline lineno="129"><highlight class="preprocessor">#define<sp/>DAC_LFSRUnmask_Bits2_0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000200)<sp/></highlight></codeline>
<codeline lineno="130"><highlight class="preprocessor">#define<sp/>DAC_LFSRUnmask_Bits3_0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000300)<sp/></highlight></codeline>
<codeline lineno="131" refid="group___d_a_c__lfsrunmask__triangleamplitude_1ga60794fd5092a332cfa82e1cee13945fc" refkind="member"><highlight class="preprocessor">#define<sp/>DAC_LFSRUnmask_Bits4_0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000400)<sp/></highlight></codeline>
<codeline lineno="132" refid="group___d_a_c__lfsrunmask__triangleamplitude_1ga09f47cfa563252a1add4662284350c07" refkind="member"><highlight class="preprocessor">#define<sp/>DAC_LFSRUnmask_Bits5_0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000500)<sp/></highlight></codeline>
<codeline lineno="133" refid="group___d_a_c__lfsrunmask__triangleamplitude_1ga60b800857b7e33d9c0be2846fc56849f" refkind="member"><highlight class="preprocessor">#define<sp/>DAC_LFSRUnmask_Bits6_0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000600)<sp/></highlight></codeline>
<codeline lineno="134" refid="group___d_a_c__lfsrunmask__triangleamplitude_1gafe219362b3a48d8678a65ef38cb45532" refkind="member"><highlight class="preprocessor">#define<sp/>DAC_LFSRUnmask_Bits7_0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000700)<sp/></highlight></codeline>
<codeline lineno="135" refid="group___d_a_c__lfsrunmask__triangleamplitude_1ga2543d802e19d592a26c8231be663cdac" refkind="member"><highlight class="preprocessor">#define<sp/>DAC_LFSRUnmask_Bits8_0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000800)<sp/></highlight></codeline>
<codeline lineno="136" refid="group___d_a_c__lfsrunmask__triangleamplitude_1ga71a01660d410823bfe76a603080dc125" refkind="member"><highlight class="preprocessor">#define<sp/>DAC_LFSRUnmask_Bits9_0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000900)<sp/></highlight></codeline>
<codeline lineno="137" refid="group___d_a_c__lfsrunmask__triangleamplitude_1ga48fe2d3f4274d6bf28e446ca0001ed5d" refkind="member"><highlight class="preprocessor">#define<sp/>DAC_LFSRUnmask_Bits10_0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000A00)<sp/></highlight></codeline>
<codeline lineno="138" refid="group___d_a_c__lfsrunmask__triangleamplitude_1gaf0a93c1ee1e13776fae7558b36243431" refkind="member"><highlight class="preprocessor">#define<sp/>DAC_LFSRUnmask_Bits11_0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000B00)<sp/></highlight></codeline>
<codeline lineno="139" refid="group___d_a_c__lfsrunmask__triangleamplitude_1ga4f56965841d9d91ca5b6de43ee589598" refkind="member"><highlight class="preprocessor">#define<sp/>DAC_TriangleAmplitude_1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000000)<sp/></highlight></codeline>
<codeline lineno="140" refid="group___d_a_c__lfsrunmask__triangleamplitude_1gaf7f4540d9ec6efe074e1e4485f9a347a" refkind="member"><highlight class="preprocessor">#define<sp/>DAC_TriangleAmplitude_3<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000100)<sp/></highlight></codeline>
<codeline lineno="141" refid="group___d_a_c__lfsrunmask__triangleamplitude_1ga7670f0e10f062571d0e56027ef653228" refkind="member"><highlight class="preprocessor">#define<sp/>DAC_TriangleAmplitude_7<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000200)<sp/></highlight></codeline>
<codeline lineno="142" refid="group___d_a_c__lfsrunmask__triangleamplitude_1gaeb9b5992b771f9a14587eeda58227831" refkind="member"><highlight class="preprocessor">#define<sp/>DAC_TriangleAmplitude_15<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000300)<sp/></highlight></codeline>
<codeline lineno="143" refid="group___d_a_c__lfsrunmask__triangleamplitude_1ga49b1eddf4e6371b4be8751162dc94ac4" refkind="member"><highlight class="preprocessor">#define<sp/>DAC_TriangleAmplitude_31<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000400)<sp/></highlight></codeline>
<codeline lineno="144" refid="group___d_a_c__lfsrunmask__triangleamplitude_1ga9798d68c3bbf0a57306bf2f962697377" refkind="member"><highlight class="preprocessor">#define<sp/>DAC_TriangleAmplitude_63<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000500)<sp/></highlight></codeline>
<codeline lineno="145" refid="group___d_a_c__lfsrunmask__triangleamplitude_1gad3f31de1277836df1109576a53c47e87" refkind="member"><highlight class="preprocessor">#define<sp/>DAC_TriangleAmplitude_127<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000600)<sp/></highlight></codeline>
<codeline lineno="146" refid="group___d_a_c__lfsrunmask__triangleamplitude_1ga42653712ce783d33ecb2f3e97e9c2ece" refkind="member"><highlight class="preprocessor">#define<sp/>DAC_TriangleAmplitude_255<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000700)<sp/></highlight></codeline>
<codeline lineno="147" refid="group___d_a_c__lfsrunmask__triangleamplitude_1ga10b15745b749c62a56bd3d7bd5a27e1b" refkind="member"><highlight class="preprocessor">#define<sp/>DAC_TriangleAmplitude_511<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000800)<sp/></highlight></codeline>
<codeline lineno="148" refid="group___d_a_c__lfsrunmask__triangleamplitude_1gaaae92dae9c4da55e29c645396825e36b" refkind="member"><highlight class="preprocessor">#define<sp/>DAC_TriangleAmplitude_1023<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000900)<sp/></highlight></codeline>
<codeline lineno="149" refid="group___d_a_c__lfsrunmask__triangleamplitude_1gaacec0af3f69db46f8984be3af9ecadfb" refkind="member"><highlight class="preprocessor">#define<sp/>DAC_TriangleAmplitude_2047<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000A00)<sp/></highlight></codeline>
<codeline lineno="150" refid="group___d_a_c__lfsrunmask__triangleamplitude_1gadb404422c86a7b92d78e6d9617e8ce4d" refkind="member"><highlight class="preprocessor">#define<sp/>DAC_TriangleAmplitude_4095<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000B00)<sp/></highlight></codeline>
<codeline lineno="152" refid="group___d_a_c__lfsrunmask__triangleamplitude_1ga7d573b0cebb1b939bd83367effb93d89" refkind="member"><highlight class="preprocessor">#define<sp/>IS_DAC_LFSR_UNMASK_TRIANGLE_AMPLITUDE(VALUE)<sp/>(((VALUE)<sp/>==<sp/>DAC_LFSRUnmask_Bit0)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="153" refid="group___d_a_c__lfsrunmask__triangleamplitude_1gad33d28d7fcc09d84500ea9b6e6c5feed" refkind="member"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((VALUE)<sp/>==<sp/>DAC_LFSRUnmask_Bits1_0)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="154" refid="group___d_a_c__lfsrunmask__triangleamplitude_1ga3ce69f5a63a2464dc4b5f73cb6fe72f5" refkind="member"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((VALUE)<sp/>==<sp/>DAC_LFSRUnmask_Bits2_0)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="155"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((VALUE)<sp/>==<sp/>DAC_LFSRUnmask_Bits3_0)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="156" refid="group___d_a_c__lfsrunmask__triangleamplitude_1ga20f7c3c43f917f14593f0c478c2412e1" refkind="member"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((VALUE)<sp/>==<sp/>DAC_LFSRUnmask_Bits4_0)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="157"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((VALUE)<sp/>==<sp/>DAC_LFSRUnmask_Bits5_0)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="158"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((VALUE)<sp/>==<sp/>DAC_LFSRUnmask_Bits6_0)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="159"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((VALUE)<sp/>==<sp/>DAC_LFSRUnmask_Bits7_0)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="160"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((VALUE)<sp/>==<sp/>DAC_LFSRUnmask_Bits8_0)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="161"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((VALUE)<sp/>==<sp/>DAC_LFSRUnmask_Bits9_0)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="162"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((VALUE)<sp/>==<sp/>DAC_LFSRUnmask_Bits10_0)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="163"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((VALUE)<sp/>==<sp/>DAC_LFSRUnmask_Bits11_0)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="164"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((VALUE)<sp/>==<sp/>DAC_TriangleAmplitude_1)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="165"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((VALUE)<sp/>==<sp/>DAC_TriangleAmplitude_3)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="166"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((VALUE)<sp/>==<sp/>DAC_TriangleAmplitude_7)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="167"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((VALUE)<sp/>==<sp/>DAC_TriangleAmplitude_15)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="168"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((VALUE)<sp/>==<sp/>DAC_TriangleAmplitude_31)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="169"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((VALUE)<sp/>==<sp/>DAC_TriangleAmplitude_63)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="170"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((VALUE)<sp/>==<sp/>DAC_TriangleAmplitude_127)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="171"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((VALUE)<sp/>==<sp/>DAC_TriangleAmplitude_255)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="172"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((VALUE)<sp/>==<sp/>DAC_TriangleAmplitude_511)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="173"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((VALUE)<sp/>==<sp/>DAC_TriangleAmplitude_1023)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="174"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((VALUE)<sp/>==<sp/>DAC_TriangleAmplitude_2047)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="175"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((VALUE)<sp/>==<sp/>DAC_TriangleAmplitude_4095))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="preprocessor">#define<sp/>DAC_OutputBuffer_Enable<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DAC_OutputBuffer_Disable<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000002)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_DAC_OUTPUT_BUFFER_STATE(STATE)<sp/>(((STATE)<sp/>==<sp/>DAC_OutputBuffer_Enable)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="187"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((STATE)<sp/>==<sp/>DAC_OutputBuffer_Disable))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188" refid="group___d_a_c__output__buffer_1gab3f92803a8b6bc5fb3e4859908b5161f" refkind="member"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="preprocessor">#define<sp/>DAC_Channel_1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DAC_Channel_2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000010)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_DAC_CHANNEL(CHANNEL)<sp/>(((CHANNEL)<sp/>==<sp/>DAC_Channel_1)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="199"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((CHANNEL)<sp/>==<sp/>DAC_Channel_2))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200" refid="group___d_a_c___channel__selection_1gacf6585474ed2a302b69a3725daa91555" refkind="member"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="preprocessor">#define<sp/>DAC_Align_12b_R<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DAC_Align_12b_L<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000004)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DAC_Align_8b_R<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000008)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_DAC_ALIGN(ALIGN)<sp/>(((ALIGN)<sp/>==<sp/>DAC_Align_12b_R)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="212" refid="group___d_a_c__data__alignment_1ga0f2a6fc71aaf90a27b0caf1bd06e73f2" refkind="member"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((ALIGN)<sp/>==<sp/>DAC_Align_12b_L)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="213" refid="group___d_a_c__data__alignment_1gaf3a46d37092eac0d4c9c1039e68208d4" refkind="member"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((ALIGN)<sp/>==<sp/>DAC_Align_8b_R))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214" refid="group___d_a_c__data__alignment_1gaa633fbcf85e97e12c4894eaed530dd8f" refkind="member"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="preprocessor">#define<sp/>DAC_Wave_Noise<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000040)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DAC_Wave_Triangle<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000080)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_DAC_WAVE(WAVE)<sp/>(((WAVE)<sp/>==<sp/>DAC_Wave_Noise)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="225"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((WAVE)<sp/>==<sp/>DAC_Wave_Triangle))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226" refid="group___d_a_c__wave__generation_1ga09c5ee68f8e726b1c039df1f6e195965" refkind="member"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="preprocessor">#define<sp/>IS_DAC_DATA(DATA)<sp/>((DATA)<sp/>&lt;=<sp/>0xFFF0)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="238" refid="group___d_a_c__data_1ga903e28d4971e172b37c1c2fc17c2a884" refkind="member"><highlight class="preprocessor">#if<sp/>defined<sp/>(STM32F10X_LD_VL)<sp/>||<sp/>defined<sp/>(STM32F10X_MD_VL)<sp/><sp/>||<sp/>defined<sp/>(STM32F10X_HD_VL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="preprocessor">#define<sp/>DAC_IT_DMAUDR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00002000)<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_DAC_IT(IT)<sp/>(((IT)<sp/>==<sp/>DAC_IT_DMAUDR))<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="preprocessor">#define<sp/>DAC_FLAG_DMAUDR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00002000)<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_DAC_FLAG(FLAG)<sp/>(((FLAG)<sp/>==<sp/>DAC_FLAG_DMAUDR))<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___d_a_c___exported___functions_1ga1fae225204e1e049d6795319e99ba8bc" kindref="member">DAC_DeInit</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___d_a_c___exported___functions_1ga7c59850468ed4bf0659663fe495441da" kindref="member">DAC_Init</ref>(uint32_t<sp/>DAC_Channel,<sp/><ref refid="struct_d_a_c___init_type_def" kindref="compound">DAC_InitTypeDef</ref>*<sp/>DAC_InitStruct);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___d_a_c___exported___functions_1gadfc270974d54cb5fa5f92556015c4046" kindref="member">DAC_StructInit</ref>(<ref refid="struct_d_a_c___init_type_def" kindref="compound">DAC_InitTypeDef</ref>*<sp/>DAC_InitStruct);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___d_a_c___exported___functions_1ga323e61530d7fa9396c3bce9edb61f733" kindref="member">DAC_Cmd</ref>(uint32_t<sp/>DAC_Channel,<sp/><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref><sp/>NewState);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>(STM32F10X_LD_VL)<sp/>||<sp/>defined<sp/>(STM32F10X_MD_VL)<sp/>||<sp/>defined<sp/>(STM32F10X_HD_VL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DAC_ITConfig(uint32_t<sp/>DAC_Channel,<sp/>uint32_t<sp/>DAC_IT,<sp/><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref><sp/>NewState);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___d_a_c___exported___functions_1ga194cba38f60ace11658824f0250121f4" kindref="member">DAC_DMACmd</ref>(uint32_t<sp/>DAC_Channel,<sp/><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref><sp/>NewState);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___d_a_c___exported___functions_1ga46f9f7f6b9520a86e300fe966afe5fb3" kindref="member">DAC_SoftwareTriggerCmd</ref>(uint32_t<sp/>DAC_Channel,<sp/><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref><sp/>NewState);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___d_a_c___exported___functions_1gab4d3b364a6b184dcd65f3b294ebf56dc" kindref="member">DAC_DualSoftwareTriggerCmd</ref>(<ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref><sp/>NewState);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___d_a_c___exported___functions_1gabd51ae6880821d4dcd923969ec19a19e" kindref="member">DAC_WaveGenerationCmd</ref>(uint32_t<sp/>DAC_Channel,<sp/>uint32_t<sp/>DAC_Wave,<sp/><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref><sp/>NewState);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___d_a_c___exported___functions_1gad06b4230d2b17d1d13f41dce4c782461" kindref="member">DAC_SetChannel1Data</ref>(uint32_t<sp/>DAC_Align,<sp/>uint16_t<sp/>Data);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___d_a_c___exported___functions_1ga44e12006ec186791378d132da8541552" kindref="member">DAC_SetChannel2Data</ref>(uint32_t<sp/>DAC_Align,<sp/>uint16_t<sp/>Data);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___d_a_c___exported___functions_1ga4ca2cfdf56ab35a23f2517f23d7fbb24" kindref="member">DAC_SetDualChannelData</ref>(uint32_t<sp/>DAC_Align,<sp/>uint16_t<sp/>Data2,<sp/>uint16_t<sp/>Data1);</highlight></codeline>
<codeline lineno="292"><highlight class="normal">uint16_t<sp/><ref refid="group___d_a_c___exported___functions_1ga51274838de1e5dd012a82d7f44d7a50b" kindref="member">DAC_GetDataOutputValue</ref>(uint32_t<sp/>DAC_Channel);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>(STM32F10X_LD_VL)<sp/>||<sp/>defined<sp/>(STM32F10X_MD_VL)<sp/>||<sp/>defined<sp/>(STM32F10X_HD_VL)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><ref refid="group___exported__types_1ga89136caac2e14c55151f527ac02daaff" kindref="member">FlagStatus</ref><sp/>DAC_GetFlagStatus(uint32_t<sp/>DAC_Channel,<sp/>uint32_t<sp/>DAC_FLAG);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DAC_ClearFlag(uint32_t<sp/>DAC_Channel,<sp/>uint32_t<sp/>DAC_FLAG);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><ref refid="group___exported__types_1gaacbd7ed539db0aacd973a0f6eca34074" kindref="member">ITStatus</ref><sp/>DAC_GetITStatus(uint32_t<sp/>DAC_Channel,<sp/>uint32_t<sp/>DAC_IT);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DAC_ClearITPendingBit(uint32_t<sp/>DAC_Channel,<sp/>uint32_t<sp/>DAC_IT);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal">}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*__STM32F10x_DAC_H<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="comment">/*******************<sp/>(C)<sp/>COPYRIGHT<sp/>2011<sp/>STMicroelectronics<sp/>*****END<sp/>OF<sp/>FILE****/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h"/>
  </compounddef>
</doxygen>
