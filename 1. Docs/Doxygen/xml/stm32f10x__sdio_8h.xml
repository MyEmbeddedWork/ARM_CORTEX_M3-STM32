<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="stm32f10x__sdio_8h" kind="file" language="C++">
    <compoundname>stm32f10x_sdio.h</compoundname>
    <includes refid="stm32f10x_8h" local="yes">stm32f10x.h</includes>
    <includedby refid="stm32f10x__conf_8h" local="yes">C:/Users/anilj/Desktop/cmsis/sorc/include/stm32f10x_conf.h</includedby>
    <includedby refid="stm32f10x__sdio_8c" local="yes">C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c</includedby>
    <incdepgraph>
      <node id="702">
        <label>system_stm32f10x.h</label>
        <link refid="system__stm32f10x_8h"/>
      </node>
      <node id="699">
        <label>stdint.h</label>
      </node>
      <node id="698">
        <label>core_cm3.h</label>
        <link refid="core__cm3_8h"/>
        <childnode refid="699" relation="include">
        </childnode>
        <childnode refid="700" relation="include">
        </childnode>
        <childnode refid="701" relation="include">
        </childnode>
      </node>
      <node id="701">
        <label>core_cmFunc.h</label>
        <link refid="core__cm_func_8h"/>
      </node>
      <node id="700">
        <label>core_cmInstr.h</label>
        <link refid="core__cm_instr_8h"/>
      </node>
      <node id="696">
        <label>C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h</label>
        <link refid="stm32f10x__sdio_8h"/>
        <childnode refid="697" relation="include">
        </childnode>
      </node>
      <node id="697">
        <label>stm32f10x.h</label>
        <link refid="stm32f10x_8h"/>
        <childnode refid="698" relation="include">
        </childnode>
        <childnode refid="702" relation="include">
        </childnode>
        <childnode refid="699" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="704">
        <label>C:/Users/anilj/Desktop/cmsis/sorc/include/stm32f10x_conf.h</label>
        <link refid="stm32f10x__conf_8h"/>
      </node>
      <node id="703">
        <label>C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h</label>
        <link refid="stm32f10x__sdio_8h"/>
        <childnode refid="704" relation="include">
        </childnode>
        <childnode refid="705" relation="include">
        </childnode>
      </node>
      <node id="705">
        <label>C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c</label>
        <link refid="stm32f10x__sdio_8c"/>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_s_d_i_o___init_type_def" prot="public">SDIO_InitTypeDef</innerclass>
    <innerclass refid="struct_s_d_i_o___cmd_init_type_def" prot="public">SDIO_CmdInitTypeDef</innerclass>
    <innerclass refid="struct_s_d_i_o___data_init_type_def" prot="public">SDIO_DataInitTypeDef</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="group___s_d_i_o___clock___edge_1ga6d0f902037762a3048d95303c0037313" prot="public" static="no">
        <name>SDIO_ClockEdge_Rising</name>
        <initializer>((uint32_t)0x00000000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="129" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___clock___edge_1ga7be68024e3e2fe1994def85bc944189b" prot="public" static="no">
        <name>SDIO_ClockEdge_Falling</name>
        <initializer>((uint32_t)0x00002000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="130" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="130" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___clock___edge_1ga63420b10a52e3d82a89a45f20dc41786" prot="public" static="no">
        <name>IS_SDIO_CLOCK_EDGE</name>
        <param><defname>EDGE</defname></param>
        <initializer>(((EDGE) == <ref refid="group___s_d_i_o___clock___edge_1ga6d0f902037762a3048d95303c0037313" kindref="member">SDIO_ClockEdge_Rising</ref>) || \
                                  ((EDGE) == <ref refid="group___s_d_i_o___clock___edge_1ga7be68024e3e2fe1994def85bc944189b" kindref="member">SDIO_ClockEdge_Falling</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="131" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___clock___bypass_1gacc168d55136a0c6575e5afd7a6550343" prot="public" static="no">
        <name>SDIO_ClockBypass_Disable</name>
        <initializer>((uint32_t)0x00000000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="141" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="141" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___clock___bypass_1ga5e1e9f7e05ea62dd2315eb556bc10e5c" prot="public" static="no">
        <name>SDIO_ClockBypass_Enable</name>
        <initializer>((uint32_t)0x00000400)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="142" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="142" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___clock___bypass_1ga5d5a2fcdd3150e4a89c5aa1efd738dec" prot="public" static="no">
        <name>IS_SDIO_CLOCK_BYPASS</name>
        <param><defname>BYPASS</defname></param>
        <initializer>(((BYPASS) == <ref refid="group___s_d_i_o___clock___bypass_1gacc168d55136a0c6575e5afd7a6550343" kindref="member">SDIO_ClockBypass_Disable</ref>) || \
                                     ((BYPASS) == <ref refid="group___s_d_i_o___clock___bypass_1ga5e1e9f7e05ea62dd2315eb556bc10e5c" kindref="member">SDIO_ClockBypass_Enable</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="143" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___clock___power___save_1ga032aa5fb2dfd7ba5dbd60a3845c82ba0" prot="public" static="no">
        <name>SDIO_ClockPowerSave_Disable</name>
        <initializer>((uint32_t)0x00000000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="153" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="153" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___clock___power___save_1ga9f5b66a0044c4ff36a3eb1ec758f7ea7" prot="public" static="no">
        <name>SDIO_ClockPowerSave_Enable</name>
        <initializer>((uint32_t)0x00000200)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="154" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="154" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___clock___power___save_1ga41988203e5d4e35a755aa604f1876cd3" prot="public" static="no">
        <name>IS_SDIO_CLOCK_POWER_SAVE</name>
        <param><defname>SAVE</defname></param>
        <initializer>(((SAVE) == <ref refid="group___s_d_i_o___clock___power___save_1ga032aa5fb2dfd7ba5dbd60a3845c82ba0" kindref="member">SDIO_ClockPowerSave_Disable</ref>) || \
                                        ((SAVE) == <ref refid="group___s_d_i_o___clock___power___save_1ga9f5b66a0044c4ff36a3eb1ec758f7ea7" kindref="member">SDIO_ClockPowerSave_Enable</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="155" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="155" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___bus___wide_1ga9c333b57937c5cc0a173a58519f9250a" prot="public" static="no">
        <name>SDIO_BusWide_1b</name>
        <initializer>((uint32_t)0x00000000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="165" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="165" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___bus___wide_1ga79815d1d798b28a2d3750ad25466ff1b" prot="public" static="no">
        <name>SDIO_BusWide_4b</name>
        <initializer>((uint32_t)0x00000800)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="166" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="166" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___bus___wide_1ga4d864f5c4e1af298146afc1d680081e9" prot="public" static="no">
        <name>SDIO_BusWide_8b</name>
        <initializer>((uint32_t)0x00001000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="167" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="167" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___bus___wide_1gaa5c6ad922117d5df3213631bf68fde5b" prot="public" static="no">
        <name>IS_SDIO_BUS_WIDE</name>
        <param><defname>WIDE</defname></param>
        <initializer>(((WIDE) == <ref refid="group___s_d_i_o___bus___wide_1ga9c333b57937c5cc0a173a58519f9250a" kindref="member">SDIO_BusWide_1b</ref>) || ((WIDE) == <ref refid="group___s_d_i_o___bus___wide_1ga79815d1d798b28a2d3750ad25466ff1b" kindref="member">SDIO_BusWide_4b</ref>) || \
                                ((WIDE) == <ref refid="group___s_d_i_o___bus___wide_1ga4d864f5c4e1af298146afc1d680081e9" kindref="member">SDIO_BusWide_8b</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="168" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="168" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___hardware___flow___control_1ga7529a3c8a11ac685bde4aafa12c8a977" prot="public" static="no">
        <name>SDIO_HardwareFlowControl_Disable</name>
        <initializer>((uint32_t)0x00000000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="179" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="179" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___hardware___flow___control_1gab6cfef6778d829f3dcefc6c2bad7c9aa" prot="public" static="no">
        <name>SDIO_HardwareFlowControl_Enable</name>
        <initializer>((uint32_t)0x00004000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="180" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="180" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___hardware___flow___control_1gad8be549f8348479d064dff21343ae411" prot="public" static="no">
        <name>IS_SDIO_HARDWARE_FLOW_CONTROL</name>
        <param><defname>CONTROL</defname></param>
        <initializer>(((CONTROL) == <ref refid="group___s_d_i_o___hardware___flow___control_1ga7529a3c8a11ac685bde4aafa12c8a977" kindref="member">SDIO_HardwareFlowControl_Disable</ref>) || \
                                                ((CONTROL) == <ref refid="group___s_d_i_o___hardware___flow___control_1gab6cfef6778d829f3dcefc6c2bad7c9aa" kindref="member">SDIO_HardwareFlowControl_Enable</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="181" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="181" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___power___state_1gab2f36a68fc50795ea74a7e98b4ac2d37" prot="public" static="no">
        <name>SDIO_PowerState_OFF</name>
        <initializer>((uint32_t)0x00000000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="191" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="191" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___power___state_1ga0aacd8c94effe8066c6d447fc884d217" prot="public" static="no">
        <name>SDIO_PowerState_ON</name>
        <initializer>((uint32_t)0x00000003)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="192" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="192" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___power___state_1gad0dae767c2024de1769efb1feccc14ef" prot="public" static="no">
        <name>IS_SDIO_POWER_STATE</name>
        <param><defname>STATE</defname></param>
        <initializer>(((STATE) == <ref refid="group___s_d_i_o___power___state_1gab2f36a68fc50795ea74a7e98b4ac2d37" kindref="member">SDIO_PowerState_OFF</ref>) || ((STATE) == <ref refid="group___s_d_i_o___power___state_1ga0aacd8c94effe8066c6d447fc884d217" kindref="member">SDIO_PowerState_ON</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="193" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="193" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___interrupt__sources_1gabb076105e18355a260c40a379511e72f" prot="public" static="no">
        <name>SDIO_IT_CCRCFAIL</name>
        <initializer>((uint32_t)0x00000001)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="203" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="203" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___interrupt__sources_1gaf3321305cb4e24419185a4b92ead299a" prot="public" static="no">
        <name>SDIO_IT_DCRCFAIL</name>
        <initializer>((uint32_t)0x00000002)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="204" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="204" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___interrupt__sources_1ga3c2fdef0993f10e65d4fddbdf71febed" prot="public" static="no">
        <name>SDIO_IT_CTIMEOUT</name>
        <initializer>((uint32_t)0x00000004)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="205" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="205" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___interrupt__sources_1gaf5ce4bfa8459ccbe892791e5cdc26a6f" prot="public" static="no">
        <name>SDIO_IT_DTIMEOUT</name>
        <initializer>((uint32_t)0x00000008)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="206" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="206" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___interrupt__sources_1ga93d4dbe3162b8507b2834a3e29e6c648" prot="public" static="no">
        <name>SDIO_IT_TXUNDERR</name>
        <initializer>((uint32_t)0x00000010)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="207" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="207" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___interrupt__sources_1ga272953292e1b43b2108b00e75db76512" prot="public" static="no">
        <name>SDIO_IT_RXOVERR</name>
        <initializer>((uint32_t)0x00000020)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="208" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="208" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___interrupt__sources_1ga6df3bb694dc00e250cd22e16a03d6910" prot="public" static="no">
        <name>SDIO_IT_CMDREND</name>
        <initializer>((uint32_t)0x00000040)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="209" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="209" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___interrupt__sources_1gaf9d8fc4651c4b7555fb9ee4e5af6ca63" prot="public" static="no">
        <name>SDIO_IT_CMDSENT</name>
        <initializer>((uint32_t)0x00000080)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="210" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="210" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___interrupt__sources_1ga6cc1c521b64fc57b844336f7f175dd1e" prot="public" static="no">
        <name>SDIO_IT_DATAEND</name>
        <initializer>((uint32_t)0x00000100)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="211" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="211" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___interrupt__sources_1ga55f7e65ed1b70d5a6abdc3cc41b55766" prot="public" static="no">
        <name>SDIO_IT_STBITERR</name>
        <initializer>((uint32_t)0x00000200)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="212" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="212" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___interrupt__sources_1gaa1b1fb453a3ce3b10928aaeada2b2186" prot="public" static="no">
        <name>SDIO_IT_DBCKEND</name>
        <initializer>((uint32_t)0x00000400)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="213" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="213" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___interrupt__sources_1gae73ae9bc72eaeedc2a37221697bc33e2" prot="public" static="no">
        <name>SDIO_IT_CMDACT</name>
        <initializer>((uint32_t)0x00000800)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="214" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="214" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___interrupt__sources_1ga811e683588ab887abb0101defafdb51e" prot="public" static="no">
        <name>SDIO_IT_TXACT</name>
        <initializer>((uint32_t)0x00001000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="215" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="215" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___interrupt__sources_1ga1d9a59a2415b57bdf9827423cb6ce3a0" prot="public" static="no">
        <name>SDIO_IT_RXACT</name>
        <initializer>((uint32_t)0x00002000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="216" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="216" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___interrupt__sources_1gaf538ae7dd73d55e76069e8710858038a" prot="public" static="no">
        <name>SDIO_IT_TXFIFOHE</name>
        <initializer>((uint32_t)0x00004000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="217" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="217" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___interrupt__sources_1gadcbc1a0de8b9df83b5c6c839b4739c87" prot="public" static="no">
        <name>SDIO_IT_RXFIFOHF</name>
        <initializer>((uint32_t)0x00008000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="218" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="218" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___interrupt__sources_1ga3ec471bd9233561d6e929ebac6362b75" prot="public" static="no">
        <name>SDIO_IT_TXFIFOF</name>
        <initializer>((uint32_t)0x00010000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="219" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="219" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___interrupt__sources_1gae60a1d8e5a7caff85d84e513b093b8a8" prot="public" static="no">
        <name>SDIO_IT_RXFIFOF</name>
        <initializer>((uint32_t)0x00020000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="220" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="220" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___interrupt__sources_1gabff1466c2f2effbe30b80a11c132d7c0" prot="public" static="no">
        <name>SDIO_IT_TXFIFOE</name>
        <initializer>((uint32_t)0x00040000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="221" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="221" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___interrupt__sources_1ga80b01aaf64c873d21bfa95e5d98d8766" prot="public" static="no">
        <name>SDIO_IT_RXFIFOE</name>
        <initializer>((uint32_t)0x00080000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="222" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="222" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___interrupt__sources_1gac8e5744e6d977182a6fc7484a6f1195e" prot="public" static="no">
        <name>SDIO_IT_TXDAVL</name>
        <initializer>((uint32_t)0x00100000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="223" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="223" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___interrupt__sources_1gaf236079642db95772334d1e9b9b27570" prot="public" static="no">
        <name>SDIO_IT_RXDAVL</name>
        <initializer>((uint32_t)0x00200000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="224" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="224" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___interrupt__sources_1gaf5d7559460a9ff1fccc82d815de25cb4" prot="public" static="no">
        <name>SDIO_IT_SDIOIT</name>
        <initializer>((uint32_t)0x00400000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="225" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="225" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___interrupt__sources_1gae045cd5ba681d2df8b1031b8f659139a" prot="public" static="no">
        <name>SDIO_IT_CEATAEND</name>
        <initializer>((uint32_t)0x00800000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="226" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="226" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___interrupt__sources_1ga0e413e92ec50bab73042e8965acc3e6c" prot="public" static="no">
        <name>IS_SDIO_IT</name>
        <param><defname>IT</defname></param>
        <initializer>((((IT) &amp; (uint32_t)0xFF000000) == 0x00) &amp;&amp; ((IT) != (uint32_t)0x00))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="227" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="227" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___command___index_1gae988f9f37c4ebb5f5f9866acb30f2880" prot="public" static="no">
        <name>IS_SDIO_CMD_INDEX</name>
        <param><defname>INDEX</defname></param>
        <initializer>((INDEX) &lt; 0x40)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="236" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="236" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___response___type_1ga308b8ef0e79ba451644dda923bb3ac41" prot="public" static="no">
        <name>SDIO_Response_No</name>
        <initializer>((uint32_t)0x00000000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="245" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="245" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___response___type_1ga1f61768f90641648fd5c12e8d2f7e508" prot="public" static="no">
        <name>SDIO_Response_Short</name>
        <initializer>((uint32_t)0x00000040)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="246" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="246" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___response___type_1ga1a11a8750612b344214f846784046bb0" prot="public" static="no">
        <name>SDIO_Response_Long</name>
        <initializer>((uint32_t)0x000000C0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="247" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="247" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___response___type_1gae4df2359c9b637694b9baa220c16e062" prot="public" static="no">
        <name>IS_SDIO_RESPONSE</name>
        <param><defname>RESPONSE</defname></param>
        <initializer>(((RESPONSE) == <ref refid="group___s_d_i_o___response___type_1ga308b8ef0e79ba451644dda923bb3ac41" kindref="member">SDIO_Response_No</ref>) || \
                                    ((RESPONSE) == <ref refid="group___s_d_i_o___response___type_1ga1f61768f90641648fd5c12e8d2f7e508" kindref="member">SDIO_Response_Short</ref>) || \
                                    ((RESPONSE) == <ref refid="group___s_d_i_o___response___type_1ga1a11a8750612b344214f846784046bb0" kindref="member">SDIO_Response_Long</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="248" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="248" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___wait___interrupt___state_1ga266294e1ffd7a4b45e62bff753ca44b2" prot="public" static="no">
        <name>SDIO_Wait_No</name>
        <initializer>((uint32_t)0x00000000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>SDIO No Wait, TimeOut is enabled </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="259" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="259" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___wait___interrupt___state_1ga3914bbe26a656c8e151272ccdc12c71c" prot="public" static="no">
        <name>SDIO_Wait_IT</name>
        <initializer>((uint32_t)0x00000100)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>SDIO Wait Interrupt Request </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="260" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="260" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___wait___interrupt___state_1ga2a4104023a7f8403ddd159ec3bbb8592" prot="public" static="no">
        <name>SDIO_Wait_Pend</name>
        <initializer>((uint32_t)0x00000200)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>SDIO Wait End of transfer </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="261" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="261" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___wait___interrupt___state_1ga7ee5c289c8e06a76b849808d15b03810" prot="public" static="no">
        <name>IS_SDIO_WAIT</name>
        <param><defname>WAIT</defname></param>
        <initializer>(((WAIT) == <ref refid="group___s_d_i_o___wait___interrupt___state_1ga266294e1ffd7a4b45e62bff753ca44b2" kindref="member">SDIO_Wait_No</ref>) || ((WAIT) == <ref refid="group___s_d_i_o___wait___interrupt___state_1ga3914bbe26a656c8e151272ccdc12c71c" kindref="member">SDIO_Wait_IT</ref>) || \
                            ((WAIT) == <ref refid="group___s_d_i_o___wait___interrupt___state_1ga2a4104023a7f8403ddd159ec3bbb8592" kindref="member">SDIO_Wait_Pend</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="262" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="262" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___c_p_s_m___state_1ga996751273ad238e255a740f7c2844c6c" prot="public" static="no">
        <name>SDIO_CPSM_Disable</name>
        <initializer>((uint32_t)0x00000000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="272" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="272" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___c_p_s_m___state_1gad437cefe89d6175aa074a1c40b909ebc" prot="public" static="no">
        <name>SDIO_CPSM_Enable</name>
        <initializer>((uint32_t)0x00000400)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="273" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="273" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___c_p_s_m___state_1ga58cf04903dab015106e4e0937bef443b" prot="public" static="no">
        <name>IS_SDIO_CPSM</name>
        <param><defname>CPSM</defname></param>
        <initializer>(((CPSM) == <ref refid="group___s_d_i_o___c_p_s_m___state_1gad437cefe89d6175aa074a1c40b909ebc" kindref="member">SDIO_CPSM_Enable</ref>) || ((CPSM) == <ref refid="group___s_d_i_o___c_p_s_m___state_1ga996751273ad238e255a740f7c2844c6c" kindref="member">SDIO_CPSM_Disable</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="274" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="274" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___response___registers_1ga9d78943952cf0e36736313d949520a2d" prot="public" static="no">
        <name>SDIO_RESP1</name>
        <initializer>((uint32_t)0x00000000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="283" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="283" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___response___registers_1gabd551272af4161844b5358fd3c3c379c" prot="public" static="no">
        <name>SDIO_RESP2</name>
        <initializer>((uint32_t)0x00000004)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="284" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="284" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___response___registers_1gae9887669a72395d54d600829a959d2f4" prot="public" static="no">
        <name>SDIO_RESP3</name>
        <initializer>((uint32_t)0x00000008)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="285" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="285" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___response___registers_1ga57c3f6414198e5497736e398c02a1d9e" prot="public" static="no">
        <name>SDIO_RESP4</name>
        <initializer>((uint32_t)0x0000000C)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="286" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="286" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___response___registers_1gaea6a7f75a5e677d50ba5c9ae2d3a7839" prot="public" static="no">
        <name>IS_SDIO_RESP</name>
        <param><defname>RESP</defname></param>
        <initializer>(((RESP) == <ref refid="group___s_d_i_o___response___registers_1ga9d78943952cf0e36736313d949520a2d" kindref="member">SDIO_RESP1</ref>) || ((RESP) == <ref refid="group___s_d_i_o___response___registers_1gabd551272af4161844b5358fd3c3c379c" kindref="member">SDIO_RESP2</ref>) || \
                            ((RESP) == <ref refid="group___s_d_i_o___response___registers_1gae9887669a72395d54d600829a959d2f4" kindref="member">SDIO_RESP3</ref>) || ((RESP) == <ref refid="group___s_d_i_o___response___registers_1ga57c3f6414198e5497736e398c02a1d9e" kindref="member">SDIO_RESP4</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="287" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="287" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___data___length_1ga57dd64db3f69d18625ea8ca82c009fad" prot="public" static="no">
        <name>IS_SDIO_DATA_LENGTH</name>
        <param><defname>LENGTH</defname></param>
        <initializer>((LENGTH) &lt;= 0x01FFFFFF)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="297" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="297" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___data___block___size_1gaa86e90ddc3426b242a5230b3360c620d" prot="public" static="no">
        <name>SDIO_DataBlockSize_1b</name>
        <initializer>((uint32_t)0x00000000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="306" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="306" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___data___block___size_1ga7209d9d52635b66df85712c6fcd668ea" prot="public" static="no">
        <name>SDIO_DataBlockSize_2b</name>
        <initializer>((uint32_t)0x00000010)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="307" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="307" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___data___block___size_1ga59cbaecfdebd63177d1208c268626f0a" prot="public" static="no">
        <name>SDIO_DataBlockSize_4b</name>
        <initializer>((uint32_t)0x00000020)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="308" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="308" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___data___block___size_1ga14f91159c8c4faf49a335ed9b6a94d0b" prot="public" static="no">
        <name>SDIO_DataBlockSize_8b</name>
        <initializer>((uint32_t)0x00000030)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="309" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="309" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___data___block___size_1ga52a7bdab9a75edd94d9c1152e8b078e2" prot="public" static="no">
        <name>SDIO_DataBlockSize_16b</name>
        <initializer>((uint32_t)0x00000040)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="310" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="310" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___data___block___size_1gad0f89aa989c0cedf8d69eb28548413ca" prot="public" static="no">
        <name>SDIO_DataBlockSize_32b</name>
        <initializer>((uint32_t)0x00000050)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="311" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="311" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___data___block___size_1ga981c219228ae8df11a501e15843338d4" prot="public" static="no">
        <name>SDIO_DataBlockSize_64b</name>
        <initializer>((uint32_t)0x00000060)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="312" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="312" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___data___block___size_1gaba545c3a5e0f3296341d89a647cb9751" prot="public" static="no">
        <name>SDIO_DataBlockSize_128b</name>
        <initializer>((uint32_t)0x00000070)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="313" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="313" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___data___block___size_1gaa099d7706f98a4fa6eb88277dc6680cf" prot="public" static="no">
        <name>SDIO_DataBlockSize_256b</name>
        <initializer>((uint32_t)0x00000080)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="314" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="314" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___data___block___size_1gaa619848f7700962c5b7065f43e286e0b" prot="public" static="no">
        <name>SDIO_DataBlockSize_512b</name>
        <initializer>((uint32_t)0x00000090)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="315" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="315" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___data___block___size_1ga7dad3c1c33e63a00eb6301b0a1135baf" prot="public" static="no">
        <name>SDIO_DataBlockSize_1024b</name>
        <initializer>((uint32_t)0x000000A0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="316" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="316" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___data___block___size_1ga41eb937621c7ffcf2688c6bc0ea31464" prot="public" static="no">
        <name>SDIO_DataBlockSize_2048b</name>
        <initializer>((uint32_t)0x000000B0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="317" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="317" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___data___block___size_1ga360411488abdbaf9eee9b99fca793f79" prot="public" static="no">
        <name>SDIO_DataBlockSize_4096b</name>
        <initializer>((uint32_t)0x000000C0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="318" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="318" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___data___block___size_1gaf61913f3eff52c0f728db9ffbdaca7d2" prot="public" static="no">
        <name>SDIO_DataBlockSize_8192b</name>
        <initializer>((uint32_t)0x000000D0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="319" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="319" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___data___block___size_1gae80bc49dbed677f7087d523c31fe10ae" prot="public" static="no">
        <name>SDIO_DataBlockSize_16384b</name>
        <initializer>((uint32_t)0x000000E0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="320" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="320" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___data___block___size_1ga25ce8d64134659c479d61aa681761948" prot="public" static="no">
        <name>IS_SDIO_BLOCK_SIZE</name>
        <param><defname>SIZE</defname></param>
        <initializer>(((SIZE) == <ref refid="group___s_d_i_o___data___block___size_1gaa86e90ddc3426b242a5230b3360c620d" kindref="member">SDIO_DataBlockSize_1b</ref>) || \
                                  ((SIZE) == <ref refid="group___s_d_i_o___data___block___size_1ga7209d9d52635b66df85712c6fcd668ea" kindref="member">SDIO_DataBlockSize_2b</ref>) || \
                                  ((SIZE) == <ref refid="group___s_d_i_o___data___block___size_1ga59cbaecfdebd63177d1208c268626f0a" kindref="member">SDIO_DataBlockSize_4b</ref>) || \
                                  ((SIZE) == <ref refid="group___s_d_i_o___data___block___size_1ga14f91159c8c4faf49a335ed9b6a94d0b" kindref="member">SDIO_DataBlockSize_8b</ref>) || \
                                  ((SIZE) == <ref refid="group___s_d_i_o___data___block___size_1ga52a7bdab9a75edd94d9c1152e8b078e2" kindref="member">SDIO_DataBlockSize_16b</ref>) || \
                                  ((SIZE) == <ref refid="group___s_d_i_o___data___block___size_1gad0f89aa989c0cedf8d69eb28548413ca" kindref="member">SDIO_DataBlockSize_32b</ref>) || \
                                  ((SIZE) == <ref refid="group___s_d_i_o___data___block___size_1ga981c219228ae8df11a501e15843338d4" kindref="member">SDIO_DataBlockSize_64b</ref>) || \
                                  ((SIZE) == <ref refid="group___s_d_i_o___data___block___size_1gaba545c3a5e0f3296341d89a647cb9751" kindref="member">SDIO_DataBlockSize_128b</ref>) || \
                                  ((SIZE) == <ref refid="group___s_d_i_o___data___block___size_1gaa099d7706f98a4fa6eb88277dc6680cf" kindref="member">SDIO_DataBlockSize_256b</ref>) || \
                                  ((SIZE) == <ref refid="group___s_d_i_o___data___block___size_1gaa619848f7700962c5b7065f43e286e0b" kindref="member">SDIO_DataBlockSize_512b</ref>) || \
                                  ((SIZE) == <ref refid="group___s_d_i_o___data___block___size_1ga7dad3c1c33e63a00eb6301b0a1135baf" kindref="member">SDIO_DataBlockSize_1024b</ref>) || \
                                  ((SIZE) == <ref refid="group___s_d_i_o___data___block___size_1ga41eb937621c7ffcf2688c6bc0ea31464" kindref="member">SDIO_DataBlockSize_2048b</ref>) || \
                                  ((SIZE) == <ref refid="group___s_d_i_o___data___block___size_1ga360411488abdbaf9eee9b99fca793f79" kindref="member">SDIO_DataBlockSize_4096b</ref>) || \
                                  ((SIZE) == <ref refid="group___s_d_i_o___data___block___size_1gaf61913f3eff52c0f728db9ffbdaca7d2" kindref="member">SDIO_DataBlockSize_8192b</ref>) || \
                                  ((SIZE) == <ref refid="group___s_d_i_o___data___block___size_1gae80bc49dbed677f7087d523c31fe10ae" kindref="member">SDIO_DataBlockSize_16384b</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="321" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="321" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___transfer___direction_1gaef8af0ffa4ea04b3362338d268cc0935" prot="public" static="no">
        <name>SDIO_TransferDir_ToCard</name>
        <initializer>((uint32_t)0x00000000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="344" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="344" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___transfer___direction_1ga55a6d9613d3e2e7762296b45d0d13222" prot="public" static="no">
        <name>SDIO_TransferDir_ToSDIO</name>
        <initializer>((uint32_t)0x00000002)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="345" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="345" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___transfer___direction_1gaf84b8004cfef6a5a525b20db8a83c2f7" prot="public" static="no">
        <name>IS_SDIO_TRANSFER_DIR</name>
        <param><defname>DIR</defname></param>
        <initializer>(((DIR) == <ref refid="group___s_d_i_o___transfer___direction_1gaef8af0ffa4ea04b3362338d268cc0935" kindref="member">SDIO_TransferDir_ToCard</ref>) || \
                                   ((DIR) == <ref refid="group___s_d_i_o___transfer___direction_1ga55a6d9613d3e2e7762296b45d0d13222" kindref="member">SDIO_TransferDir_ToSDIO</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="346" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="346" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___transfer___type_1ga5b54ada18cc4072ceff1d98ee4b69972" prot="public" static="no">
        <name>SDIO_TransferMode_Block</name>
        <initializer>((uint32_t)0x00000000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="356" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="356" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___transfer___type_1gadd0cafe0a80e6b6cc5c22d838cbb2e28" prot="public" static="no">
        <name>SDIO_TransferMode_Stream</name>
        <initializer>((uint32_t)0x00000004)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="357" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="357" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___transfer___type_1gaf7565ea93f9ed01558bdc9ad80dac763" prot="public" static="no">
        <name>IS_SDIO_TRANSFER_MODE</name>
        <param><defname>MODE</defname></param>
        <initializer>(((MODE) == <ref refid="group___s_d_i_o___transfer___type_1gadd0cafe0a80e6b6cc5c22d838cbb2e28" kindref="member">SDIO_TransferMode_Stream</ref>) || \
                                     ((MODE) == <ref refid="group___s_d_i_o___transfer___type_1ga5b54ada18cc4072ceff1d98ee4b69972" kindref="member">SDIO_TransferMode_Block</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="358" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="358" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___d_p_s_m___state_1ga156a9f6ab87a46dcb99ddd7462ca064b" prot="public" static="no">
        <name>SDIO_DPSM_Disable</name>
        <initializer>((uint32_t)0x00000000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="368" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="368" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___d_p_s_m___state_1ga22bc12465c1cf839145619a859276c37" prot="public" static="no">
        <name>SDIO_DPSM_Enable</name>
        <initializer>((uint32_t)0x00000001)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="369" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="369" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___d_p_s_m___state_1gac87a2d7a8fc417a4514d733be50e6d63" prot="public" static="no">
        <name>IS_SDIO_DPSM</name>
        <param><defname>DPSM</defname></param>
        <initializer>(((DPSM) == <ref refid="group___s_d_i_o___d_p_s_m___state_1ga22bc12465c1cf839145619a859276c37" kindref="member">SDIO_DPSM_Enable</ref>) || ((DPSM) == <ref refid="group___s_d_i_o___d_p_s_m___state_1ga156a9f6ab87a46dcb99ddd7462ca064b" kindref="member">SDIO_DPSM_Disable</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="370" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="370" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___flags_1ga8ff1f3960378e05ec3c949940e1c49d0" prot="public" static="no">
        <name>SDIO_FLAG_CCRCFAIL</name>
        <initializer>((uint32_t)0x00000001)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="379" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="379" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___flags_1ga6de936ea11cbc79444d519268ad9f9bd" prot="public" static="no">
        <name>SDIO_FLAG_DCRCFAIL</name>
        <initializer>((uint32_t)0x00000002)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="380" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="380" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___flags_1ga7389f64ff6cfa4f459bf852b5faede30" prot="public" static="no">
        <name>SDIO_FLAG_CTIMEOUT</name>
        <initializer>((uint32_t)0x00000004)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="381" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="381" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___flags_1ga2d2fd219dd9fea522862195ab9568345" prot="public" static="no">
        <name>SDIO_FLAG_DTIMEOUT</name>
        <initializer>((uint32_t)0x00000008)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="382" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="382" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___flags_1gabd18f8e5d5387a38dccbe1bf28ae5dbc" prot="public" static="no">
        <name>SDIO_FLAG_TXUNDERR</name>
        <initializer>((uint32_t)0x00000010)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="383" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="383" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___flags_1gad49d60039e40d31b734cfacf90caa84f" prot="public" static="no">
        <name>SDIO_FLAG_RXOVERR</name>
        <initializer>((uint32_t)0x00000020)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="384" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="384" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___flags_1ga083531db75a1e4c05c47578763d53af1" prot="public" static="no">
        <name>SDIO_FLAG_CMDREND</name>
        <initializer>((uint32_t)0x00000040)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="385" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="385" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___flags_1gac81f3837aac17a6aed7310a8ea460f17" prot="public" static="no">
        <name>SDIO_FLAG_CMDSENT</name>
        <initializer>((uint32_t)0x00000080)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="386" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="386" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___flags_1gaaacb2f6207c149e05f8bdd70e5d49926" prot="public" static="no">
        <name>SDIO_FLAG_DATAEND</name>
        <initializer>((uint32_t)0x00000100)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="387" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="387" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___flags_1gae83f7cb3fa1183898131f3de47c2333e" prot="public" static="no">
        <name>SDIO_FLAG_STBITERR</name>
        <initializer>((uint32_t)0x00000200)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="388" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="388" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___flags_1ga5452d8033567821709bd7d5f06547b70" prot="public" static="no">
        <name>SDIO_FLAG_DBCKEND</name>
        <initializer>((uint32_t)0x00000400)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="389" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="389" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___flags_1gad12a9b2bd30e7b907cbabfd92fc645b3" prot="public" static="no">
        <name>SDIO_FLAG_CMDACT</name>
        <initializer>((uint32_t)0x00000800)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="390" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="390" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___flags_1gad5d075c98012586b169ec131aab2eeb5" prot="public" static="no">
        <name>SDIO_FLAG_TXACT</name>
        <initializer>((uint32_t)0x00001000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="391" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="391" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___flags_1gacc935dd830338970890a05922dff8ab7" prot="public" static="no">
        <name>SDIO_FLAG_RXACT</name>
        <initializer>((uint32_t)0x00002000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="392" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="392" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___flags_1gae9277461d3c8984dc31af318e2df1959" prot="public" static="no">
        <name>SDIO_FLAG_TXFIFOHE</name>
        <initializer>((uint32_t)0x00004000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="393" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="393" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___flags_1ga8c5942ae3df21efad2d7c61a46015758" prot="public" static="no">
        <name>SDIO_FLAG_RXFIFOHF</name>
        <initializer>((uint32_t)0x00008000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="394" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="394" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___flags_1gad3ca936300ef251639a4cfbe2f63b6b8" prot="public" static="no">
        <name>SDIO_FLAG_TXFIFOF</name>
        <initializer>((uint32_t)0x00010000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="395" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="395" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___flags_1gaf92cb783f000b8d946fe8ace81b51df2" prot="public" static="no">
        <name>SDIO_FLAG_RXFIFOF</name>
        <initializer>((uint32_t)0x00020000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="396" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="396" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___flags_1gac41ef05773abad79b4b0c443a77733db" prot="public" static="no">
        <name>SDIO_FLAG_TXFIFOE</name>
        <initializer>((uint32_t)0x00040000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="397" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="397" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___flags_1ga59ea7e2dc22df742053c5e525b98599d" prot="public" static="no">
        <name>SDIO_FLAG_RXFIFOE</name>
        <initializer>((uint32_t)0x00080000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="398" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="398" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___flags_1ga9c6620d6b16b6af19d3e14f40e688631" prot="public" static="no">
        <name>SDIO_FLAG_TXDAVL</name>
        <initializer>((uint32_t)0x00100000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="399" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="399" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___flags_1ga7558b354658171bb6aa1b6f1e16d8e21" prot="public" static="no">
        <name>SDIO_FLAG_RXDAVL</name>
        <initializer>((uint32_t)0x00200000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="400" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="400" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___flags_1gae888ec1c9885c35a5f8e01bcffe324a1" prot="public" static="no">
        <name>SDIO_FLAG_SDIOIT</name>
        <initializer>((uint32_t)0x00400000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="401" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="401" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___flags_1ga3c8d09a405944948e7a1c5493d49aff1" prot="public" static="no">
        <name>SDIO_FLAG_CEATAEND</name>
        <initializer>((uint32_t)0x00800000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="402" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="402" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___flags_1ga04b3c3c316e112172abacbf5e316f24a" prot="public" static="no">
        <name>IS_SDIO_FLAG</name>
        <param><defname>FLAG</defname></param>
        <initializer>(((FLAG)  == <ref refid="group___s_d_i_o___flags_1ga8ff1f3960378e05ec3c949940e1c49d0" kindref="member">SDIO_FLAG_CCRCFAIL</ref>) || \
                            ((FLAG)  == <ref refid="group___s_d_i_o___flags_1ga6de936ea11cbc79444d519268ad9f9bd" kindref="member">SDIO_FLAG_DCRCFAIL</ref>) || \
                            ((FLAG)  == <ref refid="group___s_d_i_o___flags_1ga7389f64ff6cfa4f459bf852b5faede30" kindref="member">SDIO_FLAG_CTIMEOUT</ref>) || \
                            ((FLAG)  == <ref refid="group___s_d_i_o___flags_1ga2d2fd219dd9fea522862195ab9568345" kindref="member">SDIO_FLAG_DTIMEOUT</ref>) || \
                            ((FLAG)  == <ref refid="group___s_d_i_o___flags_1gabd18f8e5d5387a38dccbe1bf28ae5dbc" kindref="member">SDIO_FLAG_TXUNDERR</ref>) || \
                            ((FLAG)  == <ref refid="group___s_d_i_o___flags_1gad49d60039e40d31b734cfacf90caa84f" kindref="member">SDIO_FLAG_RXOVERR</ref>) || \
                            ((FLAG)  == <ref refid="group___s_d_i_o___flags_1ga083531db75a1e4c05c47578763d53af1" kindref="member">SDIO_FLAG_CMDREND</ref>) || \
                            ((FLAG)  == <ref refid="group___s_d_i_o___flags_1gac81f3837aac17a6aed7310a8ea460f17" kindref="member">SDIO_FLAG_CMDSENT</ref>) || \
                            ((FLAG)  == <ref refid="group___s_d_i_o___flags_1gaaacb2f6207c149e05f8bdd70e5d49926" kindref="member">SDIO_FLAG_DATAEND</ref>) || \
                            ((FLAG)  == <ref refid="group___s_d_i_o___flags_1gae83f7cb3fa1183898131f3de47c2333e" kindref="member">SDIO_FLAG_STBITERR</ref>) || \
                            ((FLAG)  == <ref refid="group___s_d_i_o___flags_1ga5452d8033567821709bd7d5f06547b70" kindref="member">SDIO_FLAG_DBCKEND</ref>) || \
                            ((FLAG)  == <ref refid="group___s_d_i_o___flags_1gad12a9b2bd30e7b907cbabfd92fc645b3" kindref="member">SDIO_FLAG_CMDACT</ref>) || \
                            ((FLAG)  == <ref refid="group___s_d_i_o___flags_1gad5d075c98012586b169ec131aab2eeb5" kindref="member">SDIO_FLAG_TXACT</ref>) || \
                            ((FLAG)  == <ref refid="group___s_d_i_o___flags_1gacc935dd830338970890a05922dff8ab7" kindref="member">SDIO_FLAG_RXACT</ref>) || \
                            ((FLAG)  == <ref refid="group___s_d_i_o___flags_1gae9277461d3c8984dc31af318e2df1959" kindref="member">SDIO_FLAG_TXFIFOHE</ref>) || \
                            ((FLAG)  == <ref refid="group___s_d_i_o___flags_1ga8c5942ae3df21efad2d7c61a46015758" kindref="member">SDIO_FLAG_RXFIFOHF</ref>) || \
                            ((FLAG)  == <ref refid="group___s_d_i_o___flags_1gad3ca936300ef251639a4cfbe2f63b6b8" kindref="member">SDIO_FLAG_TXFIFOF</ref>) || \
                            ((FLAG)  == <ref refid="group___s_d_i_o___flags_1gaf92cb783f000b8d946fe8ace81b51df2" kindref="member">SDIO_FLAG_RXFIFOF</ref>) || \
                            ((FLAG)  == <ref refid="group___s_d_i_o___flags_1gac41ef05773abad79b4b0c443a77733db" kindref="member">SDIO_FLAG_TXFIFOE</ref>) || \
                            ((FLAG)  == <ref refid="group___s_d_i_o___flags_1ga59ea7e2dc22df742053c5e525b98599d" kindref="member">SDIO_FLAG_RXFIFOE</ref>) || \
                            ((FLAG)  == <ref refid="group___s_d_i_o___flags_1ga9c6620d6b16b6af19d3e14f40e688631" kindref="member">SDIO_FLAG_TXDAVL</ref>) || \
                            ((FLAG)  == <ref refid="group___s_d_i_o___flags_1ga7558b354658171bb6aa1b6f1e16d8e21" kindref="member">SDIO_FLAG_RXDAVL</ref>) || \
                            ((FLAG)  == <ref refid="group___s_d_i_o___flags_1gae888ec1c9885c35a5f8e01bcffe324a1" kindref="member">SDIO_FLAG_SDIOIT</ref>) || \
                            ((FLAG)  == <ref refid="group___s_d_i_o___flags_1ga3c8d09a405944948e7a1c5493d49aff1" kindref="member">SDIO_FLAG_CEATAEND</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="403" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="403" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___flags_1ga8a093bc0b51901676fd5da7087d8ab3a" prot="public" static="no">
        <name>IS_SDIO_CLEAR_FLAG</name>
        <param><defname>FLAG</defname></param>
        <initializer>((((FLAG) &amp; (uint32_t)0xFF3FF800) == 0x00) &amp;&amp; ((FLAG) != (uint32_t)0x00))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="428" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="428" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___flags_1gaef42c81f1f6250d8f9f438f4e16d1e98" prot="public" static="no">
        <name>IS_SDIO_GET_IT</name>
        <param><defname>IT</defname></param>
        <initializer>(((IT)  == <ref refid="group___s_d_i_o___interrupt__sources_1gabb076105e18355a260c40a379511e72f" kindref="member">SDIO_IT_CCRCFAIL</ref>) || \
                            ((IT)  == <ref refid="group___s_d_i_o___interrupt__sources_1gaf3321305cb4e24419185a4b92ead299a" kindref="member">SDIO_IT_DCRCFAIL</ref>) || \
                            ((IT)  == <ref refid="group___s_d_i_o___interrupt__sources_1ga3c2fdef0993f10e65d4fddbdf71febed" kindref="member">SDIO_IT_CTIMEOUT</ref>) || \
                            ((IT)  == <ref refid="group___s_d_i_o___interrupt__sources_1gaf5ce4bfa8459ccbe892791e5cdc26a6f" kindref="member">SDIO_IT_DTIMEOUT</ref>) || \
                            ((IT)  == <ref refid="group___s_d_i_o___interrupt__sources_1ga93d4dbe3162b8507b2834a3e29e6c648" kindref="member">SDIO_IT_TXUNDERR</ref>) || \
                            ((IT)  == <ref refid="group___s_d_i_o___interrupt__sources_1ga272953292e1b43b2108b00e75db76512" kindref="member">SDIO_IT_RXOVERR</ref>) || \
                            ((IT)  == <ref refid="group___s_d_i_o___interrupt__sources_1ga6df3bb694dc00e250cd22e16a03d6910" kindref="member">SDIO_IT_CMDREND</ref>) || \
                            ((IT)  == <ref refid="group___s_d_i_o___interrupt__sources_1gaf9d8fc4651c4b7555fb9ee4e5af6ca63" kindref="member">SDIO_IT_CMDSENT</ref>) || \
                            ((IT)  == <ref refid="group___s_d_i_o___interrupt__sources_1ga6cc1c521b64fc57b844336f7f175dd1e" kindref="member">SDIO_IT_DATAEND</ref>) || \
                            ((IT)  == <ref refid="group___s_d_i_o___interrupt__sources_1ga55f7e65ed1b70d5a6abdc3cc41b55766" kindref="member">SDIO_IT_STBITERR</ref>) || \
                            ((IT)  == <ref refid="group___s_d_i_o___interrupt__sources_1gaa1b1fb453a3ce3b10928aaeada2b2186" kindref="member">SDIO_IT_DBCKEND</ref>) || \
                            ((IT)  == <ref refid="group___s_d_i_o___interrupt__sources_1gae73ae9bc72eaeedc2a37221697bc33e2" kindref="member">SDIO_IT_CMDACT</ref>) || \
                            ((IT)  == <ref refid="group___s_d_i_o___interrupt__sources_1ga811e683588ab887abb0101defafdb51e" kindref="member">SDIO_IT_TXACT</ref>) || \
                            ((IT)  == <ref refid="group___s_d_i_o___interrupt__sources_1ga1d9a59a2415b57bdf9827423cb6ce3a0" kindref="member">SDIO_IT_RXACT</ref>) || \
                            ((IT)  == <ref refid="group___s_d_i_o___interrupt__sources_1gaf538ae7dd73d55e76069e8710858038a" kindref="member">SDIO_IT_TXFIFOHE</ref>) || \
                            ((IT)  == <ref refid="group___s_d_i_o___interrupt__sources_1gadcbc1a0de8b9df83b5c6c839b4739c87" kindref="member">SDIO_IT_RXFIFOHF</ref>) || \
                            ((IT)  == <ref refid="group___s_d_i_o___interrupt__sources_1ga3ec471bd9233561d6e929ebac6362b75" kindref="member">SDIO_IT_TXFIFOF</ref>) || \
                            ((IT)  == <ref refid="group___s_d_i_o___interrupt__sources_1gae60a1d8e5a7caff85d84e513b093b8a8" kindref="member">SDIO_IT_RXFIFOF</ref>) || \
                            ((IT)  == <ref refid="group___s_d_i_o___interrupt__sources_1gabff1466c2f2effbe30b80a11c132d7c0" kindref="member">SDIO_IT_TXFIFOE</ref>) || \
                            ((IT)  == <ref refid="group___s_d_i_o___interrupt__sources_1ga80b01aaf64c873d21bfa95e5d98d8766" kindref="member">SDIO_IT_RXFIFOE</ref>) || \
                            ((IT)  == <ref refid="group___s_d_i_o___interrupt__sources_1gac8e5744e6d977182a6fc7484a6f1195e" kindref="member">SDIO_IT_TXDAVL</ref>) || \
                            ((IT)  == <ref refid="group___s_d_i_o___interrupt__sources_1gaf236079642db95772334d1e9b9b27570" kindref="member">SDIO_IT_RXDAVL</ref>) || \
                            ((IT)  == <ref refid="group___s_d_i_o___interrupt__sources_1gaf5d7559460a9ff1fccc82d815de25cb4" kindref="member">SDIO_IT_SDIOIT</ref>) || \
                            ((IT)  == <ref refid="group___s_d_i_o___interrupt__sources_1gae045cd5ba681d2df8b1031b8f659139a" kindref="member">SDIO_IT_CEATAEND</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="430" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="430" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___flags_1gaf829b01d8c3e9a1e4e04d39abdc8c355" prot="public" static="no">
        <name>IS_SDIO_CLEAR_IT</name>
        <param><defname>IT</defname></param>
        <initializer>((((IT) &amp; (uint32_t)0xFF3FF800) == 0x00) &amp;&amp; ((IT) != (uint32_t)0x00))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="455" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="455" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___read___wait___mode_1ga5d73b50fed8b2589f337a6301f22f41c" prot="public" static="no">
        <name>SDIO_ReadWaitMode_CLK</name>
        <initializer>((uint32_t)0x00000001)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="465" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="465" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___read___wait___mode_1ga3d6952d82468b49dcc7abd5b9e02039f" prot="public" static="no">
        <name>SDIO_ReadWaitMode_DATA2</name>
        <initializer>((uint32_t)0x00000000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="466" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="466" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___read___wait___mode_1ga35144093f5b3553a62c2248896eead4d" prot="public" static="no">
        <name>IS_SDIO_READWAIT_MODE</name>
        <param><defname>MODE</defname></param>
        <initializer>(((MODE) == <ref refid="group___s_d_i_o___read___wait___mode_1ga5d73b50fed8b2589f337a6301f22f41c" kindref="member">SDIO_ReadWaitMode_CLK</ref>) || \
                                     ((MODE) == <ref refid="group___s_d_i_o___read___wait___mode_1ga3d6952d82468b49dcc7abd5b9e02039f" kindref="member">SDIO_ReadWaitMode_DATA2</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="467" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" bodystart="467" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group___s_d_i_o___exported___functions_1gac359d2c6c67a2590f8f9b720c0e4ff1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SDIO_DeInit</definition>
        <argsstring>(void)</argsstring>
        <name>SDIO_DeInit</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Deinitializes the SDIO peripheral registers to their default reset values. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="489" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" bodystart="161" bodyend="172"/>
        <references refid="group___peripheral__declaration_1ga8149aa2760fffac16bc75216d5fd9331" compoundref="stm32f10x_8h" startline="1428">SDIO</references>
      </memberdef>
      <memberdef kind="function" id="group___s_d_i_o___exported___functions_1gad40764a8e37c0ed5c9141ae338ff0203" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SDIO_Init</definition>
        <argsstring>(SDIO_InitTypeDef *SDIO_InitStruct)</argsstring>
        <name>SDIO_Init</name>
        <param>
          <type><ref refid="struct_s_d_i_o___init_type_def" kindref="compound">SDIO_InitTypeDef</ref> *</type>
          <declname>SDIO_InitStruct</declname>
        </param>
        <briefdescription>
<para>Initializes the SDIO peripheral according to the specified parameters in the SDIO_InitStruct. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>SDIO_InitStruct</parametername>
</parameternamelist>
<parameterdescription>
<para>: pointer to a <ref refid="struct_s_d_i_o___init_type_def" kindref="compound">SDIO_InitTypeDef</ref> structure that contains the configuration information for the SDIO peripheral. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="490" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" bodystart="181" bodyend="211"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___s_d_i_o___clock___edge_1ga63420b10a52e3d82a89a45f20dc41786" compoundref="stm32f10x__sdio_8h" startline="131">IS_SDIO_CLOCK_EDGE</references>
        <references refid="struct_s_d_i_o___init_type_def_1a3252c846b68988b8ae70ca0d40030a52" compoundref="stm32f10x__sdio_8h" startline="54">SDIO_InitTypeDef::SDIO_ClockEdge</references>
        <references refid="group___s_d_i_o___clock___bypass_1ga5d5a2fcdd3150e4a89c5aa1efd738dec" compoundref="stm32f10x__sdio_8h" startline="143">IS_SDIO_CLOCK_BYPASS</references>
        <references refid="struct_s_d_i_o___init_type_def_1a6a06a65a5630b21da261f46125cb20b1" compoundref="stm32f10x__sdio_8h" startline="57">SDIO_InitTypeDef::SDIO_ClockBypass</references>
        <references refid="group___s_d_i_o___clock___power___save_1ga41988203e5d4e35a755aa604f1876cd3" compoundref="stm32f10x__sdio_8h" startline="155">IS_SDIO_CLOCK_POWER_SAVE</references>
        <references refid="struct_s_d_i_o___init_type_def_1ac236cc5a376a65b9de64a31dab816364" compoundref="stm32f10x__sdio_8h" startline="61">SDIO_InitTypeDef::SDIO_ClockPowerSave</references>
        <references refid="group___s_d_i_o___bus___wide_1gaa5c6ad922117d5df3213631bf68fde5b" compoundref="stm32f10x__sdio_8h" startline="168">IS_SDIO_BUS_WIDE</references>
        <references refid="struct_s_d_i_o___init_type_def_1a0540529f615c2b29933b442bc326f0a7" compoundref="stm32f10x__sdio_8h" startline="65">SDIO_InitTypeDef::SDIO_BusWide</references>
        <references refid="group___s_d_i_o___hardware___flow___control_1gad8be549f8348479d064dff21343ae411" compoundref="stm32f10x__sdio_8h" startline="181">IS_SDIO_HARDWARE_FLOW_CONTROL</references>
        <references refid="struct_s_d_i_o___init_type_def_1a5f57f8aca913de9aed47ef708c05f34f" compoundref="stm32f10x__sdio_8h" startline="68">SDIO_InitTypeDef::SDIO_HardwareFlowControl</references>
        <references refid="group___peripheral__declaration_1ga8149aa2760fffac16bc75216d5fd9331" compoundref="stm32f10x_8h" startline="1428">SDIO</references>
        <references refid="group___s_d_i_o___private___types_definitions_1gac8d10dd1e49ca9e8a6954146654e9a01" compoundref="stm32f10x__sdio_8c" startline="96">CLKCR_CLEAR_MASK</references>
        <references refid="struct_s_d_i_o___init_type_def_1a4166ee534e6cf8ac2c6a6a03bec45b06" compoundref="stm32f10x__sdio_8h" startline="71">SDIO_InitTypeDef::SDIO_ClockDiv</references>
      </memberdef>
      <memberdef kind="function" id="group___s_d_i_o___exported___functions_1ga778d338c29df4fae9ef69432e6df32ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SDIO_StructInit</definition>
        <argsstring>(SDIO_InitTypeDef *SDIO_InitStruct)</argsstring>
        <name>SDIO_StructInit</name>
        <param>
          <type><ref refid="struct_s_d_i_o___init_type_def" kindref="compound">SDIO_InitTypeDef</ref> *</type>
          <declname>SDIO_InitStruct</declname>
        </param>
        <briefdescription>
<para>Fills each SDIO_InitStruct member with its default value. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>SDIO_InitStruct</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an <ref refid="struct_s_d_i_o___init_type_def" kindref="compound">SDIO_InitTypeDef</ref> structure which will be initialized. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="491" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" bodystart="219" bodyend="228"/>
        <references refid="struct_s_d_i_o___init_type_def_1a4166ee534e6cf8ac2c6a6a03bec45b06" compoundref="stm32f10x__sdio_8h" startline="71">SDIO_InitTypeDef::SDIO_ClockDiv</references>
        <references refid="struct_s_d_i_o___init_type_def_1a3252c846b68988b8ae70ca0d40030a52" compoundref="stm32f10x__sdio_8h" startline="54">SDIO_InitTypeDef::SDIO_ClockEdge</references>
        <references refid="group___s_d_i_o___clock___edge_1ga6d0f902037762a3048d95303c0037313" compoundref="stm32f10x__sdio_8h" startline="129">SDIO_ClockEdge_Rising</references>
        <references refid="struct_s_d_i_o___init_type_def_1a6a06a65a5630b21da261f46125cb20b1" compoundref="stm32f10x__sdio_8h" startline="57">SDIO_InitTypeDef::SDIO_ClockBypass</references>
        <references refid="group___s_d_i_o___clock___bypass_1gacc168d55136a0c6575e5afd7a6550343" compoundref="stm32f10x__sdio_8h" startline="141">SDIO_ClockBypass_Disable</references>
        <references refid="struct_s_d_i_o___init_type_def_1ac236cc5a376a65b9de64a31dab816364" compoundref="stm32f10x__sdio_8h" startline="61">SDIO_InitTypeDef::SDIO_ClockPowerSave</references>
        <references refid="group___s_d_i_o___clock___power___save_1ga032aa5fb2dfd7ba5dbd60a3845c82ba0" compoundref="stm32f10x__sdio_8h" startline="153">SDIO_ClockPowerSave_Disable</references>
        <references refid="struct_s_d_i_o___init_type_def_1a0540529f615c2b29933b442bc326f0a7" compoundref="stm32f10x__sdio_8h" startline="65">SDIO_InitTypeDef::SDIO_BusWide</references>
        <references refid="group___s_d_i_o___bus___wide_1ga9c333b57937c5cc0a173a58519f9250a" compoundref="stm32f10x__sdio_8h" startline="165">SDIO_BusWide_1b</references>
        <references refid="struct_s_d_i_o___init_type_def_1a5f57f8aca913de9aed47ef708c05f34f" compoundref="stm32f10x__sdio_8h" startline="68">SDIO_InitTypeDef::SDIO_HardwareFlowControl</references>
        <references refid="group___s_d_i_o___hardware___flow___control_1ga7529a3c8a11ac685bde4aafa12c8a977" compoundref="stm32f10x__sdio_8h" startline="179">SDIO_HardwareFlowControl_Disable</references>
      </memberdef>
      <memberdef kind="function" id="group___s_d_i_o___exported___functions_1ga7243b857d6b323748ff3a493b265bedc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SDIO_ClockCmd</definition>
        <argsstring>(FunctionalState NewState)</argsstring>
        <name>SDIO_ClockCmd</name>
        <param>
          <type><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref></type>
          <declname>NewState</declname>
        </param>
        <briefdescription>
<para>Enables or disables the SDIO Clock. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>NewState</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of the SDIO Clock. This parameter can be: ENABLE or DISABLE. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="492" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" bodystart="235" bodyend="241"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" compoundref="stm32f10x_8h" startline="522">IS_FUNCTIONAL_STATE</references>
        <references refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" compoundref="core__cm0_8h" startline="221">__IO</references>
        <references refid="group___s_d_i_o___private___types_definitions_1gabfb5772b9b734972b576309f7ca8bf92" compoundref="stm32f10x__sdio_8c" startline="47">CLKCR_CLKEN_BB</references>
      </memberdef>
      <memberdef kind="function" id="group___s_d_i_o___exported___functions_1ga36ecca32b904de74218fbe65cd5f5270" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SDIO_SetPowerState</definition>
        <argsstring>(uint32_t SDIO_PowerState)</argsstring>
        <name>SDIO_SetPowerState</name>
        <param>
          <type>uint32_t</type>
          <declname>SDIO_PowerState</declname>
        </param>
        <briefdescription>
<para>Sets the power status of the controller. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>SDIO_PowerState</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of the Power state. This parameter can be one of the following values: <itemizedlist>
<listitem><para>SDIO_PowerState_OFF </para></listitem>
<listitem><para>SDIO_PowerState_ON </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="493" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" bodystart="251" bodyend="258"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___s_d_i_o___power___state_1gad0dae767c2024de1769efb1feccc14ef" compoundref="stm32f10x__sdio_8h" startline="193">IS_SDIO_POWER_STATE</references>
        <references refid="group___peripheral__declaration_1ga8149aa2760fffac16bc75216d5fd9331" compoundref="stm32f10x_8h" startline="1428">SDIO</references>
        <references refid="group___s_d_i_o___private___types_definitions_1ga7e6ec7be68d0fbb8fb4e3725cca9a05c" compoundref="stm32f10x__sdio_8c" startline="101">PWR_PWRCTRL_MASK</references>
      </memberdef>
      <memberdef kind="function" id="group___s_d_i_o___exported___functions_1ga3a19de2c7cd51645702213f64a1758ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t SDIO_GetPowerState</definition>
        <argsstring>(void)</argsstring>
        <name>SDIO_GetPowerState</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Gets the power status of the controller. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>Power</parametername>
</parameternamelist>
<parameterdescription>
<para>status of the controller. The returned value can be one of the following:<itemizedlist>
<listitem><para>0x00: Power OFF</para></listitem><listitem><para>0x02: Power UP</para></listitem><listitem><para>0x03: Power ON </para></listitem></itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="494" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" bodystart="269" bodyend="272"/>
        <references refid="group___peripheral__declaration_1ga8149aa2760fffac16bc75216d5fd9331" compoundref="stm32f10x_8h" startline="1428">SDIO</references>
        <references refid="group___s_d_i_o___private___types_definitions_1ga7e6ec7be68d0fbb8fb4e3725cca9a05c" compoundref="stm32f10x__sdio_8c" startline="101">PWR_PWRCTRL_MASK</references>
      </memberdef>
      <memberdef kind="function" id="group___s_d_i_o___exported___functions_1ga208f51237ef43288735829dbaed37f00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SDIO_ITConfig</definition>
        <argsstring>(uint32_t SDIO_IT, FunctionalState NewState)</argsstring>
        <name>SDIO_ITConfig</name>
        <param>
          <type>uint32_t</type>
          <declname>SDIO_IT</declname>
        </param>
        <param>
          <type><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref></type>
          <declname>NewState</declname>
        </param>
        <briefdescription>
<para>Enables or disables the SDIO interrupts. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>SDIO_IT</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the SDIO interrupt sources to be enabled or disabled. This parameter can be one or a combination of the following values: <itemizedlist>
<listitem><para>SDIO_IT_CCRCFAIL: Command response received (CRC check failed) interrupt </para></listitem>
<listitem><para>SDIO_IT_DCRCFAIL: Data block sent/received (CRC check failed) interrupt </para></listitem>
<listitem><para>SDIO_IT_CTIMEOUT: Command response timeout interrupt </para></listitem>
<listitem><para>SDIO_IT_DTIMEOUT: Data timeout interrupt </para></listitem>
<listitem><para>SDIO_IT_TXUNDERR: Transmit FIFO underrun error interrupt </para></listitem>
<listitem><para>SDIO_IT_RXOVERR: Received FIFO overrun error interrupt </para></listitem>
<listitem><para>SDIO_IT_CMDREND: Command response received (CRC check passed) interrupt </para></listitem>
<listitem><para>SDIO_IT_CMDSENT: Command sent (no response required) interrupt </para></listitem>
<listitem><para>SDIO_IT_DATAEND: Data end (data counter, SDIDCOUNT, is zero) interrupt </para></listitem>
<listitem><para>SDIO_IT_STBITERR: Start bit not detected on all data signals in wide bus mode interrupt </para></listitem>
<listitem><para>SDIO_IT_DBCKEND: Data block sent/received (CRC check passed) interrupt </para></listitem>
<listitem><para>SDIO_IT_CMDACT: Command transfer in progress interrupt </para></listitem>
<listitem><para>SDIO_IT_TXACT: Data transmit in progress interrupt </para></listitem>
<listitem><para>SDIO_IT_RXACT: Data receive in progress interrupt </para></listitem>
<listitem><para>SDIO_IT_TXFIFOHE: Transmit FIFO Half Empty interrupt </para></listitem>
<listitem><para>SDIO_IT_RXFIFOHF: Receive FIFO Half Full interrupt </para></listitem>
<listitem><para>SDIO_IT_TXFIFOF: Transmit FIFO full interrupt </para></listitem>
<listitem><para>SDIO_IT_RXFIFOF: Receive FIFO full interrupt </para></listitem>
<listitem><para>SDIO_IT_TXFIFOE: Transmit FIFO empty interrupt </para></listitem>
<listitem><para>SDIO_IT_RXFIFOE: Receive FIFO empty interrupt </para></listitem>
<listitem><para>SDIO_IT_TXDAVL: Data available in transmit FIFO interrupt </para></listitem>
<listitem><para>SDIO_IT_RXDAVL: Data available in receive FIFO interrupt </para></listitem>
<listitem><para>SDIO_IT_SDIOIT: SD I/O interrupt received interrupt </para></listitem>
<listitem><para>SDIO_IT_CEATAEND: CE-ATA command completion signal received for CMD61 interrupt </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NewState</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of the specified SDIO interrupts. This parameter can be: ENABLE or DISABLE. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="495" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" bodystart="307" bodyend="323"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___s_d_i_o___interrupt__sources_1ga0e413e92ec50bab73042e8965acc3e6c" compoundref="stm32f10x__sdio_8h" startline="227">IS_SDIO_IT</references>
        <references refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" compoundref="stm32f10x_8h" startline="522">IS_FUNCTIONAL_STATE</references>
        <references refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1ad3a9df141be0ccf10389b640f492b26d" compoundref="stm32f10x_8h" startline="521">DISABLE</references>
        <references refid="group___peripheral__declaration_1ga8149aa2760fffac16bc75216d5fd9331" compoundref="stm32f10x_8h" startline="1428">SDIO</references>
      </memberdef>
      <memberdef kind="function" id="group___s_d_i_o___exported___functions_1gad36fde5ec0ce0c2089b9d971c2271e6e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SDIO_DMACmd</definition>
        <argsstring>(FunctionalState NewState)</argsstring>
        <name>SDIO_DMACmd</name>
        <param>
          <type><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref></type>
          <declname>NewState</declname>
        </param>
        <briefdescription>
<para>Enables or disables the SDIO DMA request. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>NewState</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of the selected SDIO DMA request. This parameter can be: ENABLE or DISABLE. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="496" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" bodystart="331" bodyend="337"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" compoundref="stm32f10x_8h" startline="522">IS_FUNCTIONAL_STATE</references>
        <references refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" compoundref="core__cm0_8h" startline="221">__IO</references>
        <references refid="group___s_d_i_o___private___types_definitions_1ga43f7336d4f955c6cf1f676ccbc043fe9" compoundref="stm32f10x__sdio_8c" startline="73">DCTRL_DMAEN_BB</references>
      </memberdef>
      <memberdef kind="function" id="group___s_d_i_o___exported___functions_1ga7117d2f702703f6c0a66bc07707cab23" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SDIO_SendCommand</definition>
        <argsstring>(SDIO_CmdInitTypeDef *SDIO_CmdInitStruct)</argsstring>
        <name>SDIO_SendCommand</name>
        <param>
          <type><ref refid="struct_s_d_i_o___cmd_init_type_def" kindref="compound">SDIO_CmdInitTypeDef</ref> *</type>
          <declname>SDIO_CmdInitStruct</declname>
        </param>
        <briefdescription>
<para>Initializes the SDIO Command according to the specified parameters in the SDIO_CmdInitStruct and send the command. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>SDIO_CmdInitStruct</parametername>
</parameternamelist>
<parameterdescription>
<para>: pointer to a <ref refid="struct_s_d_i_o___cmd_init_type_def" kindref="compound">SDIO_CmdInitTypeDef</ref> structure that contains the configuration information for the SDIO command. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="497" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" bodystart="346" bodyend="374"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___s_d_i_o___command___index_1gae988f9f37c4ebb5f5f9866acb30f2880" compoundref="stm32f10x__sdio_8h" startline="236">IS_SDIO_CMD_INDEX</references>
        <references refid="struct_s_d_i_o___cmd_init_type_def_1ab5e1df1f0e8d48a308edfb59a6f80fb4" compoundref="stm32f10x__sdio_8h" startline="83">SDIO_CmdInitTypeDef::SDIO_CmdIndex</references>
        <references refid="group___s_d_i_o___response___type_1gae4df2359c9b637694b9baa220c16e062" compoundref="stm32f10x__sdio_8h" startline="248">IS_SDIO_RESPONSE</references>
        <references refid="struct_s_d_i_o___cmd_init_type_def_1aecb203e21321126d5f05c34787cacfd2" compoundref="stm32f10x__sdio_8h" startline="85">SDIO_CmdInitTypeDef::SDIO_Response</references>
        <references refid="group___s_d_i_o___wait___interrupt___state_1ga7ee5c289c8e06a76b849808d15b03810" compoundref="stm32f10x__sdio_8h" startline="262">IS_SDIO_WAIT</references>
        <references refid="struct_s_d_i_o___cmd_init_type_def_1a582258554233ff8550bd04d2d790c67c" compoundref="stm32f10x__sdio_8h" startline="88">SDIO_CmdInitTypeDef::SDIO_Wait</references>
        <references refid="group___s_d_i_o___c_p_s_m___state_1ga58cf04903dab015106e4e0937bef443b" compoundref="stm32f10x__sdio_8h" startline="274">IS_SDIO_CPSM</references>
        <references refid="struct_s_d_i_o___cmd_init_type_def_1ab0e869ae285cc132478dd743c28cd8e2" compoundref="stm32f10x__sdio_8h" startline="91">SDIO_CmdInitTypeDef::SDIO_CPSM</references>
        <references refid="group___peripheral__declaration_1ga8149aa2760fffac16bc75216d5fd9331" compoundref="stm32f10x_8h" startline="1428">SDIO</references>
        <references refid="struct_s_d_i_o___cmd_init_type_def_1a37dfc4d7191ec10cffdb05ecf58d4807" compoundref="stm32f10x__sdio_8h" startline="78">SDIO_CmdInitTypeDef::SDIO_Argument</references>
        <references refid="group___s_d_i_o___private___types_definitions_1ga2325d77090e44221b07f8fba5bc9217e" compoundref="stm32f10x__sdio_8c" startline="111">CMD_CLEAR_MASK</references>
      </memberdef>
      <memberdef kind="function" id="group___s_d_i_o___exported___functions_1ga09d9e89f49c87c82aec79c97b7068e24" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SDIO_CmdStructInit</definition>
        <argsstring>(SDIO_CmdInitTypeDef *SDIO_CmdInitStruct)</argsstring>
        <name>SDIO_CmdStructInit</name>
        <param>
          <type><ref refid="struct_s_d_i_o___cmd_init_type_def" kindref="compound">SDIO_CmdInitTypeDef</ref> *</type>
          <declname>SDIO_CmdInitStruct</declname>
        </param>
        <briefdescription>
<para>Fills each SDIO_CmdInitStruct member with its default value. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>SDIO_CmdInitStruct</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an <ref refid="struct_s_d_i_o___cmd_init_type_def" kindref="compound">SDIO_CmdInitTypeDef</ref> structure which will be initialized. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="498" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" bodystart="382" bodyend="390"/>
        <references refid="struct_s_d_i_o___cmd_init_type_def_1a37dfc4d7191ec10cffdb05ecf58d4807" compoundref="stm32f10x__sdio_8h" startline="78">SDIO_CmdInitTypeDef::SDIO_Argument</references>
        <references refid="struct_s_d_i_o___cmd_init_type_def_1ab5e1df1f0e8d48a308edfb59a6f80fb4" compoundref="stm32f10x__sdio_8h" startline="83">SDIO_CmdInitTypeDef::SDIO_CmdIndex</references>
        <references refid="struct_s_d_i_o___cmd_init_type_def_1aecb203e21321126d5f05c34787cacfd2" compoundref="stm32f10x__sdio_8h" startline="85">SDIO_CmdInitTypeDef::SDIO_Response</references>
        <references refid="group___s_d_i_o___response___type_1ga308b8ef0e79ba451644dda923bb3ac41" compoundref="stm32f10x__sdio_8h" startline="245">SDIO_Response_No</references>
        <references refid="struct_s_d_i_o___cmd_init_type_def_1a582258554233ff8550bd04d2d790c67c" compoundref="stm32f10x__sdio_8h" startline="88">SDIO_CmdInitTypeDef::SDIO_Wait</references>
        <references refid="group___s_d_i_o___wait___interrupt___state_1ga266294e1ffd7a4b45e62bff753ca44b2" compoundref="stm32f10x__sdio_8h" startline="259">SDIO_Wait_No</references>
        <references refid="struct_s_d_i_o___cmd_init_type_def_1ab0e869ae285cc132478dd743c28cd8e2" compoundref="stm32f10x__sdio_8h" startline="91">SDIO_CmdInitTypeDef::SDIO_CPSM</references>
        <references refid="group___s_d_i_o___c_p_s_m___state_1ga996751273ad238e255a740f7c2844c6c" compoundref="stm32f10x__sdio_8h" startline="272">SDIO_CPSM_Disable</references>
      </memberdef>
      <memberdef kind="function" id="group___s_d_i_o___exported___functions_1ga9badf271c818e09da301d715c4ad0e5b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t SDIO_GetCommandResponse</definition>
        <argsstring>(void)</argsstring>
        <name>SDIO_GetCommandResponse</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Returns command index of last command for which response received. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>Returns</parametername>
</parameternamelist>
<parameterdescription>
<para>the command index of the last command response received. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="499" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" bodystart="397" bodyend="400"/>
        <references refid="group___peripheral__declaration_1ga8149aa2760fffac16bc75216d5fd9331" compoundref="stm32f10x_8h" startline="1428">SDIO</references>
      </memberdef>
      <memberdef kind="function" id="group___s_d_i_o___exported___functions_1ga5c1e859511840e8cca6a9a768bce220b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t SDIO_GetResponse</definition>
        <argsstring>(uint32_t SDIO_RESP)</argsstring>
        <name>SDIO_GetResponse</name>
        <param>
          <type>uint32_t</type>
          <declname>SDIO_RESP</declname>
        </param>
        <briefdescription>
<para>Returns response received from the card for the last command. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>SDIO_RESP</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the SDIO response register. This parameter can be one of the following values: <itemizedlist>
<listitem><para>SDIO_RESP1: Response Register 1 </para></listitem>
<listitem><para>SDIO_RESP2: Response Register 2 </para></listitem>
<listitem><para>SDIO_RESP3: Response Register 3 </para></listitem>
<listitem><para>SDIO_RESP4: Response Register 4 </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>Corresponding response register value. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="500" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" bodystart="412" bodyend="422"/>
        <references refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" compoundref="core__cm0_8h" startline="221">__IO</references>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___s_d_i_o___response___registers_1gaea6a7f75a5e677d50ba5c9ae2d3a7839" compoundref="stm32f10x__sdio_8h" startline="287">IS_SDIO_RESP</references>
        <references refid="group___s_d_i_o___private___types_definitions_1ga4285ce49b005e3d03ddf9fdc491c4d70" compoundref="stm32f10x__sdio_8c" startline="114">SDIO_RESP_ADDR</references>
      </memberdef>
      <memberdef kind="function" id="group___s_d_i_o___exported___functions_1gad65d896ae919683585bda44a1e2afae4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SDIO_DataConfig</definition>
        <argsstring>(SDIO_DataInitTypeDef *SDIO_DataInitStruct)</argsstring>
        <name>SDIO_DataConfig</name>
        <param>
          <type><ref refid="struct_s_d_i_o___data_init_type_def" kindref="compound">SDIO_DataInitTypeDef</ref> *</type>
          <declname>SDIO_DataInitStruct</declname>
        </param>
        <briefdescription>
<para>Initializes the SDIO data path according to the specified parameters in the SDIO_DataInitStruct. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>SDIO_DataInitStruct</parametername>
</parameternamelist>
<parameterdescription>
<para>: pointer to a <ref refid="struct_s_d_i_o___data_init_type_def" kindref="compound">SDIO_DataInitTypeDef</ref> structure that contains the configuration information for the SDIO command. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="501" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" bodystart="431" bodyend="464"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___s_d_i_o___data___length_1ga57dd64db3f69d18625ea8ca82c009fad" compoundref="stm32f10x__sdio_8h" startline="297">IS_SDIO_DATA_LENGTH</references>
        <references refid="struct_s_d_i_o___data_init_type_def_1ac325889a6dd582130a752aafc3ec9ee9" compoundref="stm32f10x__sdio_8h" startline="100">SDIO_DataInitTypeDef::SDIO_DataLength</references>
        <references refid="group___s_d_i_o___data___block___size_1ga25ce8d64134659c479d61aa681761948" compoundref="stm32f10x__sdio_8h" startline="321">IS_SDIO_BLOCK_SIZE</references>
        <references refid="struct_s_d_i_o___data_init_type_def_1a2252d17c4b3182830eb9f400489cb10f" compoundref="stm32f10x__sdio_8h" startline="102">SDIO_DataInitTypeDef::SDIO_DataBlockSize</references>
        <references refid="group___s_d_i_o___transfer___direction_1gaf84b8004cfef6a5a525b20db8a83c2f7" compoundref="stm32f10x__sdio_8h" startline="346">IS_SDIO_TRANSFER_DIR</references>
        <references refid="struct_s_d_i_o___data_init_type_def_1a4838fffdb3f87850569dff12f15485db" compoundref="stm32f10x__sdio_8h" startline="105">SDIO_DataInitTypeDef::SDIO_TransferDir</references>
        <references refid="group___s_d_i_o___transfer___type_1gaf7565ea93f9ed01558bdc9ad80dac763" compoundref="stm32f10x__sdio_8h" startline="358">IS_SDIO_TRANSFER_MODE</references>
        <references refid="struct_s_d_i_o___data_init_type_def_1a58ac19aaaceb2791d4bbcd30f334dd21" compoundref="stm32f10x__sdio_8h" startline="109">SDIO_DataInitTypeDef::SDIO_TransferMode</references>
        <references refid="group___s_d_i_o___d_p_s_m___state_1gac87a2d7a8fc417a4514d733be50e6d63" compoundref="stm32f10x__sdio_8h" startline="370">IS_SDIO_DPSM</references>
        <references refid="struct_s_d_i_o___data_init_type_def_1ad5eb5f3c6fd9e5d4a6664c5cf57d6b03" compoundref="stm32f10x__sdio_8h" startline="112">SDIO_DataInitTypeDef::SDIO_DPSM</references>
        <references refid="group___peripheral__declaration_1ga8149aa2760fffac16bc75216d5fd9331" compoundref="stm32f10x_8h" startline="1428">SDIO</references>
        <references refid="struct_s_d_i_o___data_init_type_def_1a6877ec1042a273e228114e5362b93aa1" compoundref="stm32f10x__sdio_8h" startline="98">SDIO_DataInitTypeDef::SDIO_DataTimeOut</references>
        <references refid="group___s_d_i_o___private___types_definitions_1ga9e9fc7810b95805aeeb760bbdd87fa9b" compoundref="stm32f10x__sdio_8c" startline="106">DCTRL_CLEAR_MASK</references>
      </memberdef>
      <memberdef kind="function" id="group___s_d_i_o___exported___functions_1gaa83209c09e921521aca2587fb5b22ea2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SDIO_DataStructInit</definition>
        <argsstring>(SDIO_DataInitTypeDef *SDIO_DataInitStruct)</argsstring>
        <name>SDIO_DataStructInit</name>
        <param>
          <type><ref refid="struct_s_d_i_o___data_init_type_def" kindref="compound">SDIO_DataInitTypeDef</ref> *</type>
          <declname>SDIO_DataInitStruct</declname>
        </param>
        <briefdescription>
<para>Fills each SDIO_DataInitStruct member with its default value. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>SDIO_DataInitStruct</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an <ref refid="struct_s_d_i_o___data_init_type_def" kindref="compound">SDIO_DataInitTypeDef</ref> structure which will be initialized. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="502" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" bodystart="472" bodyend="481"/>
        <references refid="struct_s_d_i_o___data_init_type_def_1a6877ec1042a273e228114e5362b93aa1" compoundref="stm32f10x__sdio_8h" startline="98">SDIO_DataInitTypeDef::SDIO_DataTimeOut</references>
        <references refid="struct_s_d_i_o___data_init_type_def_1ac325889a6dd582130a752aafc3ec9ee9" compoundref="stm32f10x__sdio_8h" startline="100">SDIO_DataInitTypeDef::SDIO_DataLength</references>
        <references refid="struct_s_d_i_o___data_init_type_def_1a2252d17c4b3182830eb9f400489cb10f" compoundref="stm32f10x__sdio_8h" startline="102">SDIO_DataInitTypeDef::SDIO_DataBlockSize</references>
        <references refid="group___s_d_i_o___data___block___size_1gaa86e90ddc3426b242a5230b3360c620d" compoundref="stm32f10x__sdio_8h" startline="306">SDIO_DataBlockSize_1b</references>
        <references refid="struct_s_d_i_o___data_init_type_def_1a4838fffdb3f87850569dff12f15485db" compoundref="stm32f10x__sdio_8h" startline="105">SDIO_DataInitTypeDef::SDIO_TransferDir</references>
        <references refid="group___s_d_i_o___transfer___direction_1gaef8af0ffa4ea04b3362338d268cc0935" compoundref="stm32f10x__sdio_8h" startline="344">SDIO_TransferDir_ToCard</references>
        <references refid="struct_s_d_i_o___data_init_type_def_1a58ac19aaaceb2791d4bbcd30f334dd21" compoundref="stm32f10x__sdio_8h" startline="109">SDIO_DataInitTypeDef::SDIO_TransferMode</references>
        <references refid="group___s_d_i_o___transfer___type_1ga5b54ada18cc4072ceff1d98ee4b69972" compoundref="stm32f10x__sdio_8h" startline="356">SDIO_TransferMode_Block</references>
        <references refid="struct_s_d_i_o___data_init_type_def_1ad5eb5f3c6fd9e5d4a6664c5cf57d6b03" compoundref="stm32f10x__sdio_8h" startline="112">SDIO_DataInitTypeDef::SDIO_DPSM</references>
        <references refid="group___s_d_i_o___d_p_s_m___state_1ga156a9f6ab87a46dcb99ddd7462ca064b" compoundref="stm32f10x__sdio_8h" startline="368">SDIO_DPSM_Disable</references>
      </memberdef>
      <memberdef kind="function" id="group___s_d_i_o___exported___functions_1ga7a28aaa2c25a9a5a8db1f49b0e8c9d0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t SDIO_GetDataCounter</definition>
        <argsstring>(void)</argsstring>
        <name>SDIO_GetDataCounter</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Returns number of remaining data bytes to be transferred. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>Number</parametername>
</parameternamelist>
<parameterdescription>
<para>of remaining data bytes to be transferred </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="503" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" bodystart="488" bodyend="491"/>
        <references refid="group___peripheral__declaration_1ga8149aa2760fffac16bc75216d5fd9331" compoundref="stm32f10x_8h" startline="1428">SDIO</references>
      </memberdef>
      <memberdef kind="function" id="group___s_d_i_o___exported___functions_1ga4e8ac755ef3c31ecd4ed2708df19187e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t SDIO_ReadData</definition>
        <argsstring>(void)</argsstring>
        <name>SDIO_ReadData</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Read one data word from Rx FIFO. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>Data</parametername>
</parameternamelist>
<parameterdescription>
<para>received </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="504" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" bodystart="498" bodyend="501"/>
        <references refid="group___peripheral__declaration_1ga8149aa2760fffac16bc75216d5fd9331" compoundref="stm32f10x_8h" startline="1428">SDIO</references>
      </memberdef>
      <memberdef kind="function" id="group___s_d_i_o___exported___functions_1ga361008b5252aa33b5f2b5823ee3d7240" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SDIO_WriteData</definition>
        <argsstring>(uint32_t Data)</argsstring>
        <name>SDIO_WriteData</name>
        <param>
          <type>uint32_t</type>
          <declname>Data</declname>
        </param>
        <briefdescription>
<para>Write one data word to Tx FIFO. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Data</parametername>
</parameternamelist>
<parameterdescription>
<para>32-bit data word to write. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="505" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" bodystart="508" bodyend="511"/>
        <references refid="group___peripheral__declaration_1ga8149aa2760fffac16bc75216d5fd9331" compoundref="stm32f10x_8h" startline="1428">SDIO</references>
      </memberdef>
      <memberdef kind="function" id="group___s_d_i_o___exported___functions_1ga9a3343983a2d68b5164a1c89797d2dd6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t SDIO_GetFIFOCount</definition>
        <argsstring>(void)</argsstring>
        <name>SDIO_GetFIFOCount</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Returns the number of words left to be written to or read from FIFO. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>Remaining</parametername>
</parameternamelist>
<parameterdescription>
<para>number of words. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="506" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" bodystart="518" bodyend="521"/>
        <references refid="group___peripheral__declaration_1ga8149aa2760fffac16bc75216d5fd9331" compoundref="stm32f10x_8h" startline="1428">SDIO</references>
      </memberdef>
      <memberdef kind="function" id="group___s_d_i_o___exported___functions_1gac88f914d9a68a83abc2265ec8a7b79fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SDIO_StartSDIOReadWait</definition>
        <argsstring>(FunctionalState NewState)</argsstring>
        <name>SDIO_StartSDIOReadWait</name>
        <param>
          <type><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref></type>
          <declname>NewState</declname>
        </param>
        <briefdescription>
<para>Starts the SD I/O Read Wait operation. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>NewState</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of the Start SDIO Read Wait operation. This parameter can be: ENABLE or DISABLE. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="507" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" bodystart="529" bodyend="535"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" compoundref="stm32f10x_8h" startline="522">IS_FUNCTIONAL_STATE</references>
        <references refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" compoundref="core__cm0_8h" startline="221">__IO</references>
        <references refid="group___s_d_i_o___private___types_definitions_1gac776c39dfac0e1ed007217133e1145c3" compoundref="stm32f10x__sdio_8c" startline="77">DCTRL_RWSTART_BB</references>
      </memberdef>
      <memberdef kind="function" id="group___s_d_i_o___exported___functions_1gaca6b25eb2debb73ac827c66f0ebcf837" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SDIO_StopSDIOReadWait</definition>
        <argsstring>(FunctionalState NewState)</argsstring>
        <name>SDIO_StopSDIOReadWait</name>
        <param>
          <type><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref></type>
          <declname>NewState</declname>
        </param>
        <briefdescription>
<para>Stops the SD I/O Read Wait operation. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>NewState</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of the Stop SDIO Read Wait operation. This parameter can be: ENABLE or DISABLE. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="508" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" bodystart="543" bodyend="549"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" compoundref="stm32f10x_8h" startline="522">IS_FUNCTIONAL_STATE</references>
        <references refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" compoundref="core__cm0_8h" startline="221">__IO</references>
        <references refid="group___s_d_i_o___private___types_definitions_1ga678da1db835676b0fb1976cf3408e2d1" compoundref="stm32f10x__sdio_8c" startline="81">DCTRL_RWSTOP_BB</references>
      </memberdef>
      <memberdef kind="function" id="group___s_d_i_o___exported___functions_1ga2baac4ea1bb6c2d94345d2712604338a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SDIO_SetSDIOReadWaitMode</definition>
        <argsstring>(uint32_t SDIO_ReadWaitMode)</argsstring>
        <name>SDIO_SetSDIOReadWaitMode</name>
        <param>
          <type>uint32_t</type>
          <declname>SDIO_ReadWaitMode</declname>
        </param>
        <briefdescription>
<para>Sets one of the two options of inserting read wait interval. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>SDIO_ReadWaitMode</parametername>
</parameternamelist>
<parameterdescription>
<para>SD I/O Read Wait operation mode. This parameter can be: <itemizedlist>
<listitem><para>SDIO_ReadWaitMode_CLK: Read Wait control by stopping SDIOCLK </para></listitem>
<listitem><para>SDIO_ReadWaitMode_DATA2: Read Wait control using SDIO_DATA2 </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="509" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" bodystart="559" bodyend="565"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___s_d_i_o___read___wait___mode_1ga35144093f5b3553a62c2248896eead4d" compoundref="stm32f10x__sdio_8h" startline="467">IS_SDIO_READWAIT_MODE</references>
        <references refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" compoundref="core__cm0_8h" startline="221">__IO</references>
        <references refid="group___s_d_i_o___private___types_definitions_1gad34bfe8650534ce24320ae83886c91e3" compoundref="stm32f10x__sdio_8c" startline="85">DCTRL_RWMOD_BB</references>
      </memberdef>
      <memberdef kind="function" id="group___s_d_i_o___exported___functions_1ga24e210c185d5a7855cbaff4472a8f8d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SDIO_SetSDIOOperation</definition>
        <argsstring>(FunctionalState NewState)</argsstring>
        <name>SDIO_SetSDIOOperation</name>
        <param>
          <type><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref></type>
          <declname>NewState</declname>
        </param>
        <briefdescription>
<para>Enables or disables the SD I/O Mode Operation. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>NewState</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of SDIO specific operation. This parameter can be: ENABLE or DISABLE. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="510" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" bodystart="573" bodyend="579"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" compoundref="stm32f10x_8h" startline="522">IS_FUNCTIONAL_STATE</references>
        <references refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" compoundref="core__cm0_8h" startline="221">__IO</references>
        <references refid="group___s_d_i_o___private___types_definitions_1ga894f7da62b89ddd9f4b79d066056a3c7" compoundref="stm32f10x__sdio_8c" startline="89">DCTRL_SDIOEN_BB</references>
      </memberdef>
      <memberdef kind="function" id="group___s_d_i_o___exported___functions_1ga9264137a01a1ab81d03bc80a3b3120fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SDIO_SendSDIOSuspendCmd</definition>
        <argsstring>(FunctionalState NewState)</argsstring>
        <name>SDIO_SendSDIOSuspendCmd</name>
        <param>
          <type><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref></type>
          <declname>NewState</declname>
        </param>
        <briefdescription>
<para>Enables or disables the SD I/O Mode suspend command sending. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>NewState</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of the SD I/O Mode suspend command. This parameter can be: ENABLE or DISABLE. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="511" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" bodystart="587" bodyend="593"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" compoundref="stm32f10x_8h" startline="522">IS_FUNCTIONAL_STATE</references>
        <references refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" compoundref="core__cm0_8h" startline="221">__IO</references>
        <references refid="group___s_d_i_o___private___types_definitions_1ga931e48aa282e2a937308f57f807e0781" compoundref="stm32f10x__sdio_8c" startline="54">CMD_SDIOSUSPEND_BB</references>
      </memberdef>
      <memberdef kind="function" id="group___s_d_i_o___exported___functions_1ga1bbe98c629812bc62121d9c8b2c5e21b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SDIO_CommandCompletionCmd</definition>
        <argsstring>(FunctionalState NewState)</argsstring>
        <name>SDIO_CommandCompletionCmd</name>
        <param>
          <type><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref></type>
          <declname>NewState</declname>
        </param>
        <briefdescription>
<para>Enables or disables the command completion signal. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>NewState</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of command completion signal. This parameter can be: ENABLE or DISABLE. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="512" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" bodystart="601" bodyend="607"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" compoundref="stm32f10x_8h" startline="522">IS_FUNCTIONAL_STATE</references>
        <references refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" compoundref="core__cm0_8h" startline="221">__IO</references>
        <references refid="group___s_d_i_o___private___types_definitions_1gade06098d1616639ce5f1b70675280b7c" compoundref="stm32f10x__sdio_8c" startline="58">CMD_ENCMDCOMPL_BB</references>
      </memberdef>
      <memberdef kind="function" id="group___s_d_i_o___exported___functions_1gab44b8cbc21be000a291563076159503b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SDIO_CEATAITCmd</definition>
        <argsstring>(FunctionalState NewState)</argsstring>
        <name>SDIO_CEATAITCmd</name>
        <param>
          <type><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref></type>
          <declname>NewState</declname>
        </param>
        <briefdescription>
<para>Enables or disables the CE-ATA interrupt. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>NewState</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of CE-ATA interrupt. This parameter can be: ENABLE or DISABLE. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="513" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" bodystart="614" bodyend="620"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" compoundref="stm32f10x_8h" startline="522">IS_FUNCTIONAL_STATE</references>
        <references refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" compoundref="core__cm0_8h" startline="221">__IO</references>
        <references refid="group___s_d_i_o___private___types_definitions_1ga08623f1d053677de8b20a6f5f5090edd" compoundref="stm32f10x__sdio_8c" startline="62">CMD_NIEN_BB</references>
      </memberdef>
      <memberdef kind="function" id="group___s_d_i_o___exported___functions_1ga8dc7f17804bdb745b42f6647c8487b4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SDIO_SendCEATACmd</definition>
        <argsstring>(FunctionalState NewState)</argsstring>
        <name>SDIO_SendCEATACmd</name>
        <param>
          <type><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref></type>
          <declname>NewState</declname>
        </param>
        <briefdescription>
<para>Sends CE-ATA command (CMD61). </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>NewState</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of CE-ATA command. This parameter can be: ENABLE or DISABLE. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="514" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" bodystart="627" bodyend="633"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" compoundref="stm32f10x_8h" startline="522">IS_FUNCTIONAL_STATE</references>
        <references refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" compoundref="core__cm0_8h" startline="221">__IO</references>
        <references refid="group___s_d_i_o___private___types_definitions_1gabb7e537f931b6fdd3b49e826f2e19d7c" compoundref="stm32f10x__sdio_8c" startline="66">CMD_ATACMD_BB</references>
      </memberdef>
      <memberdef kind="function" id="group___s_d_i_o___exported___functions_1ga644514b4b3c95c5c4326d99cd166f6f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___exported__types_1ga89136caac2e14c55151f527ac02daaff" kindref="member">FlagStatus</ref></type>
        <definition>FlagStatus SDIO_GetFlagStatus</definition>
        <argsstring>(uint32_t SDIO_FLAG)</argsstring>
        <name>SDIO_GetFlagStatus</name>
        <param>
          <type>uint32_t</type>
          <declname>SDIO_FLAG</declname>
        </param>
        <briefdescription>
<para>Checks whether the specified SDIO flag is set or not. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>SDIO_FLAG</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the flag to check. This parameter can be one of the following values: <itemizedlist>
<listitem><para>SDIO_FLAG_CCRCFAIL: Command response received (CRC check failed) </para></listitem>
<listitem><para>SDIO_FLAG_DCRCFAIL: Data block sent/received (CRC check failed) </para></listitem>
<listitem><para>SDIO_FLAG_CTIMEOUT: Command response timeout </para></listitem>
<listitem><para>SDIO_FLAG_DTIMEOUT: Data timeout </para></listitem>
<listitem><para>SDIO_FLAG_TXUNDERR: Transmit FIFO underrun error </para></listitem>
<listitem><para>SDIO_FLAG_RXOVERR: Received FIFO overrun error </para></listitem>
<listitem><para>SDIO_FLAG_CMDREND: Command response received (CRC check passed) </para></listitem>
<listitem><para>SDIO_FLAG_CMDSENT: Command sent (no response required) </para></listitem>
<listitem><para>SDIO_FLAG_DATAEND: Data end (data counter, SDIDCOUNT, is zero) </para></listitem>
<listitem><para>SDIO_FLAG_STBITERR: Start bit not detected on all data signals in wide bus mode. </para></listitem>
<listitem><para>SDIO_FLAG_DBCKEND: Data block sent/received (CRC check passed) </para></listitem>
<listitem><para>SDIO_FLAG_CMDACT: Command transfer in progress </para></listitem>
<listitem><para>SDIO_FLAG_TXACT: Data transmit in progress </para></listitem>
<listitem><para>SDIO_FLAG_RXACT: Data receive in progress </para></listitem>
<listitem><para>SDIO_FLAG_TXFIFOHE: Transmit FIFO Half Empty </para></listitem>
<listitem><para>SDIO_FLAG_RXFIFOHF: Receive FIFO Half Full </para></listitem>
<listitem><para>SDIO_FLAG_TXFIFOF: Transmit FIFO full </para></listitem>
<listitem><para>SDIO_FLAG_RXFIFOF: Receive FIFO full </para></listitem>
<listitem><para>SDIO_FLAG_TXFIFOE: Transmit FIFO empty </para></listitem>
<listitem><para>SDIO_FLAG_RXFIFOE: Receive FIFO empty </para></listitem>
<listitem><para>SDIO_FLAG_TXDAVL: Data available in transmit FIFO </para></listitem>
<listitem><para>SDIO_FLAG_RXDAVL: Data available in receive FIFO </para></listitem>
<listitem><para>SDIO_FLAG_SDIOIT: SD I/O interrupt received </para></listitem>
<listitem><para>SDIO_FLAG_CEATAEND: CE-ATA command completion signal received for CMD61 </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of SDIO_FLAG (SET or RESET). </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="515" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" bodystart="666" bodyend="682"/>
        <references refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffa589b7d94a3d91d145720e2fed0eb3a05" compoundref="stm32f10x_8h" startline="519">RESET</references>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___s_d_i_o___flags_1ga04b3c3c316e112172abacbf5e316f24a" compoundref="stm32f10x__sdio_8h" startline="403">IS_SDIO_FLAG</references>
        <references refid="group___peripheral__declaration_1ga8149aa2760fffac16bc75216d5fd9331" compoundref="stm32f10x_8h" startline="1428">SDIO</references>
        <references refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffab44c8101cc294c074709ec1b14211792" compoundref="stm32f10x_8h" startline="519">SET</references>
      </memberdef>
      <memberdef kind="function" id="group___s_d_i_o___exported___functions_1ga7aff4efdeb528229135f9f285e53518a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SDIO_ClearFlag</definition>
        <argsstring>(uint32_t SDIO_FLAG)</argsstring>
        <name>SDIO_ClearFlag</name>
        <param>
          <type>uint32_t</type>
          <declname>SDIO_FLAG</declname>
        </param>
        <briefdescription>
<para>Clears the SDIO&apos;s pending flags. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>SDIO_FLAG</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the flag to clear. This parameter can be one or a combination of the following values: <itemizedlist>
<listitem><para>SDIO_FLAG_CCRCFAIL: Command response received (CRC check failed) </para></listitem>
<listitem><para>SDIO_FLAG_DCRCFAIL: Data block sent/received (CRC check failed) </para></listitem>
<listitem><para>SDIO_FLAG_CTIMEOUT: Command response timeout </para></listitem>
<listitem><para>SDIO_FLAG_DTIMEOUT: Data timeout </para></listitem>
<listitem><para>SDIO_FLAG_TXUNDERR: Transmit FIFO underrun error </para></listitem>
<listitem><para>SDIO_FLAG_RXOVERR: Received FIFO overrun error </para></listitem>
<listitem><para>SDIO_FLAG_CMDREND: Command response received (CRC check passed) </para></listitem>
<listitem><para>SDIO_FLAG_CMDSENT: Command sent (no response required) </para></listitem>
<listitem><para>SDIO_FLAG_DATAEND: Data end (data counter, SDIDCOUNT, is zero) </para></listitem>
<listitem><para>SDIO_FLAG_STBITERR: Start bit not detected on all data signals in wide bus mode </para></listitem>
<listitem><para>SDIO_FLAG_DBCKEND: Data block sent/received (CRC check passed) </para></listitem>
<listitem><para>SDIO_FLAG_SDIOIT: SD I/O interrupt received </para></listitem>
<listitem><para>SDIO_FLAG_CEATAEND: CE-ATA command completion signal received for CMD61 </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="516" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" bodystart="704" bodyend="710"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___s_d_i_o___flags_1ga8a093bc0b51901676fd5da7087d8ab3a" compoundref="stm32f10x__sdio_8h" startline="428">IS_SDIO_CLEAR_FLAG</references>
        <references refid="group___peripheral__declaration_1ga8149aa2760fffac16bc75216d5fd9331" compoundref="stm32f10x_8h" startline="1428">SDIO</references>
      </memberdef>
      <memberdef kind="function" id="group___s_d_i_o___exported___functions_1ga2d64af1f3df0f99cb518f9a89bbd02ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___exported__types_1gaacbd7ed539db0aacd973a0f6eca34074" kindref="member">ITStatus</ref></type>
        <definition>ITStatus SDIO_GetITStatus</definition>
        <argsstring>(uint32_t SDIO_IT)</argsstring>
        <name>SDIO_GetITStatus</name>
        <param>
          <type>uint32_t</type>
          <declname>SDIO_IT</declname>
        </param>
        <briefdescription>
<para>Checks whether the specified SDIO interrupt has occurred or not. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>SDIO_IT</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the SDIO interrupt source to check. This parameter can be one of the following values: <itemizedlist>
<listitem><para>SDIO_IT_CCRCFAIL: Command response received (CRC check failed) interrupt </para></listitem>
<listitem><para>SDIO_IT_DCRCFAIL: Data block sent/received (CRC check failed) interrupt </para></listitem>
<listitem><para>SDIO_IT_CTIMEOUT: Command response timeout interrupt </para></listitem>
<listitem><para>SDIO_IT_DTIMEOUT: Data timeout interrupt </para></listitem>
<listitem><para>SDIO_IT_TXUNDERR: Transmit FIFO underrun error interrupt </para></listitem>
<listitem><para>SDIO_IT_RXOVERR: Received FIFO overrun error interrupt </para></listitem>
<listitem><para>SDIO_IT_CMDREND: Command response received (CRC check passed) interrupt </para></listitem>
<listitem><para>SDIO_IT_CMDSENT: Command sent (no response required) interrupt </para></listitem>
<listitem><para>SDIO_IT_DATAEND: Data end (data counter, SDIDCOUNT, is zero) interrupt </para></listitem>
<listitem><para>SDIO_IT_STBITERR: Start bit not detected on all data signals in wide bus mode interrupt </para></listitem>
<listitem><para>SDIO_IT_DBCKEND: Data block sent/received (CRC check passed) interrupt </para></listitem>
<listitem><para>SDIO_IT_CMDACT: Command transfer in progress interrupt </para></listitem>
<listitem><para>SDIO_IT_TXACT: Data transmit in progress interrupt </para></listitem>
<listitem><para>SDIO_IT_RXACT: Data receive in progress interrupt </para></listitem>
<listitem><para>SDIO_IT_TXFIFOHE: Transmit FIFO Half Empty interrupt </para></listitem>
<listitem><para>SDIO_IT_RXFIFOHF: Receive FIFO Half Full interrupt </para></listitem>
<listitem><para>SDIO_IT_TXFIFOF: Transmit FIFO full interrupt </para></listitem>
<listitem><para>SDIO_IT_RXFIFOF: Receive FIFO full interrupt </para></listitem>
<listitem><para>SDIO_IT_TXFIFOE: Transmit FIFO empty interrupt </para></listitem>
<listitem><para>SDIO_IT_RXFIFOE: Receive FIFO empty interrupt </para></listitem>
<listitem><para>SDIO_IT_TXDAVL: Data available in transmit FIFO interrupt </para></listitem>
<listitem><para>SDIO_IT_RXDAVL: Data available in receive FIFO interrupt </para></listitem>
<listitem><para>SDIO_IT_SDIOIT: SD I/O interrupt received interrupt </para></listitem>
<listitem><para>SDIO_IT_CEATAEND: CE-ATA command completion signal received for CMD61 interrupt </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of SDIO_IT (SET or RESET). </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="517" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" bodystart="743" bodyend="758"/>
        <references refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffa589b7d94a3d91d145720e2fed0eb3a05" compoundref="stm32f10x_8h" startline="519">RESET</references>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___s_d_i_o___flags_1gaef42c81f1f6250d8f9f438f4e16d1e98" compoundref="stm32f10x__sdio_8h" startline="430">IS_SDIO_GET_IT</references>
        <references refid="group___peripheral__declaration_1ga8149aa2760fffac16bc75216d5fd9331" compoundref="stm32f10x_8h" startline="1428">SDIO</references>
        <references refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffab44c8101cc294c074709ec1b14211792" compoundref="stm32f10x_8h" startline="519">SET</references>
      </memberdef>
      <memberdef kind="function" id="group___s_d_i_o___exported___functions_1ga048e07fd86321cd01b2a22c071c3149b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SDIO_ClearITPendingBit</definition>
        <argsstring>(uint32_t SDIO_IT)</argsstring>
        <name>SDIO_ClearITPendingBit</name>
        <param>
          <type>uint32_t</type>
          <declname>SDIO_IT</declname>
        </param>
        <briefdescription>
<para>Clears the SDIO&apos;s interrupt pending bits. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>SDIO_IT</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the interrupt pending bit to clear. This parameter can be one or a combination of the following values: <itemizedlist>
<listitem><para>SDIO_IT_CCRCFAIL: Command response received (CRC check failed) interrupt </para></listitem>
<listitem><para>SDIO_IT_DCRCFAIL: Data block sent/received (CRC check failed) interrupt </para></listitem>
<listitem><para>SDIO_IT_CTIMEOUT: Command response timeout interrupt </para></listitem>
<listitem><para>SDIO_IT_DTIMEOUT: Data timeout interrupt </para></listitem>
<listitem><para>SDIO_IT_TXUNDERR: Transmit FIFO underrun error interrupt </para></listitem>
<listitem><para>SDIO_IT_RXOVERR: Received FIFO overrun error interrupt </para></listitem>
<listitem><para>SDIO_IT_CMDREND: Command response received (CRC check passed) interrupt </para></listitem>
<listitem><para>SDIO_IT_CMDSENT: Command sent (no response required) interrupt </para></listitem>
<listitem><para>SDIO_IT_DATAEND: Data end (data counter, SDIDCOUNT, is zero) interrupt </para></listitem>
<listitem><para>SDIO_IT_STBITERR: Start bit not detected on all data signals in wide bus mode interrupt </para></listitem>
<listitem><para>SDIO_IT_SDIOIT: SD I/O interrupt received interrupt </para></listitem>
<listitem><para>SDIO_IT_CEATAEND: CE-ATA command completion signal received for CMD61 </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h" line="518" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" bodystart="779" bodyend="785"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___s_d_i_o___flags_1gaf829b01d8c3e9a1e4e04d39abdc8c355" compoundref="stm32f10x__sdio_8h" startline="455">IS_SDIO_CLEAR_IT</references>
        <references refid="group___peripheral__declaration_1ga8149aa2760fffac16bc75216d5fd9331" compoundref="stm32f10x_8h" startline="1428">SDIO</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This file contains all the functions prototypes for the SDIO firmware library. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>MCD Application Team </para></simplesect>
<simplesect kind="version"><para>V3.5.0 </para></simplesect>
<simplesect kind="date"><para>11-March-2011 </para></simplesect>
<simplesect kind="attention"><para></para></simplesect>
THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.</para><para><heading level="2"><center><copy/> COPYRIGHT 2011 STMicroelectronics</center></heading>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="23"><highlight class="comment">/*<sp/>Define<sp/>to<sp/>prevent<sp/>recursive<sp/>inclusion<sp/>-------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__STM32F10x_SDIO_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__STM32F10x_SDIO_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/>[ILG]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>(<sp/>__GNUC__<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>GCC<sp/>diagnostic<sp/>push</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>GCC<sp/>diagnostic<sp/>ignored<sp/>&quot;-Wpadded&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Includes<sp/>------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="stm32f10x_8h" kindref="compound">stm32f10x.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="struct_s_d_i_o___init_type_def" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal">{</highlight></codeline>
<codeline lineno="54" refid="struct_s_d_i_o___init_type_def_1a3252c846b68988b8ae70ca0d40030a52" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="struct_s_d_i_o___init_type_def_1a3252c846b68988b8ae70ca0d40030a52" kindref="member">SDIO_ClockEdge</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="57" refid="struct_s_d_i_o___init_type_def_1a6a06a65a5630b21da261f46125cb20b1" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="struct_s_d_i_o___init_type_def_1a6a06a65a5630b21da261f46125cb20b1" kindref="member">SDIO_ClockBypass</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="61" refid="struct_s_d_i_o___init_type_def_1ac236cc5a376a65b9de64a31dab816364" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="struct_s_d_i_o___init_type_def_1ac236cc5a376a65b9de64a31dab816364" kindref="member">SDIO_ClockPowerSave</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="65" refid="struct_s_d_i_o___init_type_def_1a0540529f615c2b29933b442bc326f0a7" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="struct_s_d_i_o___init_type_def_1a0540529f615c2b29933b442bc326f0a7" kindref="member">SDIO_BusWide</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="68" refid="struct_s_d_i_o___init_type_def_1a5f57f8aca913de9aed47ef708c05f34f" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="struct_s_d_i_o___init_type_def_1a5f57f8aca913de9aed47ef708c05f34f" kindref="member">SDIO_HardwareFlowControl</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="71" refid="struct_s_d_i_o___init_type_def_1a4166ee534e6cf8ac2c6a6a03bec45b06" refkind="member"><highlight class="normal"><sp/><sp/>uint8_t<sp/><ref refid="struct_s_d_i_o___init_type_def_1a4166ee534e6cf8ac2c6a6a03bec45b06" kindref="member">SDIO_ClockDiv</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="74"><highlight class="normal">}<sp/><ref refid="struct_s_d_i_o___init_type_def" kindref="compound">SDIO_InitTypeDef</ref>;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="struct_s_d_i_o___cmd_init_type_def" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal">{</highlight></codeline>
<codeline lineno="78" refid="struct_s_d_i_o___cmd_init_type_def_1a37dfc4d7191ec10cffdb05ecf58d4807" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="struct_s_d_i_o___cmd_init_type_def_1a37dfc4d7191ec10cffdb05ecf58d4807" kindref="member">SDIO_Argument</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="83" refid="struct_s_d_i_o___cmd_init_type_def_1ab5e1df1f0e8d48a308edfb59a6f80fb4" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="struct_s_d_i_o___cmd_init_type_def_1ab5e1df1f0e8d48a308edfb59a6f80fb4" kindref="member">SDIO_CmdIndex</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="85" refid="struct_s_d_i_o___cmd_init_type_def_1aecb203e21321126d5f05c34787cacfd2" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="struct_s_d_i_o___cmd_init_type_def_1aecb203e21321126d5f05c34787cacfd2" kindref="member">SDIO_Response</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="88" refid="struct_s_d_i_o___cmd_init_type_def_1a582258554233ff8550bd04d2d790c67c" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="struct_s_d_i_o___cmd_init_type_def_1a582258554233ff8550bd04d2d790c67c" kindref="member">SDIO_Wait</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="91" refid="struct_s_d_i_o___cmd_init_type_def_1ab0e869ae285cc132478dd743c28cd8e2" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="struct_s_d_i_o___cmd_init_type_def_1ab0e869ae285cc132478dd743c28cd8e2" kindref="member">SDIO_CPSM</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="94"><highlight class="normal">}<sp/><ref refid="struct_s_d_i_o___cmd_init_type_def" kindref="compound">SDIO_CmdInitTypeDef</ref>;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="struct_s_d_i_o___data_init_type_def" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal">{</highlight></codeline>
<codeline lineno="98" refid="struct_s_d_i_o___data_init_type_def_1a6877ec1042a273e228114e5362b93aa1" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="struct_s_d_i_o___data_init_type_def_1a6877ec1042a273e228114e5362b93aa1" kindref="member">SDIO_DataTimeOut</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="100" refid="struct_s_d_i_o___data_init_type_def_1ac325889a6dd582130a752aafc3ec9ee9" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="struct_s_d_i_o___data_init_type_def_1ac325889a6dd582130a752aafc3ec9ee9" kindref="member">SDIO_DataLength</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="102" refid="struct_s_d_i_o___data_init_type_def_1a2252d17c4b3182830eb9f400489cb10f" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="struct_s_d_i_o___data_init_type_def_1a2252d17c4b3182830eb9f400489cb10f" kindref="member">SDIO_DataBlockSize</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="105" refid="struct_s_d_i_o___data_init_type_def_1a4838fffdb3f87850569dff12f15485db" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="struct_s_d_i_o___data_init_type_def_1a4838fffdb3f87850569dff12f15485db" kindref="member">SDIO_TransferDir</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="109" refid="struct_s_d_i_o___data_init_type_def_1a58ac19aaaceb2791d4bbcd30f334dd21" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="struct_s_d_i_o___data_init_type_def_1a58ac19aaaceb2791d4bbcd30f334dd21" kindref="member">SDIO_TransferMode</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="112" refid="struct_s_d_i_o___data_init_type_def_1ad5eb5f3c6fd9e5d4a6664c5cf57d6b03" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="struct_s_d_i_o___data_init_type_def_1ad5eb5f3c6fd9e5d4a6664c5cf57d6b03" kindref="member">SDIO_DPSM</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="115"><highlight class="normal">}<sp/><ref refid="struct_s_d_i_o___data_init_type_def" kindref="compound">SDIO_DataInitTypeDef</ref>;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="129" refid="group___s_d_i_o___clock___edge_1ga6d0f902037762a3048d95303c0037313" refkind="member"><highlight class="preprocessor">#define<sp/>SDIO_ClockEdge_Rising<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130" refid="group___s_d_i_o___clock___edge_1ga7be68024e3e2fe1994def85bc944189b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDIO_ClockEdge_Falling<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00002000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131" refid="group___s_d_i_o___clock___edge_1ga63420b10a52e3d82a89a45f20dc41786" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_SDIO_CLOCK_EDGE(EDGE)<sp/>(((EDGE)<sp/>==<sp/>SDIO_ClockEdge_Rising)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="132"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((EDGE)<sp/>==<sp/>SDIO_ClockEdge_Falling))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="141" refid="group___s_d_i_o___clock___bypass_1gacc168d55136a0c6575e5afd7a6550343" refkind="member"><highlight class="preprocessor">#define<sp/>SDIO_ClockBypass_Disable<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142" refid="group___s_d_i_o___clock___bypass_1ga5e1e9f7e05ea62dd2315eb556bc10e5c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDIO_ClockBypass_Enable<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000400)<sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143" refid="group___s_d_i_o___clock___bypass_1ga5d5a2fcdd3150e4a89c5aa1efd738dec" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_SDIO_CLOCK_BYPASS(BYPASS)<sp/>(((BYPASS)<sp/>==<sp/>SDIO_ClockBypass_Disable)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="144"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((BYPASS)<sp/>==<sp/>SDIO_ClockBypass_Enable))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="153" refid="group___s_d_i_o___clock___power___save_1ga032aa5fb2dfd7ba5dbd60a3845c82ba0" refkind="member"><highlight class="preprocessor">#define<sp/>SDIO_ClockPowerSave_Disable<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154" refid="group___s_d_i_o___clock___power___save_1ga9f5b66a0044c4ff36a3eb1ec758f7ea7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDIO_ClockPowerSave_Enable<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000200)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155" refid="group___s_d_i_o___clock___power___save_1ga41988203e5d4e35a755aa604f1876cd3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_SDIO_CLOCK_POWER_SAVE(SAVE)<sp/>(((SAVE)<sp/>==<sp/>SDIO_ClockPowerSave_Disable)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="156"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((SAVE)<sp/>==<sp/>SDIO_ClockPowerSave_Enable))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="165" refid="group___s_d_i_o___bus___wide_1ga9c333b57937c5cc0a173a58519f9250a" refkind="member"><highlight class="preprocessor">#define<sp/>SDIO_BusWide_1b<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166" refid="group___s_d_i_o___bus___wide_1ga79815d1d798b28a2d3750ad25466ff1b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDIO_BusWide_4b<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000800)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167" refid="group___s_d_i_o___bus___wide_1ga4d864f5c4e1af298146afc1d680081e9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDIO_BusWide_8b<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00001000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168" refid="group___s_d_i_o___bus___wide_1gaa5c6ad922117d5df3213631bf68fde5b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_SDIO_BUS_WIDE(WIDE)<sp/>(((WIDE)<sp/>==<sp/>SDIO_BusWide_1b)<sp/>||<sp/>((WIDE)<sp/>==<sp/>SDIO_BusWide_4b)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="169"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((WIDE)<sp/>==<sp/>SDIO_BusWide_8b))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="179" refid="group___s_d_i_o___hardware___flow___control_1ga7529a3c8a11ac685bde4aafa12c8a977" refkind="member"><highlight class="preprocessor">#define<sp/>SDIO_HardwareFlowControl_Disable<sp/><sp/><sp/><sp/>((uint32_t)0x00000000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180" refid="group___s_d_i_o___hardware___flow___control_1gab6cfef6778d829f3dcefc6c2bad7c9aa" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDIO_HardwareFlowControl_Enable<sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00004000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181" refid="group___s_d_i_o___hardware___flow___control_1gad8be549f8348479d064dff21343ae411" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_SDIO_HARDWARE_FLOW_CONTROL(CONTROL)<sp/>(((CONTROL)<sp/>==<sp/>SDIO_HardwareFlowControl_Disable)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="182"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((CONTROL)<sp/>==<sp/>SDIO_HardwareFlowControl_Enable))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="191" refid="group___s_d_i_o___power___state_1gab2f36a68fc50795ea74a7e98b4ac2d37" refkind="member"><highlight class="preprocessor">#define<sp/>SDIO_PowerState_OFF<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192" refid="group___s_d_i_o___power___state_1ga0aacd8c94effe8066c6d447fc884d217" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDIO_PowerState_ON<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000003)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193" refid="group___s_d_i_o___power___state_1gad0dae767c2024de1769efb1feccc14ef" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_SDIO_POWER_STATE(STATE)<sp/>(((STATE)<sp/>==<sp/>SDIO_PowerState_OFF)<sp/>||<sp/>((STATE)<sp/>==<sp/>SDIO_PowerState_ON))<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="203" refid="group___s_d_i_o___interrupt__sources_1gabb076105e18355a260c40a379511e72f" refkind="member"><highlight class="preprocessor">#define<sp/>SDIO_IT_CCRCFAIL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000001)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204" refid="group___s_d_i_o___interrupt__sources_1gaf3321305cb4e24419185a4b92ead299a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDIO_IT_DCRCFAIL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000002)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205" refid="group___s_d_i_o___interrupt__sources_1ga3c2fdef0993f10e65d4fddbdf71febed" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDIO_IT_CTIMEOUT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000004)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206" refid="group___s_d_i_o___interrupt__sources_1gaf5ce4bfa8459ccbe892791e5cdc26a6f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDIO_IT_DTIMEOUT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000008)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207" refid="group___s_d_i_o___interrupt__sources_1ga93d4dbe3162b8507b2834a3e29e6c648" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDIO_IT_TXUNDERR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000010)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208" refid="group___s_d_i_o___interrupt__sources_1ga272953292e1b43b2108b00e75db76512" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDIO_IT_RXOVERR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000020)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209" refid="group___s_d_i_o___interrupt__sources_1ga6df3bb694dc00e250cd22e16a03d6910" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDIO_IT_CMDREND<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000040)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210" refid="group___s_d_i_o___interrupt__sources_1gaf9d8fc4651c4b7555fb9ee4e5af6ca63" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDIO_IT_CMDSENT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000080)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211" refid="group___s_d_i_o___interrupt__sources_1ga6cc1c521b64fc57b844336f7f175dd1e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDIO_IT_DATAEND<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000100)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212" refid="group___s_d_i_o___interrupt__sources_1ga55f7e65ed1b70d5a6abdc3cc41b55766" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDIO_IT_STBITERR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000200)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213" refid="group___s_d_i_o___interrupt__sources_1gaa1b1fb453a3ce3b10928aaeada2b2186" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDIO_IT_DBCKEND<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000400)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214" refid="group___s_d_i_o___interrupt__sources_1gae73ae9bc72eaeedc2a37221697bc33e2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDIO_IT_CMDACT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000800)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215" refid="group___s_d_i_o___interrupt__sources_1ga811e683588ab887abb0101defafdb51e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDIO_IT_TXACT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00001000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216" refid="group___s_d_i_o___interrupt__sources_1ga1d9a59a2415b57bdf9827423cb6ce3a0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDIO_IT_RXACT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00002000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217" refid="group___s_d_i_o___interrupt__sources_1gaf538ae7dd73d55e76069e8710858038a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDIO_IT_TXFIFOHE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00004000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218" refid="group___s_d_i_o___interrupt__sources_1gadcbc1a0de8b9df83b5c6c839b4739c87" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDIO_IT_RXFIFOHF<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00008000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219" refid="group___s_d_i_o___interrupt__sources_1ga3ec471bd9233561d6e929ebac6362b75" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDIO_IT_TXFIFOF<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00010000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220" refid="group___s_d_i_o___interrupt__sources_1gae60a1d8e5a7caff85d84e513b093b8a8" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDIO_IT_RXFIFOF<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00020000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221" refid="group___s_d_i_o___interrupt__sources_1gabff1466c2f2effbe30b80a11c132d7c0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDIO_IT_TXFIFOE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00040000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222" refid="group___s_d_i_o___interrupt__sources_1ga80b01aaf64c873d21bfa95e5d98d8766" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDIO_IT_RXFIFOE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00080000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223" refid="group___s_d_i_o___interrupt__sources_1gac8e5744e6d977182a6fc7484a6f1195e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDIO_IT_TXDAVL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00100000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224" refid="group___s_d_i_o___interrupt__sources_1gaf236079642db95772334d1e9b9b27570" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDIO_IT_RXDAVL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00200000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225" refid="group___s_d_i_o___interrupt__sources_1gaf5d7559460a9ff1fccc82d815de25cb4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDIO_IT_SDIOIT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00400000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226" refid="group___s_d_i_o___interrupt__sources_1gae045cd5ba681d2df8b1031b8f659139a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDIO_IT_CEATAEND<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00800000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227" refid="group___s_d_i_o___interrupt__sources_1ga0e413e92ec50bab73042e8965acc3e6c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_SDIO_IT(IT)<sp/>((((IT)<sp/>&amp;<sp/>(uint32_t)0xFF000000)<sp/>==<sp/>0x00)<sp/>&amp;&amp;<sp/>((IT)<sp/>!=<sp/>(uint32_t)0x00))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="236" refid="group___s_d_i_o___command___index_1gae988f9f37c4ebb5f5f9866acb30f2880" refkind="member"><highlight class="preprocessor">#define<sp/>IS_SDIO_CMD_INDEX(INDEX)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((INDEX)<sp/>&lt;<sp/>0x40)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="245" refid="group___s_d_i_o___response___type_1ga308b8ef0e79ba451644dda923bb3ac41" refkind="member"><highlight class="preprocessor">#define<sp/>SDIO_Response_No<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246" refid="group___s_d_i_o___response___type_1ga1f61768f90641648fd5c12e8d2f7e508" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDIO_Response_Short<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000040)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247" refid="group___s_d_i_o___response___type_1ga1a11a8750612b344214f846784046bb0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDIO_Response_Long<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x000000C0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248" refid="group___s_d_i_o___response___type_1gae4df2359c9b637694b9baa220c16e062" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_SDIO_RESPONSE(RESPONSE)<sp/>(((RESPONSE)<sp/>==<sp/>SDIO_Response_No)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="249"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((RESPONSE)<sp/>==<sp/>SDIO_Response_Short)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="250"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((RESPONSE)<sp/>==<sp/>SDIO_Response_Long))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="259" refid="group___s_d_i_o___wait___interrupt___state_1ga266294e1ffd7a4b45e62bff753ca44b2" refkind="member"><highlight class="preprocessor">#define<sp/>SDIO_Wait_No<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000000)<sp/></highlight></codeline>
<codeline lineno="260" refid="group___s_d_i_o___wait___interrupt___state_1ga3914bbe26a656c8e151272ccdc12c71c" refkind="member"><highlight class="preprocessor">#define<sp/>SDIO_Wait_IT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000100)<sp/></highlight></codeline>
<codeline lineno="261" refid="group___s_d_i_o___wait___interrupt___state_1ga2a4104023a7f8403ddd159ec3bbb8592" refkind="member"><highlight class="preprocessor">#define<sp/>SDIO_Wait_Pend<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000200)<sp/></highlight></codeline>
<codeline lineno="262" refid="group___s_d_i_o___wait___interrupt___state_1ga7ee5c289c8e06a76b849808d15b03810" refkind="member"><highlight class="preprocessor">#define<sp/>IS_SDIO_WAIT(WAIT)<sp/>(((WAIT)<sp/>==<sp/>SDIO_Wait_No)<sp/>||<sp/>((WAIT)<sp/>==<sp/>SDIO_Wait_IT)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="263"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((WAIT)<sp/>==<sp/>SDIO_Wait_Pend))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="272" refid="group___s_d_i_o___c_p_s_m___state_1ga996751273ad238e255a740f7c2844c6c" refkind="member"><highlight class="preprocessor">#define<sp/>SDIO_CPSM_Disable<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273" refid="group___s_d_i_o___c_p_s_m___state_1gad437cefe89d6175aa074a1c40b909ebc" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDIO_CPSM_Enable<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000400)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274" refid="group___s_d_i_o___c_p_s_m___state_1ga58cf04903dab015106e4e0937bef443b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_SDIO_CPSM(CPSM)<sp/>(((CPSM)<sp/>==<sp/>SDIO_CPSM_Enable)<sp/>||<sp/>((CPSM)<sp/>==<sp/>SDIO_CPSM_Disable))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="283" refid="group___s_d_i_o___response___registers_1ga9d78943952cf0e36736313d949520a2d" refkind="member"><highlight class="preprocessor">#define<sp/>SDIO_RESP1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284" refid="group___s_d_i_o___response___registers_1gabd551272af4161844b5358fd3c3c379c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDIO_RESP2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000004)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285" refid="group___s_d_i_o___response___registers_1gae9887669a72395d54d600829a959d2f4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDIO_RESP3<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000008)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286" refid="group___s_d_i_o___response___registers_1ga57c3f6414198e5497736e398c02a1d9e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDIO_RESP4<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x0000000C)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287" refid="group___s_d_i_o___response___registers_1gaea6a7f75a5e677d50ba5c9ae2d3a7839" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_SDIO_RESP(RESP)<sp/>(((RESP)<sp/>==<sp/>SDIO_RESP1)<sp/>||<sp/>((RESP)<sp/>==<sp/>SDIO_RESP2)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="288"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((RESP)<sp/>==<sp/>SDIO_RESP3)<sp/>||<sp/>((RESP)<sp/>==<sp/>SDIO_RESP4))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="297" refid="group___s_d_i_o___data___length_1ga57dd64db3f69d18625ea8ca82c009fad" refkind="member"><highlight class="preprocessor">#define<sp/>IS_SDIO_DATA_LENGTH(LENGTH)<sp/>((LENGTH)<sp/>&lt;=<sp/>0x01FFFFFF)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="306" refid="group___s_d_i_o___data___block___size_1gaa86e90ddc3426b242a5230b3360c620d" refkind="member"><highlight class="preprocessor">#define<sp/>SDIO_DataBlockSize_1b<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307" refid="group___s_d_i_o___data___block___size_1ga7209d9d52635b66df85712c6fcd668ea" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDIO_DataBlockSize_2b<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000010)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308" refid="group___s_d_i_o___data___block___size_1ga59cbaecfdebd63177d1208c268626f0a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDIO_DataBlockSize_4b<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000020)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309" refid="group___s_d_i_o___data___block___size_1ga14f91159c8c4faf49a335ed9b6a94d0b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDIO_DataBlockSize_8b<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000030)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310" refid="group___s_d_i_o___data___block___size_1ga52a7bdab9a75edd94d9c1152e8b078e2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDIO_DataBlockSize_16b<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000040)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311" refid="group___s_d_i_o___data___block___size_1gad0f89aa989c0cedf8d69eb28548413ca" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDIO_DataBlockSize_32b<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000050)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312" refid="group___s_d_i_o___data___block___size_1ga981c219228ae8df11a501e15843338d4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDIO_DataBlockSize_64b<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000060)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313" refid="group___s_d_i_o___data___block___size_1gaba545c3a5e0f3296341d89a647cb9751" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDIO_DataBlockSize_128b<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000070)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314" refid="group___s_d_i_o___data___block___size_1gaa099d7706f98a4fa6eb88277dc6680cf" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDIO_DataBlockSize_256b<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000080)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315" refid="group___s_d_i_o___data___block___size_1gaa619848f7700962c5b7065f43e286e0b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDIO_DataBlockSize_512b<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000090)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316" refid="group___s_d_i_o___data___block___size_1ga7dad3c1c33e63a00eb6301b0a1135baf" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDIO_DataBlockSize_1024b<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x000000A0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317" refid="group___s_d_i_o___data___block___size_1ga41eb937621c7ffcf2688c6bc0ea31464" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDIO_DataBlockSize_2048b<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x000000B0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318" refid="group___s_d_i_o___data___block___size_1ga360411488abdbaf9eee9b99fca793f79" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDIO_DataBlockSize_4096b<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x000000C0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319" refid="group___s_d_i_o___data___block___size_1gaf61913f3eff52c0f728db9ffbdaca7d2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDIO_DataBlockSize_8192b<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x000000D0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320" refid="group___s_d_i_o___data___block___size_1gae80bc49dbed677f7087d523c31fe10ae" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDIO_DataBlockSize_16384b<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x000000E0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321" refid="group___s_d_i_o___data___block___size_1ga25ce8d64134659c479d61aa681761948" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_SDIO_BLOCK_SIZE(SIZE)<sp/>(((SIZE)<sp/>==<sp/>SDIO_DataBlockSize_1b)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="322"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((SIZE)<sp/>==<sp/>SDIO_DataBlockSize_2b)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="323"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((SIZE)<sp/>==<sp/>SDIO_DataBlockSize_4b)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="324"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((SIZE)<sp/>==<sp/>SDIO_DataBlockSize_8b)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="325"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((SIZE)<sp/>==<sp/>SDIO_DataBlockSize_16b)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="326"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((SIZE)<sp/>==<sp/>SDIO_DataBlockSize_32b)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="327"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((SIZE)<sp/>==<sp/>SDIO_DataBlockSize_64b)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="328"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((SIZE)<sp/>==<sp/>SDIO_DataBlockSize_128b)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="329"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((SIZE)<sp/>==<sp/>SDIO_DataBlockSize_256b)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="330"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((SIZE)<sp/>==<sp/>SDIO_DataBlockSize_512b)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="331"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((SIZE)<sp/>==<sp/>SDIO_DataBlockSize_1024b)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="332"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((SIZE)<sp/>==<sp/>SDIO_DataBlockSize_2048b)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="333"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((SIZE)<sp/>==<sp/>SDIO_DataBlockSize_4096b)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="334"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((SIZE)<sp/>==<sp/>SDIO_DataBlockSize_8192b)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="335"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((SIZE)<sp/>==<sp/>SDIO_DataBlockSize_16384b))<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="344" refid="group___s_d_i_o___transfer___direction_1gaef8af0ffa4ea04b3362338d268cc0935" refkind="member"><highlight class="preprocessor">#define<sp/>SDIO_TransferDir_ToCard<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345" refid="group___s_d_i_o___transfer___direction_1ga55a6d9613d3e2e7762296b45d0d13222" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDIO_TransferDir_ToSDIO<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000002)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346" refid="group___s_d_i_o___transfer___direction_1gaf84b8004cfef6a5a525b20db8a83c2f7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_SDIO_TRANSFER_DIR(DIR)<sp/>(((DIR)<sp/>==<sp/>SDIO_TransferDir_ToCard)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="347"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((DIR)<sp/>==<sp/>SDIO_TransferDir_ToSDIO))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="356" refid="group___s_d_i_o___transfer___type_1ga5b54ada18cc4072ceff1d98ee4b69972" refkind="member"><highlight class="preprocessor">#define<sp/>SDIO_TransferMode_Block<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357" refid="group___s_d_i_o___transfer___type_1gadd0cafe0a80e6b6cc5c22d838cbb2e28" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDIO_TransferMode_Stream<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000004)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358" refid="group___s_d_i_o___transfer___type_1gaf7565ea93f9ed01558bdc9ad80dac763" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_SDIO_TRANSFER_MODE(MODE)<sp/>(((MODE)<sp/>==<sp/>SDIO_TransferMode_Stream)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="359"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((MODE)<sp/>==<sp/>SDIO_TransferMode_Block))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="368" refid="group___s_d_i_o___d_p_s_m___state_1ga156a9f6ab87a46dcb99ddd7462ca064b" refkind="member"><highlight class="preprocessor">#define<sp/>SDIO_DPSM_Disable<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369" refid="group___s_d_i_o___d_p_s_m___state_1ga22bc12465c1cf839145619a859276c37" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDIO_DPSM_Enable<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000001)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370" refid="group___s_d_i_o___d_p_s_m___state_1gac87a2d7a8fc417a4514d733be50e6d63" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_SDIO_DPSM(DPSM)<sp/>(((DPSM)<sp/>==<sp/>SDIO_DPSM_Enable)<sp/>||<sp/>((DPSM)<sp/>==<sp/>SDIO_DPSM_Disable))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="379" refid="group___s_d_i_o___flags_1ga8ff1f3960378e05ec3c949940e1c49d0" refkind="member"><highlight class="preprocessor">#define<sp/>SDIO_FLAG_CCRCFAIL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000001)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380" refid="group___s_d_i_o___flags_1ga6de936ea11cbc79444d519268ad9f9bd" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDIO_FLAG_DCRCFAIL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000002)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381" refid="group___s_d_i_o___flags_1ga7389f64ff6cfa4f459bf852b5faede30" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDIO_FLAG_CTIMEOUT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000004)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382" refid="group___s_d_i_o___flags_1ga2d2fd219dd9fea522862195ab9568345" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDIO_FLAG_DTIMEOUT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000008)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383" refid="group___s_d_i_o___flags_1gabd18f8e5d5387a38dccbe1bf28ae5dbc" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDIO_FLAG_TXUNDERR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000010)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384" refid="group___s_d_i_o___flags_1gad49d60039e40d31b734cfacf90caa84f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDIO_FLAG_RXOVERR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000020)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385" refid="group___s_d_i_o___flags_1ga083531db75a1e4c05c47578763d53af1" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDIO_FLAG_CMDREND<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000040)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386" refid="group___s_d_i_o___flags_1gac81f3837aac17a6aed7310a8ea460f17" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDIO_FLAG_CMDSENT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000080)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387" refid="group___s_d_i_o___flags_1gaaacb2f6207c149e05f8bdd70e5d49926" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDIO_FLAG_DATAEND<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000100)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388" refid="group___s_d_i_o___flags_1gae83f7cb3fa1183898131f3de47c2333e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDIO_FLAG_STBITERR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000200)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389" refid="group___s_d_i_o___flags_1ga5452d8033567821709bd7d5f06547b70" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDIO_FLAG_DBCKEND<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000400)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390" refid="group___s_d_i_o___flags_1gad12a9b2bd30e7b907cbabfd92fc645b3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDIO_FLAG_CMDACT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000800)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391" refid="group___s_d_i_o___flags_1gad5d075c98012586b169ec131aab2eeb5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDIO_FLAG_TXACT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00001000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392" refid="group___s_d_i_o___flags_1gacc935dd830338970890a05922dff8ab7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDIO_FLAG_RXACT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00002000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393" refid="group___s_d_i_o___flags_1gae9277461d3c8984dc31af318e2df1959" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDIO_FLAG_TXFIFOHE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00004000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394" refid="group___s_d_i_o___flags_1ga8c5942ae3df21efad2d7c61a46015758" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDIO_FLAG_RXFIFOHF<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00008000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395" refid="group___s_d_i_o___flags_1gad3ca936300ef251639a4cfbe2f63b6b8" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDIO_FLAG_TXFIFOF<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00010000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396" refid="group___s_d_i_o___flags_1gaf92cb783f000b8d946fe8ace81b51df2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDIO_FLAG_RXFIFOF<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00020000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397" refid="group___s_d_i_o___flags_1gac41ef05773abad79b4b0c443a77733db" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDIO_FLAG_TXFIFOE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00040000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398" refid="group___s_d_i_o___flags_1ga59ea7e2dc22df742053c5e525b98599d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDIO_FLAG_RXFIFOE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00080000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399" refid="group___s_d_i_o___flags_1ga9c6620d6b16b6af19d3e14f40e688631" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDIO_FLAG_TXDAVL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00100000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400" refid="group___s_d_i_o___flags_1ga7558b354658171bb6aa1b6f1e16d8e21" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDIO_FLAG_RXDAVL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00200000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401" refid="group___s_d_i_o___flags_1gae888ec1c9885c35a5f8e01bcffe324a1" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDIO_FLAG_SDIOIT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00400000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402" refid="group___s_d_i_o___flags_1ga3c8d09a405944948e7a1c5493d49aff1" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDIO_FLAG_CEATAEND<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00800000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403" refid="group___s_d_i_o___flags_1ga04b3c3c316e112172abacbf5e316f24a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_SDIO_FLAG(FLAG)<sp/>(((FLAG)<sp/><sp/>==<sp/>SDIO_FLAG_CCRCFAIL)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="404"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((FLAG)<sp/><sp/>==<sp/>SDIO_FLAG_DCRCFAIL)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="405"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((FLAG)<sp/><sp/>==<sp/>SDIO_FLAG_CTIMEOUT)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="406"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((FLAG)<sp/><sp/>==<sp/>SDIO_FLAG_DTIMEOUT)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="407"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((FLAG)<sp/><sp/>==<sp/>SDIO_FLAG_TXUNDERR)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="408"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((FLAG)<sp/><sp/>==<sp/>SDIO_FLAG_RXOVERR)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="409"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((FLAG)<sp/><sp/>==<sp/>SDIO_FLAG_CMDREND)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="410"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((FLAG)<sp/><sp/>==<sp/>SDIO_FLAG_CMDSENT)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="411"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((FLAG)<sp/><sp/>==<sp/>SDIO_FLAG_DATAEND)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="412"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((FLAG)<sp/><sp/>==<sp/>SDIO_FLAG_STBITERR)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="413"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((FLAG)<sp/><sp/>==<sp/>SDIO_FLAG_DBCKEND)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="414"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((FLAG)<sp/><sp/>==<sp/>SDIO_FLAG_CMDACT)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="415"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((FLAG)<sp/><sp/>==<sp/>SDIO_FLAG_TXACT)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="416"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((FLAG)<sp/><sp/>==<sp/>SDIO_FLAG_RXACT)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="417"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((FLAG)<sp/><sp/>==<sp/>SDIO_FLAG_TXFIFOHE)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="418"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((FLAG)<sp/><sp/>==<sp/>SDIO_FLAG_RXFIFOHF)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="419"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((FLAG)<sp/><sp/>==<sp/>SDIO_FLAG_TXFIFOF)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="420"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((FLAG)<sp/><sp/>==<sp/>SDIO_FLAG_RXFIFOF)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="421"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((FLAG)<sp/><sp/>==<sp/>SDIO_FLAG_TXFIFOE)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="422"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((FLAG)<sp/><sp/>==<sp/>SDIO_FLAG_RXFIFOE)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="423"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((FLAG)<sp/><sp/>==<sp/>SDIO_FLAG_TXDAVL)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="424"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((FLAG)<sp/><sp/>==<sp/>SDIO_FLAG_RXDAVL)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="425"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((FLAG)<sp/><sp/>==<sp/>SDIO_FLAG_SDIOIT)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="426"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((FLAG)<sp/><sp/>==<sp/>SDIO_FLAG_CEATAEND))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428" refid="group___s_d_i_o___flags_1ga8a093bc0b51901676fd5da7087d8ab3a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_SDIO_CLEAR_FLAG(FLAG)<sp/>((((FLAG)<sp/>&amp;<sp/>(uint32_t)0xFF3FF800)<sp/>==<sp/>0x00)<sp/>&amp;&amp;<sp/>((FLAG)<sp/>!=<sp/>(uint32_t)0x00))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430" refid="group___s_d_i_o___flags_1gaef42c81f1f6250d8f9f438f4e16d1e98" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_SDIO_GET_IT(IT)<sp/>(((IT)<sp/><sp/>==<sp/>SDIO_IT_CCRCFAIL)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="431"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((IT)<sp/><sp/>==<sp/>SDIO_IT_DCRCFAIL)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="432"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((IT)<sp/><sp/>==<sp/>SDIO_IT_CTIMEOUT)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="433"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((IT)<sp/><sp/>==<sp/>SDIO_IT_DTIMEOUT)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="434"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((IT)<sp/><sp/>==<sp/>SDIO_IT_TXUNDERR)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="435"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((IT)<sp/><sp/>==<sp/>SDIO_IT_RXOVERR)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="436"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((IT)<sp/><sp/>==<sp/>SDIO_IT_CMDREND)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="437"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((IT)<sp/><sp/>==<sp/>SDIO_IT_CMDSENT)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="438"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((IT)<sp/><sp/>==<sp/>SDIO_IT_DATAEND)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="439"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((IT)<sp/><sp/>==<sp/>SDIO_IT_STBITERR)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="440"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((IT)<sp/><sp/>==<sp/>SDIO_IT_DBCKEND)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="441"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((IT)<sp/><sp/>==<sp/>SDIO_IT_CMDACT)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="442"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((IT)<sp/><sp/>==<sp/>SDIO_IT_TXACT)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="443"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((IT)<sp/><sp/>==<sp/>SDIO_IT_RXACT)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="444"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((IT)<sp/><sp/>==<sp/>SDIO_IT_TXFIFOHE)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="445"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((IT)<sp/><sp/>==<sp/>SDIO_IT_RXFIFOHF)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="446"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((IT)<sp/><sp/>==<sp/>SDIO_IT_TXFIFOF)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="447"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((IT)<sp/><sp/>==<sp/>SDIO_IT_RXFIFOF)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="448"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((IT)<sp/><sp/>==<sp/>SDIO_IT_TXFIFOE)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="449"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((IT)<sp/><sp/>==<sp/>SDIO_IT_RXFIFOE)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="450"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((IT)<sp/><sp/>==<sp/>SDIO_IT_TXDAVL)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="451"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((IT)<sp/><sp/>==<sp/>SDIO_IT_RXDAVL)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="452"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((IT)<sp/><sp/>==<sp/>SDIO_IT_SDIOIT)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="453"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((IT)<sp/><sp/>==<sp/>SDIO_IT_CEATAEND))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455" refid="group___s_d_i_o___flags_1gaf829b01d8c3e9a1e4e04d39abdc8c355" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_SDIO_CLEAR_IT(IT)<sp/>((((IT)<sp/>&amp;<sp/>(uint32_t)0xFF3FF800)<sp/>==<sp/>0x00)<sp/>&amp;&amp;<sp/>((IT)<sp/>!=<sp/>(uint32_t)0x00))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="465" refid="group___s_d_i_o___read___wait___mode_1ga5d73b50fed8b2589f337a6301f22f41c" refkind="member"><highlight class="preprocessor">#define<sp/>SDIO_ReadWaitMode_CLK<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000001)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="466" refid="group___s_d_i_o___read___wait___mode_1ga3d6952d82468b49dcc7abd5b9e02039f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDIO_ReadWaitMode_DATA2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467" refid="group___s_d_i_o___read___wait___mode_1ga35144093f5b3553a62c2248896eead4d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_SDIO_READWAIT_MODE(MODE)<sp/>(((MODE)<sp/>==<sp/>SDIO_ReadWaitMode_CLK)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="468"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((MODE)<sp/>==<sp/>SDIO_ReadWaitMode_DATA2))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___s_d_i_o___exported___functions_1gac359d2c6c67a2590f8f9b720c0e4ff1b" kindref="member">SDIO_DeInit</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___s_d_i_o___exported___functions_1gad40764a8e37c0ed5c9141ae338ff0203" kindref="member">SDIO_Init</ref>(<ref refid="struct_s_d_i_o___init_type_def" kindref="compound">SDIO_InitTypeDef</ref>*<sp/>SDIO_InitStruct);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___s_d_i_o___exported___functions_1ga778d338c29df4fae9ef69432e6df32ad" kindref="member">SDIO_StructInit</ref>(<ref refid="struct_s_d_i_o___init_type_def" kindref="compound">SDIO_InitTypeDef</ref>*<sp/>SDIO_InitStruct);</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___s_d_i_o___exported___functions_1ga7243b857d6b323748ff3a493b265bedc" kindref="member">SDIO_ClockCmd</ref>(<ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref><sp/>NewState);</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___s_d_i_o___exported___functions_1ga36ecca32b904de74218fbe65cd5f5270" kindref="member">SDIO_SetPowerState</ref>(uint32_t<sp/>SDIO_PowerState);</highlight></codeline>
<codeline lineno="494"><highlight class="normal">uint32_t<sp/><ref refid="group___s_d_i_o___exported___functions_1ga3a19de2c7cd51645702213f64a1758ed" kindref="member">SDIO_GetPowerState</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___s_d_i_o___exported___functions_1ga208f51237ef43288735829dbaed37f00" kindref="member">SDIO_ITConfig</ref>(uint32_t<sp/>SDIO_IT,<sp/><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref><sp/>NewState);</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___s_d_i_o___exported___functions_1gad36fde5ec0ce0c2089b9d971c2271e6e" kindref="member">SDIO_DMACmd</ref>(<ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref><sp/>NewState);</highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___s_d_i_o___exported___functions_1ga7117d2f702703f6c0a66bc07707cab23" kindref="member">SDIO_SendCommand</ref>(<ref refid="struct_s_d_i_o___cmd_init_type_def" kindref="compound">SDIO_CmdInitTypeDef</ref><sp/>*SDIO_CmdInitStruct);</highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___s_d_i_o___exported___functions_1ga09d9e89f49c87c82aec79c97b7068e24" kindref="member">SDIO_CmdStructInit</ref>(<ref refid="struct_s_d_i_o___cmd_init_type_def" kindref="compound">SDIO_CmdInitTypeDef</ref>*<sp/>SDIO_CmdInitStruct);</highlight></codeline>
<codeline lineno="499"><highlight class="normal">uint8_t<sp/><ref refid="group___s_d_i_o___exported___functions_1ga9badf271c818e09da301d715c4ad0e5b" kindref="member">SDIO_GetCommandResponse</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="500"><highlight class="normal">uint32_t<sp/><ref refid="group___s_d_i_o___exported___functions_1ga5c1e859511840e8cca6a9a768bce220b" kindref="member">SDIO_GetResponse</ref>(uint32_t<sp/>SDIO_RESP);</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___s_d_i_o___exported___functions_1gad65d896ae919683585bda44a1e2afae4" kindref="member">SDIO_DataConfig</ref>(<ref refid="struct_s_d_i_o___data_init_type_def" kindref="compound">SDIO_DataInitTypeDef</ref>*<sp/>SDIO_DataInitStruct);</highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___s_d_i_o___exported___functions_1gaa83209c09e921521aca2587fb5b22ea2" kindref="member">SDIO_DataStructInit</ref>(<ref refid="struct_s_d_i_o___data_init_type_def" kindref="compound">SDIO_DataInitTypeDef</ref>*<sp/>SDIO_DataInitStruct);</highlight></codeline>
<codeline lineno="503"><highlight class="normal">uint32_t<sp/><ref refid="group___s_d_i_o___exported___functions_1ga7a28aaa2c25a9a5a8db1f49b0e8c9d0a" kindref="member">SDIO_GetDataCounter</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="504"><highlight class="normal">uint32_t<sp/><ref refid="group___s_d_i_o___exported___functions_1ga4e8ac755ef3c31ecd4ed2708df19187e" kindref="member">SDIO_ReadData</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___s_d_i_o___exported___functions_1ga361008b5252aa33b5f2b5823ee3d7240" kindref="member">SDIO_WriteData</ref>(uint32_t<sp/>Data);</highlight></codeline>
<codeline lineno="506"><highlight class="normal">uint32_t<sp/><ref refid="group___s_d_i_o___exported___functions_1ga9a3343983a2d68b5164a1c89797d2dd6" kindref="member">SDIO_GetFIFOCount</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___s_d_i_o___exported___functions_1gac88f914d9a68a83abc2265ec8a7b79fc" kindref="member">SDIO_StartSDIOReadWait</ref>(<ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref><sp/>NewState);</highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___s_d_i_o___exported___functions_1gaca6b25eb2debb73ac827c66f0ebcf837" kindref="member">SDIO_StopSDIOReadWait</ref>(<ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref><sp/>NewState);</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___s_d_i_o___exported___functions_1ga2baac4ea1bb6c2d94345d2712604338a" kindref="member">SDIO_SetSDIOReadWaitMode</ref>(uint32_t<sp/>SDIO_ReadWaitMode);</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___s_d_i_o___exported___functions_1ga24e210c185d5a7855cbaff4472a8f8d1" kindref="member">SDIO_SetSDIOOperation</ref>(<ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref><sp/>NewState);</highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___s_d_i_o___exported___functions_1ga9264137a01a1ab81d03bc80a3b3120fc" kindref="member">SDIO_SendSDIOSuspendCmd</ref>(<ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref><sp/>NewState);</highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___s_d_i_o___exported___functions_1ga1bbe98c629812bc62121d9c8b2c5e21b" kindref="member">SDIO_CommandCompletionCmd</ref>(<ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref><sp/>NewState);</highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___s_d_i_o___exported___functions_1gab44b8cbc21be000a291563076159503b" kindref="member">SDIO_CEATAITCmd</ref>(<ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref><sp/>NewState);</highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___s_d_i_o___exported___functions_1ga8dc7f17804bdb745b42f6647c8487b4c" kindref="member">SDIO_SendCEATACmd</ref>(<ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref><sp/>NewState);</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><ref refid="group___exported__types_1ga89136caac2e14c55151f527ac02daaff" kindref="member">FlagStatus</ref><sp/><ref refid="group___s_d_i_o___exported___functions_1ga644514b4b3c95c5c4326d99cd166f6f9" kindref="member">SDIO_GetFlagStatus</ref>(uint32_t<sp/>SDIO_FLAG);</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___s_d_i_o___exported___functions_1ga7aff4efdeb528229135f9f285e53518a" kindref="member">SDIO_ClearFlag</ref>(uint32_t<sp/>SDIO_FLAG);</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><ref refid="group___exported__types_1gaacbd7ed539db0aacd973a0f6eca34074" kindref="member">ITStatus</ref><sp/><ref refid="group___s_d_i_o___exported___functions_1ga2d64af1f3df0f99cb518f9a89bbd02ac" kindref="member">SDIO_GetITStatus</ref>(uint32_t<sp/>SDIO_IT);</highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___s_d_i_o___exported___functions_1ga048e07fd86321cd01b2a22c071c3149b" kindref="member">SDIO_ClearITPendingBit</ref>(uint32_t<sp/>SDIO_IT);</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal">}</highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>[ILG]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>(<sp/>__GNUC__<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>GCC<sp/>diagnostic<sp/>pop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>__STM32F10x_SDIO_H<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="comment">/*******************<sp/>(C)<sp/>COPYRIGHT<sp/>2011<sp/>STMicroelectronics<sp/>*****END<sp/>OF<sp/>FILE****/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_sdio.h"/>
  </compounddef>
</doxygen>
