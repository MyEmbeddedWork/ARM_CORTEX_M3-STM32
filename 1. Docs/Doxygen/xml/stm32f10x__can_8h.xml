<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="stm32f10x__can_8h" kind="file" language="C++">
    <compoundname>stm32f10x_can.h</compoundname>
    <includes refid="stm32f10x_8h" local="yes">stm32f10x.h</includes>
    <includedby refid="stm32f10x__conf_8h" local="yes">C:/Users/anilj/Desktop/cmsis/sorc/include/stm32f10x_conf.h</includedby>
    <includedby refid="stm32f10x__can_8c" local="yes">C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_can.c</includedby>
    <incdepgraph>
      <node id="537">
        <label>system_stm32f10x.h</label>
        <link refid="system__stm32f10x_8h"/>
      </node>
      <node id="531">
        <label>C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h</label>
        <link refid="stm32f10x__can_8h"/>
        <childnode refid="532" relation="include">
        </childnode>
      </node>
      <node id="534">
        <label>stdint.h</label>
      </node>
      <node id="533">
        <label>core_cm3.h</label>
        <link refid="core__cm3_8h"/>
        <childnode refid="534" relation="include">
        </childnode>
        <childnode refid="535" relation="include">
        </childnode>
        <childnode refid="536" relation="include">
        </childnode>
      </node>
      <node id="536">
        <label>core_cmFunc.h</label>
        <link refid="core__cm_func_8h"/>
      </node>
      <node id="535">
        <label>core_cmInstr.h</label>
        <link refid="core__cm_instr_8h"/>
      </node>
      <node id="532">
        <label>stm32f10x.h</label>
        <link refid="stm32f10x_8h"/>
        <childnode refid="533" relation="include">
        </childnode>
        <childnode refid="537" relation="include">
        </childnode>
        <childnode refid="534" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="538">
        <label>C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h</label>
        <link refid="stm32f10x__can_8h"/>
        <childnode refid="539" relation="include">
        </childnode>
        <childnode refid="540" relation="include">
        </childnode>
      </node>
      <node id="540">
        <label>C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_can.c</label>
        <link refid="stm32f10x__can_8c"/>
      </node>
      <node id="539">
        <label>C:/Users/anilj/Desktop/cmsis/sorc/include/stm32f10x_conf.h</label>
        <link refid="stm32f10x__conf_8h"/>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_c_a_n___init_type_def" prot="public">CAN_InitTypeDef</innerclass>
    <innerclass refid="struct_c_a_n___filter_init_type_def" prot="public">CAN_FilterInitTypeDef</innerclass>
    <innerclass refid="struct_can_tx_msg" prot="public">CanTxMsg</innerclass>
    <innerclass refid="struct_can_rx_msg" prot="public">CanRxMsg</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="group___c_a_n___exported___types_1gaf471a53f52a02078ffd842658d932f63" prot="public" static="no">
        <name>IS_CAN_ALL_PERIPH</name>
        <param><defname>PERIPH</defname></param>
        <initializer>(((PERIPH) == <ref refid="group___peripheral__declaration_1ga4964ecb6a5c689aaf8ee2832b8093aac" kindref="member">CAN1</ref>) || \
                                   ((PERIPH) == <ref refid="group___peripheral__declaration_1gac5e4c86ed487dc91418b156e24808033" kindref="member">CAN2</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="52" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n__sleep__constants_1ga095c319e8c54c974eb2b6eeadf180d96" prot="public" static="no">
        <name>CAN_InitStatus_Failed</name>
        <initializer>((uint8_t)0x00)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CAN initialization failed </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="218" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="218" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n__sleep__constants_1ga6bed5957af8f2f6b00568e15ccac5772" prot="public" static="no">
        <name>CAN_InitStatus_Success</name>
        <initializer>((uint8_t)0x01)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CAN initialization OK </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="219" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="219" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n___mode_1gaaf1f48ab4917ccfd5fd31dd781d59e29" prot="public" static="no">
        <name>CAN_Mode_Normal</name>
        <initializer>((uint8_t)0x00)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>normal mode </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="229" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="229" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n___mode_1gaad036c944403186eb3496ff65020c0ee" prot="public" static="no">
        <name>CAN_Mode_LoopBack</name>
        <initializer>((uint8_t)0x01)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>loopback mode </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="230" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="230" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n___mode_1gac05e5d666f18eb35e8da70e6e17e8fb8" prot="public" static="no">
        <name>CAN_Mode_Silent</name>
        <initializer>((uint8_t)0x02)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>silent mode </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="231" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="231" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n___mode_1ga087afa0d24d2cf399225993573c984eb" prot="public" static="no">
        <name>CAN_Mode_Silent_LoopBack</name>
        <initializer>((uint8_t)0x03)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>loopback combined with silent mode </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="232" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="232" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n___mode_1ga5d6480c240edeba383b4e07d65814d98" prot="public" static="no">
        <name>IS_CAN_MODE</name>
        <param><defname>MODE</defname></param>
        <initializer>(((MODE) == <ref refid="group___c_a_n___mode_1gaaf1f48ab4917ccfd5fd31dd781d59e29" kindref="member">CAN_Mode_Normal</ref>) || \
                           ((MODE) == <ref refid="group___c_a_n___mode_1gaad036c944403186eb3496ff65020c0ee" kindref="member">CAN_Mode_LoopBack</ref>)|| \
                           ((MODE) == <ref refid="group___c_a_n___mode_1gac05e5d666f18eb35e8da70e6e17e8fb8" kindref="member">CAN_Mode_Silent</ref>) || \
                           ((MODE) == <ref refid="group___c_a_n___mode_1ga087afa0d24d2cf399225993573c984eb" kindref="member">CAN_Mode_Silent_LoopBack</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="234" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="234" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n___operating___mode_1gace8a4b5c164aba6f473d6254ad1e8a36" prot="public" static="no">
        <name>CAN_OperatingMode_Initialization</name>
        <initializer>((uint8_t)0x00)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initialization mode </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="247" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="247" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n___operating___mode_1ga663ecffaa60d1a201a035dfa45325848" prot="public" static="no">
        <name>CAN_OperatingMode_Normal</name>
        <initializer>((uint8_t)0x01)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Normal mode </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="248" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="248" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n___operating___mode_1ga173b85d2baaa6249d966b8073e3ad8ca" prot="public" static="no">
        <name>CAN_OperatingMode_Sleep</name>
        <initializer>((uint8_t)0x02)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sleep mode </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="249" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="249" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n___operating___mode_1ga377f1598db9b0248ba83fa6e5a75db75" prot="public" static="no">
        <name>IS_CAN_OPERATING_MODE</name>
        <param><defname>MODE</defname></param>
        <initializer>(((MODE) == <ref refid="group___c_a_n___operating___mode_1gace8a4b5c164aba6f473d6254ad1e8a36" kindref="member">CAN_OperatingMode_Initialization</ref>) ||\
                                    ((MODE) == <ref refid="group___c_a_n___operating___mode_1ga663ecffaa60d1a201a035dfa45325848" kindref="member">CAN_OperatingMode_Normal</ref>)|| \
																		((MODE) == <ref refid="group___c_a_n___operating___mode_1ga173b85d2baaa6249d966b8073e3ad8ca" kindref="member">CAN_OperatingMode_Sleep</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="252" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="252" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n___mode___status_1ga9882944537945325ef08e1986838ea45" prot="public" static="no">
        <name>CAN_ModeStatus_Failed</name>
        <initializer>((uint8_t)0x00)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CAN entering the specific mode failed </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="264" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="264" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n___mode___status_1ga7ca0ea503eb3b3a7c0abdfad27cb6579" prot="public" static="no">
        <name>CAN_ModeStatus_Success</name>
        <initializer>((uint8_t)!<ref refid="group___c_a_n___mode___status_1ga9882944537945325ef08e1986838ea45" kindref="member">CAN_ModeStatus_Failed</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CAN entering the specific mode Succeed </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="265" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="265" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n__synchronisation__jump__width_1ga4e03d22ae683b63cb4df238449ec967c" prot="public" static="no">
        <name>CAN_SJW_1tq</name>
        <initializer>((uint8_t)0x00)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>1 time quantum </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="276" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="276" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n__synchronisation__jump__width_1gad39e7656c555cc00bc4d7c1bff39916f" prot="public" static="no">
        <name>CAN_SJW_2tq</name>
        <initializer>((uint8_t)0x01)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>2 time quantum </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="277" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="277" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n__synchronisation__jump__width_1gab4de740e2184aac71c2c8cba22a8ecd2" prot="public" static="no">
        <name>CAN_SJW_3tq</name>
        <initializer>((uint8_t)0x02)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>3 time quantum </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="278" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="278" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n__synchronisation__jump__width_1ga7f26a36d478c7ba1a1441b369d62f693" prot="public" static="no">
        <name>CAN_SJW_4tq</name>
        <initializer>((uint8_t)0x03)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>4 time quantum </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="279" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="279" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n__synchronisation__jump__width_1ga4e4f344712d3bcac1975318d4ab9a383" prot="public" static="no">
        <name>IS_CAN_SJW</name>
        <param><defname>SJW</defname></param>
        <initializer>(((SJW) == <ref refid="group___c_a_n__synchronisation__jump__width_1ga4e03d22ae683b63cb4df238449ec967c" kindref="member">CAN_SJW_1tq</ref>) || ((SJW) == <ref refid="group___c_a_n__synchronisation__jump__width_1gad39e7656c555cc00bc4d7c1bff39916f" kindref="member">CAN_SJW_2tq</ref>)|| \
                         ((SJW) == <ref refid="group___c_a_n__synchronisation__jump__width_1gab4de740e2184aac71c2c8cba22a8ecd2" kindref="member">CAN_SJW_3tq</ref>) || ((SJW) == <ref refid="group___c_a_n__synchronisation__jump__width_1ga7f26a36d478c7ba1a1441b369d62f693" kindref="member">CAN_SJW_4tq</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="281" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="281" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n__time__quantum__in__bit__segment__1_1ga76b8fb0815b7a3f398fffe72dda0bc04" prot="public" static="no">
        <name>CAN_BS1_1tq</name>
        <initializer>((uint8_t)0x00)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>1 time quantum </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="291" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="291" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n__time__quantum__in__bit__segment__1_1ga1544ecf902e6173859d60cff9530971a" prot="public" static="no">
        <name>CAN_BS1_2tq</name>
        <initializer>((uint8_t)0x01)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>2 time quantum </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="292" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="292" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n__time__quantum__in__bit__segment__1_1gaa808099663480de935d3ce9187c2dcab" prot="public" static="no">
        <name>CAN_BS1_3tq</name>
        <initializer>((uint8_t)0x02)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>3 time quantum </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="293" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="293" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n__time__quantum__in__bit__segment__1_1ga7c5c668200f41991e14b31ca20235000" prot="public" static="no">
        <name>CAN_BS1_4tq</name>
        <initializer>((uint8_t)0x03)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>4 time quantum </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="294" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="294" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n__time__quantum__in__bit__segment__1_1ga31dea95492dababfcf79bcaeb884b99e" prot="public" static="no">
        <name>CAN_BS1_5tq</name>
        <initializer>((uint8_t)0x04)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>5 time quantum </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="295" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="295" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n__time__quantum__in__bit__segment__1_1gaa7fc6fcdf9c1c70ee9700b35e32e205e" prot="public" static="no">
        <name>CAN_BS1_6tq</name>
        <initializer>((uint8_t)0x05)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>6 time quantum </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="296" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="296" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n__time__quantum__in__bit__segment__1_1gafec90578d657073a671b6326f3bfcf8e" prot="public" static="no">
        <name>CAN_BS1_7tq</name>
        <initializer>((uint8_t)0x06)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>7 time quantum </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="297" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="297" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n__time__quantum__in__bit__segment__1_1ga1049ea9bc5b3da680574ca444e888de4" prot="public" static="no">
        <name>CAN_BS1_8tq</name>
        <initializer>((uint8_t)0x07)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>8 time quantum </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="298" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="298" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n__time__quantum__in__bit__segment__1_1ga0493701bdd73a9649510f035439a6580" prot="public" static="no">
        <name>CAN_BS1_9tq</name>
        <initializer>((uint8_t)0x08)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>9 time quantum </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="299" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="299" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n__time__quantum__in__bit__segment__1_1gaf1b474aa632787e70bedd0c5dfdbf5ed" prot="public" static="no">
        <name>CAN_BS1_10tq</name>
        <initializer>((uint8_t)0x09)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>10 time quantum </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="300" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="300" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n__time__quantum__in__bit__segment__1_1ga4f765ffbe7fda4fb6d0fde7bc4058a14" prot="public" static="no">
        <name>CAN_BS1_11tq</name>
        <initializer>((uint8_t)0x0A)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>11 time quantum </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="301" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="301" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n__time__quantum__in__bit__segment__1_1ga14c4e928f615babc14c6a9e80ee86a6c" prot="public" static="no">
        <name>CAN_BS1_12tq</name>
        <initializer>((uint8_t)0x0B)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>12 time quantum </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="302" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="302" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n__time__quantum__in__bit__segment__1_1ga2087caec94be44837c1e6965da7f6236" prot="public" static="no">
        <name>CAN_BS1_13tq</name>
        <initializer>((uint8_t)0x0C)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>13 time quantum </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="303" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="303" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n__time__quantum__in__bit__segment__1_1gac0c71e1020a4fbaf66bce754bd54d8cb" prot="public" static="no">
        <name>CAN_BS1_14tq</name>
        <initializer>((uint8_t)0x0D)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>14 time quantum </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="304" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="304" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n__time__quantum__in__bit__segment__1_1gaa52c8674dc7caae1089e5276cd13db5f" prot="public" static="no">
        <name>CAN_BS1_15tq</name>
        <initializer>((uint8_t)0x0E)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>15 time quantum </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="305" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="305" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n__time__quantum__in__bit__segment__1_1ga3be52c699f5618cc318c143ee42f5966" prot="public" static="no">
        <name>CAN_BS1_16tq</name>
        <initializer>((uint8_t)0x0F)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>16 time quantum </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="306" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="306" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n__time__quantum__in__bit__segment__1_1ga225f1457e1c6b8fc3b5af0f463933152" prot="public" static="no">
        <name>IS_CAN_BS1</name>
        <param><defname>BS1</defname></param>
        <initializer>((BS1) &lt;= <ref refid="group___c_a_n__time__quantum__in__bit__segment__1_1ga3be52c699f5618cc318c143ee42f5966" kindref="member">CAN_BS1_16tq</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="308" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="308" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n__time__quantum__in__bit__segment__2_1gad9af25a3f61df7b09b8d6a5e81d8027e" prot="public" static="no">
        <name>CAN_BS2_1tq</name>
        <initializer>((uint8_t)0x00)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>1 time quantum </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="317" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="317" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n__time__quantum__in__bit__segment__2_1gac43d82f74990620499f1998187ff3602" prot="public" static="no">
        <name>CAN_BS2_2tq</name>
        <initializer>((uint8_t)0x01)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>2 time quantum </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="318" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="318" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n__time__quantum__in__bit__segment__2_1gab3d325ce4a5d0eb1ee8ee50ad4ec7e49" prot="public" static="no">
        <name>CAN_BS2_3tq</name>
        <initializer>((uint8_t)0x02)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>3 time quantum </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="319" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="319" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n__time__quantum__in__bit__segment__2_1gaaff1c1cdd809f185299971c6437f32a0" prot="public" static="no">
        <name>CAN_BS2_4tq</name>
        <initializer>((uint8_t)0x03)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>4 time quantum </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="320" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="320" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n__time__quantum__in__bit__segment__2_1ga89feba32bcc2e909f858d535edaad101" prot="public" static="no">
        <name>CAN_BS2_5tq</name>
        <initializer>((uint8_t)0x04)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>5 time quantum </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="321" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="321" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n__time__quantum__in__bit__segment__2_1ga72c3245b794d3238763d1ec319bf386f" prot="public" static="no">
        <name>CAN_BS2_6tq</name>
        <initializer>((uint8_t)0x05)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>6 time quantum </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="322" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="322" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n__time__quantum__in__bit__segment__2_1ga8005adaef02fb90e400909de08dec031" prot="public" static="no">
        <name>CAN_BS2_7tq</name>
        <initializer>((uint8_t)0x06)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>7 time quantum </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="323" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="323" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n__time__quantum__in__bit__segment__2_1gaad8dcbb266cf5074bfb67bd7108597c6" prot="public" static="no">
        <name>CAN_BS2_8tq</name>
        <initializer>((uint8_t)0x07)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>8 time quantum </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="324" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="324" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n__time__quantum__in__bit__segment__2_1ga3f5620b1d094dbd7d2fb8d16f4b187a9" prot="public" static="no">
        <name>IS_CAN_BS2</name>
        <param><defname>BS2</defname></param>
        <initializer>((BS2) &lt;= <ref refid="group___c_a_n__time__quantum__in__bit__segment__2_1gaad8dcbb266cf5074bfb67bd7108597c6" kindref="member">CAN_BS2_8tq</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="326" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="326" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n__clock__prescaler_1gacde6b8be6fe083a6302fc183b5ac1055" prot="public" static="no">
        <name>IS_CAN_PRESCALER</name>
        <param><defname>PRESCALER</defname></param>
        <initializer>(((PRESCALER) &gt;= 1) &amp;&amp; ((PRESCALER) &lt;= 1024))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="336" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="336" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n__filter__number_1ga28d6c98a160d71059ed9a5973de2a4ef" prot="public" static="no">
        <name>IS_CAN_FILTER_NUMBER</name>
        <param><defname>NUMBER</defname></param>
        <initializer>((NUMBER) &lt;= 13)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="346" column="11" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="346" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n__filter__mode_1ga8136e518fb31fd91079e4c7c4c19c94b" prot="public" static="no">
        <name>CAN_FilterMode_IdMask</name>
        <initializer>((uint8_t)0x00)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>identifier/mask mode </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="358" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="358" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n__filter__mode_1ga91e9144f71b15ac345ee89314711c158" prot="public" static="no">
        <name>CAN_FilterMode_IdList</name>
        <initializer>((uint8_t)0x01)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>identifier list mode </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="359" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="359" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n__filter__mode_1gae684565d5392c12fd333379e5ec840f8" prot="public" static="no">
        <name>IS_CAN_FILTER_MODE</name>
        <param><defname>MODE</defname></param>
        <initializer>(((MODE) == <ref refid="group___c_a_n__filter__mode_1ga8136e518fb31fd91079e4c7c4c19c94b" kindref="member">CAN_FilterMode_IdMask</ref>) || \
                                  ((MODE) == <ref refid="group___c_a_n__filter__mode_1ga91e9144f71b15ac345ee89314711c158" kindref="member">CAN_FilterMode_IdList</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="361" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="361" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n__filter__scale_1ga9e0493937e73bcf9a4127eef2f255a95" prot="public" static="no">
        <name>CAN_FilterScale_16bit</name>
        <initializer>((uint8_t)0x00)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Two 16-bit filters </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="371" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="371" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n__filter__scale_1gac63dfb0e11713c59268ee9f4aebab60e" prot="public" static="no">
        <name>CAN_FilterScale_32bit</name>
        <initializer>((uint8_t)0x01)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>One 32-bit filter </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="372" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="372" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n__filter__scale_1gaf64c93166af0eb5ec7e804116f10783a" prot="public" static="no">
        <name>IS_CAN_FILTER_SCALE</name>
        <param><defname>SCALE</defname></param>
        <initializer>(((SCALE) == <ref refid="group___c_a_n__filter__scale_1ga9e0493937e73bcf9a4127eef2f255a95" kindref="member">CAN_FilterScale_16bit</ref>) || \
                                    ((SCALE) == <ref refid="group___c_a_n__filter__scale_1gac63dfb0e11713c59268ee9f4aebab60e" kindref="member">CAN_FilterScale_32bit</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="374" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="374" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n__filter___f_i_f_o_1ga8249c27978ca94676530540b88a6be8f" prot="public" static="no">
        <name>CAN_Filter_FIFO0</name>
        <initializer>((uint8_t)0x00)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Filter FIFO 0 assignment for filter x </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="385" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="385" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n__filter___f_i_f_o_1gaab8478c89a607c4b8baf68efc730e316" prot="public" static="no">
        <name>CAN_Filter_FIFO1</name>
        <initializer>((uint8_t)0x01)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Filter FIFO 1 assignment for filter x </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="386" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="386" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n__filter___f_i_f_o_1ga2df5ae0de841fc80c969e9147991ec9d" prot="public" static="no">
        <name>IS_CAN_FILTER_FIFO</name>
        <param><defname>FIFO</defname></param>
        <initializer>(((FIFO) == <ref refid="group___c_a_n___legacy_1ga1b3d041dff9fed4dad75ed2a4a0e27e0" kindref="member">CAN_FilterFIFO0</ref>) || \
                                  ((FIFO) == <ref refid="group___c_a_n___legacy_1gada8f9b3a9c88f36539aaeb457039e666" kindref="member">CAN_FilterFIFO1</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="387" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="387" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___start__bank__filter__for__slave___c_a_n_1ga7fb463088ff4cd584bba47e3d0a4f469" prot="public" static="no">
        <name>IS_CAN_BANKNUMBER</name>
        <param><defname>BANKNUMBER</defname></param>
        <initializer>(((BANKNUMBER) &gt;= 1) &amp;&amp; ((BANKNUMBER) &lt;= 27))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="396" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="396" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n___tx_1ga218b3e1380c4d49163c91a1af904e44c" prot="public" static="no">
        <name>IS_CAN_TRANSMITMAILBOX</name>
        <param><defname>TRANSMITMAILBOX</defname></param>
        <initializer>((TRANSMITMAILBOX) &lt;= ((uint8_t)0x02))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="405" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="405" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n___tx_1gaf059e4383fa69dec6e18216b22a87f51" prot="public" static="no">
        <name>IS_CAN_STDID</name>
        <param><defname>STDID</defname></param>
        <initializer>((STDID) &lt;= ((uint32_t)0x7FF))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="406" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="406" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n___tx_1ga62dbc2163ad6751b3f921e717b00e9f2" prot="public" static="no">
        <name>IS_CAN_EXTID</name>
        <param><defname>EXTID</defname></param>
        <initializer>((EXTID) &lt;= ((uint32_t)0x1FFFFFFF))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="407" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="407" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n___tx_1ga6109469a6a2792b3e7c6be520ea50d36" prot="public" static="no">
        <name>IS_CAN_DLC</name>
        <param><defname>DLC</defname></param>
        <initializer>((DLC) &lt;= ((uint8_t)0x08))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="408" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="408" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n__identifier__type_1ga151d9df8a6f361d0a3231593726b5a13" prot="public" static="no">
        <name>CAN_Id_Standard</name>
        <initializer>((uint32_t)0x00000000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Standard Id </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="418" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="418" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n__identifier__type_1gaf6c5c0b43b968fed17fd90246912b1a7" prot="public" static="no">
        <name>CAN_Id_Extended</name>
        <initializer>((uint32_t)0x00000004)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Extended Id </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="419" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="419" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n__identifier__type_1gab845f7fbcf6ff8cf3d025210eb8900e4" prot="public" static="no">
        <name>IS_CAN_IDTYPE</name>
        <param><defname>IDTYPE</defname></param>
        <initializer>(((IDTYPE) == <ref refid="group___c_a_n__identifier__type_1ga151d9df8a6f361d0a3231593726b5a13" kindref="member">CAN_Id_Standard</ref>) || \
                               ((IDTYPE) == <ref refid="group___c_a_n__identifier__type_1gaf6c5c0b43b968fed17fd90246912b1a7" kindref="member">CAN_Id_Extended</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="420" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="420" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n__remote__transmission__request_1ga2407c3a8b2cd97bd651143aa959219f1" prot="public" static="no">
        <name>CAN_RTR_Data</name>
        <initializer>((uint32_t)0x00000000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Data frame </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="430" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="430" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n__remote__transmission__request_1ga42e95ddfb02d88c82de84058fb0fb349" prot="public" static="no">
        <name>CAN_RTR_Remote</name>
        <initializer>((uint32_t)0x00000002)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Remote frame </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="431" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="431" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n__remote__transmission__request_1ga3379997ad4da6fc4d7975c52b891bdc0" prot="public" static="no">
        <name>IS_CAN_RTR</name>
        <param><defname>RTR</defname></param>
        <initializer>(((RTR) == <ref refid="group___c_a_n__remote__transmission__request_1ga2407c3a8b2cd97bd651143aa959219f1" kindref="member">CAN_RTR_Data</ref>) || ((RTR) == <ref refid="group___c_a_n__remote__transmission__request_1ga42e95ddfb02d88c82de84058fb0fb349" kindref="member">CAN_RTR_Remote</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="432" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="432" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n__transmit__constants_1ga8d193002e76c04ec8caff6b110cd5983" prot="public" static="no">
        <name>CAN_TxStatus_Failed</name>
        <initializer>((uint8_t)0x00)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CAN transmission failed </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="442" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="442" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n__transmit__constants_1ga0b401c61922b1449de9b486dcf475c97" prot="public" static="no">
        <name>CAN_TxStatus_Ok</name>
        <initializer>((uint8_t)0x01)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CAN transmission succeeded </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="443" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="443" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n__transmit__constants_1ga9678a3a51379422868083608c7394409" prot="public" static="no">
        <name>CAN_TxStatus_Pending</name>
        <initializer>((uint8_t)0x02)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CAN transmission pending </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="444" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="444" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n__transmit__constants_1ga2620e99debd51011d3569121f2e44690" prot="public" static="no">
        <name>CAN_TxStatus_NoMailBox</name>
        <initializer>((uint8_t)0x04)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CAN cell did not provide an empty mailbox </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="445" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="445" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n__receive___f_i_f_o__number__constants_1ga8f52eeefb86b2af5b7c3b4b75fa4d114" prot="public" static="no">
        <name>CAN_FIFO0</name>
        <initializer>((uint8_t)0x00)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CAN FIFO 0 used to receive </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="455" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="455" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n__receive___f_i_f_o__number__constants_1gafbcf3f13dbf61030ab7a812595ba9850" prot="public" static="no">
        <name>CAN_FIFO1</name>
        <initializer>((uint8_t)0x01)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CAN FIFO 1 used to receive </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="456" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="456" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n__receive___f_i_f_o__number__constants_1gaeeb94bf58bd48b8928f964eaaa20a24a" prot="public" static="no">
        <name>IS_CAN_FIFO</name>
        <param><defname>FIFO</defname></param>
        <initializer>(((FIFO) == <ref refid="group___c_a_n__receive___f_i_f_o__number__constants_1ga8f52eeefb86b2af5b7c3b4b75fa4d114" kindref="member">CAN_FIFO0</ref>) || ((FIFO) == <ref refid="group___c_a_n__receive___f_i_f_o__number__constants_1gafbcf3f13dbf61030ab7a812595ba9850" kindref="member">CAN_FIFO1</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="458" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="458" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n__sleep__constants_1ga169500ab7169c4e9c7e9e4ea34b3e070" prot="public" static="no">
        <name>CAN_Sleep_Failed</name>
        <initializer>((uint8_t)0x00)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CAN did not enter the sleep mode </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="468" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="468" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n__sleep__constants_1gaf5c4e9d32d4faff9d0bf61e153ed7998" prot="public" static="no">
        <name>CAN_Sleep_Ok</name>
        <initializer>((uint8_t)0x01)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CAN entered the sleep mode </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="469" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="469" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n__wake__up__constants_1ga837fd7ad47fee78e43a186544e2b390b" prot="public" static="no">
        <name>CAN_WakeUp_Failed</name>
        <initializer>((uint8_t)0x00)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CAN did not leave the sleep mode </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="479" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="479" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n__wake__up__constants_1ga152e4935cf85bdfb803eb36b656cd690" prot="public" static="no">
        <name>CAN_WakeUp_Ok</name>
        <initializer>((uint8_t)0x01)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CAN leaved the sleep mode </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="480" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="480" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n___error___code__constants_1ga025d891e9c5cec2cfecb2213b4f74a9e" prot="public" static="no">
        <name>CAN_ErrorCode_NoErr</name>
        <initializer>((uint8_t)0x00)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>No Error </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="491" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="491" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n___error___code__constants_1gaa733d1c078472912c3bf60fbdc53734d" prot="public" static="no">
        <name>CAN_ErrorCode_StuffErr</name>
        <initializer>((uint8_t)0x10)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Stuff Error </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="492" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="492" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n___error___code__constants_1ga1fe585558bb8d5c834b4266661392cb2" prot="public" static="no">
        <name>CAN_ErrorCode_FormErr</name>
        <initializer>((uint8_t)0x20)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Form Error </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="493" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="493" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n___error___code__constants_1gad47e6af0116d1b6de85e29286c0b8607" prot="public" static="no">
        <name>CAN_ErrorCode_ACKErr</name>
        <initializer>((uint8_t)0x30)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Acknowledgment Error </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="494" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="494" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n___error___code__constants_1gaf800de7683f1d22194e1df8eb3b1c5bb" prot="public" static="no">
        <name>CAN_ErrorCode_BitRecessiveErr</name>
        <initializer>((uint8_t)0x40)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Bit Recessive Error </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="495" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="495" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n___error___code__constants_1gaa19708aa85d1a34f8f7f25a2bfe88b19" prot="public" static="no">
        <name>CAN_ErrorCode_BitDominantErr</name>
        <initializer>((uint8_t)0x50)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Bit Dominant Error </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="496" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="496" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n___error___code__constants_1gafa75157442dba7ba1a91036242b78e92" prot="public" static="no">
        <name>CAN_ErrorCode_CRCErr</name>
        <initializer>((uint8_t)0x60)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CRC Error </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="497" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="497" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n___error___code__constants_1ga927089dd74347b9fea7a7c59f3840a7c" prot="public" static="no">
        <name>CAN_ErrorCode_SoftwareSetErr</name>
        <initializer>((uint8_t)0x70)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Software Set Error </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="498" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="498" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n__flags_1ga6df0579049eb471720ea103c5446298b" prot="public" static="no">
        <name>CAN_FLAG_RQCP0</name>
        <initializer>((uint32_t)0x38000001)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Request MailBox0 Flag </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="513" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="513" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n__flags_1gaba705586ebc3d961507436c03a2feaba" prot="public" static="no">
        <name>CAN_FLAG_RQCP1</name>
        <initializer>((uint32_t)0x38000100)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Request MailBox1 Flag </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="514" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="514" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n__flags_1ga9c20cd47e558135bd7ae71149583d487" prot="public" static="no">
        <name>CAN_FLAG_RQCP2</name>
        <initializer>((uint32_t)0x38010000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Request MailBox2 Flag </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="515" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="515" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n__flags_1ga4b40574700edfe752433bb4e0d457c64" prot="public" static="no">
        <name>CAN_FLAG_FMP0</name>
        <initializer>((uint32_t)0x12000003)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>FIFO 0 Message Pending Flag </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="518" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="518" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n__flags_1ga11648741ff43af1561ce7009698fb797" prot="public" static="no">
        <name>CAN_FLAG_FF0</name>
        <initializer>((uint32_t)0x32000008)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>FIFO 0 Full Flag </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="519" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="519" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n__flags_1ga2abd66b5e0032132673208decd2d01f2" prot="public" static="no">
        <name>CAN_FLAG_FOV0</name>
        <initializer>((uint32_t)0x32000010)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>FIFO 0 Overrun Flag </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="520" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="520" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n__flags_1ga5d4b7376954a059fbd74ed8d688f6657" prot="public" static="no">
        <name>CAN_FLAG_FMP1</name>
        <initializer>((uint32_t)0x14000003)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>FIFO 1 Message Pending Flag </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="521" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="521" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n__flags_1ga0fa967743c5db04189bb2160aa48e371" prot="public" static="no">
        <name>CAN_FLAG_FF1</name>
        <initializer>((uint32_t)0x34000008)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>FIFO 1 Full Flag </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="522" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="522" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n__flags_1gac1af6e61b1285ddc4658c4bcc152719a" prot="public" static="no">
        <name>CAN_FLAG_FOV1</name>
        <initializer>((uint32_t)0x34000010)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>FIFO 1 Overrun Flag </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="523" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="523" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n__flags_1ga18c72dbe75cb80e8b5126c23c9120818" prot="public" static="no">
        <name>CAN_FLAG_WKU</name>
        <initializer>((uint32_t)0x31000008)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Wake up Flag </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="526" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="526" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n__flags_1gad087b5025a3d5ead2c32b06663821cf4" prot="public" static="no">
        <name>CAN_FLAG_SLAK</name>
        <initializer>((uint32_t)0x31000012)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sleep acknowledge Flag </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="527" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="527" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n__flags_1gae8906ba9c4031866c5096418ffa9bf71" prot="public" static="no">
        <name>CAN_FLAG_EWG</name>
        <initializer>((uint32_t)0x10F00001)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Error Warning Flag </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="532" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="532" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n__flags_1ga61954e54995f638ed78281ad2b0cf43a" prot="public" static="no">
        <name>CAN_FLAG_EPV</name>
        <initializer>((uint32_t)0x10F00002)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Error Passive Flag </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="533" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="533" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n__flags_1ga65f20612d0bf1692003882c0cdbadb1c" prot="public" static="no">
        <name>CAN_FLAG_BOF</name>
        <initializer>((uint32_t)0x10F00004)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Bus-Off Flag </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="534" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="534" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n__flags_1ga73a774fa4d391aec0ea6552bf9372917" prot="public" static="no">
        <name>CAN_FLAG_LEC</name>
        <initializer>((uint32_t)0x30F00070)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Last error code Flag </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="535" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="535" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n__flags_1ga38d33d1762ed3a331d214cdb3249866e" prot="public" static="no">
        <name>IS_CAN_GET_FLAG</name>
        <param><defname>FLAG</defname></param>
        <initializer>(((FLAG) == <ref refid="group___c_a_n__flags_1ga73a774fa4d391aec0ea6552bf9372917" kindref="member">CAN_FLAG_LEC</ref>)  || ((FLAG) == <ref refid="group___c_a_n__flags_1ga65f20612d0bf1692003882c0cdbadb1c" kindref="member">CAN_FLAG_BOF</ref>)   || \
                               ((FLAG) == <ref refid="group___c_a_n__flags_1ga61954e54995f638ed78281ad2b0cf43a" kindref="member">CAN_FLAG_EPV</ref>)  || ((FLAG) == <ref refid="group___c_a_n__flags_1gae8906ba9c4031866c5096418ffa9bf71" kindref="member">CAN_FLAG_EWG</ref>)   || \
                               ((FLAG) == <ref refid="group___c_a_n__flags_1ga18c72dbe75cb80e8b5126c23c9120818" kindref="member">CAN_FLAG_WKU</ref>)  || ((FLAG) == <ref refid="group___c_a_n__flags_1ga2abd66b5e0032132673208decd2d01f2" kindref="member">CAN_FLAG_FOV0</ref>)  || \
                               ((FLAG) == <ref refid="group___c_a_n__flags_1ga11648741ff43af1561ce7009698fb797" kindref="member">CAN_FLAG_FF0</ref>)  || ((FLAG) == <ref refid="group___c_a_n__flags_1ga4b40574700edfe752433bb4e0d457c64" kindref="member">CAN_FLAG_FMP0</ref>)  || \
                               ((FLAG) == <ref refid="group___c_a_n__flags_1gac1af6e61b1285ddc4658c4bcc152719a" kindref="member">CAN_FLAG_FOV1</ref>) || ((FLAG) == <ref refid="group___c_a_n__flags_1ga0fa967743c5db04189bb2160aa48e371" kindref="member">CAN_FLAG_FF1</ref>)   || \
                               ((FLAG) == <ref refid="group___c_a_n__flags_1ga5d4b7376954a059fbd74ed8d688f6657" kindref="member">CAN_FLAG_FMP1</ref>) || ((FLAG) == <ref refid="group___c_a_n__flags_1ga9c20cd47e558135bd7ae71149583d487" kindref="member">CAN_FLAG_RQCP2</ref>) || \
                               ((FLAG) == <ref refid="group___c_a_n__flags_1gaba705586ebc3d961507436c03a2feaba" kindref="member">CAN_FLAG_RQCP1</ref>)|| ((FLAG) == <ref refid="group___c_a_n__flags_1ga6df0579049eb471720ea103c5446298b" kindref="member">CAN_FLAG_RQCP0</ref>) || \
                               ((FLAG) == <ref refid="group___c_a_n__flags_1gad087b5025a3d5ead2c32b06663821cf4" kindref="member">CAN_FLAG_SLAK</ref> ))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="537" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="537" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n__flags_1gac46f5fb953efb6163cf3b2e33a514d0c" prot="public" static="no">
        <name>IS_CAN_CLEAR_FLAG</name>
        <param><defname>FLAG</defname></param>
        <initializer>(((FLAG) == <ref refid="group___c_a_n__flags_1ga73a774fa4d391aec0ea6552bf9372917" kindref="member">CAN_FLAG_LEC</ref>) || ((FLAG) == <ref refid="group___c_a_n__flags_1ga9c20cd47e558135bd7ae71149583d487" kindref="member">CAN_FLAG_RQCP2</ref>) || \
                                ((FLAG) == <ref refid="group___c_a_n__flags_1gaba705586ebc3d961507436c03a2feaba" kindref="member">CAN_FLAG_RQCP1</ref>)  || ((FLAG) == <ref refid="group___c_a_n__flags_1ga6df0579049eb471720ea103c5446298b" kindref="member">CAN_FLAG_RQCP0</ref>) || \
                                ((FLAG) == <ref refid="group___c_a_n__flags_1ga11648741ff43af1561ce7009698fb797" kindref="member">CAN_FLAG_FF0</ref>)  || ((FLAG) == <ref refid="group___c_a_n__flags_1ga2abd66b5e0032132673208decd2d01f2" kindref="member">CAN_FLAG_FOV0</ref>) ||\
                                ((FLAG) == <ref refid="group___c_a_n__flags_1ga0fa967743c5db04189bb2160aa48e371" kindref="member">CAN_FLAG_FF1</ref>) || ((FLAG) == <ref refid="group___c_a_n__flags_1gac1af6e61b1285ddc4658c4bcc152719a" kindref="member">CAN_FLAG_FOV1</ref>) || \
                                ((FLAG) == <ref refid="group___c_a_n__flags_1ga18c72dbe75cb80e8b5126c23c9120818" kindref="member">CAN_FLAG_WKU</ref>) || ((FLAG) == <ref refid="group___c_a_n__flags_1gad087b5025a3d5ead2c32b06663821cf4" kindref="member">CAN_FLAG_SLAK</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="546" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="546" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n__interrupts_1ga619e36230fa2eb089a7c1936b5004eb9" prot="public" static="no">
        <name>CAN_IT_TME</name>
        <initializer>((uint32_t)0x00000001)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Transmit mailbox empty Interrupt </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="562" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="562" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n__interrupts_1ga3fe6fbf53e9d692957e87ad329bcd362" prot="public" static="no">
        <name>CAN_IT_FMP0</name>
        <initializer>((uint32_t)0x00000002)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>FIFO 0 message pending Interrupt </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="565" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="565" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n__interrupts_1gabf63043d9216de80ddc7ffe57b23ef67" prot="public" static="no">
        <name>CAN_IT_FF0</name>
        <initializer>((uint32_t)0x00000004)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>FIFO 0 full Interrupt </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="566" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="566" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n__interrupts_1ga066a4317f95669e5b5931c9a759cf248" prot="public" static="no">
        <name>CAN_IT_FOV0</name>
        <initializer>((uint32_t)0x00000008)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>FIFO 0 overrun Interrupt </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="567" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="567" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n__interrupts_1gaa0e101053fb203629e0e9a954213e71e" prot="public" static="no">
        <name>CAN_IT_FMP1</name>
        <initializer>((uint32_t)0x00000010)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>FIFO 1 message pending Interrupt </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="568" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="568" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n__interrupts_1ga93b86d884ce0624b4b36c991fd75fc1c" prot="public" static="no">
        <name>CAN_IT_FF1</name>
        <initializer>((uint32_t)0x00000020)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>FIFO 1 full Interrupt </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="569" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="569" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n__interrupts_1ga963301fdbede5f9a9665dc5b6210eaec" prot="public" static="no">
        <name>CAN_IT_FOV1</name>
        <initializer>((uint32_t)0x00000040)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>FIFO 1 overrun Interrupt </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="570" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="570" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n__interrupts_1gac9c8767770d94de753dda9ad31f9af15" prot="public" static="no">
        <name>CAN_IT_WKU</name>
        <initializer>((uint32_t)0x00010000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Wake-up Interrupt </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="573" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="573" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n__interrupts_1ga639d4ab2777d9a2f8b7e67071b091059" prot="public" static="no">
        <name>CAN_IT_SLK</name>
        <initializer>((uint32_t)0x00020000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sleep acknowledge Interrupt </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="574" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="574" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n__interrupts_1ga8a9f04ddf6ebe169d32b951a8ea135b3" prot="public" static="no">
        <name>CAN_IT_EWG</name>
        <initializer>((uint32_t)0x00000100)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Error warning Interrupt </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="577" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="577" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n__interrupts_1ga006b7b641d337a599ceac64b483e75dd" prot="public" static="no">
        <name>CAN_IT_EPV</name>
        <initializer>((uint32_t)0x00000200)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Error passive Interrupt </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="578" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="578" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n__interrupts_1gad63c39e6237aa07681a1f8ce2ff9e167" prot="public" static="no">
        <name>CAN_IT_BOF</name>
        <initializer>((uint32_t)0x00000400)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Bus-off Interrupt </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="579" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="579" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n__interrupts_1gad670b6f001bf67f24e17d91ada50a61c" prot="public" static="no">
        <name>CAN_IT_LEC</name>
        <initializer>((uint32_t)0x00000800)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Last error code Interrupt </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="580" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="580" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n__interrupts_1ga65f1781c9165a2e9b5f77f1ed3990741" prot="public" static="no">
        <name>CAN_IT_ERR</name>
        <initializer>((uint32_t)0x00008000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Error Interrupt </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="581" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="581" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n__interrupts_1ga0c57058d6d14b2baa24a4895975b1371" prot="public" static="no">
        <name>CAN_IT_RQCP0</name>
        <initializer><ref refid="group___c_a_n__interrupts_1ga619e36230fa2eb089a7c1936b5004eb9" kindref="member">CAN_IT_TME</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="584" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="584" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n__interrupts_1ga42e5c8e89e0f06f3250916fcfb21dc22" prot="public" static="no">
        <name>CAN_IT_RQCP1</name>
        <initializer><ref refid="group___c_a_n__interrupts_1ga619e36230fa2eb089a7c1936b5004eb9" kindref="member">CAN_IT_TME</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="585" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="585" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n__interrupts_1gacc634c3e29cdc9622081021dcda3127b" prot="public" static="no">
        <name>CAN_IT_RQCP2</name>
        <initializer><ref refid="group___c_a_n__interrupts_1ga619e36230fa2eb089a7c1936b5004eb9" kindref="member">CAN_IT_TME</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="586" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="586" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n__interrupts_1gac0a9467bb0028c5fcd15a8a0ec6aaecb" prot="public" static="no">
        <name>IS_CAN_IT</name>
        <param><defname>IT</defname></param>
        <initializer>(((IT) == <ref refid="group___c_a_n__interrupts_1ga619e36230fa2eb089a7c1936b5004eb9" kindref="member">CAN_IT_TME</ref>) || ((IT) == <ref refid="group___c_a_n__interrupts_1ga3fe6fbf53e9d692957e87ad329bcd362" kindref="member">CAN_IT_FMP0</ref>)  ||\
                             ((IT) == <ref refid="group___c_a_n__interrupts_1gabf63043d9216de80ddc7ffe57b23ef67" kindref="member">CAN_IT_FF0</ref>)  || ((IT) == <ref refid="group___c_a_n__interrupts_1ga066a4317f95669e5b5931c9a759cf248" kindref="member">CAN_IT_FOV0</ref>)  ||\
                             ((IT) == <ref refid="group___c_a_n__interrupts_1gaa0e101053fb203629e0e9a954213e71e" kindref="member">CAN_IT_FMP1</ref>) || ((IT) == <ref refid="group___c_a_n__interrupts_1ga93b86d884ce0624b4b36c991fd75fc1c" kindref="member">CAN_IT_FF1</ref>)   ||\
                             ((IT) == <ref refid="group___c_a_n__interrupts_1ga963301fdbede5f9a9665dc5b6210eaec" kindref="member">CAN_IT_FOV1</ref>) || ((IT) == <ref refid="group___c_a_n__interrupts_1ga8a9f04ddf6ebe169d32b951a8ea135b3" kindref="member">CAN_IT_EWG</ref>)   ||\
                             ((IT) == <ref refid="group___c_a_n__interrupts_1ga006b7b641d337a599ceac64b483e75dd" kindref="member">CAN_IT_EPV</ref>)  || ((IT) == <ref refid="group___c_a_n__interrupts_1gad63c39e6237aa07681a1f8ce2ff9e167" kindref="member">CAN_IT_BOF</ref>)   ||\
                             ((IT) == <ref refid="group___c_a_n__interrupts_1gad670b6f001bf67f24e17d91ada50a61c" kindref="member">CAN_IT_LEC</ref>)  || ((IT) == <ref refid="group___c_a_n__interrupts_1ga65f1781c9165a2e9b5f77f1ed3990741" kindref="member">CAN_IT_ERR</ref>)   ||\
                             ((IT) == <ref refid="group___c_a_n__interrupts_1gac9c8767770d94de753dda9ad31f9af15" kindref="member">CAN_IT_WKU</ref>)  || ((IT) == <ref refid="group___c_a_n__interrupts_1ga639d4ab2777d9a2f8b7e67071b091059" kindref="member">CAN_IT_SLK</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="589" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="589" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n__interrupts_1ga8b6e5fd6ddfe0141925f1e22cfbe7b85" prot="public" static="no">
        <name>IS_CAN_CLEAR_IT</name>
        <param><defname>IT</defname></param>
        <initializer>(((IT) == <ref refid="group___c_a_n__interrupts_1ga619e36230fa2eb089a7c1936b5004eb9" kindref="member">CAN_IT_TME</ref>) || ((IT) == <ref refid="group___c_a_n__interrupts_1gabf63043d9216de80ddc7ffe57b23ef67" kindref="member">CAN_IT_FF0</ref>)    ||\
                             ((IT) == <ref refid="group___c_a_n__interrupts_1ga066a4317f95669e5b5931c9a759cf248" kindref="member">CAN_IT_FOV0</ref>)|| ((IT) == <ref refid="group___c_a_n__interrupts_1ga93b86d884ce0624b4b36c991fd75fc1c" kindref="member">CAN_IT_FF1</ref>)    ||\
                             ((IT) == <ref refid="group___c_a_n__interrupts_1ga963301fdbede5f9a9665dc5b6210eaec" kindref="member">CAN_IT_FOV1</ref>)|| ((IT) == <ref refid="group___c_a_n__interrupts_1ga8a9f04ddf6ebe169d32b951a8ea135b3" kindref="member">CAN_IT_EWG</ref>)    ||\
                             ((IT) == <ref refid="group___c_a_n__interrupts_1ga006b7b641d337a599ceac64b483e75dd" kindref="member">CAN_IT_EPV</ref>) || ((IT) == <ref refid="group___c_a_n__interrupts_1gad63c39e6237aa07681a1f8ce2ff9e167" kindref="member">CAN_IT_BOF</ref>)    ||\
                             ((IT) == <ref refid="group___c_a_n__interrupts_1gad670b6f001bf67f24e17d91ada50a61c" kindref="member">CAN_IT_LEC</ref>) || ((IT) == <ref refid="group___c_a_n__interrupts_1ga65f1781c9165a2e9b5f77f1ed3990741" kindref="member">CAN_IT_ERR</ref>)    ||\
                             ((IT) == <ref refid="group___c_a_n__interrupts_1gac9c8767770d94de753dda9ad31f9af15" kindref="member">CAN_IT_WKU</ref>) || ((IT) == <ref refid="group___c_a_n__interrupts_1ga639d4ab2777d9a2f8b7e67071b091059" kindref="member">CAN_IT_SLK</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="597" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="597" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n___legacy_1ga0539a9e5a898fcd71c4dcb7e341e4b86" prot="public" static="no">
        <name>CANINITFAILED</name>
        <initializer><ref refid="group___c_a_n__sleep__constants_1ga095c319e8c54c974eb2b6eeadf180d96" kindref="member">CAN_InitStatus_Failed</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="611" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="611" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n___legacy_1ga14cba0b5b506be73e2f45c732f8e54cb" prot="public" static="no">
        <name>CANINITOK</name>
        <initializer><ref refid="group___c_a_n__sleep__constants_1ga6bed5957af8f2f6b00568e15ccac5772" kindref="member">CAN_InitStatus_Success</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="612" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="612" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n___legacy_1ga1b3d041dff9fed4dad75ed2a4a0e27e0" prot="public" static="no">
        <name>CAN_FilterFIFO0</name>
        <initializer><ref refid="group___c_a_n__filter___f_i_f_o_1ga8249c27978ca94676530540b88a6be8f" kindref="member">CAN_Filter_FIFO0</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="613" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="613" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n___legacy_1gada8f9b3a9c88f36539aaeb457039e666" prot="public" static="no">
        <name>CAN_FilterFIFO1</name>
        <initializer><ref refid="group___c_a_n__filter___f_i_f_o_1gaab8478c89a607c4b8baf68efc730e316" kindref="member">CAN_Filter_FIFO1</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="614" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="614" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n___legacy_1ga284ca16658deb9d0c21f4ddc6db14833" prot="public" static="no">
        <name>CAN_ID_STD</name>
        <initializer><ref refid="group___c_a_n__identifier__type_1ga151d9df8a6f361d0a3231593726b5a13" kindref="member">CAN_Id_Standard</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="615" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="615" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n___legacy_1ga5f6fdd1dc3d312af1ac30e2eee15d6f0" prot="public" static="no">
        <name>CAN_ID_EXT</name>
        <initializer><ref refid="group___c_a_n__identifier__type_1gaf6c5c0b43b968fed17fd90246912b1a7" kindref="member">CAN_Id_Extended</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="616" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="616" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n___legacy_1gab1e89074b4fcfebf81c323909625b0d0" prot="public" static="no">
        <name>CAN_RTR_DATA</name>
        <initializer><ref refid="group___c_a_n__remote__transmission__request_1ga2407c3a8b2cd97bd651143aa959219f1" kindref="member">CAN_RTR_Data</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="617" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="617" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n___legacy_1gab15c649e3e497c6d1145bb98ff7f3f04" prot="public" static="no">
        <name>CAN_RTR_REMOTE</name>
        <initializer><ref refid="group___c_a_n__remote__transmission__request_1ga42e95ddfb02d88c82de84058fb0fb349" kindref="member">CAN_RTR_Remote</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="618" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="618" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n___legacy_1gae315f7ee14af20ca8454be9e507873cd" prot="public" static="no">
        <name>CANTXFAILE</name>
        <initializer><ref refid="group___c_a_n__transmit__constants_1ga8d193002e76c04ec8caff6b110cd5983" kindref="member">CAN_TxStatus_Failed</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="619" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="619" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n___legacy_1ga288ba42cf1de7572f2fe1378268c9452" prot="public" static="no">
        <name>CANTXOK</name>
        <initializer><ref refid="group___c_a_n__transmit__constants_1ga0b401c61922b1449de9b486dcf475c97" kindref="member">CAN_TxStatus_Ok</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="620" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="620" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n___legacy_1ga76f43f4c54505b1f87b39b056ca38897" prot="public" static="no">
        <name>CANTXPENDING</name>
        <initializer><ref refid="group___c_a_n__transmit__constants_1ga9678a3a51379422868083608c7394409" kindref="member">CAN_TxStatus_Pending</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="621" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="621" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n___legacy_1ga418f1fd7ca2e852b263fd07874fde0c6" prot="public" static="no">
        <name>CAN_NO_MB</name>
        <initializer><ref refid="group___c_a_n__transmit__constants_1ga2620e99debd51011d3569121f2e44690" kindref="member">CAN_TxStatus_NoMailBox</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="622" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="622" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n___legacy_1ga4d5e8e0c57febb024b30e5f24866a117" prot="public" static="no">
        <name>CANSLEEPFAILED</name>
        <initializer><ref refid="group___c_a_n__sleep__constants_1ga169500ab7169c4e9c7e9e4ea34b3e070" kindref="member">CAN_Sleep_Failed</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="623" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="623" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n___legacy_1ga2f8d34f8f60a6c84d8e436d4d37708ab" prot="public" static="no">
        <name>CANSLEEPOK</name>
        <initializer><ref refid="group___c_a_n__sleep__constants_1gaf5c4e9d32d4faff9d0bf61e153ed7998" kindref="member">CAN_Sleep_Ok</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="624" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="624" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n___legacy_1ga0de3b0e2c544d9fa772b646e331e51b1" prot="public" static="no">
        <name>CANWAKEUPFAILED</name>
        <initializer><ref refid="group___c_a_n__wake__up__constants_1ga837fd7ad47fee78e43a186544e2b390b" kindref="member">CAN_WakeUp_Failed</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="625" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="625" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n___legacy_1gafed6ab4dbb00c9d63f6a7cdf323f33ef" prot="public" static="no">
        <name>CANWAKEUPOK</name>
        <initializer><ref refid="group___c_a_n__wake__up__constants_1ga152e4935cf85bdfb803eb36b656cd690" kindref="member">CAN_WakeUp_Ok</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="626" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" bodystart="626" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group___c_a_n___exported___functions_1ga002b74cd69574a14b17ad445090245cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CAN_DeInit</definition>
        <argsstring>(CAN_TypeDef *CANx)</argsstring>
        <name>CAN_DeInit</name>
        <param>
          <type><ref refid="struct_c_a_n___type_def" kindref="compound">CAN_TypeDef</ref> *</type>
          <declname>CANx</declname>
        </param>
        <briefdescription>
<para>Deinitializes the CAN peripheral registers to their default reset values. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>CANx</parametername>
</parameternamelist>
<parameterdescription>
<para>where x can be 1 or 2 to select the CAN peripheral. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None.</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="648" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_can.c" bodystart="122" bodyend="141"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___c_a_n___exported___types_1gaf471a53f52a02078ffd842658d932f63" compoundref="stm32f10x__can_8h" startline="52">IS_CAN_ALL_PERIPH</references>
        <references refid="group___peripheral__declaration_1ga4964ecb6a5c689aaf8ee2832b8093aac" compoundref="stm32f10x_8h" startline="1400">CAN1</references>
        <references refid="group___r_c_c___exported___functions_1gab197ae4369c10b92640a733b40ed2801" compoundref="stm32f10x__rcc_8c" startline="1216" endline="1229">RCC_APB1PeriphResetCmd</references>
        <references refid="group___a_p_b1__peripheral_1ga7f1d940739de0134ae89e9e04214989d" compoundref="stm32f10x__rcc_8h" startline="547">RCC_APB1Periph_CAN1</references>
        <references refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1a7d46875fa3ebd2c34d2756950eda83bf" compoundref="stm32f10x_8h" startline="521">ENABLE</references>
        <references refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1ad3a9df141be0ccf10389b640f492b26d" compoundref="stm32f10x_8h" startline="521">DISABLE</references>
        <references refid="group___a_p_b1__peripheral_1ga62801597b97816751c038acb1466179c" compoundref="stm32f10x__rcc_8h" startline="548">RCC_APB1Periph_CAN2</references>
      </memberdef>
      <memberdef kind="function" id="group___c_a_n___exported___functions_1ga9023c35a9ab931ad4513fc5d19b4bd6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t CAN_Init</definition>
        <argsstring>(CAN_TypeDef *CANx, CAN_InitTypeDef *CAN_InitStruct)</argsstring>
        <name>CAN_Init</name>
        <param>
          <type><ref refid="struct_c_a_n___type_def" kindref="compound">CAN_TypeDef</ref> *</type>
          <declname>CANx</declname>
        </param>
        <param>
          <type><ref refid="struct_c_a_n___init_type_def" kindref="compound">CAN_InitTypeDef</ref> *</type>
          <declname>CAN_InitStruct</declname>
        </param>
        <briefdescription>
<para>Initializes the CAN peripheral according to the specified parameters in the CAN_InitStruct. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>CANx</parametername>
</parameternamelist>
<parameterdescription>
<para>where x can be 1 or 2 to to select the CAN peripheral. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>CAN_InitStruct</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a <ref refid="struct_c_a_n___init_type_def" kindref="compound">CAN_InitTypeDef</ref> structure that contains the configuration information for the CAN peripheral. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>Constant</parametername>
</parameternamelist>
<parameterdescription>
<para>indicates initialization succeed which will be CAN_InitStatus_Failed or CAN_InitStatus_Success. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="651" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_can.c" bodystart="154" bodyend="282"/>
        <references refid="group___c_a_n__sleep__constants_1ga095c319e8c54c974eb2b6eeadf180d96" compoundref="stm32f10x__can_8h" startline="218">CAN_InitStatus_Failed</references>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___c_a_n___exported___types_1gaf471a53f52a02078ffd842658d932f63" compoundref="stm32f10x__can_8h" startline="52">IS_CAN_ALL_PERIPH</references>
        <references refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" compoundref="stm32f10x_8h" startline="522">IS_FUNCTIONAL_STATE</references>
        <references refid="struct_c_a_n___init_type_def_1aa53ceafdcf1a9a5c9a6566006c9a4b60" compoundref="stm32f10x__can_8h" startline="83">CAN_InitTypeDef::CAN_TTCM</references>
        <references refid="struct_c_a_n___init_type_def_1a70560646c27d96ca8adc4a62d24dafd9" compoundref="stm32f10x__can_8h" startline="87">CAN_InitTypeDef::CAN_ABOM</references>
        <references refid="struct_c_a_n___init_type_def_1a10f873c858a7b0efc2d0ab41524320d3" compoundref="stm32f10x__can_8h" startline="91">CAN_InitTypeDef::CAN_AWUM</references>
        <references refid="struct_c_a_n___init_type_def_1a5adeac1b7b47f2b91e667eddc181ac09" compoundref="stm32f10x__can_8h" startline="95">CAN_InitTypeDef::CAN_NART</references>
        <references refid="struct_c_a_n___init_type_def_1aa63787683c0ad533b513fb60355d76f1" compoundref="stm32f10x__can_8h" startline="99">CAN_InitTypeDef::CAN_RFLM</references>
        <references refid="struct_c_a_n___init_type_def_1a003de4b70fc93b4f820f320c6ea75a16" compoundref="stm32f10x__can_8h" startline="103">CAN_InitTypeDef::CAN_TXFP</references>
        <references refid="group___c_a_n___mode_1ga5d6480c240edeba383b4e07d65814d98" compoundref="stm32f10x__can_8h" startline="234">IS_CAN_MODE</references>
        <references refid="struct_c_a_n___init_type_def_1a24816ff18ae048a5ec4bbb22aa2c04f9" compoundref="stm32f10x__can_8h" startline="64">CAN_InitTypeDef::CAN_Mode</references>
        <references refid="group___c_a_n__synchronisation__jump__width_1ga4e4f344712d3bcac1975318d4ab9a383" compoundref="stm32f10x__can_8h" startline="281">IS_CAN_SJW</references>
        <references refid="struct_c_a_n___init_type_def_1addac271c43490cb37ac7293f7bf201c2" compoundref="stm32f10x__can_8h" startline="68">CAN_InitTypeDef::CAN_SJW</references>
        <references refid="group___c_a_n__time__quantum__in__bit__segment__1_1ga225f1457e1c6b8fc3b5af0f463933152" compoundref="stm32f10x__can_8h" startline="308">IS_CAN_BS1</references>
        <references refid="struct_c_a_n___init_type_def_1aecbd21b55dc88c3a18db93af2836cd58" compoundref="stm32f10x__can_8h" startline="74">CAN_InitTypeDef::CAN_BS1</references>
        <references refid="group___c_a_n__time__quantum__in__bit__segment__2_1ga3f5620b1d094dbd7d2fb8d16f4b187a9" compoundref="stm32f10x__can_8h" startline="326">IS_CAN_BS2</references>
        <references refid="struct_c_a_n___init_type_def_1a693eb00830d6e2aeb4d9fabdba85b9cf" compoundref="stm32f10x__can_8h" startline="78">CAN_InitTypeDef::CAN_BS2</references>
        <references refid="group___c_a_n__clock__prescaler_1gacde6b8be6fe083a6302fc183b5ac1055" compoundref="stm32f10x__can_8h" startline="336">IS_CAN_PRESCALER</references>
        <references refid="struct_c_a_n___init_type_def_1a3e91dbcbf30b893a9bd6a65606cb8fe9" compoundref="stm32f10x__can_8h" startline="61">CAN_InitTypeDef::CAN_Prescaler</references>
        <references refid="struct_c_a_n___type_def_1a1282eee79a22003257a7a5daa7f4a35f" compoundref="stm32f10x_8h" startline="705">CAN_TypeDef::MCR</references>
        <references refid="group___peripheral___registers___bits___definition_1gadf9602dfb2f95b481b6e642b95991176" compoundref="stm32f10x_8h" startline="6220">CAN_MCR_SLEEP</references>
        <references refid="group___peripheral___registers___bits___definition_1ga0cf12be5661908dbe38aa14cd4c3a356" compoundref="stm32f10x_8h" startline="6219">CAN_MCR_INRQ</references>
        <references refid="struct_c_a_n___type_def_1af98b957a4e887751fbd407d3e2cf93b5" compoundref="stm32f10x_8h" startline="706">CAN_TypeDef::MSR</references>
        <references refid="group___peripheral___registers___bits___definition_1ga2871cee90ebecb760bab16e9c039b682" compoundref="stm32f10x_8h" startline="6230">CAN_MSR_INAK</references>
        <references refid="group___c_a_n___private___defines_1ga60a32132df242146efd3e9f7a079f0f0" compoundref="stm32f10x__can_8c" startline="58">INAK_TIMEOUT</references>
        <references refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1a7d46875fa3ebd2c34d2756950eda83bf" compoundref="stm32f10x_8h" startline="521">ENABLE</references>
        <references refid="group___peripheral___registers___bits___definition_1ga32b2eda9cad8a969c5d2349bd1d853bb" compoundref="stm32f10x_8h" startline="6226">CAN_MCR_TTCM</references>
        <references refid="group___peripheral___registers___bits___definition_1gad7aff5c0a3ead7f937849ab66eba7490" compoundref="stm32f10x_8h" startline="6225">CAN_MCR_ABOM</references>
        <references refid="group___peripheral___registers___bits___definition_1gaa2745f1a565c3f2ec5b16612d1fd66e0" compoundref="stm32f10x_8h" startline="6224">CAN_MCR_AWUM</references>
        <references refid="group___peripheral___registers___bits___definition_1ga2774f04e286942d36a5b6135c8028049" compoundref="stm32f10x_8h" startline="6223">CAN_MCR_NART</references>
        <references refid="group___peripheral___registers___bits___definition_1ga501125ff257a7d02c35a0d6dcbaa2ba8" compoundref="stm32f10x_8h" startline="6222">CAN_MCR_RFLM</references>
        <references refid="group___peripheral___registers___bits___definition_1ga35e7e66f9cd8cb6efa6a80367d2294a9" compoundref="stm32f10x_8h" startline="6221">CAN_MCR_TXFP</references>
        <references refid="struct_c_a_n___type_def_1accad1e4155459a13369f5ad0e7c6da29" compoundref="stm32f10x_8h" startline="712">CAN_TypeDef::BTR</references>
        <references refid="group___c_a_n__sleep__constants_1ga6bed5957af8f2f6b00568e15ccac5772" compoundref="stm32f10x__can_8h" startline="219">CAN_InitStatus_Success</references>
      </memberdef>
      <memberdef kind="function" id="group___c_a_n___exported___functions_1ga39476830280340363c51041be6b12647" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CAN_FilterInit</definition>
        <argsstring>(CAN_FilterInitTypeDef *CAN_FilterInitStruct)</argsstring>
        <name>CAN_FilterInit</name>
        <param>
          <type><ref refid="struct_c_a_n___filter_init_type_def" kindref="compound">CAN_FilterInitTypeDef</ref> *</type>
          <declname>CAN_FilterInitStruct</declname>
        </param>
        <briefdescription>
<para>Initializes the CAN peripheral according to the specified parameters in the CAN_FilterInitStruct. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>CAN_FilterInitStruct</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a <ref refid="struct_c_a_n___filter_init_type_def" kindref="compound">CAN_FilterInitTypeDef</ref> structure that contains the configuration information. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None.</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="652" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_can.c" bodystart="292" bodyend="376"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___c_a_n__filter__number_1ga28d6c98a160d71059ed9a5973de2a4ef" compoundref="stm32f10x__can_8h" startline="346">IS_CAN_FILTER_NUMBER</references>
        <references refid="struct_c_a_n___filter_init_type_def_1af94466e1138c2b4fe6a67cf556981193" compoundref="stm32f10x__can_8h" startline="135">CAN_FilterInitTypeDef::CAN_FilterNumber</references>
        <references refid="group___c_a_n__filter__mode_1gae684565d5392c12fd333379e5ec840f8" compoundref="stm32f10x__can_8h" startline="361">IS_CAN_FILTER_MODE</references>
        <references refid="struct_c_a_n___filter_init_type_def_1a7cfb23c48aad13a058c2619dbc062d8a" compoundref="stm32f10x__can_8h" startline="137">CAN_FilterInitTypeDef::CAN_FilterMode</references>
        <references refid="group___c_a_n__filter__scale_1gaf64c93166af0eb5ec7e804116f10783a" compoundref="stm32f10x__can_8h" startline="374">IS_CAN_FILTER_SCALE</references>
        <references refid="struct_c_a_n___filter_init_type_def_1a9d52661aca538dbfcafdda6f16dddc82" compoundref="stm32f10x__can_8h" startline="140">CAN_FilterInitTypeDef::CAN_FilterScale</references>
        <references refid="group___c_a_n__filter___f_i_f_o_1ga2df5ae0de841fc80c969e9147991ec9d" compoundref="stm32f10x__can_8h" startline="387">IS_CAN_FILTER_FIFO</references>
        <references refid="struct_c_a_n___filter_init_type_def_1a01ba491f12097adcc9f0a3d627628d55" compoundref="stm32f10x__can_8h" startline="132">CAN_FilterInitTypeDef::CAN_FilterFIFOAssignment</references>
        <references refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" compoundref="stm32f10x_8h" startline="522">IS_FUNCTIONAL_STATE</references>
        <references refid="struct_c_a_n___filter_init_type_def_1a0225afda33b565f358ca75bdaa780074" compoundref="stm32f10x__can_8h" startline="143">CAN_FilterInitTypeDef::CAN_FilterActivation</references>
        <references refid="group___peripheral__declaration_1ga4964ecb6a5c689aaf8ee2832b8093aac" compoundref="stm32f10x_8h" startline="1400">CAN1</references>
        <references refid="group___c_a_n___private___defines_1ga6125d0273c466e402db1a8f5bf888857" compoundref="stm32f10x__can_8c" startline="55">FMR_FINIT</references>
        <references refid="group___c_a_n__filter__scale_1ga9e0493937e73bcf9a4127eef2f255a95" compoundref="stm32f10x__can_8h" startline="371">CAN_FilterScale_16bit</references>
        <references refid="struct_c_a_n___filter_init_type_def_1a0f052daf04b0a481ecfa5c2cc8058089" compoundref="stm32f10x__can_8h" startline="127">CAN_FilterInitTypeDef::CAN_FilterMaskIdLow</references>
        <references refid="struct_c_a_n___filter_init_type_def_1ab8c56b48ac323e8c7a1b535c79a51f87" compoundref="stm32f10x__can_8h" startline="118">CAN_FilterInitTypeDef::CAN_FilterIdLow</references>
        <references refid="struct_c_a_n___filter_init_type_def_1a6f34539615e6484f266b46aa8f362a91" compoundref="stm32f10x__can_8h" startline="122">CAN_FilterInitTypeDef::CAN_FilterMaskIdHigh</references>
        <references refid="struct_c_a_n___filter_init_type_def_1afc109aa8eedced09d296605f2eb871f7" compoundref="stm32f10x__can_8h" startline="114">CAN_FilterInitTypeDef::CAN_FilterIdHigh</references>
        <references refid="group___c_a_n__filter__scale_1gac63dfb0e11713c59268ee9f4aebab60e" compoundref="stm32f10x__can_8h" startline="372">CAN_FilterScale_32bit</references>
        <references refid="group___c_a_n__filter__mode_1ga8136e518fb31fd91079e4c7c4c19c94b" compoundref="stm32f10x__can_8h" startline="358">CAN_FilterMode_IdMask</references>
        <references refid="group___c_a_n__filter___f_i_f_o_1ga8249c27978ca94676530540b88a6be8f" compoundref="stm32f10x__can_8h" startline="385">CAN_Filter_FIFO0</references>
        <references refid="group___c_a_n__filter___f_i_f_o_1gaab8478c89a607c4b8baf68efc730e316" compoundref="stm32f10x__can_8h" startline="386">CAN_Filter_FIFO1</references>
        <references refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1a7d46875fa3ebd2c34d2756950eda83bf" compoundref="stm32f10x_8h" startline="521">ENABLE</references>
      </memberdef>
      <memberdef kind="function" id="group___c_a_n___exported___functions_1gad77ad810868ed111755fc9e8ae0c7646" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CAN_StructInit</definition>
        <argsstring>(CAN_InitTypeDef *CAN_InitStruct)</argsstring>
        <name>CAN_StructInit</name>
        <param>
          <type><ref refid="struct_c_a_n___init_type_def" kindref="compound">CAN_InitTypeDef</ref> *</type>
          <declname>CAN_InitStruct</declname>
        </param>
        <briefdescription>
<para>Fills each CAN_InitStruct member with its default value. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>CAN_InitStruct</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a <ref refid="struct_c_a_n___init_type_def" kindref="compound">CAN_InitTypeDef</ref> structure which will be initialized. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None.</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="653" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_can.c" bodystart="384" bodyend="420"/>
        <references refid="struct_c_a_n___init_type_def_1aa53ceafdcf1a9a5c9a6566006c9a4b60" compoundref="stm32f10x__can_8h" startline="83">CAN_InitTypeDef::CAN_TTCM</references>
        <references refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1ad3a9df141be0ccf10389b640f492b26d" compoundref="stm32f10x_8h" startline="521">DISABLE</references>
        <references refid="struct_c_a_n___init_type_def_1a70560646c27d96ca8adc4a62d24dafd9" compoundref="stm32f10x__can_8h" startline="87">CAN_InitTypeDef::CAN_ABOM</references>
        <references refid="struct_c_a_n___init_type_def_1a10f873c858a7b0efc2d0ab41524320d3" compoundref="stm32f10x__can_8h" startline="91">CAN_InitTypeDef::CAN_AWUM</references>
        <references refid="struct_c_a_n___init_type_def_1a5adeac1b7b47f2b91e667eddc181ac09" compoundref="stm32f10x__can_8h" startline="95">CAN_InitTypeDef::CAN_NART</references>
        <references refid="struct_c_a_n___init_type_def_1aa63787683c0ad533b513fb60355d76f1" compoundref="stm32f10x__can_8h" startline="99">CAN_InitTypeDef::CAN_RFLM</references>
        <references refid="struct_c_a_n___init_type_def_1a003de4b70fc93b4f820f320c6ea75a16" compoundref="stm32f10x__can_8h" startline="103">CAN_InitTypeDef::CAN_TXFP</references>
        <references refid="struct_c_a_n___init_type_def_1a24816ff18ae048a5ec4bbb22aa2c04f9" compoundref="stm32f10x__can_8h" startline="64">CAN_InitTypeDef::CAN_Mode</references>
        <references refid="group___c_a_n___mode_1gaaf1f48ab4917ccfd5fd31dd781d59e29" compoundref="stm32f10x__can_8h" startline="229">CAN_Mode_Normal</references>
        <references refid="struct_c_a_n___init_type_def_1addac271c43490cb37ac7293f7bf201c2" compoundref="stm32f10x__can_8h" startline="68">CAN_InitTypeDef::CAN_SJW</references>
        <references refid="group___c_a_n__synchronisation__jump__width_1ga4e03d22ae683b63cb4df238449ec967c" compoundref="stm32f10x__can_8h" startline="276">CAN_SJW_1tq</references>
        <references refid="struct_c_a_n___init_type_def_1aecbd21b55dc88c3a18db93af2836cd58" compoundref="stm32f10x__can_8h" startline="74">CAN_InitTypeDef::CAN_BS1</references>
        <references refid="group___c_a_n__time__quantum__in__bit__segment__1_1ga7c5c668200f41991e14b31ca20235000" compoundref="stm32f10x__can_8h" startline="294">CAN_BS1_4tq</references>
        <references refid="struct_c_a_n___init_type_def_1a693eb00830d6e2aeb4d9fabdba85b9cf" compoundref="stm32f10x__can_8h" startline="78">CAN_InitTypeDef::CAN_BS2</references>
        <references refid="group___c_a_n__time__quantum__in__bit__segment__2_1gab3d325ce4a5d0eb1ee8ee50ad4ec7e49" compoundref="stm32f10x__can_8h" startline="319">CAN_BS2_3tq</references>
        <references refid="struct_c_a_n___init_type_def_1a3e91dbcbf30b893a9bd6a65606cb8fe9" compoundref="stm32f10x__can_8h" startline="61">CAN_InitTypeDef::CAN_Prescaler</references>
      </memberdef>
      <memberdef kind="function" id="group___c_a_n___exported___functions_1ga109ff8960bc59f44b984c9646f17b3c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CAN_SlaveStartBank</definition>
        <argsstring>(uint8_t CAN_BankNumber)</argsstring>
        <name>CAN_SlaveStartBank</name>
        <param>
          <type>uint8_t</type>
          <declname>CAN_BankNumber</declname>
        </param>
        <briefdescription>
<para>Select the start bank filter for slave CAN. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This function applies only to STM32 Connectivity line devices. </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>CAN_BankNumber</parametername>
</parameternamelist>
<parameterdescription>
<para>Select the start slave bank filter from 1..27. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None.</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="654" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_can.c" bodystart="428" bodyend="442"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___start__bank__filter__for__slave___c_a_n_1ga7fb463088ff4cd584bba47e3d0a4f469" compoundref="stm32f10x__can_8h" startline="396">IS_CAN_BANKNUMBER</references>
        <references refid="group___peripheral__declaration_1ga4964ecb6a5c689aaf8ee2832b8093aac" compoundref="stm32f10x_8h" startline="1400">CAN1</references>
        <references refid="group___c_a_n___private___defines_1ga6125d0273c466e402db1a8f5bf888857" compoundref="stm32f10x__can_8c" startline="55">FMR_FINIT</references>
      </memberdef>
      <memberdef kind="function" id="group___c_a_n___exported___functions_1gac0e2d33e08caf49d1f1251f0dcc20213" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CAN_DBGFreeze</definition>
        <argsstring>(CAN_TypeDef *CANx, FunctionalState NewState)</argsstring>
        <name>CAN_DBGFreeze</name>
        <param>
          <type><ref refid="struct_c_a_n___type_def" kindref="compound">CAN_TypeDef</ref> *</type>
          <declname>CANx</declname>
        </param>
        <param>
          <type><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref></type>
          <declname>NewState</declname>
        </param>
        <briefdescription>
<para>Enables or disables the DBG Freeze for CAN. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>CANx</parametername>
</parameternamelist>
<parameterdescription>
<para>where x can be 1 or 2 to to select the CAN peripheral. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NewState</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of the CAN peripheral. This parameter can be: ENABLE or DISABLE. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None.</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="655" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_can.c" bodystart="451" bodyend="467"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___c_a_n___exported___types_1gaf471a53f52a02078ffd842658d932f63" compoundref="stm32f10x__can_8h" startline="52">IS_CAN_ALL_PERIPH</references>
        <references refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" compoundref="stm32f10x_8h" startline="522">IS_FUNCTIONAL_STATE</references>
        <references refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1ad3a9df141be0ccf10389b640f492b26d" compoundref="stm32f10x_8h" startline="521">DISABLE</references>
        <references refid="struct_c_a_n___type_def_1a1282eee79a22003257a7a5daa7f4a35f" compoundref="stm32f10x_8h" startline="705">CAN_TypeDef::MCR</references>
        <references refid="group___c_a_n___private___defines_1ga1ded3736beb63c49281f2983fc68c36d" compoundref="stm32f10x__can_8c" startline="49">MCR_DBF</references>
      </memberdef>
      <memberdef kind="function" id="group___c_a_n___exported___functions_1ga94740177bab153ca5b102d122f9a8cca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CAN_TTComModeCmd</definition>
        <argsstring>(CAN_TypeDef *CANx, FunctionalState NewState)</argsstring>
        <name>CAN_TTComModeCmd</name>
        <param>
          <type><ref refid="struct_c_a_n___type_def" kindref="compound">CAN_TypeDef</ref> *</type>
          <declname>CANx</declname>
        </param>
        <param>
          <type><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref></type>
          <declname>NewState</declname>
        </param>
        <briefdescription>
<para>Enables or disabes the CAN Time TriggerOperation communication mode. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>CANx</parametername>
</parameternamelist>
<parameterdescription>
<para>where x can be 1 or 2 to to select the CAN peripheral. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NewState</parametername>
</parameternamelist>
<parameterdescription>
<para>: Mode new state , can be one of <ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref>. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>when enabled, Time stamp (TIME[15:0]) value is sent in the last two data bytes of the 8-byte message: TIME[7:0] in data byte 6 and TIME[15:8] in data byte 7 </para></simplesect>
<simplesect kind="note"><para>DLC must be programmed as 8 in order Time Stamp (2 bytes) to be sent over the CAN bus. </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="656" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_can.c" bodystart="481" bodyend="506"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___c_a_n___exported___types_1gaf471a53f52a02078ffd842658d932f63" compoundref="stm32f10x__can_8h" startline="52">IS_CAN_ALL_PERIPH</references>
        <references refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" compoundref="stm32f10x_8h" startline="522">IS_FUNCTIONAL_STATE</references>
        <references refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1ad3a9df141be0ccf10389b640f492b26d" compoundref="stm32f10x_8h" startline="521">DISABLE</references>
        <references refid="struct_c_a_n___type_def_1a1282eee79a22003257a7a5daa7f4a35f" compoundref="stm32f10x_8h" startline="705">CAN_TypeDef::MCR</references>
        <references refid="group___peripheral___registers___bits___definition_1ga32b2eda9cad8a969c5d2349bd1d853bb" compoundref="stm32f10x_8h" startline="6226">CAN_MCR_TTCM</references>
        <references refid="struct_c_a_n___type_def_1a328925e230f68a775f6f4ad1076c27ce" compoundref="stm32f10x_8h" startline="714">CAN_TypeDef::sTxMailBox</references>
        <references refid="struct_c_a_n___tx_mail_box___type_def_1a2351cb865d064cf75f61642aaa887f76" compoundref="stm32f10x_8h" startline="672">CAN_TxMailBox_TypeDef::TDTR</references>
        <references refid="group___peripheral___registers___bits___definition_1gad2d329960b527a62fab099a084bfa906" compoundref="stm32f10x_8h" startline="6327">CAN_TDT0R_TGT</references>
        <references refid="group___peripheral___registers___bits___definition_1ga35757787e6481553885fdf4fd2738c4b" compoundref="stm32f10x_8h" startline="6351">CAN_TDT1R_TGT</references>
        <references refid="group___peripheral___registers___bits___definition_1ga4c51b43d309b56e8a64724ef1517033e" compoundref="stm32f10x_8h" startline="6375">CAN_TDT2R_TGT</references>
      </memberdef>
      <memberdef kind="function" id="group___c_a_n___exported___functions_1gaccfcb81f76f58400077c7b2d8641dd83" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t CAN_Transmit</definition>
        <argsstring>(CAN_TypeDef *CANx, CanTxMsg *TxMessage)</argsstring>
        <name>CAN_Transmit</name>
        <param>
          <type><ref refid="struct_c_a_n___type_def" kindref="compound">CAN_TypeDef</ref> *</type>
          <declname>CANx</declname>
        </param>
        <param>
          <type><ref refid="struct_can_tx_msg" kindref="compound">CanTxMsg</ref> *</type>
          <declname>TxMessage</declname>
        </param>
        <briefdescription>
<para>Initiates the transmission of a message. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>CANx</parametername>
</parameternamelist>
<parameterdescription>
<para>where x can be 1 or 2 to to select the CAN peripheral. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>TxMessage</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a structure which contains CAN Id, CAN DLC and CAN data. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the mailbox that is used for transmission or CAN_TxStatus_NoMailBox if there is no empty mailbox. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="659" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_can.c" bodystart="515" bodyend="578"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___c_a_n___exported___types_1gaf471a53f52a02078ffd842658d932f63" compoundref="stm32f10x__can_8h" startline="52">IS_CAN_ALL_PERIPH</references>
        <references refid="group___c_a_n__identifier__type_1gab845f7fbcf6ff8cf3d025210eb8900e4" compoundref="stm32f10x__can_8h" startline="420">IS_CAN_IDTYPE</references>
        <references refid="struct_can_tx_msg_1aa4c8568a0e3250a17bd7e116b3e09670" compoundref="stm32f10x__can_8h" startline="159">CanTxMsg::IDE</references>
        <references refid="group___c_a_n__remote__transmission__request_1ga3379997ad4da6fc4d7975c52b891bdc0" compoundref="stm32f10x__can_8h" startline="432">IS_CAN_RTR</references>
        <references refid="struct_can_tx_msg_1a69f84255db38c6910058f290efdb7302" compoundref="stm32f10x__can_8h" startline="163">CanTxMsg::RTR</references>
        <references refid="group___c_a_n___tx_1ga6109469a6a2792b3e7c6be520ea50d36" compoundref="stm32f10x__can_8h" startline="408">IS_CAN_DLC</references>
        <references refid="struct_can_tx_msg_1ab49d0fa602aad2fd9cd007adafc11fc2" compoundref="stm32f10x__can_8h" startline="167">CanTxMsg::DLC</references>
        <references refid="struct_c_a_n___type_def_1acbc82ac4e87e75350fc586be5e56d95b" compoundref="stm32f10x_8h" startline="707">CAN_TypeDef::TSR</references>
        <references refid="group___peripheral___registers___bits___definition_1gad7500e491fe82e67ed5d40759e8a50f0" compoundref="stm32f10x_8h" startline="6259">CAN_TSR_TME0</references>
        <references refid="group___peripheral___registers___bits___definition_1ga5ba2b51def4b1683fd050e43045306ea" compoundref="stm32f10x_8h" startline="6260">CAN_TSR_TME1</references>
        <references refid="group___peripheral___registers___bits___definition_1gaf6523fac51d3aed2e36de4c2f07c2a21" compoundref="stm32f10x_8h" startline="6261">CAN_TSR_TME2</references>
        <references refid="group___c_a_n__transmit__constants_1ga2620e99debd51011d3569121f2e44690" compoundref="stm32f10x__can_8h" startline="445">CAN_TxStatus_NoMailBox</references>
        <references refid="struct_c_a_n___type_def_1a328925e230f68a775f6f4ad1076c27ce" compoundref="stm32f10x_8h" startline="714">CAN_TypeDef::sTxMailBox</references>
        <references refid="struct_c_a_n___tx_mail_box___type_def_1a22f525c909de2dcec1d4093fe1d562b8" compoundref="stm32f10x_8h" startline="671">CAN_TxMailBox_TypeDef::TIR</references>
        <references refid="group___c_a_n___private___defines_1gabeb6db5ba5c01da5084ec1605f868e18" compoundref="stm32f10x__can_8c" startline="52">TMIDxR_TXRQ</references>
        <references refid="group___c_a_n__identifier__type_1ga151d9df8a6f361d0a3231593726b5a13" compoundref="stm32f10x__can_8h" startline="418">CAN_Id_Standard</references>
        <references refid="group___c_a_n___tx_1gaf059e4383fa69dec6e18216b22a87f51" compoundref="stm32f10x__can_8h" startline="406">IS_CAN_STDID</references>
        <references refid="struct_can_tx_msg_1abfb50c8208227f8cf378f29cf9a3a6f3" compoundref="stm32f10x__can_8h" startline="153">CanTxMsg::StdId</references>
        <references refid="group___c_a_n___tx_1ga62dbc2163ad6751b3f921e717b00e9f2" compoundref="stm32f10x__can_8h" startline="407">IS_CAN_EXTID</references>
        <references refid="struct_can_tx_msg_1a33050a95a4cc463b589ff16bdd416f22" compoundref="stm32f10x__can_8h" startline="156">CanTxMsg::ExtId</references>
        <references refid="struct_c_a_n___tx_mail_box___type_def_1a2351cb865d064cf75f61642aaa887f76" compoundref="stm32f10x_8h" startline="672">CAN_TxMailBox_TypeDef::TDTR</references>
        <references refid="struct_c_a_n___tx_mail_box___type_def_1a408c96501b1cc8bd527432736d132a39" compoundref="stm32f10x_8h" startline="673">CAN_TxMailBox_TypeDef::TDLR</references>
        <references refid="struct_can_tx_msg_1aabfbf718f627da26d9e3cf903dc0ad02" compoundref="stm32f10x__can_8h" startline="171">CanTxMsg::Data</references>
        <references refid="struct_c_a_n___tx_mail_box___type_def_1a98c6bcd7c9bae378ebf83fd9f5b59020" compoundref="stm32f10x_8h" startline="674">CAN_TxMailBox_TypeDef::TDHR</references>
      </memberdef>
      <memberdef kind="function" id="group___c_a_n___exported___functions_1ga68ab05a0a6cdfcc2b6f6b6b2c10848e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t CAN_TransmitStatus</definition>
        <argsstring>(CAN_TypeDef *CANx, uint8_t TransmitMailbox)</argsstring>
        <name>CAN_TransmitStatus</name>
        <param>
          <type><ref refid="struct_c_a_n___type_def" kindref="compound">CAN_TypeDef</ref> *</type>
          <declname>CANx</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>TransmitMailbox</declname>
        </param>
        <briefdescription>
<para>Checks the transmission of a message. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>CANx</parametername>
</parameternamelist>
<parameterdescription>
<para>where x can be 1 or 2 to to select the CAN peripheral. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>TransmitMailbox</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of the mailbox that is used for transmission. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>CAN_TxStatus_Ok</parametername>
</parameternamelist>
<parameterdescription>
<para>if the CAN driver transmits the message, CAN_TxStatus_Failed in an other case. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="660" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_can.c" bodystart="589" bodyend="635"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___c_a_n___exported___types_1gaf471a53f52a02078ffd842658d932f63" compoundref="stm32f10x__can_8h" startline="52">IS_CAN_ALL_PERIPH</references>
        <references refid="group___c_a_n___tx_1ga218b3e1380c4d49163c91a1af904e44c" compoundref="stm32f10x__can_8h" startline="405">IS_CAN_TRANSMITMAILBOX</references>
        <references refid="group___c_a_n___private___defines_1gaa62f09d0693681cb7576f61c93b7cf0f" compoundref="stm32f10x__can_8c" startline="76">CAN_TXMAILBOX_0</references>
        <references refid="struct_c_a_n___type_def_1acbc82ac4e87e75350fc586be5e56d95b" compoundref="stm32f10x_8h" startline="707">CAN_TypeDef::TSR</references>
        <references refid="group___peripheral___registers___bits___definition_1ga4a4809b8908618df57e6393cc7fe0f52" compoundref="stm32f10x_8h" startline="6241">CAN_TSR_RQCP0</references>
        <references refid="group___peripheral___registers___bits___definition_1gaacedb237b31d29aef7f38475e9a6b297" compoundref="stm32f10x_8h" startline="6242">CAN_TSR_TXOK0</references>
        <references refid="group___peripheral___registers___bits___definition_1gad7500e491fe82e67ed5d40759e8a50f0" compoundref="stm32f10x_8h" startline="6259">CAN_TSR_TME0</references>
        <references refid="group___c_a_n___private___defines_1ga4e20f0aac1ac940014a6c66971890943" compoundref="stm32f10x__can_8c" startline="77">CAN_TXMAILBOX_1</references>
        <references refid="group___peripheral___registers___bits___definition_1gabd3118dec59c3a45d2f262b090699538" compoundref="stm32f10x_8h" startline="6246">CAN_TSR_RQCP1</references>
        <references refid="group___peripheral___registers___bits___definition_1gaea918e510c5471b1ac797350b7950151" compoundref="stm32f10x_8h" startline="6247">CAN_TSR_TXOK1</references>
        <references refid="group___peripheral___registers___bits___definition_1ga5ba2b51def4b1683fd050e43045306ea" compoundref="stm32f10x_8h" startline="6260">CAN_TSR_TME1</references>
        <references refid="group___c_a_n___private___defines_1ga8a842aa352d72321930cc963b26bf6d7" compoundref="stm32f10x__can_8c" startline="78">CAN_TXMAILBOX_2</references>
        <references refid="group___peripheral___registers___bits___definition_1ga3cf9e83cec96164f1dadf4e43411ebf0" compoundref="stm32f10x_8h" startline="6251">CAN_TSR_RQCP2</references>
        <references refid="group___peripheral___registers___bits___definition_1ga782c591bb204d751b470dd53a37d240e" compoundref="stm32f10x_8h" startline="6252">CAN_TSR_TXOK2</references>
        <references refid="group___peripheral___registers___bits___definition_1gaf6523fac51d3aed2e36de4c2f07c2a21" compoundref="stm32f10x_8h" startline="6261">CAN_TSR_TME2</references>
        <references refid="group___c_a_n__transmit__constants_1ga8d193002e76c04ec8caff6b110cd5983" compoundref="stm32f10x__can_8h" startline="442">CAN_TxStatus_Failed</references>
        <references refid="group___c_a_n__transmit__constants_1ga9678a3a51379422868083608c7394409" compoundref="stm32f10x__can_8h" startline="444">CAN_TxStatus_Pending</references>
        <references refid="group___c_a_n__transmit__constants_1ga0b401c61922b1449de9b486dcf475c97" compoundref="stm32f10x__can_8h" startline="443">CAN_TxStatus_Ok</references>
      </memberdef>
      <memberdef kind="function" id="group___c_a_n___exported___functions_1ga81106cdf5395a1947bfc87ec1685829e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CAN_CancelTransmit</definition>
        <argsstring>(CAN_TypeDef *CANx, uint8_t Mailbox)</argsstring>
        <name>CAN_CancelTransmit</name>
        <param>
          <type><ref refid="struct_c_a_n___type_def" kindref="compound">CAN_TypeDef</ref> *</type>
          <declname>CANx</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>Mailbox</declname>
        </param>
        <briefdescription>
<para>Cancels a transmit request. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>CANx</parametername>
</parameternamelist>
<parameterdescription>
<para>where x can be 1 or 2 to to select the CAN peripheral. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Mailbox</parametername>
</parameternamelist>
<parameterdescription>
<para>Mailbox number. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None.</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="661" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_can.c" bodystart="643" bodyend="660"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___c_a_n___exported___types_1gaf471a53f52a02078ffd842658d932f63" compoundref="stm32f10x__can_8h" startline="52">IS_CAN_ALL_PERIPH</references>
        <references refid="group___c_a_n___tx_1ga218b3e1380c4d49163c91a1af904e44c" compoundref="stm32f10x__can_8h" startline="405">IS_CAN_TRANSMITMAILBOX</references>
        <references refid="group___c_a_n___private___defines_1gaa62f09d0693681cb7576f61c93b7cf0f" compoundref="stm32f10x__can_8c" startline="76">CAN_TXMAILBOX_0</references>
        <references refid="struct_c_a_n___type_def_1acbc82ac4e87e75350fc586be5e56d95b" compoundref="stm32f10x_8h" startline="707">CAN_TypeDef::TSR</references>
        <references refid="group___peripheral___registers___bits___definition_1gafdac6b87a303b0d0ec9b0d94a54ae31f" compoundref="stm32f10x_8h" startline="6245">CAN_TSR_ABRQ0</references>
        <references refid="group___c_a_n___private___defines_1ga4e20f0aac1ac940014a6c66971890943" compoundref="stm32f10x__can_8c" startline="77">CAN_TXMAILBOX_1</references>
        <references refid="group___peripheral___registers___bits___definition_1ga4c44a4e585b3ab1c37a6c2c28c90d6cd" compoundref="stm32f10x_8h" startline="6250">CAN_TSR_ABRQ1</references>
        <references refid="group___c_a_n___private___defines_1ga8a842aa352d72321930cc963b26bf6d7" compoundref="stm32f10x__can_8c" startline="78">CAN_TXMAILBOX_2</references>
        <references refid="group___peripheral___registers___bits___definition_1ga2a3b7e4be7cebb35ad66cb85b82901bb" compoundref="stm32f10x_8h" startline="6255">CAN_TSR_ABRQ2</references>
      </memberdef>
      <memberdef kind="function" id="group___c_a_n___exported___functions_1ga351b90bb8a3bb0c846f85bbd56ef4dc8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CAN_Receive</definition>
        <argsstring>(CAN_TypeDef *CANx, uint8_t FIFONumber, CanRxMsg *RxMessage)</argsstring>
        <name>CAN_Receive</name>
        <param>
          <type><ref refid="struct_c_a_n___type_def" kindref="compound">CAN_TypeDef</ref> *</type>
          <declname>CANx</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>FIFONumber</declname>
        </param>
        <param>
          <type><ref refid="struct_can_rx_msg" kindref="compound">CanRxMsg</ref> *</type>
          <declname>RxMessage</declname>
        </param>
        <briefdescription>
<para>Receives a message. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>CANx</parametername>
</parameternamelist>
<parameterdescription>
<para>where x can be 1 or 2 to to select the CAN peripheral. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FIFONumber</parametername>
</parameternamelist>
<parameterdescription>
<para>Receive FIFO number, CAN_FIFO0 or CAN_FIFO1. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>RxMessage</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a structure receive message which contains CAN Id, CAN DLC, CAN datas and FMI number. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None.</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="664" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_can.c" bodystart="676" bodyend="717"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___c_a_n___exported___types_1gaf471a53f52a02078ffd842658d932f63" compoundref="stm32f10x__can_8h" startline="52">IS_CAN_ALL_PERIPH</references>
        <references refid="group___c_a_n__receive___f_i_f_o__number__constants_1gaeeb94bf58bd48b8928f964eaaa20a24a" compoundref="stm32f10x__can_8h" startline="458">IS_CAN_FIFO</references>
        <references refid="struct_can_rx_msg_1a83a67d1a709cc01570ce956e5adc811f" compoundref="stm32f10x__can_8h" startline="187">CanRxMsg::IDE</references>
        <references refid="struct_c_a_n___type_def_1aa6053bc607535d9ecf7a3d887c0cc053" compoundref="stm32f10x_8h" startline="715">CAN_TypeDef::sFIFOMailBox</references>
        <references refid="struct_c_a_n___f_i_f_o_mail_box___type_def_1a034504d43f7b16b320745a25b3a8f12d" compoundref="stm32f10x_8h" startline="683">CAN_FIFOMailBox_TypeDef::RIR</references>
        <references refid="group___c_a_n__identifier__type_1ga151d9df8a6f361d0a3231593726b5a13" compoundref="stm32f10x__can_8h" startline="418">CAN_Id_Standard</references>
        <references refid="struct_can_rx_msg_1a62769e18836146f71238bee6b43b531e" compoundref="stm32f10x__can_8h" startline="181">CanRxMsg::StdId</references>
        <references refid="struct_can_rx_msg_1a1fdca10d31c81eea2ccef41d2aced562" compoundref="stm32f10x__can_8h" startline="184">CanRxMsg::ExtId</references>
        <references refid="struct_can_rx_msg_1a9a183149a391a24f86da2ce895f0f1c9" compoundref="stm32f10x__can_8h" startline="191">CanRxMsg::RTR</references>
        <references refid="struct_can_rx_msg_1abf77d3abf9ad290c08cdfd5d99ebc745" compoundref="stm32f10x__can_8h" startline="195">CanRxMsg::DLC</references>
        <references refid="struct_c_a_n___f_i_f_o_mail_box___type_def_1a49d74ca8b402c2b9596bfcbe4cd051a9" compoundref="stm32f10x_8h" startline="684">CAN_FIFOMailBox_TypeDef::RDTR</references>
        <references refid="struct_can_rx_msg_1a5afe39d8e295659eeb3030593828b96a" compoundref="stm32f10x__can_8h" startline="201">CanRxMsg::FMI</references>
        <references refid="struct_can_rx_msg_1ae8ecbad16622db30d63fda08bc478649" compoundref="stm32f10x__can_8h" startline="198">CanRxMsg::Data</references>
        <references refid="struct_c_a_n___f_i_f_o_mail_box___type_def_1ac7d62861de29d0b4fcf11fabbdbd76e7" compoundref="stm32f10x_8h" startline="685">CAN_FIFOMailBox_TypeDef::RDLR</references>
        <references refid="struct_c_a_n___f_i_f_o_mail_box___type_def_1a95890984bd67845015d40e82fb091c93" compoundref="stm32f10x_8h" startline="686">CAN_FIFOMailBox_TypeDef::RDHR</references>
        <references refid="group___c_a_n__receive___f_i_f_o__number__constants_1ga8f52eeefb86b2af5b7c3b4b75fa4d114" compoundref="stm32f10x__can_8h" startline="455">CAN_FIFO0</references>
        <references refid="struct_c_a_n___type_def_1ad8e858479e26ab075ee2ddb630e8769d" compoundref="stm32f10x_8h" startline="708">CAN_TypeDef::RF0R</references>
        <references refid="group___peripheral___registers___bits___definition_1ga74d2db4b9b7d52712e47557dcc61964d" compoundref="stm32f10x_8h" startline="6272">CAN_RF0R_RFOM0</references>
        <references refid="struct_c_a_n___type_def_1a69a528d1288c1de666df68655af1d20e" compoundref="stm32f10x_8h" startline="709">CAN_TypeDef::RF1R</references>
        <references refid="group___peripheral___registers___bits___definition_1ga6930f860de4a90e3344e63fbc209b9ab" compoundref="stm32f10x_8h" startline="6278">CAN_RF1R_RFOM1</references>
      </memberdef>
      <memberdef kind="function" id="group___c_a_n___exported___functions_1ga1bc3b39471e579b4101624c33d27918b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CAN_FIFORelease</definition>
        <argsstring>(CAN_TypeDef *CANx, uint8_t FIFONumber)</argsstring>
        <name>CAN_FIFORelease</name>
        <param>
          <type><ref refid="struct_c_a_n___type_def" kindref="compound">CAN_TypeDef</ref> *</type>
          <declname>CANx</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>FIFONumber</declname>
        </param>
        <briefdescription>
<para>Releases the specified FIFO. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>CANx</parametername>
</parameternamelist>
<parameterdescription>
<para>where x can be 1 or 2 to to select the CAN peripheral. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FIFONumber</parametername>
</parameternamelist>
<parameterdescription>
<para>FIFO to release, CAN_FIFO0 or CAN_FIFO1. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None.</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="665" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_can.c" bodystart="730" bodyend="745"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___c_a_n___exported___types_1gaf471a53f52a02078ffd842658d932f63" compoundref="stm32f10x__can_8h" startline="52">IS_CAN_ALL_PERIPH</references>
        <references refid="group___c_a_n__receive___f_i_f_o__number__constants_1gaeeb94bf58bd48b8928f964eaaa20a24a" compoundref="stm32f10x__can_8h" startline="458">IS_CAN_FIFO</references>
        <references refid="group___c_a_n__receive___f_i_f_o__number__constants_1ga8f52eeefb86b2af5b7c3b4b75fa4d114" compoundref="stm32f10x__can_8h" startline="455">CAN_FIFO0</references>
        <references refid="struct_c_a_n___type_def_1ad8e858479e26ab075ee2ddb630e8769d" compoundref="stm32f10x_8h" startline="708">CAN_TypeDef::RF0R</references>
        <references refid="group___peripheral___registers___bits___definition_1ga74d2db4b9b7d52712e47557dcc61964d" compoundref="stm32f10x_8h" startline="6272">CAN_RF0R_RFOM0</references>
        <references refid="struct_c_a_n___type_def_1a69a528d1288c1de666df68655af1d20e" compoundref="stm32f10x_8h" startline="709">CAN_TypeDef::RF1R</references>
        <references refid="group___peripheral___registers___bits___definition_1ga6930f860de4a90e3344e63fbc209b9ab" compoundref="stm32f10x_8h" startline="6278">CAN_RF1R_RFOM1</references>
      </memberdef>
      <memberdef kind="function" id="group___c_a_n___exported___functions_1ga7100459a95ce1b3cfe8ab15e112029fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t CAN_MessagePending</definition>
        <argsstring>(CAN_TypeDef *CANx, uint8_t FIFONumber)</argsstring>
        <name>CAN_MessagePending</name>
        <param>
          <type><ref refid="struct_c_a_n___type_def" kindref="compound">CAN_TypeDef</ref> *</type>
          <declname>CANx</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>FIFONumber</declname>
        </param>
        <briefdescription>
<para>Returns the number of pending messages. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>CANx</parametername>
</parameternamelist>
<parameterdescription>
<para>where x can be 1 or 2 to to select the CAN peripheral. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FIFONumber</parametername>
</parameternamelist>
<parameterdescription>
<para>Receive FIFO number, CAN_FIFO0 or CAN_FIFO1. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>NbMessage</parametername>
</parameternamelist>
<parameterdescription>
<para>: which is the number of pending message. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="666" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_can.c" bodystart="753" bodyend="772"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___c_a_n___exported___types_1gaf471a53f52a02078ffd842658d932f63" compoundref="stm32f10x__can_8h" startline="52">IS_CAN_ALL_PERIPH</references>
        <references refid="group___c_a_n__receive___f_i_f_o__number__constants_1gaeeb94bf58bd48b8928f964eaaa20a24a" compoundref="stm32f10x__can_8h" startline="458">IS_CAN_FIFO</references>
        <references refid="group___c_a_n__receive___f_i_f_o__number__constants_1ga8f52eeefb86b2af5b7c3b4b75fa4d114" compoundref="stm32f10x__can_8h" startline="455">CAN_FIFO0</references>
        <references refid="struct_c_a_n___type_def_1ad8e858479e26ab075ee2ddb630e8769d" compoundref="stm32f10x_8h" startline="708">CAN_TypeDef::RF0R</references>
        <references refid="group___c_a_n__receive___f_i_f_o__number__constants_1gafbcf3f13dbf61030ab7a812595ba9850" compoundref="stm32f10x__can_8h" startline="456">CAN_FIFO1</references>
        <references refid="struct_c_a_n___type_def_1a69a528d1288c1de666df68655af1d20e" compoundref="stm32f10x_8h" startline="709">CAN_TypeDef::RF1R</references>
      </memberdef>
      <memberdef kind="function" id="group___c_a_n___exported___functions_1gab2a3630e9e3024114eb117d14e514208" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t CAN_OperatingModeRequest</definition>
        <argsstring>(CAN_TypeDef *CANx, uint8_t CAN_OperatingMode)</argsstring>
        <name>CAN_OperatingModeRequest</name>
        <param>
          <type><ref refid="struct_c_a_n___type_def" kindref="compound">CAN_TypeDef</ref> *</type>
          <declname>CANx</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>CAN_OperatingMode</declname>
        </param>
        <briefdescription>
<para>Select the CAN Operation mode. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>CAN_OperatingMode</parametername>
</parameternamelist>
<parameterdescription>
<para>: CAN Operating Mode. This parameter can be one of CAN_OperatingMode_TypeDef enumeration. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>status</parametername>
</parameternamelist>
<parameterdescription>
<para>of the requested mode which can be<itemizedlist>
<listitem><para>CAN_ModeStatus_Failed CAN failed entering the specific mode</para></listitem><listitem><para>CAN_ModeStatus_Success CAN Succeed entering the specific mode </para></listitem></itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="670" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_can.c" bodystart="784" bodyend="858"/>
        <references refid="group___c_a_n___mode___status_1ga9882944537945325ef08e1986838ea45" compoundref="stm32f10x__can_8h" startline="264">CAN_ModeStatus_Failed</references>
        <references refid="group___c_a_n___private___defines_1ga60a32132df242146efd3e9f7a079f0f0" compoundref="stm32f10x__can_8c" startline="58">INAK_TIMEOUT</references>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___c_a_n___exported___types_1gaf471a53f52a02078ffd842658d932f63" compoundref="stm32f10x__can_8h" startline="52">IS_CAN_ALL_PERIPH</references>
        <references refid="group___c_a_n___operating___mode_1ga377f1598db9b0248ba83fa6e5a75db75" compoundref="stm32f10x__can_8h" startline="252">IS_CAN_OPERATING_MODE</references>
        <references refid="group___c_a_n___operating___mode_1gace8a4b5c164aba6f473d6254ad1e8a36" compoundref="stm32f10x__can_8h" startline="247">CAN_OperatingMode_Initialization</references>
        <references refid="struct_c_a_n___type_def_1a1282eee79a22003257a7a5daa7f4a35f" compoundref="stm32f10x_8h" startline="705">CAN_TypeDef::MCR</references>
        <references refid="group___peripheral___registers___bits___definition_1gadf9602dfb2f95b481b6e642b95991176" compoundref="stm32f10x_8h" startline="6220">CAN_MCR_SLEEP</references>
        <references refid="group___peripheral___registers___bits___definition_1ga0cf12be5661908dbe38aa14cd4c3a356" compoundref="stm32f10x_8h" startline="6219">CAN_MCR_INRQ</references>
        <references refid="struct_c_a_n___type_def_1af98b957a4e887751fbd407d3e2cf93b5" compoundref="stm32f10x_8h" startline="706">CAN_TypeDef::MSR</references>
        <references refid="group___c_a_n___private___defines_1ga79094ce5a3a2f717140e8cc9b7c161b6" compoundref="stm32f10x__can_8c" startline="82">CAN_MODE_MASK</references>
        <references refid="group___peripheral___registers___bits___definition_1ga2871cee90ebecb760bab16e9c039b682" compoundref="stm32f10x_8h" startline="6230">CAN_MSR_INAK</references>
        <references refid="group___c_a_n___mode___status_1ga7ca0ea503eb3b3a7c0abdfad27cb6579" compoundref="stm32f10x__can_8h" startline="265">CAN_ModeStatus_Success</references>
        <references refid="group___c_a_n___operating___mode_1ga663ecffaa60d1a201a035dfa45325848" compoundref="stm32f10x__can_8h" startline="248">CAN_OperatingMode_Normal</references>
        <references refid="group___c_a_n___operating___mode_1ga173b85d2baaa6249d966b8073e3ad8ca" compoundref="stm32f10x__can_8h" startline="249">CAN_OperatingMode_Sleep</references>
        <references refid="group___peripheral___registers___bits___definition_1gaf1611badb362f0fd9047af965509f074" compoundref="stm32f10x_8h" startline="6231">CAN_MSR_SLAK</references>
      </memberdef>
      <memberdef kind="function" id="group___c_a_n___exported___functions_1ga640215e38765759d7eceb8a039046667" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t CAN_Sleep</definition>
        <argsstring>(CAN_TypeDef *CANx)</argsstring>
        <name>CAN_Sleep</name>
        <param>
          <type><ref refid="struct_c_a_n___type_def" kindref="compound">CAN_TypeDef</ref> *</type>
          <declname>CANx</declname>
        </param>
        <briefdescription>
<para>Enters the low power mode. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>CANx</parametername>
</parameternamelist>
<parameterdescription>
<para>where x can be 1 or 2 to to select the CAN peripheral. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>status</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN_Sleep_Ok if sleep entered, CAN_Sleep_Failed in an other case. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="671" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_can.c" bodystart="866" bodyend="884"/>
        <references refid="group___c_a_n__sleep__constants_1ga169500ab7169c4e9c7e9e4ea34b3e070" compoundref="stm32f10x__can_8h" startline="468">CAN_Sleep_Failed</references>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___c_a_n___exported___types_1gaf471a53f52a02078ffd842658d932f63" compoundref="stm32f10x__can_8h" startline="52">IS_CAN_ALL_PERIPH</references>
        <references refid="struct_c_a_n___type_def_1a1282eee79a22003257a7a5daa7f4a35f" compoundref="stm32f10x_8h" startline="705">CAN_TypeDef::MCR</references>
        <references refid="group___peripheral___registers___bits___definition_1ga0cf12be5661908dbe38aa14cd4c3a356" compoundref="stm32f10x_8h" startline="6219">CAN_MCR_INRQ</references>
        <references refid="group___peripheral___registers___bits___definition_1gadf9602dfb2f95b481b6e642b95991176" compoundref="stm32f10x_8h" startline="6220">CAN_MCR_SLEEP</references>
        <references refid="struct_c_a_n___type_def_1af98b957a4e887751fbd407d3e2cf93b5" compoundref="stm32f10x_8h" startline="706">CAN_TypeDef::MSR</references>
        <references refid="group___peripheral___registers___bits___definition_1gaf1611badb362f0fd9047af965509f074" compoundref="stm32f10x_8h" startline="6231">CAN_MSR_SLAK</references>
        <references refid="group___peripheral___registers___bits___definition_1ga2871cee90ebecb760bab16e9c039b682" compoundref="stm32f10x_8h" startline="6230">CAN_MSR_INAK</references>
        <references refid="group___c_a_n__sleep__constants_1gaf5c4e9d32d4faff9d0bf61e153ed7998" compoundref="stm32f10x__can_8h" startline="469">CAN_Sleep_Ok</references>
      </memberdef>
      <memberdef kind="function" id="group___c_a_n___exported___functions_1ga78cdfbf1884b9e33c552bcbca15bed10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t CAN_WakeUp</definition>
        <argsstring>(CAN_TypeDef *CANx)</argsstring>
        <name>CAN_WakeUp</name>
        <param>
          <type><ref refid="struct_c_a_n___type_def" kindref="compound">CAN_TypeDef</ref> *</type>
          <declname>CANx</declname>
        </param>
        <briefdescription>
<para>Wakes the CAN up. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>CANx</parametername>
</parameternamelist>
<parameterdescription>
<para>where x can be 1 or 2 to to select the CAN peripheral. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>status</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN_WakeUp_Ok if sleep mode left, CAN_WakeUp_Failed in an other case. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="672" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_can.c" bodystart="892" bodyend="915"/>
        <references refid="group___c_a_n___private___defines_1ga1bb8107706c8b4039ac55a122f3c65bb" compoundref="stm32f10x__can_8c" startline="60">SLAK_TIMEOUT</references>
        <references refid="group___c_a_n__wake__up__constants_1ga837fd7ad47fee78e43a186544e2b390b" compoundref="stm32f10x__can_8h" startline="479">CAN_WakeUp_Failed</references>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___c_a_n___exported___types_1gaf471a53f52a02078ffd842658d932f63" compoundref="stm32f10x__can_8h" startline="52">IS_CAN_ALL_PERIPH</references>
        <references refid="struct_c_a_n___type_def_1a1282eee79a22003257a7a5daa7f4a35f" compoundref="stm32f10x_8h" startline="705">CAN_TypeDef::MCR</references>
        <references refid="group___peripheral___registers___bits___definition_1gadf9602dfb2f95b481b6e642b95991176" compoundref="stm32f10x_8h" startline="6220">CAN_MCR_SLEEP</references>
        <references refid="struct_c_a_n___type_def_1af98b957a4e887751fbd407d3e2cf93b5" compoundref="stm32f10x_8h" startline="706">CAN_TypeDef::MSR</references>
        <references refid="group___peripheral___registers___bits___definition_1gaf1611badb362f0fd9047af965509f074" compoundref="stm32f10x_8h" startline="6231">CAN_MSR_SLAK</references>
        <references refid="group___c_a_n__wake__up__constants_1ga152e4935cf85bdfb803eb36b656cd690" compoundref="stm32f10x__can_8h" startline="480">CAN_WakeUp_Ok</references>
      </memberdef>
      <memberdef kind="function" id="group___c_a_n___exported___functions_1gaaee721a392b6b21bfd15dc160aeb6924" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t CAN_GetLastErrorCode</definition>
        <argsstring>(CAN_TypeDef *CANx)</argsstring>
        <name>CAN_GetLastErrorCode</name>
        <param>
          <type><ref refid="struct_c_a_n___type_def" kindref="compound">CAN_TypeDef</ref> *</type>
          <declname>CANx</declname>
        </param>
        <briefdescription>
<para>Returns the CANx&apos;s last error code (LEC). </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>CANx</parametername>
</parameternamelist>
<parameterdescription>
<para>where x can be 1 or 2 to to select the CAN peripheral. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>CAN_ErrorCode</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the Error code :<itemizedlist>
<listitem><para>CAN_ERRORCODE_NoErr No Error</para></listitem><listitem><para>CAN_ERRORCODE_StuffErr Stuff Error</para></listitem><listitem><para>CAN_ERRORCODE_FormErr Form Error</para></listitem><listitem><para>CAN_ERRORCODE_ACKErr Acknowledgment Error</para></listitem><listitem><para>CAN_ERRORCODE_BitRecessiveErr Bit Recessive Error</para></listitem><listitem><para>CAN_ERRORCODE_BitDominantErr Bit Dominant Error</para></listitem><listitem><para>CAN_ERRORCODE_CRCErr CRC Error</para></listitem><listitem><para>CAN_ERRORCODE_SoftwareSetErr Software Set Error </para></listitem></itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="675" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_can.c" bodystart="932" bodyend="944"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___c_a_n___exported___types_1gaf471a53f52a02078ffd842658d932f63" compoundref="stm32f10x__can_8h" startline="52">IS_CAN_ALL_PERIPH</references>
        <references refid="struct_c_a_n___type_def_1ab1a1b6a7c587443a03d654d3b9a94423" compoundref="stm32f10x_8h" startline="711">CAN_TypeDef::ESR</references>
        <references refid="group___peripheral___registers___bits___definition_1gab9f86741dd89034900e300499ae2272e" compoundref="stm32f10x_8h" startline="6301">CAN_ESR_LEC</references>
      </memberdef>
      <memberdef kind="function" id="group___c_a_n___exported___functions_1ga6903eecbec40eb1361d915ddde9a3274" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t CAN_GetReceiveErrorCounter</definition>
        <argsstring>(CAN_TypeDef *CANx)</argsstring>
        <name>CAN_GetReceiveErrorCounter</name>
        <param>
          <type><ref refid="struct_c_a_n___type_def" kindref="compound">CAN_TypeDef</ref> *</type>
          <declname>CANx</declname>
        </param>
        <briefdescription>
<para>Returns the CANx Receive Error Counter (REC). </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>In case of an error during reception, this counter is incremented by 1 or by 8 depending on the error condition as defined by the CAN standard. After every successful reception, the counter is decremented by 1 or reset to 120 if its value was higher than 128. When the counter value exceeds 127, the CAN controller enters the error passive state. </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>CANx</parametername>
</parameternamelist>
<parameterdescription>
<para>where x can be 1 or 2 to to select the CAN peripheral. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>CAN</parametername>
</parameternamelist>
<parameterdescription>
<para>Receive Error Counter. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="676" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_can.c" bodystart="956" bodyend="968"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___c_a_n___exported___types_1gaf471a53f52a02078ffd842658d932f63" compoundref="stm32f10x__can_8h" startline="52">IS_CAN_ALL_PERIPH</references>
        <references refid="struct_c_a_n___type_def_1ab1a1b6a7c587443a03d654d3b9a94423" compoundref="stm32f10x_8h" startline="711">CAN_TypeDef::ESR</references>
        <references refid="group___peripheral___registers___bits___definition_1ga0df5b2ea3f419182e9bd885f55ee5dc9" compoundref="stm32f10x_8h" startline="6307">CAN_ESR_REC</references>
      </memberdef>
      <memberdef kind="function" id="group___c_a_n___exported___functions_1ga85ee0c35bf7ca15d4e4c862eef534843" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t CAN_GetLSBTransmitErrorCounter</definition>
        <argsstring>(CAN_TypeDef *CANx)</argsstring>
        <name>CAN_GetLSBTransmitErrorCounter</name>
        <param>
          <type><ref refid="struct_c_a_n___type_def" kindref="compound">CAN_TypeDef</ref> *</type>
          <declname>CANx</declname>
        </param>
        <briefdescription>
<para>Returns the LSB of the 9-bit CANx Transmit Error Counter(TEC). </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>CANx</parametername>
</parameternamelist>
<parameterdescription>
<para>where x can be 1 or 2 to to select the CAN peripheral. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>LSB</parametername>
</parameternamelist>
<parameterdescription>
<para>of the 9-bit CAN Transmit Error Counter. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="677" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_can.c" bodystart="976" bodyend="988"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___c_a_n___exported___types_1gaf471a53f52a02078ffd842658d932f63" compoundref="stm32f10x__can_8h" startline="52">IS_CAN_ALL_PERIPH</references>
        <references refid="struct_c_a_n___type_def_1ab1a1b6a7c587443a03d654d3b9a94423" compoundref="stm32f10x_8h" startline="711">CAN_TypeDef::ESR</references>
        <references refid="group___peripheral___registers___bits___definition_1gae3de2080f48cc851c20d920acfd1737d" compoundref="stm32f10x_8h" startline="6306">CAN_ESR_TEC</references>
      </memberdef>
      <memberdef kind="function" id="group___c_a_n___exported___functions_1gad1a8b2499a780b5bfa4accb3597b02f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CAN_ITConfig</definition>
        <argsstring>(CAN_TypeDef *CANx, uint32_t CAN_IT, FunctionalState NewState)</argsstring>
        <name>CAN_ITConfig</name>
        <param>
          <type><ref refid="struct_c_a_n___type_def" kindref="compound">CAN_TypeDef</ref> *</type>
          <declname>CANx</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>CAN_IT</declname>
        </param>
        <param>
          <type><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref></type>
          <declname>NewState</declname>
        </param>
        <briefdescription>
<para>Enables or disables the specified CANx interrupts. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>CANx</parametername>
</parameternamelist>
<parameterdescription>
<para>where x can be 1 or 2 to to select the CAN peripheral. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>CAN_IT</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the CAN interrupt sources to be enabled or disabled. This parameter can be:<itemizedlist>
<listitem><para>CAN_IT_TME,</para></listitem><listitem><para>CAN_IT_FMP0,</para></listitem><listitem><para>CAN_IT_FF0,</para></listitem><listitem><para>CAN_IT_FOV0,</para></listitem><listitem><para>CAN_IT_FMP1,</para></listitem><listitem><para>CAN_IT_FF1,</para></listitem><listitem><para>CAN_IT_FOV1,</para></listitem><listitem><para>CAN_IT_EWG,</para></listitem><listitem><para>CAN_IT_EPV,</para></listitem><listitem><para>CAN_IT_LEC,</para></listitem><listitem><para>CAN_IT_ERR,</para></listitem><listitem><para>CAN_IT_WKU or</para></listitem><listitem><para>CAN_IT_SLK. </para></listitem></itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NewState</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of the CAN interrupts. This parameter can be: ENABLE or DISABLE. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None.</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="680" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_can.c" bodystart="1013" bodyend="1030"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___c_a_n___exported___types_1gaf471a53f52a02078ffd842658d932f63" compoundref="stm32f10x__can_8h" startline="52">IS_CAN_ALL_PERIPH</references>
        <references refid="group___c_a_n__interrupts_1gac0a9467bb0028c5fcd15a8a0ec6aaecb" compoundref="stm32f10x__can_8h" startline="589">IS_CAN_IT</references>
        <references refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" compoundref="stm32f10x_8h" startline="522">IS_FUNCTIONAL_STATE</references>
        <references refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1ad3a9df141be0ccf10389b640f492b26d" compoundref="stm32f10x_8h" startline="521">DISABLE</references>
        <references refid="struct_c_a_n___type_def_1a530babbc4b9584c93a1bf87d6ce8b8dc" compoundref="stm32f10x_8h" startline="710">CAN_TypeDef::IER</references>
      </memberdef>
      <memberdef kind="function" id="group___c_a_n___exported___functions_1ga2faad96caf823ef463cc5b5b25c480bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___exported__types_1ga89136caac2e14c55151f527ac02daaff" kindref="member">FlagStatus</ref></type>
        <definition>FlagStatus CAN_GetFlagStatus</definition>
        <argsstring>(CAN_TypeDef *CANx, uint32_t CAN_FLAG)</argsstring>
        <name>CAN_GetFlagStatus</name>
        <param>
          <type><ref refid="struct_c_a_n___type_def" kindref="compound">CAN_TypeDef</ref> *</type>
          <declname>CANx</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>CAN_FLAG</declname>
        </param>
        <briefdescription>
<para>Checks whether the specified CAN flag is set or not. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>CANx</parametername>
</parameternamelist>
<parameterdescription>
<para>where x can be 1 or 2 to to select the CAN peripheral. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>CAN_FLAG</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the flag to check. This parameter can be one of the following flags:<itemizedlist>
<listitem><para>CAN_FLAG_EWG</para></listitem><listitem><para>CAN_FLAG_EPV</para></listitem><listitem><para>CAN_FLAG_BOF</para></listitem><listitem><para>CAN_FLAG_RQCP0</para></listitem><listitem><para>CAN_FLAG_RQCP1</para></listitem><listitem><para>CAN_FLAG_RQCP2</para></listitem><listitem><para>CAN_FLAG_FMP1</para></listitem><listitem><para>CAN_FLAG_FF1</para></listitem><listitem><para>CAN_FLAG_FOV1</para></listitem><listitem><para>CAN_FLAG_FMP0</para></listitem><listitem><para>CAN_FLAG_FF0</para></listitem><listitem><para>CAN_FLAG_FOV0</para></listitem><listitem><para>CAN_FLAG_WKU</para></listitem><listitem><para>CAN_FLAG_SLAK</para></listitem><listitem><para>CAN_FLAG_LEC </para></listitem></itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of CAN_FLAG (SET or RESET). </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="681" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_can.c" bodystart="1053" bodyend="1134"/>
        <references refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffa589b7d94a3d91d145720e2fed0eb3a05" compoundref="stm32f10x_8h" startline="519">RESET</references>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___c_a_n___exported___types_1gaf471a53f52a02078ffd842658d932f63" compoundref="stm32f10x__can_8h" startline="52">IS_CAN_ALL_PERIPH</references>
        <references refid="group___c_a_n__flags_1ga38d33d1762ed3a331d214cdb3249866e" compoundref="stm32f10x__can_8h" startline="537">IS_CAN_GET_FLAG</references>
        <references refid="group___c_a_n___private___defines_1ga14f7bb0b320da21443c9bd60b1f86b5d" compoundref="stm32f10x__can_8c" startline="73">CAN_FLAGS_ESR</references>
        <references refid="struct_c_a_n___type_def_1ab1a1b6a7c587443a03d654d3b9a94423" compoundref="stm32f10x_8h" startline="711">CAN_TypeDef::ESR</references>
        <references refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffab44c8101cc294c074709ec1b14211792" compoundref="stm32f10x_8h" startline="519">SET</references>
        <references refid="group___c_a_n___private___defines_1ga3aaa7df395ce1a90cb6e2ff3d2c4b24e" compoundref="stm32f10x__can_8c" startline="71">CAN_FLAGS_MSR</references>
        <references refid="struct_c_a_n___type_def_1af98b957a4e887751fbd407d3e2cf93b5" compoundref="stm32f10x_8h" startline="706">CAN_TypeDef::MSR</references>
        <references refid="group___c_a_n___private___defines_1gac67e7d905ba11441bf9e14180805cf3a" compoundref="stm32f10x__can_8c" startline="65">CAN_FLAGS_TSR</references>
        <references refid="struct_c_a_n___type_def_1acbc82ac4e87e75350fc586be5e56d95b" compoundref="stm32f10x_8h" startline="707">CAN_TypeDef::TSR</references>
        <references refid="group___c_a_n___private___defines_1ga4b22b2552759778ac07825240823a45f" compoundref="stm32f10x__can_8c" startline="69">CAN_FLAGS_RF0R</references>
        <references refid="struct_c_a_n___type_def_1ad8e858479e26ab075ee2ddb630e8769d" compoundref="stm32f10x_8h" startline="708">CAN_TypeDef::RF0R</references>
        <references refid="struct_c_a_n___type_def_1a69a528d1288c1de666df68655af1d20e" compoundref="stm32f10x_8h" startline="709">CAN_TypeDef::RF1R</references>
      </memberdef>
      <memberdef kind="function" id="group___c_a_n___exported___functions_1ga2c01646d5d3a2d7045e8dd71f58f8742" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CAN_ClearFlag</definition>
        <argsstring>(CAN_TypeDef *CANx, uint32_t CAN_FLAG)</argsstring>
        <name>CAN_ClearFlag</name>
        <param>
          <type><ref refid="struct_c_a_n___type_def" kindref="compound">CAN_TypeDef</ref> *</type>
          <declname>CANx</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>CAN_FLAG</declname>
        </param>
        <briefdescription>
<para>Clears the CAN&apos;s pending flags. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>CANx</parametername>
</parameternamelist>
<parameterdescription>
<para>where x can be 1 or 2 to to select the CAN peripheral. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>CAN_FLAG</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the flag to clear. This parameter can be one of the following flags:<itemizedlist>
<listitem><para>CAN_FLAG_RQCP0</para></listitem><listitem><para>CAN_FLAG_RQCP1</para></listitem><listitem><para>CAN_FLAG_RQCP2</para></listitem><listitem><para>CAN_FLAG_FF1</para></listitem><listitem><para>CAN_FLAG_FOV1</para></listitem><listitem><para>CAN_FLAG_FF0</para></listitem><listitem><para>CAN_FLAG_FOV0</para></listitem><listitem><para>CAN_FLAG_WKU</para></listitem><listitem><para>CAN_FLAG_SLAK</para></listitem><listitem><para>CAN_FLAG_LEC </para></listitem></itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None.</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="682" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_can.c" bodystart="1153" bodyend="1190"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___c_a_n___exported___types_1gaf471a53f52a02078ffd842658d932f63" compoundref="stm32f10x__can_8h" startline="52">IS_CAN_ALL_PERIPH</references>
        <references refid="group___c_a_n__flags_1gac46f5fb953efb6163cf3b2e33a514d0c" compoundref="stm32f10x__can_8h" startline="546">IS_CAN_CLEAR_FLAG</references>
        <references refid="group___c_a_n__flags_1ga73a774fa4d391aec0ea6552bf9372917" compoundref="stm32f10x__can_8h" startline="535">CAN_FLAG_LEC</references>
        <references refid="struct_c_a_n___type_def_1ab1a1b6a7c587443a03d654d3b9a94423" compoundref="stm32f10x_8h" startline="711">CAN_TypeDef::ESR</references>
        <references refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffa589b7d94a3d91d145720e2fed0eb3a05" compoundref="stm32f10x_8h" startline="519">RESET</references>
        <references refid="group___c_a_n___private___defines_1ga4b22b2552759778ac07825240823a45f" compoundref="stm32f10x__can_8c" startline="69">CAN_FLAGS_RF0R</references>
        <references refid="struct_c_a_n___type_def_1ad8e858479e26ab075ee2ddb630e8769d" compoundref="stm32f10x_8h" startline="708">CAN_TypeDef::RF0R</references>
        <references refid="group___c_a_n___private___defines_1ga2a03d73273ab353c8deb3a4730431977" compoundref="stm32f10x__can_8c" startline="67">CAN_FLAGS_RF1R</references>
        <references refid="struct_c_a_n___type_def_1a69a528d1288c1de666df68655af1d20e" compoundref="stm32f10x_8h" startline="709">CAN_TypeDef::RF1R</references>
        <references refid="group___c_a_n___private___defines_1gac67e7d905ba11441bf9e14180805cf3a" compoundref="stm32f10x__can_8c" startline="65">CAN_FLAGS_TSR</references>
        <references refid="struct_c_a_n___type_def_1acbc82ac4e87e75350fc586be5e56d95b" compoundref="stm32f10x_8h" startline="707">CAN_TypeDef::TSR</references>
        <references refid="struct_c_a_n___type_def_1af98b957a4e887751fbd407d3e2cf93b5" compoundref="stm32f10x_8h" startline="706">CAN_TypeDef::MSR</references>
      </memberdef>
      <memberdef kind="function" id="group___c_a_n___exported___functions_1ga9aca05b3013e1b3438f3559f80b33c82" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___exported__types_1gaacbd7ed539db0aacd973a0f6eca34074" kindref="member">ITStatus</ref></type>
        <definition>ITStatus CAN_GetITStatus</definition>
        <argsstring>(CAN_TypeDef *CANx, uint32_t CAN_IT)</argsstring>
        <name>CAN_GetITStatus</name>
        <param>
          <type><ref refid="struct_c_a_n___type_def" kindref="compound">CAN_TypeDef</ref> *</type>
          <declname>CANx</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>CAN_IT</declname>
        </param>
        <briefdescription>
<para>Checks whether the specified CANx interrupt has occurred or not. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>CANx</parametername>
</parameternamelist>
<parameterdescription>
<para>where x can be 1 or 2 to to select the CAN peripheral. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>CAN_IT</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the CAN interrupt source to check. This parameter can be one of the following flags:<itemizedlist>
<listitem><para>CAN_IT_TME</para></listitem><listitem><para>CAN_IT_FMP0</para></listitem><listitem><para>CAN_IT_FF0</para></listitem><listitem><para>CAN_IT_FOV0</para></listitem><listitem><para>CAN_IT_FMP1</para></listitem><listitem><para>CAN_IT_FF1</para></listitem><listitem><para>CAN_IT_FOV1</para></listitem><listitem><para>CAN_IT_WKU</para></listitem><listitem><para>CAN_IT_SLK</para></listitem><listitem><para>CAN_IT_EWG</para></listitem><listitem><para>CAN_IT_EPV</para></listitem><listitem><para>CAN_IT_BOF</para></listitem><listitem><para>CAN_IT_LEC</para></listitem><listitem><para>CAN_IT_ERR </para></listitem></itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>current state of CAN_IT (SET or RESET). </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="683" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_can.c" bodystart="1213" bodyend="1296"/>
        <references refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffa589b7d94a3d91d145720e2fed0eb3a05" compoundref="stm32f10x_8h" startline="519">RESET</references>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___c_a_n___exported___types_1gaf471a53f52a02078ffd842658d932f63" compoundref="stm32f10x__can_8h" startline="52">IS_CAN_ALL_PERIPH</references>
        <references refid="group___c_a_n__interrupts_1gac0a9467bb0028c5fcd15a8a0ec6aaecb" compoundref="stm32f10x__can_8h" startline="589">IS_CAN_IT</references>
        <references refid="struct_c_a_n___type_def_1a530babbc4b9584c93a1bf87d6ce8b8dc" compoundref="stm32f10x_8h" startline="710">CAN_TypeDef::IER</references>
        <references refid="group___c_a_n__interrupts_1ga619e36230fa2eb089a7c1936b5004eb9" compoundref="stm32f10x__can_8h" startline="562">CAN_IT_TME</references>
      </memberdef>
      <memberdef kind="function" id="group___c_a_n___exported___functions_1ga30bf7ac0c1793f6622a4a1adbb7dbc8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CAN_ClearITPendingBit</definition>
        <argsstring>(CAN_TypeDef *CANx, uint32_t CAN_IT)</argsstring>
        <name>CAN_ClearITPendingBit</name>
        <param>
          <type><ref refid="struct_c_a_n___type_def" kindref="compound">CAN_TypeDef</ref> *</type>
          <declname>CANx</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>CAN_IT</declname>
        </param>
        <briefdescription>
<para>Clears the CANx&apos;s interrupt pending bits. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>CANx</parametername>
</parameternamelist>
<parameterdescription>
<para>where x can be 1 or 2 to to select the CAN peripheral. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>CAN_IT</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the interrupt pending bit to clear.<itemizedlist>
<listitem><para>CAN_IT_TME</para></listitem><listitem><para>CAN_IT_FF0</para></listitem><listitem><para>CAN_IT_FOV0</para></listitem><listitem><para>CAN_IT_FF1</para></listitem><listitem><para>CAN_IT_FOV1</para></listitem><listitem><para>CAN_IT_WKU</para></listitem><listitem><para>CAN_IT_SLK</para></listitem><listitem><para>CAN_IT_EWG</para></listitem><listitem><para>CAN_IT_EPV</para></listitem><listitem><para>CAN_IT_BOF</para></listitem><listitem><para>CAN_IT_LEC</para></listitem><listitem><para>CAN_IT_ERR </para></listitem></itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None.</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h" line="684" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_can.c" bodystart="1316" bodyend="1387"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___c_a_n___exported___types_1gaf471a53f52a02078ffd842658d932f63" compoundref="stm32f10x__can_8h" startline="52">IS_CAN_ALL_PERIPH</references>
        <references refid="group___c_a_n__interrupts_1ga8b6e5fd6ddfe0141925f1e22cfbe7b85" compoundref="stm32f10x__can_8h" startline="597">IS_CAN_CLEAR_IT</references>
        <references refid="group___c_a_n__interrupts_1ga619e36230fa2eb089a7c1936b5004eb9" compoundref="stm32f10x__can_8h" startline="562">CAN_IT_TME</references>
        <references refid="struct_c_a_n___type_def_1acbc82ac4e87e75350fc586be5e56d95b" compoundref="stm32f10x_8h" startline="707">CAN_TypeDef::TSR</references>
        <references refid="group___peripheral___registers___bits___definition_1ga4a4809b8908618df57e6393cc7fe0f52" compoundref="stm32f10x_8h" startline="6241">CAN_TSR_RQCP0</references>
        <references refid="group___peripheral___registers___bits___definition_1gabd3118dec59c3a45d2f262b090699538" compoundref="stm32f10x_8h" startline="6246">CAN_TSR_RQCP1</references>
        <references refid="group___peripheral___registers___bits___definition_1ga3cf9e83cec96164f1dadf4e43411ebf0" compoundref="stm32f10x_8h" startline="6251">CAN_TSR_RQCP2</references>
        <references refid="group___c_a_n__interrupts_1gabf63043d9216de80ddc7ffe57b23ef67" compoundref="stm32f10x__can_8h" startline="566">CAN_IT_FF0</references>
        <references refid="struct_c_a_n___type_def_1ad8e858479e26ab075ee2ddb630e8769d" compoundref="stm32f10x_8h" startline="708">CAN_TypeDef::RF0R</references>
        <references refid="group___peripheral___registers___bits___definition_1gae934674f6e22a758e430f32cfc386d70" compoundref="stm32f10x_8h" startline="6270">CAN_RF0R_FULL0</references>
        <references refid="group___c_a_n__interrupts_1ga066a4317f95669e5b5931c9a759cf248" compoundref="stm32f10x__can_8h" startline="567">CAN_IT_FOV0</references>
        <references refid="group___peripheral___registers___bits___definition_1ga2a3d15b3abab8199c16e26a3dffdc8b8" compoundref="stm32f10x_8h" startline="6271">CAN_RF0R_FOVR0</references>
        <references refid="group___c_a_n__interrupts_1ga93b86d884ce0624b4b36c991fd75fc1c" compoundref="stm32f10x__can_8h" startline="569">CAN_IT_FF1</references>
        <references refid="struct_c_a_n___type_def_1a69a528d1288c1de666df68655af1d20e" compoundref="stm32f10x_8h" startline="709">CAN_TypeDef::RF1R</references>
        <references refid="group___peripheral___registers___bits___definition_1gabdaa12fe4d14254cc4a6a4de749a7d0a" compoundref="stm32f10x_8h" startline="6276">CAN_RF1R_FULL1</references>
        <references refid="group___c_a_n__interrupts_1ga963301fdbede5f9a9665dc5b6210eaec" compoundref="stm32f10x__can_8h" startline="570">CAN_IT_FOV1</references>
        <references refid="group___peripheral___registers___bits___definition_1gab5eeaabd4db3825bc53d860aca8d7590" compoundref="stm32f10x_8h" startline="6277">CAN_RF1R_FOVR1</references>
        <references refid="group___c_a_n__interrupts_1gac9c8767770d94de753dda9ad31f9af15" compoundref="stm32f10x__can_8h" startline="573">CAN_IT_WKU</references>
        <references refid="struct_c_a_n___type_def_1af98b957a4e887751fbd407d3e2cf93b5" compoundref="stm32f10x_8h" startline="706">CAN_TypeDef::MSR</references>
        <references refid="group___peripheral___registers___bits___definition_1ga0f4c753b96d21c5001b39ad5b08519fc" compoundref="stm32f10x_8h" startline="6233">CAN_MSR_WKUI</references>
        <references refid="group___c_a_n__interrupts_1ga639d4ab2777d9a2f8b7e67071b091059" compoundref="stm32f10x__can_8h" startline="574">CAN_IT_SLK</references>
        <references refid="group___peripheral___registers___bits___definition_1ga47ab62ae123c791de27ad05dde5bee91" compoundref="stm32f10x_8h" startline="6234">CAN_MSR_SLAKI</references>
        <references refid="group___c_a_n__interrupts_1ga8a9f04ddf6ebe169d32b951a8ea135b3" compoundref="stm32f10x__can_8h" startline="577">CAN_IT_EWG</references>
        <references refid="group___peripheral___registers___bits___definition_1ga9c424768e9e963402f37cb95ae87a1ae" compoundref="stm32f10x_8h" startline="6232">CAN_MSR_ERRI</references>
        <references refid="group___c_a_n__interrupts_1ga006b7b641d337a599ceac64b483e75dd" compoundref="stm32f10x__can_8h" startline="578">CAN_IT_EPV</references>
        <references refid="group___c_a_n__interrupts_1gad63c39e6237aa07681a1f8ce2ff9e167" compoundref="stm32f10x__can_8h" startline="579">CAN_IT_BOF</references>
        <references refid="group___c_a_n__interrupts_1gad670b6f001bf67f24e17d91ada50a61c" compoundref="stm32f10x__can_8h" startline="580">CAN_IT_LEC</references>
        <references refid="struct_c_a_n___type_def_1ab1a1b6a7c587443a03d654d3b9a94423" compoundref="stm32f10x_8h" startline="711">CAN_TypeDef::ESR</references>
        <references refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffa589b7d94a3d91d145720e2fed0eb3a05" compoundref="stm32f10x_8h" startline="519">RESET</references>
        <references refid="group___c_a_n__interrupts_1ga65f1781c9165a2e9b5f77f1ed3990741" compoundref="stm32f10x__can_8h" startline="581">CAN_IT_ERR</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This file contains all the functions prototypes for the CAN firmware library. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>MCD Application Team </para></simplesect>
<simplesect kind="version"><para>V3.5.0 </para></simplesect>
<simplesect kind="date"><para>11-March-2011 </para></simplesect>
<simplesect kind="attention"><para></para></simplesect>
THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.</para><para><heading level="2"><center><copy/> COPYRIGHT 2011 STMicroelectronics</center></heading>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="23"><highlight class="comment">/*<sp/>Define<sp/>to<sp/>prevent<sp/>recursive<sp/>inclusion<sp/>-------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__STM32F10x_CAN_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__STM32F10x_CAN_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/>[ILG]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>(<sp/>__GNUC__<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>GCC<sp/>diagnostic<sp/>push</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>GCC<sp/>diagnostic<sp/>ignored<sp/>&quot;-Wpadded&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Includes<sp/>------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="stm32f10x_8h" kindref="compound">stm32f10x.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="group___c_a_n___exported___types_1gaf471a53f52a02078ffd842658d932f63" refkind="member"><highlight class="preprocessor">#define<sp/>IS_CAN_ALL_PERIPH(PERIPH)<sp/>(((PERIPH)<sp/>==<sp/>CAN1)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="53"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((PERIPH)<sp/>==<sp/>CAN2))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="struct_c_a_n___init_type_def" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal">{</highlight></codeline>
<codeline lineno="61" refid="struct_c_a_n___init_type_def_1a3e91dbcbf30b893a9bd6a65606cb8fe9" refkind="member"><highlight class="normal"><sp/><sp/>uint16_t<sp/><ref refid="struct_c_a_n___init_type_def_1a3e91dbcbf30b893a9bd6a65606cb8fe9" kindref="member">CAN_Prescaler</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="64" refid="struct_c_a_n___init_type_def_1a24816ff18ae048a5ec4bbb22aa2c04f9" refkind="member"><highlight class="normal"><sp/><sp/>uint8_t<sp/><ref refid="struct_c_a_n___init_type_def_1a24816ff18ae048a5ec4bbb22aa2c04f9" kindref="member">CAN_Mode</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="68" refid="struct_c_a_n___init_type_def_1addac271c43490cb37ac7293f7bf201c2" refkind="member"><highlight class="normal"><sp/><sp/>uint8_t<sp/><ref refid="struct_c_a_n___init_type_def_1addac271c43490cb37ac7293f7bf201c2" kindref="member">CAN_SJW</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="74" refid="struct_c_a_n___init_type_def_1aecbd21b55dc88c3a18db93af2836cd58" refkind="member"><highlight class="normal"><sp/><sp/>uint8_t<sp/><ref refid="struct_c_a_n___init_type_def_1aecbd21b55dc88c3a18db93af2836cd58" kindref="member">CAN_BS1</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="78" refid="struct_c_a_n___init_type_def_1a693eb00830d6e2aeb4d9fabdba85b9cf" refkind="member"><highlight class="normal"><sp/><sp/>uint8_t<sp/><ref refid="struct_c_a_n___init_type_def_1a693eb00830d6e2aeb4d9fabdba85b9cf" kindref="member">CAN_BS2</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="83" refid="struct_c_a_n___init_type_def_1aa53ceafdcf1a9a5c9a6566006c9a4b60" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref><sp/><ref refid="struct_c_a_n___init_type_def_1aa53ceafdcf1a9a5c9a6566006c9a4b60" kindref="member">CAN_TTCM</ref>;<sp/></highlight></codeline>
<codeline lineno="87" refid="struct_c_a_n___init_type_def_1a70560646c27d96ca8adc4a62d24dafd9" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref><sp/><ref refid="struct_c_a_n___init_type_def_1a70560646c27d96ca8adc4a62d24dafd9" kindref="member">CAN_ABOM</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="91" refid="struct_c_a_n___init_type_def_1a10f873c858a7b0efc2d0ab41524320d3" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref><sp/><ref refid="struct_c_a_n___init_type_def_1a10f873c858a7b0efc2d0ab41524320d3" kindref="member">CAN_AWUM</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="95" refid="struct_c_a_n___init_type_def_1a5adeac1b7b47f2b91e667eddc181ac09" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref><sp/><ref refid="struct_c_a_n___init_type_def_1a5adeac1b7b47f2b91e667eddc181ac09" kindref="member">CAN_NART</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="99" refid="struct_c_a_n___init_type_def_1aa63787683c0ad533b513fb60355d76f1" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref><sp/><ref refid="struct_c_a_n___init_type_def_1aa63787683c0ad533b513fb60355d76f1" kindref="member">CAN_RFLM</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="103" refid="struct_c_a_n___init_type_def_1a003de4b70fc93b4f820f320c6ea75a16" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref><sp/><ref refid="struct_c_a_n___init_type_def_1a003de4b70fc93b4f820f320c6ea75a16" kindref="member">CAN_TXFP</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="106"><highlight class="normal">}<sp/><ref refid="struct_c_a_n___init_type_def" kindref="compound">CAN_InitTypeDef</ref>;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="112" refid="struct_c_a_n___filter_init_type_def" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal">{</highlight></codeline>
<codeline lineno="114" refid="struct_c_a_n___filter_init_type_def_1afc109aa8eedced09d296605f2eb871f7" refkind="member"><highlight class="normal"><sp/><sp/>uint16_t<sp/><ref refid="struct_c_a_n___filter_init_type_def_1afc109aa8eedced09d296605f2eb871f7" kindref="member">CAN_FilterIdHigh</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="118" refid="struct_c_a_n___filter_init_type_def_1ab8c56b48ac323e8c7a1b535c79a51f87" refkind="member"><highlight class="normal"><sp/><sp/>uint16_t<sp/><ref refid="struct_c_a_n___filter_init_type_def_1ab8c56b48ac323e8c7a1b535c79a51f87" kindref="member">CAN_FilterIdLow</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="122" refid="struct_c_a_n___filter_init_type_def_1a6f34539615e6484f266b46aa8f362a91" refkind="member"><highlight class="normal"><sp/><sp/>uint16_t<sp/><ref refid="struct_c_a_n___filter_init_type_def_1a6f34539615e6484f266b46aa8f362a91" kindref="member">CAN_FilterMaskIdHigh</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="127" refid="struct_c_a_n___filter_init_type_def_1a0f052daf04b0a481ecfa5c2cc8058089" refkind="member"><highlight class="normal"><sp/><sp/>uint16_t<sp/><ref refid="struct_c_a_n___filter_init_type_def_1a0f052daf04b0a481ecfa5c2cc8058089" kindref="member">CAN_FilterMaskIdLow</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="132" refid="struct_c_a_n___filter_init_type_def_1a01ba491f12097adcc9f0a3d627628d55" refkind="member"><highlight class="normal"><sp/><sp/>uint16_t<sp/><ref refid="struct_c_a_n___filter_init_type_def_1a01ba491f12097adcc9f0a3d627628d55" kindref="member">CAN_FilterFIFOAssignment</ref>;<sp/></highlight></codeline>
<codeline lineno="135" refid="struct_c_a_n___filter_init_type_def_1af94466e1138c2b4fe6a67cf556981193" refkind="member"><highlight class="normal"><sp/><sp/>uint8_t<sp/><ref refid="struct_c_a_n___filter_init_type_def_1af94466e1138c2b4fe6a67cf556981193" kindref="member">CAN_FilterNumber</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="137" refid="struct_c_a_n___filter_init_type_def_1a7cfb23c48aad13a058c2619dbc062d8a" refkind="member"><highlight class="normal"><sp/><sp/>uint8_t<sp/><ref refid="struct_c_a_n___filter_init_type_def_1a7cfb23c48aad13a058c2619dbc062d8a" kindref="member">CAN_FilterMode</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="140" refid="struct_c_a_n___filter_init_type_def_1a9d52661aca538dbfcafdda6f16dddc82" refkind="member"><highlight class="normal"><sp/><sp/>uint8_t<sp/><ref refid="struct_c_a_n___filter_init_type_def_1a9d52661aca538dbfcafdda6f16dddc82" kindref="member">CAN_FilterScale</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="143" refid="struct_c_a_n___filter_init_type_def_1a0225afda33b565f358ca75bdaa780074" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref><sp/><ref refid="struct_c_a_n___filter_init_type_def_1a0225afda33b565f358ca75bdaa780074" kindref="member">CAN_FilterActivation</ref>;<sp/></highlight></codeline>
<codeline lineno="145"><highlight class="normal">}<sp/><ref refid="struct_c_a_n___filter_init_type_def" kindref="compound">CAN_FilterInitTypeDef</ref>;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="151" refid="struct_can_tx_msg" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal">{</highlight></codeline>
<codeline lineno="153" refid="struct_can_tx_msg_1abfb50c8208227f8cf378f29cf9a3a6f3" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="struct_can_tx_msg_1abfb50c8208227f8cf378f29cf9a3a6f3" kindref="member">StdId</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="156" refid="struct_can_tx_msg_1a33050a95a4cc463b589ff16bdd416f22" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="struct_can_tx_msg_1a33050a95a4cc463b589ff16bdd416f22" kindref="member">ExtId</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="159" refid="struct_can_tx_msg_1aa4c8568a0e3250a17bd7e116b3e09670" refkind="member"><highlight class="normal"><sp/><sp/>uint8_t<sp/><ref refid="struct_can_tx_msg_1aa4c8568a0e3250a17bd7e116b3e09670" kindref="member">IDE</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="163" refid="struct_can_tx_msg_1a69f84255db38c6910058f290efdb7302" refkind="member"><highlight class="normal"><sp/><sp/>uint8_t<sp/><ref refid="struct_can_tx_msg_1a69f84255db38c6910058f290efdb7302" kindref="member">RTR</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="167" refid="struct_can_tx_msg_1ab49d0fa602aad2fd9cd007adafc11fc2" refkind="member"><highlight class="normal"><sp/><sp/>uint8_t<sp/><ref refid="struct_can_tx_msg_1ab49d0fa602aad2fd9cd007adafc11fc2" kindref="member">DLC</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="171" refid="struct_can_tx_msg_1aabfbf718f627da26d9e3cf903dc0ad02" refkind="member"><highlight class="normal"><sp/><sp/>uint8_t<sp/>Data[8];<sp/></highlight></codeline>
<codeline lineno="173"><highlight class="normal">}<sp/><ref refid="struct_can_tx_msg" kindref="compound">CanTxMsg</ref>;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="179" refid="struct_can_rx_msg" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal">{</highlight></codeline>
<codeline lineno="181" refid="struct_can_rx_msg_1a62769e18836146f71238bee6b43b531e" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="struct_can_rx_msg_1a62769e18836146f71238bee6b43b531e" kindref="member">StdId</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="184" refid="struct_can_rx_msg_1a1fdca10d31c81eea2ccef41d2aced562" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="struct_can_rx_msg_1a1fdca10d31c81eea2ccef41d2aced562" kindref="member">ExtId</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="187" refid="struct_can_rx_msg_1a83a67d1a709cc01570ce956e5adc811f" refkind="member"><highlight class="normal"><sp/><sp/>uint8_t<sp/><ref refid="struct_can_rx_msg_1a83a67d1a709cc01570ce956e5adc811f" kindref="member">IDE</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="191" refid="struct_can_rx_msg_1a9a183149a391a24f86da2ce895f0f1c9" refkind="member"><highlight class="normal"><sp/><sp/>uint8_t<sp/><ref refid="struct_can_rx_msg_1a9a183149a391a24f86da2ce895f0f1c9" kindref="member">RTR</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="195" refid="struct_can_rx_msg_1abf77d3abf9ad290c08cdfd5d99ebc745" refkind="member"><highlight class="normal"><sp/><sp/>uint8_t<sp/><ref refid="struct_can_rx_msg_1abf77d3abf9ad290c08cdfd5d99ebc745" kindref="member">DLC</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="198" refid="struct_can_rx_msg_1ae8ecbad16622db30d63fda08bc478649" refkind="member"><highlight class="normal"><sp/><sp/>uint8_t<sp/>Data[8];<sp/></highlight></codeline>
<codeline lineno="201" refid="struct_can_rx_msg_1a5afe39d8e295659eeb3030593828b96a" refkind="member"><highlight class="normal"><sp/><sp/>uint8_t<sp/><ref refid="struct_can_rx_msg_1a5afe39d8e295659eeb3030593828b96a" kindref="member">FMI</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="204"><highlight class="normal">}<sp/><ref refid="struct_can_rx_msg" kindref="compound">CanRxMsg</ref>;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="218" refid="group___c_a_n__sleep__constants_1ga095c319e8c54c974eb2b6eeadf180d96" refkind="member"><highlight class="preprocessor">#define<sp/>CAN_InitStatus_Failed<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)0x00)<sp/></highlight></codeline>
<codeline lineno="219" refid="group___c_a_n__sleep__constants_1ga6bed5957af8f2f6b00568e15ccac5772" refkind="member"><highlight class="preprocessor">#define<sp/>CAN_InitStatus_Success<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)0x01)<sp/></highlight></codeline>
<codeline lineno="229" refid="group___c_a_n___mode_1gaaf1f48ab4917ccfd5fd31dd781d59e29" refkind="member"><highlight class="preprocessor">#define<sp/>CAN_Mode_Normal<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)0x00)<sp/><sp/></highlight></codeline>
<codeline lineno="230" refid="group___c_a_n___mode_1gaad036c944403186eb3496ff65020c0ee" refkind="member"><highlight class="preprocessor">#define<sp/>CAN_Mode_LoopBack<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)0x01)<sp/><sp/></highlight></codeline>
<codeline lineno="231" refid="group___c_a_n___mode_1gac05e5d666f18eb35e8da70e6e17e8fb8" refkind="member"><highlight class="preprocessor">#define<sp/>CAN_Mode_Silent<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)0x02)<sp/><sp/></highlight></codeline>
<codeline lineno="232" refid="group___c_a_n___mode_1ga087afa0d24d2cf399225993573c984eb" refkind="member"><highlight class="preprocessor">#define<sp/>CAN_Mode_Silent_LoopBack<sp/><sp/><sp/><sp/>((uint8_t)0x03)<sp/><sp/></highlight></codeline>
<codeline lineno="234" refid="group___c_a_n___mode_1ga5d6480c240edeba383b4e07d65814d98" refkind="member"><highlight class="preprocessor">#define<sp/>IS_CAN_MODE(MODE)<sp/>(((MODE)<sp/>==<sp/>CAN_Mode_Normal)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="235"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((MODE)<sp/>==<sp/>CAN_Mode_LoopBack)||<sp/>\</highlight></codeline>
<codeline lineno="236"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((MODE)<sp/>==<sp/>CAN_Mode_Silent)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="237"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((MODE)<sp/>==<sp/>CAN_Mode_Silent_LoopBack))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="247" refid="group___c_a_n___operating___mode_1gace8a4b5c164aba6f473d6254ad1e8a36" refkind="member"><highlight class="preprocessor">#define<sp/>CAN_OperatingMode_Initialization<sp/><sp/>((uint8_t)0x00)<sp/></highlight></codeline>
<codeline lineno="248" refid="group___c_a_n___operating___mode_1ga663ecffaa60d1a201a035dfa45325848" refkind="member"><highlight class="preprocessor">#define<sp/>CAN_OperatingMode_Normal<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)0x01)<sp/></highlight></codeline>
<codeline lineno="249" refid="group___c_a_n___operating___mode_1ga173b85d2baaa6249d966b8073e3ad8ca" refkind="member"><highlight class="preprocessor">#define<sp/>CAN_OperatingMode_Sleep<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)0x02)<sp/></highlight></codeline>
<codeline lineno="252" refid="group___c_a_n___operating___mode_1ga377f1598db9b0248ba83fa6e5a75db75" refkind="member"><highlight class="preprocessor">#define<sp/>IS_CAN_OPERATING_MODE(MODE)<sp/>(((MODE)<sp/>==<sp/>CAN_OperatingMode_Initialization)<sp/>||\</highlight></codeline>
<codeline lineno="253"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((MODE)<sp/>==<sp/>CAN_OperatingMode_Normal)||<sp/>\</highlight></codeline>
<codeline lineno="254"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((MODE)<sp/>==<sp/>CAN_OperatingMode_Sleep))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="264" refid="group___c_a_n___mode___status_1ga9882944537945325ef08e1986838ea45" refkind="member"><highlight class="preprocessor">#define<sp/>CAN_ModeStatus_Failed<sp/><sp/><sp/><sp/>((uint8_t)0x00)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="265" refid="group___c_a_n___mode___status_1ga7ca0ea503eb3b3a7c0abdfad27cb6579" refkind="member"><highlight class="preprocessor">#define<sp/>CAN_ModeStatus_Success<sp/><sp/><sp/>((uint8_t)!CAN_ModeStatus_Failed)<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="276" refid="group___c_a_n__synchronisation__jump__width_1ga4e03d22ae683b63cb4df238449ec967c" refkind="member"><highlight class="preprocessor">#define<sp/>CAN_SJW_1tq<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)0x00)<sp/><sp/></highlight></codeline>
<codeline lineno="277" refid="group___c_a_n__synchronisation__jump__width_1gad39e7656c555cc00bc4d7c1bff39916f" refkind="member"><highlight class="preprocessor">#define<sp/>CAN_SJW_2tq<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)0x01)<sp/><sp/></highlight></codeline>
<codeline lineno="278" refid="group___c_a_n__synchronisation__jump__width_1gab4de740e2184aac71c2c8cba22a8ecd2" refkind="member"><highlight class="preprocessor">#define<sp/>CAN_SJW_3tq<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)0x02)<sp/><sp/></highlight></codeline>
<codeline lineno="279" refid="group___c_a_n__synchronisation__jump__width_1ga7f26a36d478c7ba1a1441b369d62f693" refkind="member"><highlight class="preprocessor">#define<sp/>CAN_SJW_4tq<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)0x03)<sp/><sp/></highlight></codeline>
<codeline lineno="281" refid="group___c_a_n__synchronisation__jump__width_1ga4e4f344712d3bcac1975318d4ab9a383" refkind="member"><highlight class="preprocessor">#define<sp/>IS_CAN_SJW(SJW)<sp/>(((SJW)<sp/>==<sp/>CAN_SJW_1tq)<sp/>||<sp/>((SJW)<sp/>==<sp/>CAN_SJW_2tq)||<sp/>\</highlight></codeline>
<codeline lineno="282"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((SJW)<sp/>==<sp/>CAN_SJW_3tq)<sp/>||<sp/>((SJW)<sp/>==<sp/>CAN_SJW_4tq))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="291" refid="group___c_a_n__time__quantum__in__bit__segment__1_1ga76b8fb0815b7a3f398fffe72dda0bc04" refkind="member"><highlight class="preprocessor">#define<sp/>CAN_BS1_1tq<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)0x00)<sp/><sp/></highlight></codeline>
<codeline lineno="292" refid="group___c_a_n__time__quantum__in__bit__segment__1_1ga1544ecf902e6173859d60cff9530971a" refkind="member"><highlight class="preprocessor">#define<sp/>CAN_BS1_2tq<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)0x01)<sp/><sp/></highlight></codeline>
<codeline lineno="293" refid="group___c_a_n__time__quantum__in__bit__segment__1_1gaa808099663480de935d3ce9187c2dcab" refkind="member"><highlight class="preprocessor">#define<sp/>CAN_BS1_3tq<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)0x02)<sp/><sp/></highlight></codeline>
<codeline lineno="294" refid="group___c_a_n__time__quantum__in__bit__segment__1_1ga7c5c668200f41991e14b31ca20235000" refkind="member"><highlight class="preprocessor">#define<sp/>CAN_BS1_4tq<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)0x03)<sp/><sp/></highlight></codeline>
<codeline lineno="295" refid="group___c_a_n__time__quantum__in__bit__segment__1_1ga31dea95492dababfcf79bcaeb884b99e" refkind="member"><highlight class="preprocessor">#define<sp/>CAN_BS1_5tq<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)0x04)<sp/><sp/></highlight></codeline>
<codeline lineno="296" refid="group___c_a_n__time__quantum__in__bit__segment__1_1gaa7fc6fcdf9c1c70ee9700b35e32e205e" refkind="member"><highlight class="preprocessor">#define<sp/>CAN_BS1_6tq<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)0x05)<sp/><sp/></highlight></codeline>
<codeline lineno="297" refid="group___c_a_n__time__quantum__in__bit__segment__1_1gafec90578d657073a671b6326f3bfcf8e" refkind="member"><highlight class="preprocessor">#define<sp/>CAN_BS1_7tq<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)0x06)<sp/><sp/></highlight></codeline>
<codeline lineno="298" refid="group___c_a_n__time__quantum__in__bit__segment__1_1ga1049ea9bc5b3da680574ca444e888de4" refkind="member"><highlight class="preprocessor">#define<sp/>CAN_BS1_8tq<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)0x07)<sp/><sp/></highlight></codeline>
<codeline lineno="299" refid="group___c_a_n__time__quantum__in__bit__segment__1_1ga0493701bdd73a9649510f035439a6580" refkind="member"><highlight class="preprocessor">#define<sp/>CAN_BS1_9tq<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)0x08)<sp/><sp/></highlight></codeline>
<codeline lineno="300" refid="group___c_a_n__time__quantum__in__bit__segment__1_1gaf1b474aa632787e70bedd0c5dfdbf5ed" refkind="member"><highlight class="preprocessor">#define<sp/>CAN_BS1_10tq<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)0x09)<sp/><sp/></highlight></codeline>
<codeline lineno="301" refid="group___c_a_n__time__quantum__in__bit__segment__1_1ga4f765ffbe7fda4fb6d0fde7bc4058a14" refkind="member"><highlight class="preprocessor">#define<sp/>CAN_BS1_11tq<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)0x0A)<sp/><sp/></highlight></codeline>
<codeline lineno="302" refid="group___c_a_n__time__quantum__in__bit__segment__1_1ga14c4e928f615babc14c6a9e80ee86a6c" refkind="member"><highlight class="preprocessor">#define<sp/>CAN_BS1_12tq<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)0x0B)<sp/><sp/></highlight></codeline>
<codeline lineno="303" refid="group___c_a_n__time__quantum__in__bit__segment__1_1ga2087caec94be44837c1e6965da7f6236" refkind="member"><highlight class="preprocessor">#define<sp/>CAN_BS1_13tq<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)0x0C)<sp/><sp/></highlight></codeline>
<codeline lineno="304" refid="group___c_a_n__time__quantum__in__bit__segment__1_1gac0c71e1020a4fbaf66bce754bd54d8cb" refkind="member"><highlight class="preprocessor">#define<sp/>CAN_BS1_14tq<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)0x0D)<sp/><sp/></highlight></codeline>
<codeline lineno="305" refid="group___c_a_n__time__quantum__in__bit__segment__1_1gaa52c8674dc7caae1089e5276cd13db5f" refkind="member"><highlight class="preprocessor">#define<sp/>CAN_BS1_15tq<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)0x0E)<sp/><sp/></highlight></codeline>
<codeline lineno="306" refid="group___c_a_n__time__quantum__in__bit__segment__1_1ga3be52c699f5618cc318c143ee42f5966" refkind="member"><highlight class="preprocessor">#define<sp/>CAN_BS1_16tq<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)0x0F)<sp/><sp/></highlight></codeline>
<codeline lineno="308" refid="group___c_a_n__time__quantum__in__bit__segment__1_1ga225f1457e1c6b8fc3b5af0f463933152" refkind="member"><highlight class="preprocessor">#define<sp/>IS_CAN_BS1(BS1)<sp/>((BS1)<sp/>&lt;=<sp/>CAN_BS1_16tq)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="317" refid="group___c_a_n__time__quantum__in__bit__segment__2_1gad9af25a3f61df7b09b8d6a5e81d8027e" refkind="member"><highlight class="preprocessor">#define<sp/>CAN_BS2_1tq<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)0x00)<sp/><sp/></highlight></codeline>
<codeline lineno="318" refid="group___c_a_n__time__quantum__in__bit__segment__2_1gac43d82f74990620499f1998187ff3602" refkind="member"><highlight class="preprocessor">#define<sp/>CAN_BS2_2tq<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)0x01)<sp/><sp/></highlight></codeline>
<codeline lineno="319" refid="group___c_a_n__time__quantum__in__bit__segment__2_1gab3d325ce4a5d0eb1ee8ee50ad4ec7e49" refkind="member"><highlight class="preprocessor">#define<sp/>CAN_BS2_3tq<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)0x02)<sp/><sp/></highlight></codeline>
<codeline lineno="320" refid="group___c_a_n__time__quantum__in__bit__segment__2_1gaaff1c1cdd809f185299971c6437f32a0" refkind="member"><highlight class="preprocessor">#define<sp/>CAN_BS2_4tq<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)0x03)<sp/><sp/></highlight></codeline>
<codeline lineno="321" refid="group___c_a_n__time__quantum__in__bit__segment__2_1ga89feba32bcc2e909f858d535edaad101" refkind="member"><highlight class="preprocessor">#define<sp/>CAN_BS2_5tq<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)0x04)<sp/><sp/></highlight></codeline>
<codeline lineno="322" refid="group___c_a_n__time__quantum__in__bit__segment__2_1ga72c3245b794d3238763d1ec319bf386f" refkind="member"><highlight class="preprocessor">#define<sp/>CAN_BS2_6tq<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)0x05)<sp/><sp/></highlight></codeline>
<codeline lineno="323" refid="group___c_a_n__time__quantum__in__bit__segment__2_1ga8005adaef02fb90e400909de08dec031" refkind="member"><highlight class="preprocessor">#define<sp/>CAN_BS2_7tq<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)0x06)<sp/><sp/></highlight></codeline>
<codeline lineno="324" refid="group___c_a_n__time__quantum__in__bit__segment__2_1gaad8dcbb266cf5074bfb67bd7108597c6" refkind="member"><highlight class="preprocessor">#define<sp/>CAN_BS2_8tq<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)0x07)<sp/><sp/></highlight></codeline>
<codeline lineno="326" refid="group___c_a_n__time__quantum__in__bit__segment__2_1ga3f5620b1d094dbd7d2fb8d16f4b187a9" refkind="member"><highlight class="preprocessor">#define<sp/>IS_CAN_BS2(BS2)<sp/>((BS2)<sp/>&lt;=<sp/>CAN_BS2_8tq)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="336" refid="group___c_a_n__clock__prescaler_1gacde6b8be6fe083a6302fc183b5ac1055" refkind="member"><highlight class="preprocessor">#define<sp/>IS_CAN_PRESCALER(PRESCALER)<sp/>(((PRESCALER)<sp/>&gt;=<sp/>1)<sp/>&amp;&amp;<sp/>((PRESCALER)<sp/>&lt;=<sp/>1024))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="preprocessor">#ifndef<sp/>STM32F10X_CL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346" refid="group___c_a_n__filter__number_1ga28d6c98a160d71059ed9a5973de2a4ef" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>IS_CAN_FILTER_NUMBER(NUMBER)<sp/>((NUMBER)<sp/>&lt;=<sp/>13)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>IS_CAN_FILTER_NUMBER(NUMBER)<sp/>((NUMBER)<sp/>&lt;=<sp/>27)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>STM32F10X_CL<sp/>*/</highlight><highlight class="preprocessor"><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="358" refid="group___c_a_n__filter__mode_1ga8136e518fb31fd91079e4c7c4c19c94b" refkind="member"><highlight class="preprocessor">#define<sp/>CAN_FilterMode_IdMask<sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)0x00)<sp/><sp/></highlight></codeline>
<codeline lineno="359" refid="group___c_a_n__filter__mode_1ga91e9144f71b15ac345ee89314711c158" refkind="member"><highlight class="preprocessor">#define<sp/>CAN_FilterMode_IdList<sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)0x01)<sp/><sp/></highlight></codeline>
<codeline lineno="361" refid="group___c_a_n__filter__mode_1gae684565d5392c12fd333379e5ec840f8" refkind="member"><highlight class="preprocessor">#define<sp/>IS_CAN_FILTER_MODE(MODE)<sp/>(((MODE)<sp/>==<sp/>CAN_FilterMode_IdMask)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="362"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((MODE)<sp/>==<sp/>CAN_FilterMode_IdList))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="371" refid="group___c_a_n__filter__scale_1ga9e0493937e73bcf9a4127eef2f255a95" refkind="member"><highlight class="preprocessor">#define<sp/>CAN_FilterScale_16bit<sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)0x00)<sp/></highlight></codeline>
<codeline lineno="372" refid="group___c_a_n__filter__scale_1gac63dfb0e11713c59268ee9f4aebab60e" refkind="member"><highlight class="preprocessor">#define<sp/>CAN_FilterScale_32bit<sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)0x01)<sp/></highlight></codeline>
<codeline lineno="374" refid="group___c_a_n__filter__scale_1gaf64c93166af0eb5ec7e804116f10783a" refkind="member"><highlight class="preprocessor">#define<sp/>IS_CAN_FILTER_SCALE(SCALE)<sp/>(((SCALE)<sp/>==<sp/>CAN_FilterScale_16bit)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="375"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((SCALE)<sp/>==<sp/>CAN_FilterScale_32bit))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="385" refid="group___c_a_n__filter___f_i_f_o_1ga8249c27978ca94676530540b88a6be8f" refkind="member"><highlight class="preprocessor">#define<sp/>CAN_Filter_FIFO0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)0x00)<sp/><sp/></highlight></codeline>
<codeline lineno="386" refid="group___c_a_n__filter___f_i_f_o_1gaab8478c89a607c4b8baf68efc730e316" refkind="member"><highlight class="preprocessor">#define<sp/>CAN_Filter_FIFO1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)0x01)<sp/><sp/></highlight></codeline>
<codeline lineno="387" refid="group___c_a_n__filter___f_i_f_o_1ga2df5ae0de841fc80c969e9147991ec9d" refkind="member"><highlight class="preprocessor">#define<sp/>IS_CAN_FILTER_FIFO(FIFO)<sp/>(((FIFO)<sp/>==<sp/>CAN_FilterFIFO0)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="388"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((FIFO)<sp/>==<sp/>CAN_FilterFIFO1))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="396" refid="group___start__bank__filter__for__slave___c_a_n_1ga7fb463088ff4cd584bba47e3d0a4f469" refkind="member"><highlight class="preprocessor">#define<sp/>IS_CAN_BANKNUMBER(BANKNUMBER)<sp/>(((BANKNUMBER)<sp/>&gt;=<sp/>1)<sp/>&amp;&amp;<sp/>((BANKNUMBER)<sp/>&lt;=<sp/>27))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="405" refid="group___c_a_n___tx_1ga218b3e1380c4d49163c91a1af904e44c" refkind="member"><highlight class="preprocessor">#define<sp/>IS_CAN_TRANSMITMAILBOX(TRANSMITMAILBOX)<sp/>((TRANSMITMAILBOX)<sp/>&lt;=<sp/>((uint8_t)0x02))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406" refid="group___c_a_n___tx_1gaf059e4383fa69dec6e18216b22a87f51" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_CAN_STDID(STDID)<sp/><sp/><sp/>((STDID)<sp/>&lt;=<sp/>((uint32_t)0x7FF))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407" refid="group___c_a_n___tx_1ga62dbc2163ad6751b3f921e717b00e9f2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_CAN_EXTID(EXTID)<sp/><sp/><sp/>((EXTID)<sp/>&lt;=<sp/>((uint32_t)0x1FFFFFFF))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408" refid="group___c_a_n___tx_1ga6109469a6a2792b3e7c6be520ea50d36" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_CAN_DLC(DLC)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>((DLC)<sp/>&lt;=<sp/>((uint8_t)0x08))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="418" refid="group___c_a_n__identifier__type_1ga151d9df8a6f361d0a3231593726b5a13" refkind="member"><highlight class="preprocessor">#define<sp/>CAN_Id_Standard<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000000)<sp/><sp/></highlight></codeline>
<codeline lineno="419" refid="group___c_a_n__identifier__type_1gaf6c5c0b43b968fed17fd90246912b1a7" refkind="member"><highlight class="preprocessor">#define<sp/>CAN_Id_Extended<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000004)<sp/><sp/></highlight></codeline>
<codeline lineno="420" refid="group___c_a_n__identifier__type_1gab845f7fbcf6ff8cf3d025210eb8900e4" refkind="member"><highlight class="preprocessor">#define<sp/>IS_CAN_IDTYPE(IDTYPE)<sp/>(((IDTYPE)<sp/>==<sp/>CAN_Id_Standard)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="421"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((IDTYPE)<sp/>==<sp/>CAN_Id_Extended))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="430" refid="group___c_a_n__remote__transmission__request_1ga2407c3a8b2cd97bd651143aa959219f1" refkind="member"><highlight class="preprocessor">#define<sp/>CAN_RTR_Data<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000000)<sp/><sp/></highlight></codeline>
<codeline lineno="431" refid="group___c_a_n__remote__transmission__request_1ga42e95ddfb02d88c82de84058fb0fb349" refkind="member"><highlight class="preprocessor">#define<sp/>CAN_RTR_Remote<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000002)<sp/><sp/></highlight></codeline>
<codeline lineno="432" refid="group___c_a_n__remote__transmission__request_1ga3379997ad4da6fc4d7975c52b891bdc0" refkind="member"><highlight class="preprocessor">#define<sp/>IS_CAN_RTR(RTR)<sp/>(((RTR)<sp/>==<sp/>CAN_RTR_Data)<sp/>||<sp/>((RTR)<sp/>==<sp/>CAN_RTR_Remote))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="442" refid="group___c_a_n__transmit__constants_1ga8d193002e76c04ec8caff6b110cd5983" refkind="member"><highlight class="preprocessor">#define<sp/>CAN_TxStatus_Failed<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)0x00)</highlight></codeline>
<codeline lineno="443" refid="group___c_a_n__transmit__constants_1ga0b401c61922b1449de9b486dcf475c97" refkind="member"><highlight class="preprocessor">#define<sp/>CAN_TxStatus_Ok<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)0x01)<sp/></highlight></codeline>
<codeline lineno="444" refid="group___c_a_n__transmit__constants_1ga9678a3a51379422868083608c7394409" refkind="member"><highlight class="preprocessor">#define<sp/>CAN_TxStatus_Pending<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)0x02)<sp/></highlight></codeline>
<codeline lineno="445" refid="group___c_a_n__transmit__constants_1ga2620e99debd51011d3569121f2e44690" refkind="member"><highlight class="preprocessor">#define<sp/>CAN_TxStatus_NoMailBox<sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)0x04)<sp/></highlight></codeline>
<codeline lineno="455" refid="group___c_a_n__receive___f_i_f_o__number__constants_1ga8f52eeefb86b2af5b7c3b4b75fa4d114" refkind="member"><highlight class="preprocessor">#define<sp/>CAN_FIFO0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)0x00)<sp/></highlight></codeline>
<codeline lineno="456" refid="group___c_a_n__receive___f_i_f_o__number__constants_1gafbcf3f13dbf61030ab7a812595ba9850" refkind="member"><highlight class="preprocessor">#define<sp/>CAN_FIFO1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)0x01)<sp/></highlight></codeline>
<codeline lineno="458" refid="group___c_a_n__receive___f_i_f_o__number__constants_1gaeeb94bf58bd48b8928f964eaaa20a24a" refkind="member"><highlight class="preprocessor">#define<sp/>IS_CAN_FIFO(FIFO)<sp/>(((FIFO)<sp/>==<sp/>CAN_FIFO0)<sp/>||<sp/>((FIFO)<sp/>==<sp/>CAN_FIFO1))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="468" refid="group___c_a_n__sleep__constants_1ga169500ab7169c4e9c7e9e4ea34b3e070" refkind="member"><highlight class="preprocessor">#define<sp/>CAN_Sleep_Failed<sp/><sp/><sp/><sp/><sp/>((uint8_t)0x00)<sp/></highlight></codeline>
<codeline lineno="469" refid="group___c_a_n__sleep__constants_1gaf5c4e9d32d4faff9d0bf61e153ed7998" refkind="member"><highlight class="preprocessor">#define<sp/>CAN_Sleep_Ok<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)0x01)<sp/></highlight></codeline>
<codeline lineno="479" refid="group___c_a_n__wake__up__constants_1ga837fd7ad47fee78e43a186544e2b390b" refkind="member"><highlight class="preprocessor">#define<sp/>CAN_WakeUp_Failed<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)0x00)<sp/></highlight></codeline>
<codeline lineno="480" refid="group___c_a_n__wake__up__constants_1ga152e4935cf85bdfb803eb36b656cd690" refkind="member"><highlight class="preprocessor">#define<sp/>CAN_WakeUp_Ok<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)0x01)<sp/></highlight></codeline>
<codeline lineno="491" refid="group___c_a_n___error___code__constants_1ga025d891e9c5cec2cfecb2213b4f74a9e" refkind="member"><highlight class="preprocessor">#define<sp/>CAN_ErrorCode_NoErr<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)0x00)<sp/></highlight></codeline>
<codeline lineno="492" refid="group___c_a_n___error___code__constants_1gaa733d1c078472912c3bf60fbdc53734d" refkind="member"><highlight class="preprocessor">#define<sp/>CAN_ErrorCode_StuffErr<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)0x10)<sp/></highlight></codeline>
<codeline lineno="493" refid="group___c_a_n___error___code__constants_1ga1fe585558bb8d5c834b4266661392cb2" refkind="member"><highlight class="preprocessor">#define<sp/>CAN_ErrorCode_FormErr<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)0x20)<sp/></highlight></codeline>
<codeline lineno="494" refid="group___c_a_n___error___code__constants_1gad47e6af0116d1b6de85e29286c0b8607" refkind="member"><highlight class="preprocessor">#define<sp/>CAN_ErrorCode_ACKErr<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)0x30)<sp/></highlight></codeline>
<codeline lineno="495" refid="group___c_a_n___error___code__constants_1gaf800de7683f1d22194e1df8eb3b1c5bb" refkind="member"><highlight class="preprocessor">#define<sp/>CAN_ErrorCode_BitRecessiveErr<sp/>((uint8_t)0x40)<sp/></highlight></codeline>
<codeline lineno="496" refid="group___c_a_n___error___code__constants_1gaa19708aa85d1a34f8f7f25a2bfe88b19" refkind="member"><highlight class="preprocessor">#define<sp/>CAN_ErrorCode_BitDominantErr<sp/><sp/>((uint8_t)0x50)<sp/></highlight></codeline>
<codeline lineno="497" refid="group___c_a_n___error___code__constants_1gafa75157442dba7ba1a91036242b78e92" refkind="member"><highlight class="preprocessor">#define<sp/>CAN_ErrorCode_CRCErr<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)0x60)<sp/></highlight></codeline>
<codeline lineno="498" refid="group___c_a_n___error___code__constants_1ga927089dd74347b9fea7a7c59f3840a7c" refkind="member"><highlight class="preprocessor">#define<sp/>CAN_ErrorCode_SoftwareSetErr<sp/><sp/>((uint8_t)0x70)<sp/></highlight></codeline>
<codeline lineno="508"><highlight class="preprocessor"></highlight><highlight class="comment">/*<sp/>If<sp/>the<sp/>flag<sp/>is<sp/>0x3XXXXXXX,<sp/>it<sp/>means<sp/>that<sp/>it<sp/>can<sp/>be<sp/>used<sp/>with<sp/>CAN_GetFlagStatus()</highlight></codeline>
<codeline lineno="509"><highlight class="comment"><sp/><sp/><sp/>and<sp/>CAN_ClearFlag()<sp/>functions.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>If<sp/>the<sp/>flag<sp/>is<sp/>0x1XXXXXXX,<sp/>it<sp/>means<sp/>that<sp/>it<sp/>can<sp/>only<sp/>be<sp/>used<sp/>with<sp/>CAN_GetFlagStatus()<sp/>function.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Transmit<sp/>Flags<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="513" refid="group___c_a_n__flags_1ga6df0579049eb471720ea103c5446298b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAN_FLAG_RQCP0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x38000001)<sp/></highlight></codeline>
<codeline lineno="514" refid="group___c_a_n__flags_1gaba705586ebc3d961507436c03a2feaba" refkind="member"><highlight class="preprocessor">#define<sp/>CAN_FLAG_RQCP1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x38000100)<sp/></highlight></codeline>
<codeline lineno="515" refid="group___c_a_n__flags_1ga9c20cd47e558135bd7ae71149583d487" refkind="member"><highlight class="preprocessor">#define<sp/>CAN_FLAG_RQCP2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x38010000)<sp/></highlight></codeline>
<codeline lineno="517"><highlight class="preprocessor"></highlight><highlight class="comment">/*<sp/>Receive<sp/>Flags<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="518" refid="group___c_a_n__flags_1ga4b40574700edfe752433bb4e0d457c64" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAN_FLAG_FMP0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x12000003)<sp/></highlight></codeline>
<codeline lineno="519" refid="group___c_a_n__flags_1ga11648741ff43af1561ce7009698fb797" refkind="member"><highlight class="preprocessor">#define<sp/>CAN_FLAG_FF0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x32000008)<sp/></highlight></codeline>
<codeline lineno="520" refid="group___c_a_n__flags_1ga2abd66b5e0032132673208decd2d01f2" refkind="member"><highlight class="preprocessor">#define<sp/>CAN_FLAG_FOV0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x32000010)<sp/></highlight></codeline>
<codeline lineno="521" refid="group___c_a_n__flags_1ga5d4b7376954a059fbd74ed8d688f6657" refkind="member"><highlight class="preprocessor">#define<sp/>CAN_FLAG_FMP1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x14000003)<sp/></highlight></codeline>
<codeline lineno="522" refid="group___c_a_n__flags_1ga0fa967743c5db04189bb2160aa48e371" refkind="member"><highlight class="preprocessor">#define<sp/>CAN_FLAG_FF1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x34000008)<sp/></highlight></codeline>
<codeline lineno="523" refid="group___c_a_n__flags_1gac1af6e61b1285ddc4658c4bcc152719a" refkind="member"><highlight class="preprocessor">#define<sp/>CAN_FLAG_FOV1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x34000010)<sp/></highlight></codeline>
<codeline lineno="525"><highlight class="preprocessor"></highlight><highlight class="comment">/*<sp/>Operating<sp/>Mode<sp/>Flags<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="526" refid="group___c_a_n__flags_1ga18c72dbe75cb80e8b5126c23c9120818" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAN_FLAG_WKU<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x31000008)<sp/></highlight></codeline>
<codeline lineno="527" refid="group___c_a_n__flags_1gad087b5025a3d5ead2c32b06663821cf4" refkind="member"><highlight class="preprocessor">#define<sp/>CAN_FLAG_SLAK<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x31000012)<sp/></highlight></codeline>
<codeline lineno="528"><highlight class="preprocessor"></highlight><highlight class="comment">/*<sp/>Note:<sp/>When<sp/>SLAK<sp/>intterupt<sp/>is<sp/>disabled<sp/>(SLKIE=0),<sp/>no<sp/>polling<sp/>on<sp/>SLAKI<sp/>is<sp/>possible.<sp/></highlight></codeline>
<codeline lineno="529"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>In<sp/>this<sp/>case<sp/>the<sp/>SLAK<sp/>bit<sp/>can<sp/>be<sp/>polled.*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Error<sp/>Flags<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="532" refid="group___c_a_n__flags_1gae8906ba9c4031866c5096418ffa9bf71" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAN_FLAG_EWG<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x10F00001)<sp/></highlight></codeline>
<codeline lineno="533" refid="group___c_a_n__flags_1ga61954e54995f638ed78281ad2b0cf43a" refkind="member"><highlight class="preprocessor">#define<sp/>CAN_FLAG_EPV<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x10F00002)<sp/></highlight></codeline>
<codeline lineno="534" refid="group___c_a_n__flags_1ga65f20612d0bf1692003882c0cdbadb1c" refkind="member"><highlight class="preprocessor">#define<sp/>CAN_FLAG_BOF<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x10F00004)<sp/></highlight></codeline>
<codeline lineno="535" refid="group___c_a_n__flags_1ga73a774fa4d391aec0ea6552bf9372917" refkind="member"><highlight class="preprocessor">#define<sp/>CAN_FLAG_LEC<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x30F00070)<sp/></highlight></codeline>
<codeline lineno="537" refid="group___c_a_n__flags_1ga38d33d1762ed3a331d214cdb3249866e" refkind="member"><highlight class="preprocessor">#define<sp/>IS_CAN_GET_FLAG(FLAG)<sp/>(((FLAG)<sp/>==<sp/>CAN_FLAG_LEC)<sp/><sp/>||<sp/>((FLAG)<sp/>==<sp/>CAN_FLAG_BOF)<sp/><sp/><sp/>||<sp/>\</highlight></codeline>
<codeline lineno="538"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((FLAG)<sp/>==<sp/>CAN_FLAG_EPV)<sp/><sp/>||<sp/>((FLAG)<sp/>==<sp/>CAN_FLAG_EWG)<sp/><sp/><sp/>||<sp/>\</highlight></codeline>
<codeline lineno="539"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((FLAG)<sp/>==<sp/>CAN_FLAG_WKU)<sp/><sp/>||<sp/>((FLAG)<sp/>==<sp/>CAN_FLAG_FOV0)<sp/><sp/>||<sp/>\</highlight></codeline>
<codeline lineno="540"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((FLAG)<sp/>==<sp/>CAN_FLAG_FF0)<sp/><sp/>||<sp/>((FLAG)<sp/>==<sp/>CAN_FLAG_FMP0)<sp/><sp/>||<sp/>\</highlight></codeline>
<codeline lineno="541"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((FLAG)<sp/>==<sp/>CAN_FLAG_FOV1)<sp/>||<sp/>((FLAG)<sp/>==<sp/>CAN_FLAG_FF1)<sp/><sp/><sp/>||<sp/>\</highlight></codeline>
<codeline lineno="542"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((FLAG)<sp/>==<sp/>CAN_FLAG_FMP1)<sp/>||<sp/>((FLAG)<sp/>==<sp/>CAN_FLAG_RQCP2)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="543"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((FLAG)<sp/>==<sp/>CAN_FLAG_RQCP1)||<sp/>((FLAG)<sp/>==<sp/>CAN_FLAG_RQCP0)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="544"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((FLAG)<sp/>==<sp/>CAN_FLAG_SLAK<sp/>))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight></codeline>
<codeline lineno="546" refid="group___c_a_n__flags_1gac46f5fb953efb6163cf3b2e33a514d0c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_CAN_CLEAR_FLAG(FLAG)(((FLAG)<sp/>==<sp/>CAN_FLAG_LEC)<sp/>||<sp/>((FLAG)<sp/>==<sp/>CAN_FLAG_RQCP2)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="547"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((FLAG)<sp/>==<sp/>CAN_FLAG_RQCP1)<sp/><sp/>||<sp/>((FLAG)<sp/>==<sp/>CAN_FLAG_RQCP0)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="548"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((FLAG)<sp/>==<sp/>CAN_FLAG_FF0)<sp/><sp/>||<sp/>((FLAG)<sp/>==<sp/>CAN_FLAG_FOV0)<sp/>||\</highlight></codeline>
<codeline lineno="549"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((FLAG)<sp/>==<sp/>CAN_FLAG_FF1)<sp/>||<sp/>((FLAG)<sp/>==<sp/>CAN_FLAG_FOV1)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="550"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((FLAG)<sp/>==<sp/>CAN_FLAG_WKU)<sp/>||<sp/>((FLAG)<sp/>==<sp/>CAN_FLAG_SLAK))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight></codeline>
<codeline lineno="562" refid="group___c_a_n__interrupts_1ga619e36230fa2eb089a7c1936b5004eb9" refkind="member"><highlight class="preprocessor">#define<sp/>CAN_IT_TME<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000001)<sp/></highlight></codeline>
<codeline lineno="564"><highlight class="preprocessor"></highlight><highlight class="comment">/*<sp/>Receive<sp/>Interrupts<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="565" refid="group___c_a_n__interrupts_1ga3fe6fbf53e9d692957e87ad329bcd362" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAN_IT_FMP0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000002)<sp/></highlight></codeline>
<codeline lineno="566" refid="group___c_a_n__interrupts_1gabf63043d9216de80ddc7ffe57b23ef67" refkind="member"><highlight class="preprocessor">#define<sp/>CAN_IT_FF0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000004)<sp/></highlight></codeline>
<codeline lineno="567" refid="group___c_a_n__interrupts_1ga066a4317f95669e5b5931c9a759cf248" refkind="member"><highlight class="preprocessor">#define<sp/>CAN_IT_FOV0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000008)<sp/></highlight></codeline>
<codeline lineno="568" refid="group___c_a_n__interrupts_1gaa0e101053fb203629e0e9a954213e71e" refkind="member"><highlight class="preprocessor">#define<sp/>CAN_IT_FMP1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000010)<sp/></highlight></codeline>
<codeline lineno="569" refid="group___c_a_n__interrupts_1ga93b86d884ce0624b4b36c991fd75fc1c" refkind="member"><highlight class="preprocessor">#define<sp/>CAN_IT_FF1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000020)<sp/></highlight></codeline>
<codeline lineno="570" refid="group___c_a_n__interrupts_1ga963301fdbede5f9a9665dc5b6210eaec" refkind="member"><highlight class="preprocessor">#define<sp/>CAN_IT_FOV1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000040)<sp/></highlight></codeline>
<codeline lineno="572"><highlight class="preprocessor"></highlight><highlight class="comment">/*<sp/>Operating<sp/>Mode<sp/>Interrupts<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="573" refid="group___c_a_n__interrupts_1gac9c8767770d94de753dda9ad31f9af15" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAN_IT_WKU<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00010000)<sp/></highlight></codeline>
<codeline lineno="574" refid="group___c_a_n__interrupts_1ga639d4ab2777d9a2f8b7e67071b091059" refkind="member"><highlight class="preprocessor">#define<sp/>CAN_IT_SLK<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00020000)<sp/></highlight></codeline>
<codeline lineno="576"><highlight class="preprocessor"></highlight><highlight class="comment">/*<sp/>Error<sp/>Interrupts<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="577" refid="group___c_a_n__interrupts_1ga8a9f04ddf6ebe169d32b951a8ea135b3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAN_IT_EWG<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000100)<sp/></highlight></codeline>
<codeline lineno="578" refid="group___c_a_n__interrupts_1ga006b7b641d337a599ceac64b483e75dd" refkind="member"><highlight class="preprocessor">#define<sp/>CAN_IT_EPV<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000200)<sp/></highlight></codeline>
<codeline lineno="579" refid="group___c_a_n__interrupts_1gad63c39e6237aa07681a1f8ce2ff9e167" refkind="member"><highlight class="preprocessor">#define<sp/>CAN_IT_BOF<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000400)<sp/></highlight></codeline>
<codeline lineno="580" refid="group___c_a_n__interrupts_1gad670b6f001bf67f24e17d91ada50a61c" refkind="member"><highlight class="preprocessor">#define<sp/>CAN_IT_LEC<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000800)<sp/></highlight></codeline>
<codeline lineno="581" refid="group___c_a_n__interrupts_1ga65f1781c9165a2e9b5f77f1ed3990741" refkind="member"><highlight class="preprocessor">#define<sp/>CAN_IT_ERR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00008000)<sp/></highlight></codeline>
<codeline lineno="583"><highlight class="preprocessor"></highlight><highlight class="comment">/*<sp/>Flags<sp/>named<sp/>as<sp/>Interrupts<sp/>:<sp/>kept<sp/>only<sp/>for<sp/>FW<sp/>compatibility<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="584" refid="group___c_a_n__interrupts_1ga0c57058d6d14b2baa24a4895975b1371" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAN_IT_RQCP0<sp/><sp/><sp/>CAN_IT_TME</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="585" refid="group___c_a_n__interrupts_1ga42e5c8e89e0f06f3250916fcfb21dc22" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAN_IT_RQCP1<sp/><sp/><sp/>CAN_IT_TME</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="586" refid="group___c_a_n__interrupts_1gacc634c3e29cdc9622081021dcda3127b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAN_IT_RQCP2<sp/><sp/><sp/>CAN_IT_TME</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight></codeline>
<codeline lineno="589" refid="group___c_a_n__interrupts_1gac0a9467bb0028c5fcd15a8a0ec6aaecb" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_CAN_IT(IT)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((IT)<sp/>==<sp/>CAN_IT_TME)<sp/>||<sp/>((IT)<sp/>==<sp/>CAN_IT_FMP0)<sp/><sp/>||\</highlight></codeline>
<codeline lineno="590"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((IT)<sp/>==<sp/>CAN_IT_FF0)<sp/><sp/>||<sp/>((IT)<sp/>==<sp/>CAN_IT_FOV0)<sp/><sp/>||\</highlight></codeline>
<codeline lineno="591"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((IT)<sp/>==<sp/>CAN_IT_FMP1)<sp/>||<sp/>((IT)<sp/>==<sp/>CAN_IT_FF1)<sp/><sp/><sp/>||\</highlight></codeline>
<codeline lineno="592"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((IT)<sp/>==<sp/>CAN_IT_FOV1)<sp/>||<sp/>((IT)<sp/>==<sp/>CAN_IT_EWG)<sp/><sp/><sp/>||\</highlight></codeline>
<codeline lineno="593"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((IT)<sp/>==<sp/>CAN_IT_EPV)<sp/><sp/>||<sp/>((IT)<sp/>==<sp/>CAN_IT_BOF)<sp/><sp/><sp/>||\</highlight></codeline>
<codeline lineno="594"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((IT)<sp/>==<sp/>CAN_IT_LEC)<sp/><sp/>||<sp/>((IT)<sp/>==<sp/>CAN_IT_ERR)<sp/><sp/><sp/>||\</highlight></codeline>
<codeline lineno="595"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((IT)<sp/>==<sp/>CAN_IT_WKU)<sp/><sp/>||<sp/>((IT)<sp/>==<sp/>CAN_IT_SLK))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight></codeline>
<codeline lineno="597" refid="group___c_a_n__interrupts_1ga8b6e5fd6ddfe0141925f1e22cfbe7b85" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_CAN_CLEAR_IT(IT)<sp/>(((IT)<sp/>==<sp/>CAN_IT_TME)<sp/>||<sp/>((IT)<sp/>==<sp/>CAN_IT_FF0)<sp/><sp/><sp/><sp/>||\</highlight></codeline>
<codeline lineno="598"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((IT)<sp/>==<sp/>CAN_IT_FOV0)||<sp/>((IT)<sp/>==<sp/>CAN_IT_FF1)<sp/><sp/><sp/><sp/>||\</highlight></codeline>
<codeline lineno="599"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((IT)<sp/>==<sp/>CAN_IT_FOV1)||<sp/>((IT)<sp/>==<sp/>CAN_IT_EWG)<sp/><sp/><sp/><sp/>||\</highlight></codeline>
<codeline lineno="600"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((IT)<sp/>==<sp/>CAN_IT_EPV)<sp/>||<sp/>((IT)<sp/>==<sp/>CAN_IT_BOF)<sp/><sp/><sp/><sp/>||\</highlight></codeline>
<codeline lineno="601"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((IT)<sp/>==<sp/>CAN_IT_LEC)<sp/>||<sp/>((IT)<sp/>==<sp/>CAN_IT_ERR)<sp/><sp/><sp/><sp/>||\</highlight></codeline>
<codeline lineno="602"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((IT)<sp/>==<sp/>CAN_IT_WKU)<sp/>||<sp/>((IT)<sp/>==<sp/>CAN_IT_SLK))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight></codeline>
<codeline lineno="611" refid="group___c_a_n___legacy_1ga0539a9e5a898fcd71c4dcb7e341e4b86" refkind="member"><highlight class="preprocessor">#define<sp/>CANINITFAILED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CAN_InitStatus_Failed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="612" refid="group___c_a_n___legacy_1ga14cba0b5b506be73e2f45c732f8e54cb" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CANINITOK<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CAN_InitStatus_Success</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="613" refid="group___c_a_n___legacy_1ga1b3d041dff9fed4dad75ed2a4a0e27e0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAN_FilterFIFO0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CAN_Filter_FIFO0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="614" refid="group___c_a_n___legacy_1gada8f9b3a9c88f36539aaeb457039e666" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAN_FilterFIFO1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CAN_Filter_FIFO1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="615" refid="group___c_a_n___legacy_1ga284ca16658deb9d0c21f4ddc6db14833" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAN_ID_STD<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CAN_Id_Standard<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="616" refid="group___c_a_n___legacy_1ga5f6fdd1dc3d312af1ac30e2eee15d6f0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAN_ID_EXT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CAN_Id_Extended</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="617" refid="group___c_a_n___legacy_1gab1e89074b4fcfebf81c323909625b0d0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAN_RTR_DATA<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CAN_RTR_Data<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="618" refid="group___c_a_n___legacy_1gab15c649e3e497c6d1145bb98ff7f3f04" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAN_RTR_REMOTE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CAN_RTR_Remote</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="619" refid="group___c_a_n___legacy_1gae315f7ee14af20ca8454be9e507873cd" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CANTXFAILE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CAN_TxStatus_Failed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="620" refid="group___c_a_n___legacy_1ga288ba42cf1de7572f2fe1378268c9452" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CANTXOK<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CAN_TxStatus_Ok</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="621" refid="group___c_a_n___legacy_1ga76f43f4c54505b1f87b39b056ca38897" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CANTXPENDING<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CAN_TxStatus_Pending</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="622" refid="group___c_a_n___legacy_1ga418f1fd7ca2e852b263fd07874fde0c6" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAN_NO_MB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CAN_TxStatus_NoMailBox</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="623" refid="group___c_a_n___legacy_1ga4d5e8e0c57febb024b30e5f24866a117" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CANSLEEPFAILED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CAN_Sleep_Failed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="624" refid="group___c_a_n___legacy_1ga2f8d34f8f60a6c84d8e436d4d37708ab" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CANSLEEPOK<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CAN_Sleep_Ok</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="625" refid="group___c_a_n___legacy_1ga0de3b0e2c544d9fa772b646e331e51b1" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CANWAKEUPFAILED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CAN_WakeUp_Failed<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="626" refid="group___c_a_n___legacy_1gafed6ab4dbb00c9d63f6a7cdf323f33ef" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CANWAKEUPOK<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CAN_WakeUp_Ok<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="comment">/*<sp/><sp/>Function<sp/>used<sp/>to<sp/>set<sp/>the<sp/>CAN<sp/>configuration<sp/>to<sp/>the<sp/>default<sp/>reset<sp/>state<sp/>*****/</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___c_a_n___exported___functions_1ga002b74cd69574a14b17ad445090245cd" kindref="member">CAN_DeInit</ref>(<ref refid="struct_c_a_n___type_def" kindref="compound">CAN_TypeDef</ref>*<sp/>CANx);</highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Initialization<sp/>and<sp/>Configuration<sp/>functions<sp/>*********************************/</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="651"><highlight class="normal">uint8_t<sp/><ref refid="group___c_a_n___exported___functions_1ga9023c35a9ab931ad4513fc5d19b4bd6c" kindref="member">CAN_Init</ref>(<ref refid="struct_c_a_n___type_def" kindref="compound">CAN_TypeDef</ref>*<sp/>CANx,<sp/><ref refid="struct_c_a_n___init_type_def" kindref="compound">CAN_InitTypeDef</ref>*<sp/>CAN_InitStruct);</highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___c_a_n___exported___functions_1ga39476830280340363c51041be6b12647" kindref="member">CAN_FilterInit</ref>(<ref refid="struct_c_a_n___filter_init_type_def" kindref="compound">CAN_FilterInitTypeDef</ref>*<sp/>CAN_FilterInitStruct);</highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___c_a_n___exported___functions_1gad77ad810868ed111755fc9e8ae0c7646" kindref="member">CAN_StructInit</ref>(<ref refid="struct_c_a_n___init_type_def" kindref="compound">CAN_InitTypeDef</ref>*<sp/>CAN_InitStruct);</highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___c_a_n___exported___functions_1ga109ff8960bc59f44b984c9646f17b3c0" kindref="member">CAN_SlaveStartBank</ref>(uint8_t<sp/>CAN_BankNumber);<sp/></highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___c_a_n___exported___functions_1gac0e2d33e08caf49d1f1251f0dcc20213" kindref="member">CAN_DBGFreeze</ref>(<ref refid="struct_c_a_n___type_def" kindref="compound">CAN_TypeDef</ref>*<sp/>CANx,<sp/><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref><sp/>NewState);</highlight></codeline>
<codeline lineno="656"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___c_a_n___exported___functions_1ga94740177bab153ca5b102d122f9a8cca" kindref="member">CAN_TTComModeCmd</ref>(<ref refid="struct_c_a_n___type_def" kindref="compound">CAN_TypeDef</ref>*<sp/>CANx,<sp/><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref><sp/>NewState);</highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Transmit<sp/>functions<sp/>*********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal">uint8_t<sp/><ref refid="group___c_a_n___exported___functions_1gaccfcb81f76f58400077c7b2d8641dd83" kindref="member">CAN_Transmit</ref>(<ref refid="struct_c_a_n___type_def" kindref="compound">CAN_TypeDef</ref>*<sp/>CANx,<sp/><ref refid="struct_can_tx_msg" kindref="compound">CanTxMsg</ref>*<sp/>TxMessage);</highlight></codeline>
<codeline lineno="660"><highlight class="normal">uint8_t<sp/><ref refid="group___c_a_n___exported___functions_1ga68ab05a0a6cdfcc2b6f6b6b2c10848e2" kindref="member">CAN_TransmitStatus</ref>(<ref refid="struct_c_a_n___type_def" kindref="compound">CAN_TypeDef</ref>*<sp/>CANx,<sp/>uint8_t<sp/>TransmitMailbox);</highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___c_a_n___exported___functions_1ga81106cdf5395a1947bfc87ec1685829e" kindref="member">CAN_CancelTransmit</ref>(<ref refid="struct_c_a_n___type_def" kindref="compound">CAN_TypeDef</ref>*<sp/>CANx,<sp/>uint8_t<sp/>Mailbox);</highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Receive<sp/>functions<sp/>**********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___c_a_n___exported___functions_1ga351b90bb8a3bb0c846f85bbd56ef4dc8" kindref="member">CAN_Receive</ref>(<ref refid="struct_c_a_n___type_def" kindref="compound">CAN_TypeDef</ref>*<sp/>CANx,<sp/>uint8_t<sp/>FIFONumber,<sp/><ref refid="struct_can_rx_msg" kindref="compound">CanRxMsg</ref>*<sp/>RxMessage);</highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___c_a_n___exported___functions_1ga1bc3b39471e579b4101624c33d27918b" kindref="member">CAN_FIFORelease</ref>(<ref refid="struct_c_a_n___type_def" kindref="compound">CAN_TypeDef</ref>*<sp/>CANx,<sp/>uint8_t<sp/>FIFONumber);</highlight></codeline>
<codeline lineno="666"><highlight class="normal">uint8_t<sp/><ref refid="group___c_a_n___exported___functions_1ga7100459a95ce1b3cfe8ab15e112029fe" kindref="member">CAN_MessagePending</ref>(<ref refid="struct_c_a_n___type_def" kindref="compound">CAN_TypeDef</ref>*<sp/>CANx,<sp/>uint8_t<sp/>FIFONumber);</highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Operation<sp/>modes<sp/>functions<sp/>**************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal">uint8_t<sp/><ref refid="group___c_a_n___exported___functions_1gab2a3630e9e3024114eb117d14e514208" kindref="member">CAN_OperatingModeRequest</ref>(<ref refid="struct_c_a_n___type_def" kindref="compound">CAN_TypeDef</ref>*<sp/>CANx,<sp/>uint8_t<sp/>CAN_OperatingMode);</highlight></codeline>
<codeline lineno="671"><highlight class="normal">uint8_t<sp/><ref refid="group___c_a_n___exported___functions_1ga640215e38765759d7eceb8a039046667" kindref="member">CAN_Sleep</ref>(<ref refid="struct_c_a_n___type_def" kindref="compound">CAN_TypeDef</ref>*<sp/>CANx);</highlight></codeline>
<codeline lineno="672"><highlight class="normal">uint8_t<sp/><ref refid="group___c_a_n___exported___functions_1ga78cdfbf1884b9e33c552bcbca15bed10" kindref="member">CAN_WakeUp</ref>(<ref refid="struct_c_a_n___type_def" kindref="compound">CAN_TypeDef</ref>*<sp/>CANx);</highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Error<sp/>management<sp/>functions<sp/>*************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal">uint8_t<sp/><ref refid="group___c_a_n___exported___functions_1gaaee721a392b6b21bfd15dc160aeb6924" kindref="member">CAN_GetLastErrorCode</ref>(<ref refid="struct_c_a_n___type_def" kindref="compound">CAN_TypeDef</ref>*<sp/>CANx);</highlight></codeline>
<codeline lineno="676"><highlight class="normal">uint8_t<sp/><ref refid="group___c_a_n___exported___functions_1ga6903eecbec40eb1361d915ddde9a3274" kindref="member">CAN_GetReceiveErrorCounter</ref>(<ref refid="struct_c_a_n___type_def" kindref="compound">CAN_TypeDef</ref>*<sp/>CANx);</highlight></codeline>
<codeline lineno="677"><highlight class="normal">uint8_t<sp/><ref refid="group___c_a_n___exported___functions_1ga85ee0c35bf7ca15d4e4c862eef534843" kindref="member">CAN_GetLSBTransmitErrorCounter</ref>(<ref refid="struct_c_a_n___type_def" kindref="compound">CAN_TypeDef</ref>*<sp/>CANx);</highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Interrupts<sp/>and<sp/>flags<sp/>management<sp/>functions<sp/>**********************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___c_a_n___exported___functions_1gad1a8b2499a780b5bfa4accb3597b02f4" kindref="member">CAN_ITConfig</ref>(<ref refid="struct_c_a_n___type_def" kindref="compound">CAN_TypeDef</ref>*<sp/>CANx,<sp/>uint32_t<sp/>CAN_IT,<sp/><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref><sp/>NewState);</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><ref refid="group___exported__types_1ga89136caac2e14c55151f527ac02daaff" kindref="member">FlagStatus</ref><sp/><ref refid="group___c_a_n___exported___functions_1ga2faad96caf823ef463cc5b5b25c480bb" kindref="member">CAN_GetFlagStatus</ref>(<ref refid="struct_c_a_n___type_def" kindref="compound">CAN_TypeDef</ref>*<sp/>CANx,<sp/>uint32_t<sp/>CAN_FLAG);</highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___c_a_n___exported___functions_1ga2c01646d5d3a2d7045e8dd71f58f8742" kindref="member">CAN_ClearFlag</ref>(<ref refid="struct_c_a_n___type_def" kindref="compound">CAN_TypeDef</ref>*<sp/>CANx,<sp/>uint32_t<sp/>CAN_FLAG);</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><ref refid="group___exported__types_1gaacbd7ed539db0aacd973a0f6eca34074" kindref="member">ITStatus</ref><sp/><ref refid="group___c_a_n___exported___functions_1ga9aca05b3013e1b3438f3559f80b33c82" kindref="member">CAN_GetITStatus</ref>(<ref refid="struct_c_a_n___type_def" kindref="compound">CAN_TypeDef</ref>*<sp/>CANx,<sp/>uint32_t<sp/>CAN_IT);</highlight></codeline>
<codeline lineno="684"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___c_a_n___exported___functions_1ga30bf7ac0c1793f6622a4a1adbb7dbc8a" kindref="member">CAN_ClearITPendingBit</ref>(<ref refid="struct_c_a_n___type_def" kindref="compound">CAN_TypeDef</ref>*<sp/>CANx,<sp/>uint32_t<sp/>CAN_IT);</highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal">}</highlight></codeline>
<codeline lineno="688"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight><highlight class="comment">//<sp/>[ILG]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>(<sp/>__GNUC__<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>GCC<sp/>diagnostic<sp/>pop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>__STM32F10x_CAN_H<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="comment">/*******************<sp/>(C)<sp/>COPYRIGHT<sp/>2011<sp/>STMicroelectronics<sp/>*****END<sp/>OF<sp/>FILE****/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_can.h"/>
  </compounddef>
</doxygen>
