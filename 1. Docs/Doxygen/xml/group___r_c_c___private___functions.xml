<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="group___r_c_c___private___functions" kind="group">
    <compoundname>RCC_Private_Functions</compoundname>
    <title>RCC_Private_Functions</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group___r_c_c___private___functions_1ga413f6422be11b1334abe60b3bff2e062" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RCC_DeInit</definition>
        <argsstring>(void)</argsstring>
        <name>RCC_DeInit</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Resets the RCC clock configuration to the default reset state. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" line="217" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" bodystart="217" bodyend="258"/>
        <references refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" compoundref="stm32f10x_8h" startline="1443">RCC</references>
      </memberdef>
      <memberdef kind="function" id="group___r_c_c___private___functions_1ga432b3281546d23345642d55f8670a93d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RCC_HSEConfig</definition>
        <argsstring>(uint32_t RCC_HSE)</argsstring>
        <name>RCC_HSEConfig</name>
        <param>
          <type>uint32_t</type>
          <declname>RCC_HSE</declname>
        </param>
        <briefdescription>
<para>Configures the External High Speed oscillator (HSE). </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>HSE can not be stopped if it is used directly or through the PLL as system clock. </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>RCC_HSE</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the new state of the HSE. This parameter can be one of the following values: <itemizedlist>
<listitem><para>RCC_HSE_OFF: HSE oscillator OFF </para></listitem>
<listitem><para>RCC_HSE_ON: HSE oscillator ON </para></listitem>
<listitem><para>RCC_HSE_Bypass: HSE oscillator bypassed with external clock </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" line="270" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" bodystart="270" bodyend="295"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___h_s_e__configuration_1ga287bbcafd73d07ec915c2f793301908a" compoundref="stm32f10x__rcc_8h" startline="70">IS_RCC_HSE</references>
        <references refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" compoundref="stm32f10x_8h" startline="1443">RCC</references>
        <references refid="group___r_c_c___private___defines_1ga8185e6ea6e9abafcdee0e5f58e62805e" compoundref="stm32f10x__rcc_8c" startline="123">CR_HSEON_Reset</references>
        <references refid="group___r_c_c___private___defines_1ga98f5ef520febdb0a1cd8f407f8e5e62f" compoundref="stm32f10x__rcc_8c" startline="121">CR_HSEBYP_Reset</references>
        <references refid="group___h_s_e__configuration_1gabc4f70a44776c557af20496b04d9a9db" compoundref="stm32f10x__rcc_8h" startline="68">RCC_HSE_ON</references>
        <references refid="group___r_c_c___private___defines_1gaca6ef9e2f11b921355809a5eccfec864" compoundref="stm32f10x__rcc_8c" startline="124">CR_HSEON_Set</references>
        <references refid="group___h_s_e__configuration_1ga09061e9909d5f588baa7bfb0f7edd9fa" compoundref="stm32f10x__rcc_8h" startline="69">RCC_HSE_Bypass</references>
        <references refid="group___r_c_c___private___defines_1ga84972845ff646ce1d3902d54dd7b9bc6" compoundref="stm32f10x__rcc_8c" startline="122">CR_HSEBYP_Set</references>
      </memberdef>
      <memberdef kind="function" id="group___r_c_c___private___functions_1gae0f15692614dd048ee4110a056f001dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___exported__types_1ga8333b96c67f83cba354b3407fcbb6ee8" kindref="member">ErrorStatus</ref></type>
        <definition>ErrorStatus RCC_WaitForHSEStartUp</definition>
        <argsstring>(void)</argsstring>
        <name>RCC_WaitForHSEStartUp</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Waits for HSE start-up. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>An</parametername>
</parameternamelist>
<parameterdescription>
<para>ErrorStatus enumuration value:<itemizedlist>
<listitem><para>SUCCESS: HSE oscillator is stable and ready to use</para></listitem><listitem><para>ERROR: HSE oscillator not yet ready </para></listitem></itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" line="304" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" bodystart="304" bodyend="326"/>
        <references refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" compoundref="core__cm0_8h" startline="221">__IO</references>
        <references refid="group___exported__types_1gga8333b96c67f83cba354b3407fcbb6ee8a2fd6f336d08340583bd620a7f5694c90" compoundref="stm32f10x_8h" startline="524">ERROR</references>
        <references refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffa589b7d94a3d91d145720e2fed0eb3a05" compoundref="stm32f10x_8h" startline="519">RESET</references>
        <references refid="group___r_c_c___private___functions_1ga2897bdc52f272031c44fb1f72205d295" compoundref="stm32f10x__rcc_8c" startline="1326" endline="1362">RCC_GetFlagStatus</references>
        <references refid="group___r_c_c___flag_1ga173edf47bec93cf269a0e8d0fec9997c" compoundref="stm32f10x__rcc_8h" startline="596">RCC_FLAG_HSERDY</references>
        <references refid="group___library__configuration__section_1ga68ecbc9b0a1a40a1ec9d18d5e9747c4f" compoundref="stm32f10x_8h" startline="128">HSE_STARTUP_TIMEOUT</references>
        <references refid="group___exported__types_1gga8333b96c67f83cba354b3407fcbb6ee8ac7f69f7c9e5aea9b8f54cf02870e2bf8" compoundref="stm32f10x_8h" startline="524">SUCCESS</references>
      </memberdef>
      <memberdef kind="function" id="group___r_c_c___private___functions_1gaa2d6a35f5c2e0f86317c3beb222677fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RCC_AdjustHSICalibrationValue</definition>
        <argsstring>(uint8_t HSICalibrationValue)</argsstring>
        <name>RCC_AdjustHSICalibrationValue</name>
        <param>
          <type>uint8_t</type>
          <declname>HSICalibrationValue</declname>
        </param>
        <briefdescription>
<para>Adjusts the Internal High Speed oscillator (HSI) calibration value. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>HSICalibrationValue</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the calibration trimming value. This parameter must be a number between 0 and 0x1F. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" line="334" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" bodystart="334" bodyend="346"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___r_c_c___flag_1gafda50a08dc048f7c272bf04ec9c2c2b7" compoundref="stm32f10x__rcc_8h" startline="626">IS_RCC_CALIBRATION_VALUE</references>
        <references refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" compoundref="stm32f10x_8h" startline="1443">RCC</references>
        <references refid="group___r_c_c___private___defines_1gac6a6adccdfb5a34541e2cdf01daf98ce" compoundref="stm32f10x__rcc_8c" startline="125">CR_HSITRIM_Mask</references>
      </memberdef>
      <memberdef kind="function" id="group___r_c_c___private___functions_1ga0c6772a1e43765909495f57815ef69e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RCC_HSICmd</definition>
        <argsstring>(FunctionalState NewState)</argsstring>
        <name>RCC_HSICmd</name>
        <param>
          <type><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref></type>
          <declname>NewState</declname>
        </param>
        <briefdescription>
<para>Enables or disables the Internal High Speed oscillator (HSI). </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>HSI can not be stopped if it is used directly or through the PLL as system clock. </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>NewState</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of the HSI. This parameter can be: ENABLE or DISABLE. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" line="354" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" bodystart="354" bodyend="359"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" compoundref="stm32f10x_8h" startline="522">IS_FUNCTIONAL_STATE</references>
        <references refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" compoundref="core__cm0_8h" startline="221">__IO</references>
        <references refid="group___r_c_c___private___defines_1gac3290a833c0e35ec17d32c2d494e6133" compoundref="stm32f10x__rcc_8c" startline="54">CR_HSION_BB</references>
      </memberdef>
      <memberdef kind="function" id="group___r_c_c___private___functions_1ga0f67634cbe721f2c42f022d2a93229c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RCC_PLLConfig</definition>
        <argsstring>(uint32_t RCC_PLLSource, uint32_t RCC_PLLMul)</argsstring>
        <name>RCC_PLLConfig</name>
        <param>
          <type>uint32_t</type>
          <declname>RCC_PLLSource</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>RCC_PLLMul</declname>
        </param>
        <briefdescription>
<para>Configures the PLL clock source and multiplication factor. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This function must be used only when the PLL is disabled. </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>RCC_PLLSource</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the PLL entry clock source. For <bold>STM32_Connectivity_line_devices</bold> or <bold>STM32_Value_line_devices</bold>, this parameter can be one of the following values: <itemizedlist>
<listitem><para>RCC_PLLSource_HSI_Div2: HSI oscillator clock divided by 2 selected as PLL clock entry </para></listitem>
<listitem><para>RCC_PLLSource_PREDIV1: PREDIV1 clock selected as PLL clock entry For <bold>other_STM32_devices</bold>, this parameter can be one of the following values: </para></listitem>
<listitem><para>RCC_PLLSource_HSI_Div2: HSI oscillator clock divided by 2 selected as PLL clock entry </para></listitem>
<listitem><para>RCC_PLLSource_HSE_Div1: HSE oscillator clock selected as PLL clock entry </para></listitem>
<listitem><para>RCC_PLLSource_HSE_Div2: HSE oscillator clock divided by 2 selected as PLL clock entry </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>RCC_PLLMul</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the PLL multiplication factor. For <bold>STM32_Connectivity_line_devices</bold>, this parameter can be RCC_PLLMul_x where x:{[4,9], 6_5} For <bold>other_STM32_devices</bold>, this parameter can be RCC_PLLMul_x where x:[2,16] </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" line="378" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" bodystart="378" bodyend="393"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___p_l_l__entry__clock__source_1ga8a8a84a16989bb4e5aca1af65ccf9a1b" compoundref="stm32f10x__rcc_8h" startline="86">IS_RCC_PLL_SOURCE</references>
        <references refid="group___p_l_l__multiplication__factor_1gaad04edea77632618678f528dcb2b0cd5" compoundref="stm32f10x__rcc_8h" startline="118">IS_RCC_PLL_MUL</references>
        <references refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" compoundref="stm32f10x_8h" startline="1443">RCC</references>
        <references refid="group___r_c_c___private___defines_1gaea605b2eaea5332218130fc2d20d917c" compoundref="stm32f10x__rcc_8c" startline="131">CFGR_PLL_Mask</references>
      </memberdef>
      <memberdef kind="function" id="group___r_c_c___private___functions_1ga84dee53c75e58fdb53571716593c2272" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RCC_PLLCmd</definition>
        <argsstring>(FunctionalState NewState)</argsstring>
        <name>RCC_PLLCmd</name>
        <param>
          <type><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref></type>
          <declname>NewState</declname>
        </param>
        <briefdescription>
<para>Enables or disables the PLL. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>The PLL can not be disabled if it is used as system clock. </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>NewState</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of the PLL. This parameter can be: ENABLE or DISABLE. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" line="401" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" bodystart="401" bodyend="407"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" compoundref="stm32f10x_8h" startline="522">IS_FUNCTIONAL_STATE</references>
        <references refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" compoundref="core__cm0_8h" startline="221">__IO</references>
        <references refid="group___r_c_c___private___defines_1ga3f1fb2589cb8b5ac2f7121aba1135a5f" compoundref="stm32f10x__rcc_8c" startline="58">CR_PLLON_BB</references>
        <references refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" compoundref="stm32f10x_8h" startline="1443">RCC</references>
      </memberdef>
      <memberdef kind="function" id="group___r_c_c___private___functions_1ga3551a36a8f0a3dc96a74d6b939048337" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RCC_SYSCLKConfig</definition>
        <argsstring>(uint32_t RCC_SYSCLKSource)</argsstring>
        <name>RCC_SYSCLKConfig</name>
        <param>
          <type>uint32_t</type>
          <declname>RCC_SYSCLKSource</declname>
        </param>
        <briefdescription>
<para>Configures the system clock (SYSCLK). </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>RCC_SYSCLKSource</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the clock source used as system clock. This parameter can be one of the following values: <itemizedlist>
<listitem><para>RCC_SYSCLKSource_HSI: HSI selected as system clock </para></listitem>
<listitem><para>RCC_SYSCLKSource_HSE: HSE selected as system clock </para></listitem>
<listitem><para>RCC_SYSCLKSource_PLLCLK: PLL selected as system clock </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" line="564" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" bodystart="564" bodyend="576"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___system__clock__source_1gaae9d6172a72b0a90cb3703aa59258c57" compoundref="stm32f10x__rcc_8h" startline="292">IS_RCC_SYSCLK_SOURCE</references>
        <references refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" compoundref="stm32f10x_8h" startline="1443">RCC</references>
        <references refid="group___r_c_c___private___defines_1ga41e0b286664f76c2057cffb134809c51" compoundref="stm32f10x__rcc_8c" startline="138">CFGR_SW_Mask</references>
      </memberdef>
      <memberdef kind="function" id="group___r_c_c___private___functions_1gaaeb32311c208b2a980841c9c884a41ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t RCC_GetSYSCLKSource</definition>
        <argsstring>(void)</argsstring>
        <name>RCC_GetSYSCLKSource</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Returns the clock source used as system clock. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>clock source used as system clock. The returned value can be one of the following:<itemizedlist>
<listitem><para>0x00: HSI used as system clock</para></listitem><listitem><para>0x04: HSE used as system clock</para></listitem><listitem><para>0x08: PLL used as system clock </para></listitem></itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" line="587" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" bodystart="587" bodyend="590"/>
        <references refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" compoundref="stm32f10x_8h" startline="1443">RCC</references>
        <references refid="group___r_c_c___private___defines_1gaefba904c88a72c7e2c12e8fcef38300a" compoundref="stm32f10x__rcc_8c" startline="137">CFGR_SWS_Mask</references>
      </memberdef>
      <memberdef kind="function" id="group___r_c_c___private___functions_1ga9d0aec72e236c6cdf3a3a82dfb525491" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RCC_HCLKConfig</definition>
        <argsstring>(uint32_t RCC_SYSCLK)</argsstring>
        <name>RCC_HCLKConfig</name>
        <param>
          <type>uint32_t</type>
          <declname>RCC_SYSCLK</declname>
        </param>
        <briefdescription>
<para>Configures the AHB clock (HCLK). </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>RCC_SYSCLK</parametername>
</parameternamelist>
<parameterdescription>
<para>defines the AHB clock divider. This clock is derived from the system clock (SYSCLK). This parameter can be one of the following values: <itemizedlist>
<listitem><para>RCC_SYSCLK_Div1: AHB clock = SYSCLK </para></listitem>
<listitem><para>RCC_SYSCLK_Div2: AHB clock = SYSCLK/2 </para></listitem>
<listitem><para>RCC_SYSCLK_Div4: AHB clock = SYSCLK/4 </para></listitem>
<listitem><para>RCC_SYSCLK_Div8: AHB clock = SYSCLK/8 </para></listitem>
<listitem><para>RCC_SYSCLK_Div16: AHB clock = SYSCLK/16 </para></listitem>
<listitem><para>RCC_SYSCLK_Div64: AHB clock = SYSCLK/64 </para></listitem>
<listitem><para>RCC_SYSCLK_Div128: AHB clock = SYSCLK/128 </para></listitem>
<listitem><para>RCC_SYSCLK_Div256: AHB clock = SYSCLK/256 </para></listitem>
<listitem><para>RCC_SYSCLK_Div512: AHB clock = SYSCLK/512 </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" line="608" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" bodystart="608" bodyend="620"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___a_h_b__clock__source_1ga6e9f1c193a2f41bcb3c2f7fa8459b5b3" compoundref="stm32f10x__rcc_8h" startline="312">IS_RCC_HCLK</references>
        <references refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" compoundref="stm32f10x_8h" startline="1443">RCC</references>
        <references refid="group___r_c_c___private___defines_1ga55937d93be56562243d92c507145112c" compoundref="stm32f10x__rcc_8c" startline="139">CFGR_HPRE_Reset_Mask</references>
      </memberdef>
      <memberdef kind="function" id="group___r_c_c___private___functions_1ga448137346d4292985d4e7a61dd1a824f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RCC_PCLK1Config</definition>
        <argsstring>(uint32_t RCC_HCLK)</argsstring>
        <name>RCC_PCLK1Config</name>
        <param>
          <type>uint32_t</type>
          <declname>RCC_HCLK</declname>
        </param>
        <briefdescription>
<para>Configures the Low Speed APB clock (PCLK1). </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>RCC_HCLK</parametername>
</parameternamelist>
<parameterdescription>
<para>defines the APB1 clock divider. This clock is derived from the AHB clock (HCLK). This parameter can be one of the following values: <itemizedlist>
<listitem><para>RCC_HCLK_Div1: APB1 clock = HCLK </para></listitem>
<listitem><para>RCC_HCLK_Div2: APB1 clock = HCLK/2 </para></listitem>
<listitem><para>RCC_HCLK_Div4: APB1 clock = HCLK/4 </para></listitem>
<listitem><para>RCC_HCLK_Div8: APB1 clock = HCLK/8 </para></listitem>
<listitem><para>RCC_HCLK_Div16: APB1 clock = HCLK/16 </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" line="634" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" bodystart="634" bodyend="646"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___a_p_b1___a_p_b2__clock__source_1gab70f1257ea47c1da4def8e351af4d9f2" compoundref="stm32f10x__rcc_8h" startline="330">IS_RCC_PCLK</references>
        <references refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" compoundref="stm32f10x_8h" startline="1443">RCC</references>
        <references refid="group___r_c_c___private___defines_1gab02d8032f451eb5a1d139007ff57f22e" compoundref="stm32f10x__rcc_8c" startline="141">CFGR_PPRE1_Reset_Mask</references>
      </memberdef>
      <memberdef kind="function" id="group___r_c_c___private___functions_1ga09f9c010a4adca9e036da42c2ca6126a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RCC_PCLK2Config</definition>
        <argsstring>(uint32_t RCC_HCLK)</argsstring>
        <name>RCC_PCLK2Config</name>
        <param>
          <type>uint32_t</type>
          <declname>RCC_HCLK</declname>
        </param>
        <briefdescription>
<para>Configures the High Speed APB clock (PCLK2). </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>RCC_HCLK</parametername>
</parameternamelist>
<parameterdescription>
<para>defines the APB2 clock divider. This clock is derived from the AHB clock (HCLK). This parameter can be one of the following values: <itemizedlist>
<listitem><para>RCC_HCLK_Div1: APB2 clock = HCLK </para></listitem>
<listitem><para>RCC_HCLK_Div2: APB2 clock = HCLK/2 </para></listitem>
<listitem><para>RCC_HCLK_Div4: APB2 clock = HCLK/4 </para></listitem>
<listitem><para>RCC_HCLK_Div8: APB2 clock = HCLK/8 </para></listitem>
<listitem><para>RCC_HCLK_Div16: APB2 clock = HCLK/16 </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" line="660" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" bodystart="660" bodyend="672"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___a_p_b1___a_p_b2__clock__source_1gab70f1257ea47c1da4def8e351af4d9f2" compoundref="stm32f10x__rcc_8h" startline="330">IS_RCC_PCLK</references>
        <references refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" compoundref="stm32f10x_8h" startline="1443">RCC</references>
        <references refid="group___r_c_c___private___defines_1gab2ee73d52f48cb201e493e381928d1ae" compoundref="stm32f10x__rcc_8c" startline="143">CFGR_PPRE2_Reset_Mask</references>
      </memberdef>
      <memberdef kind="function" id="group___r_c_c___private___functions_1gaa953aa226e9ce45300d535941e4dfe2f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RCC_ITConfig</definition>
        <argsstring>(uint8_t RCC_IT, FunctionalState NewState)</argsstring>
        <name>RCC_ITConfig</name>
        <param>
          <type>uint8_t</type>
          <declname>RCC_IT</declname>
        </param>
        <param>
          <type><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref></type>
          <declname>NewState</declname>
        </param>
        <briefdescription>
<para>Enables or disables the specified RCC interrupts. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>RCC_IT</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the RCC interrupt sources to be enabled or disabled.</para></parameterdescription>
</parameteritem>
</parameterlist>
For <bold>STM32_Connectivity_line_devices</bold>, this parameter can be any combination of the following values <itemizedlist>
<listitem><para>RCC_IT_LSIRDY: LSI ready interrupt </para></listitem>
<listitem><para>RCC_IT_LSERDY: LSE ready interrupt </para></listitem>
<listitem><para>RCC_IT_HSIRDY: HSI ready interrupt </para></listitem>
<listitem><para>RCC_IT_HSERDY: HSE ready interrupt </para></listitem>
<listitem><para>RCC_IT_PLLRDY: PLL ready interrupt </para></listitem>
<listitem><para>RCC_IT_PLL2RDY: PLL2 ready interrupt </para></listitem>
<listitem><para>RCC_IT_PLL3RDY: PLL3 ready interrupt</para></listitem>
</itemizedlist>
For <bold>other_STM32_devices</bold>, this parameter can be any combination of the following values <itemizedlist>
<listitem><para>RCC_IT_LSIRDY: LSI ready interrupt </para></listitem>
<listitem><para>RCC_IT_LSERDY: LSE ready interrupt </para></listitem>
<listitem><para>RCC_IT_HSIRDY: HSI ready interrupt </para></listitem>
<listitem><para>RCC_IT_HSERDY: HSE ready interrupt </para></listitem>
<listitem><para>RCC_IT_PLLRDY: PLL ready interrupt</para></listitem>
</itemizedlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>NewState</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of the specified RCC interrupts. This parameter can be: ENABLE or DISABLE. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" line="700" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" bodystart="700" bodyend="715"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___r_c_c___interrupt__source_1ga710d72ccf88ddbec09b033c81a571a83" compoundref="stm32f10x__rcc_8h" startline="349">IS_RCC_IT</references>
        <references refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" compoundref="stm32f10x_8h" startline="522">IS_FUNCTIONAL_STATE</references>
        <references refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1ad3a9df141be0ccf10389b640f492b26d" compoundref="stm32f10x_8h" startline="521">DISABLE</references>
        <references refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" compoundref="core__cm0_8h" startline="221">__IO</references>
        <references refid="group___r_c_c___private___defines_1gaab58c3f3f81bf1ab9a14cf3fececd8c4" compoundref="stm32f10x__rcc_8c" startline="166">CIR_BYTE2_ADDRESS</references>
      </memberdef>
      <memberdef kind="function" id="group___r_c_c___private___functions_1ga895b3ff3d143c990f1cd0146aa260081" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RCC_USBCLKConfig</definition>
        <argsstring>(uint32_t RCC_USBCLKSource)</argsstring>
        <name>RCC_USBCLKConfig</name>
        <param>
          <type>uint32_t</type>
          <declname>RCC_USBCLKSource</declname>
        </param>
        <briefdescription>
<para>Configures the USB clock (USBCLK). </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>RCC_USBCLKSource</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the USB clock source. This clock is derived from the PLL output. This parameter can be one of the following values: <itemizedlist>
<listitem><para>RCC_USBCLKSource_PLLCLK_1Div5: PLL clock divided by 1,5 selected as USB clock source </para></listitem>
<listitem><para>RCC_USBCLKSource_PLLCLK_Div1: PLL clock selected as USB clock source </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" line="728" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" bodystart="728" bodyend="734"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___u_s_b___device__clock__source_1ga484f7834b5506d9879ed84660c894250" compoundref="stm32f10x__rcc_8h" startline="378">IS_RCC_USBCLK_SOURCE</references>
        <references refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" compoundref="core__cm0_8h" startline="221">__IO</references>
        <references refid="group___r_c_c___private___defines_1gabde4e60349b8412a79611c0aeb27c3a2" compoundref="stm32f10x__rcc_8c" startline="81">CFGR_USBPRE_BB</references>
      </memberdef>
      <memberdef kind="function" id="group___r_c_c___private___functions_1gadda89cdb838bf49e5fa10f3f774530a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RCC_ADCCLKConfig</definition>
        <argsstring>(uint32_t RCC_PCLK2)</argsstring>
        <name>RCC_ADCCLKConfig</name>
        <param>
          <type>uint32_t</type>
          <declname>RCC_PCLK2</declname>
        </param>
        <briefdescription>
<para>Configures the ADC clock (ADCCLK). </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>RCC_PCLK2</parametername>
</parameternamelist>
<parameterdescription>
<para>defines the ADC clock divider. This clock is derived from the APB2 clock (PCLK2). This parameter can be one of the following values: <itemizedlist>
<listitem><para>RCC_PCLK2_Div2: ADC clock = PCLK2/2 </para></listitem>
<listitem><para>RCC_PCLK2_Div4: ADC clock = PCLK2/4 </para></listitem>
<listitem><para>RCC_PCLK2_Div6: ADC clock = PCLK2/6 </para></listitem>
<listitem><para>RCC_PCLK2_Div8: ADC clock = PCLK2/8 </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" line="766" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" bodystart="766" bodyend="778"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___a_d_c__clock__source_1ga6a9c4fb239566f0f3d44c8cc266e528b" compoundref="stm32f10x__rcc_8h" startline="433">IS_RCC_ADCCLK</references>
        <references refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" compoundref="stm32f10x_8h" startline="1443">RCC</references>
        <references refid="group___r_c_c___private___defines_1ga12eb3f1b37b9101bf3810374bad68703" compoundref="stm32f10x__rcc_8c" startline="145">CFGR_ADCPRE_Reset_Mask</references>
        <references refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" compoundref="core__cm0_8h" startline="221">__IO</references>
      </memberdef>
      <memberdef kind="function" id="group___r_c_c___private___functions_1ga65209ab5c3589b249c7d70f978735ca6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RCC_LSEConfig</definition>
        <argsstring>(uint8_t RCC_LSE)</argsstring>
        <name>RCC_LSEConfig</name>
        <param>
          <type>uint8_t</type>
          <declname>RCC_LSE</declname>
        </param>
        <briefdescription>
<para>Configures the External Low Speed oscillator (LSE). </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>RCC_LSE</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the new state of the LSE. This parameter can be one of the following values: <itemizedlist>
<listitem><para>RCC_LSE_OFF: LSE oscillator OFF </para></listitem>
<listitem><para>RCC_LSE_ON: LSE oscillator ON </para></listitem>
<listitem><para>RCC_LSE_Bypass: LSE oscillator bypassed with external clock </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" line="829" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" bodystart="829" bodyend="854"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___l_s_e__configuration_1ga95d2678bf8f46e932e7cba75619a4d2c" compoundref="stm32f10x__rcc_8h" startline="446">IS_RCC_LSE</references>
        <references refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" compoundref="core__cm0_8h" startline="221">__IO</references>
        <references refid="group___r_c_c___private___defines_1ga40b5a415d697b6af7babd8a208c92435" compoundref="stm32f10x__rcc_8c" startline="175">BDCR_ADDRESS</references>
        <references refid="group___l_s_e__configuration_1ga6645c27708d0cad1a4ab61d2abb24c77" compoundref="stm32f10x__rcc_8h" startline="443">RCC_LSE_OFF</references>
        <references refid="group___l_s_e__configuration_1gac981ea636c2f215e4473901e0912f55a" compoundref="stm32f10x__rcc_8h" startline="444">RCC_LSE_ON</references>
        <references refid="group___l_s_e__configuration_1gac911af00bffa1bd1b1676f582a8a88e1" compoundref="stm32f10x__rcc_8h" startline="445">RCC_LSE_Bypass</references>
      </memberdef>
      <memberdef kind="function" id="group___r_c_c___private___functions_1ga81e3ca29fd154ac2019bba6936d6d5ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RCC_LSICmd</definition>
        <argsstring>(FunctionalState NewState)</argsstring>
        <name>RCC_LSICmd</name>
        <param>
          <type><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref></type>
          <declname>NewState</declname>
        </param>
        <briefdescription>
<para>Enables or disables the Internal Low Speed oscillator (LSI). </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>LSI can not be disabled if the IWDG is running. </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>NewState</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of the LSI. This parameter can be: ENABLE or DISABLE. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" line="862" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" bodystart="862" bodyend="867"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" compoundref="stm32f10x_8h" startline="522">IS_FUNCTIONAL_STATE</references>
        <references refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" compoundref="core__cm0_8h" startline="221">__IO</references>
        <references refid="group___r_c_c___private___defines_1gaa253e36e7e5fb02998c0e4d0388abc52" compoundref="stm32f10x__rcc_8c" startline="103">CSR_LSION_BB</references>
      </memberdef>
      <memberdef kind="function" id="group___r_c_c___private___functions_1ga1473d8a5a020642966359611c44181b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RCC_RTCCLKConfig</definition>
        <argsstring>(uint32_t RCC_RTCCLKSource)</argsstring>
        <name>RCC_RTCCLKConfig</name>
        <param>
          <type>uint32_t</type>
          <declname>RCC_RTCCLKSource</declname>
        </param>
        <briefdescription>
<para>Configures the RTC clock (RTCCLK). </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Once the RTC clock is selected it can&apos;t be changed unless the Backup domain is reset. </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>RCC_RTCCLKSource</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the RTC clock source. This parameter can be one of the following values: <itemizedlist>
<listitem><para>RCC_RTCCLKSource_LSE: LSE selected as RTC clock </para></listitem>
<listitem><para>RCC_RTCCLKSource_LSI: LSI selected as RTC clock </para></listitem>
<listitem><para>RCC_RTCCLKSource_HSE_Div128: HSE clock divided by 128 selected as RTC clock </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" line="879" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" bodystart="879" bodyend="885"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___r_t_c__clock__source_1gae76a0340b02b5342e756fa0d2112ebf5" compoundref="stm32f10x__rcc_8h" startline="459">IS_RCC_RTCCLK_SOURCE</references>
        <references refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" compoundref="stm32f10x_8h" startline="1443">RCC</references>
      </memberdef>
      <memberdef kind="function" id="group___r_c_c___private___functions_1ga9802f84846df2cea8e369234ed13b159" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RCC_RTCCLKCmd</definition>
        <argsstring>(FunctionalState NewState)</argsstring>
        <name>RCC_RTCCLKCmd</name>
        <param>
          <type><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref></type>
          <declname>NewState</declname>
        </param>
        <briefdescription>
<para>Enables or disables the RTC clock. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This function must be used only after the RTC clock was selected using the RCC_RTCCLKConfig function. </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>NewState</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of the RTC clock. This parameter can be: ENABLE or DISABLE. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" line="893" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" bodystart="893" bodyend="898"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" compoundref="stm32f10x_8h" startline="522">IS_FUNCTIONAL_STATE</references>
        <references refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" compoundref="core__cm0_8h" startline="221">__IO</references>
        <references refid="group___r_c_c___private___defines_1gaf70aaf70b0752ccb3a60307b2fb46038" compoundref="stm32f10x__rcc_8c" startline="92">BDCR_RTCEN_BB</references>
      </memberdef>
      <memberdef kind="function" id="group___r_c_c___private___functions_1ga3e9944fd1ed734275222bbb3e3f29993" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RCC_GetClocksFreq</definition>
        <argsstring>(RCC_ClocksTypeDef *RCC_Clocks)</argsstring>
        <name>RCC_GetClocksFreq</name>
        <param>
          <type><ref refid="struct_r_c_c___clocks_type_def" kindref="compound">RCC_ClocksTypeDef</ref> *</type>
          <declname>RCC_Clocks</declname>
        </param>
        <briefdescription>
<para>Returns the frequencies of different on chip clocks. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>RCC_Clocks</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a <ref refid="struct_r_c_c___clocks_type_def" kindref="compound">RCC_ClocksTypeDef</ref> structure which will hold the clocks frequencies. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>The result of this function could be not correct when using fractional value for HSE crystal. </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" line="908" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" bodystart="908" bodyend="1031"/>
        <references refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" compoundref="stm32f10x_8h" startline="1443">RCC</references>
        <references refid="group___r_c_c___private___defines_1gaefba904c88a72c7e2c12e8fcef38300a" compoundref="stm32f10x__rcc_8c" startline="137">CFGR_SWS_Mask</references>
        <references refid="struct_r_c_c___clocks_type_def_1a2ba325067f3d464ad7955358932563d8" compoundref="stm32f10x__rcc_8h" startline="48">RCC_ClocksTypeDef::SYSCLK_Frequency</references>
        <references refid="group___library__configuration__section_1gaaa8c76e274d0f6dd2cefb5d0b17fbc37" compoundref="stm32f10x_8h" startline="130">HSI_VALUE</references>
        <references refid="group___library__configuration__section_1gaeafcff4f57440c60e64812dddd13e7cb" compoundref="stm32f10x_8h" startline="119">HSE_VALUE</references>
        <references refid="group___r_c_c___private___defines_1ga26ac4de307d4c081867dc0344f54c17a" compoundref="stm32f10x__rcc_8c" startline="134">CFGR_PLLMull_Mask</references>
        <references refid="group___r_c_c___private___defines_1ga8fd33db1092dfc565314b7bf395bba23" compoundref="stm32f10x__rcc_8c" startline="135">CFGR_PLLSRC_Mask</references>
        <references refid="group___r_c_c___private___defines_1ga025835ddeb698b8c119ddf355b2fbded" compoundref="stm32f10x__rcc_8c" startline="136">CFGR_PLLXTPRE_Mask</references>
        <references refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffa589b7d94a3d91d145720e2fed0eb3a05" compoundref="stm32f10x_8h" startline="519">RESET</references>
        <references refid="group___r_c_c___private___defines_1gaca06c6cc484e08423a56cfca6928b9ae" compoundref="stm32f10x__rcc_8c" startline="140">CFGR_HPRE_Set_Mask</references>
        <referencedby refid="group___i2_c___private___functions_1gaac29465bca70fbc91c2f922ab67bb88e" compoundref="stm32f10x__i2c_8c" startline="191" endline="304">I2C_Init</referencedby>
        <referencedby refid="group___s_p_i___private___functions_1ga53661884ae4a9640df7cbc59187782f7" compoundref="stm32f10x__spi_8c" startline="219" endline="372">I2S_Init</referencedby>
        <referencedby refid="group___u_s_a_r_t___private___functions_1ga98da340ea0324002ba1b4263e91ab2ff" compoundref="stm32f10x__usart_8c" startline="176" endline="273">USART_Init</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___r_c_c___private___functions_1gae0b30d8598b8393bdba9c3fefba3a968" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RCC_AHBPeriphClockCmd</definition>
        <argsstring>(uint32_t RCC_AHBPeriph, FunctionalState NewState)</argsstring>
        <name>RCC_AHBPeriphClockCmd</name>
        <param>
          <type>uint32_t</type>
          <declname>RCC_AHBPeriph</declname>
        </param>
        <param>
          <type><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref></type>
          <declname>NewState</declname>
        </param>
        <briefdescription>
<para>Enables or disables the AHB peripheral clock. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>RCC_AHBPeriph</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the AHB peripheral to gates its clock.</para></parameterdescription>
</parameteritem>
</parameterlist>
For <bold>STM32_Connectivity_line_devices</bold>, this parameter can be any combination of the following values: <itemizedlist>
<listitem><para>RCC_AHBPeriph_DMA1 </para></listitem>
<listitem><para>RCC_AHBPeriph_DMA2 </para></listitem>
<listitem><para>RCC_AHBPeriph_SRAM </para></listitem>
<listitem><para>RCC_AHBPeriph_FLITF </para></listitem>
<listitem><para>RCC_AHBPeriph_CRC </para></listitem>
<listitem><para>RCC_AHBPeriph_OTG_FS </para></listitem>
<listitem><para>RCC_AHBPeriph_ETH_MAC </para></listitem>
<listitem><para>RCC_AHBPeriph_ETH_MAC_Tx </para></listitem>
<listitem><para>RCC_AHBPeriph_ETH_MAC_Rx</para></listitem>
</itemizedlist>
For <bold>other_STM32_devices</bold>, this parameter can be any combination of the following values: <itemizedlist>
<listitem><para>RCC_AHBPeriph_DMA1 </para></listitem>
<listitem><para>RCC_AHBPeriph_DMA2 </para></listitem>
<listitem><para>RCC_AHBPeriph_SRAM </para></listitem>
<listitem><para>RCC_AHBPeriph_FLITF </para></listitem>
<listitem><para>RCC_AHBPeriph_CRC </para></listitem>
<listitem><para>RCC_AHBPeriph_FSMC </para></listitem>
<listitem><para>RCC_AHBPeriph_SDIO</para></listitem>
</itemizedlist>
<simplesect kind="note"><para>SRAM and FLITF clock can be disabled only during sleep mode. </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>NewState</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of the specified peripheral clock. This parameter can be: ENABLE or DISABLE. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" line="1064" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" bodystart="1064" bodyend="1078"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___a_h_b__peripheral_1ga5fbf97a9c9f5742c94cde6ffe389aedc" compoundref="stm32f10x__rcc_8h" startline="479">IS_RCC_AHB_PERIPH</references>
        <references refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" compoundref="stm32f10x_8h" startline="522">IS_FUNCTIONAL_STATE</references>
        <references refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1ad3a9df141be0ccf10389b640f492b26d" compoundref="stm32f10x_8h" startline="521">DISABLE</references>
        <references refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" compoundref="stm32f10x_8h" startline="1443">RCC</references>
      </memberdef>
      <memberdef kind="function" id="group___r_c_c___private___functions_1ga56ff55caf8d835351916b40dd030bc87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RCC_APB2PeriphClockCmd</definition>
        <argsstring>(uint32_t RCC_APB2Periph, FunctionalState NewState)</argsstring>
        <name>RCC_APB2PeriphClockCmd</name>
        <param>
          <type>uint32_t</type>
          <declname>RCC_APB2Periph</declname>
        </param>
        <param>
          <type><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref></type>
          <declname>NewState</declname>
        </param>
        <briefdescription>
<para>Enables or disables the High Speed APB (APB2) peripheral clock. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>RCC_APB2Periph</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the APB2 peripheral to gates its clock. This parameter can be any combination of the following values: <itemizedlist>
<listitem><para>RCC_APB2Periph_AFIO, RCC_APB2Periph_GPIOA, RCC_APB2Periph_GPIOB, RCC_APB2Periph_GPIOC, RCC_APB2Periph_GPIOD, RCC_APB2Periph_GPIOE, RCC_APB2Periph_GPIOF, RCC_APB2Periph_GPIOG, RCC_APB2Periph_ADC1, RCC_APB2Periph_ADC2, RCC_APB2Periph_TIM1, RCC_APB2Periph_SPI1, RCC_APB2Periph_TIM8, RCC_APB2Periph_USART1, RCC_APB2Periph_ADC3, RCC_APB2Periph_TIM15, RCC_APB2Periph_TIM16, RCC_APB2Periph_TIM17, RCC_APB2Periph_TIM9, RCC_APB2Periph_TIM10, RCC_APB2Periph_TIM11 </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NewState</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of the specified peripheral clock. This parameter can be: ENABLE or DISABLE. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" line="1095" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" bodystart="1095" bodyend="1108"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___a_p_b2__peripheral_1ga89a2b95e60e90a51b26b53cc4c0e7b14" compoundref="stm32f10x__rcc_8h" startline="519">IS_RCC_APB2_PERIPH</references>
        <references refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" compoundref="stm32f10x_8h" startline="522">IS_FUNCTIONAL_STATE</references>
        <references refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1ad3a9df141be0ccf10389b640f492b26d" compoundref="stm32f10x_8h" startline="521">DISABLE</references>
        <references refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" compoundref="stm32f10x_8h" startline="1443">RCC</references>
        <referencedby refid="class_blink_led_1a38fcbc34c6ff8a1083b64bbbb309a54c" compoundref="_blink_led_8cpp" startline="11" endline="26">BlinkLed::powerUp</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___r_c_c___private___functions_1gaee7cc5d73af7fe1986fceff8afd3973e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RCC_APB1PeriphClockCmd</definition>
        <argsstring>(uint32_t RCC_APB1Periph, FunctionalState NewState)</argsstring>
        <name>RCC_APB1PeriphClockCmd</name>
        <param>
          <type>uint32_t</type>
          <declname>RCC_APB1Periph</declname>
        </param>
        <param>
          <type><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref></type>
          <declname>NewState</declname>
        </param>
        <briefdescription>
<para>Enables or disables the Low Speed APB (APB1) peripheral clock. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>RCC_APB1Periph</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the APB1 peripheral to gates its clock. This parameter can be any combination of the following values: <itemizedlist>
<listitem><para>RCC_APB1Periph_TIM2, RCC_APB1Periph_TIM3, RCC_APB1Periph_TIM4, RCC_APB1Periph_TIM5, RCC_APB1Periph_TIM6, RCC_APB1Periph_TIM7, RCC_APB1Periph_WWDG, RCC_APB1Periph_SPI2, RCC_APB1Periph_SPI3, RCC_APB1Periph_USART2, RCC_APB1Periph_USART3, RCC_APB1Periph_USART4, RCC_APB1Periph_USART5, RCC_APB1Periph_I2C1, RCC_APB1Periph_I2C2, RCC_APB1Periph_USB, RCC_APB1Periph_CAN1, RCC_APB1Periph_BKP, RCC_APB1Periph_PWR, RCC_APB1Periph_DAC, RCC_APB1Periph_CEC, RCC_APB1Periph_TIM12, RCC_APB1Periph_TIM13, RCC_APB1Periph_TIM14 </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NewState</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of the specified peripheral clock. This parameter can be: ENABLE or DISABLE. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" line="1126" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" bodystart="1126" bodyend="1139"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___a_p_b1__peripheral_1gab68e85308494436c4c55a69c42a79f36" compoundref="stm32f10x__rcc_8h" startline="554">IS_RCC_APB1_PERIPH</references>
        <references refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" compoundref="stm32f10x_8h" startline="522">IS_FUNCTIONAL_STATE</references>
        <references refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1ad3a9df141be0ccf10389b640f492b26d" compoundref="stm32f10x_8h" startline="521">DISABLE</references>
        <references refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" compoundref="stm32f10x_8h" startline="1443">RCC</references>
      </memberdef>
      <memberdef kind="function" id="group___r_c_c___private___functions_1gad94553850ac07106a27ee85fec37efdf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RCC_APB2PeriphResetCmd</definition>
        <argsstring>(uint32_t RCC_APB2Periph, FunctionalState NewState)</argsstring>
        <name>RCC_APB2PeriphResetCmd</name>
        <param>
          <type>uint32_t</type>
          <declname>RCC_APB2Periph</declname>
        </param>
        <param>
          <type><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref></type>
          <declname>NewState</declname>
        </param>
        <briefdescription>
<para>Forces or releases High Speed APB (APB2) peripheral reset. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>RCC_APB2Periph</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the APB2 peripheral to reset. This parameter can be any combination of the following values: <itemizedlist>
<listitem><para>RCC_APB2Periph_AFIO, RCC_APB2Periph_GPIOA, RCC_APB2Periph_GPIOB, RCC_APB2Periph_GPIOC, RCC_APB2Periph_GPIOD, RCC_APB2Periph_GPIOE, RCC_APB2Periph_GPIOF, RCC_APB2Periph_GPIOG, RCC_APB2Periph_ADC1, RCC_APB2Periph_ADC2, RCC_APB2Periph_TIM1, RCC_APB2Periph_SPI1, RCC_APB2Periph_TIM8, RCC_APB2Periph_USART1, RCC_APB2Periph_ADC3, RCC_APB2Periph_TIM15, RCC_APB2Periph_TIM16, RCC_APB2Periph_TIM17, RCC_APB2Periph_TIM9, RCC_APB2Periph_TIM10, RCC_APB2Periph_TIM11 </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NewState</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of the specified peripheral reset. This parameter can be: ENABLE or DISABLE. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" line="1185" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" bodystart="1185" bodyend="1198"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___a_p_b2__peripheral_1ga89a2b95e60e90a51b26b53cc4c0e7b14" compoundref="stm32f10x__rcc_8h" startline="519">IS_RCC_APB2_PERIPH</references>
        <references refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" compoundref="stm32f10x_8h" startline="522">IS_FUNCTIONAL_STATE</references>
        <references refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1ad3a9df141be0ccf10389b640f492b26d" compoundref="stm32f10x_8h" startline="521">DISABLE</references>
        <references refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" compoundref="stm32f10x_8h" startline="1443">RCC</references>
        <referencedby refid="group___a_d_c___private___functions_1ga31fa6bc09de17125e9db2830ce77c09b" compoundref="stm32f10x__adc_8c" startline="185" endline="214">ADC_DeInit</referencedby>
        <referencedby refid="group___g_p_i_o___private___functions_1gaa60bdf3182c44b5fa818f237042f52ee" compoundref="stm32f10x__gpio_8c" startline="108" endline="151">GPIO_DeInit</referencedby>
        <referencedby refid="group___g_p_i_o___private___functions_1ga7f645e6b6146818c3d6c19021e70170c" compoundref="stm32f10x__gpio_8c" startline="159" endline="163">GPIO_AFIODeInit</referencedby>
        <referencedby refid="group___s_p_i___private___functions_1gabe36880945fa56785283a9c0092124cc" compoundref="stm32f10x__spi_8c" startline="119" endline="148">SPI_I2S_DeInit</referencedby>
        <referencedby refid="group___t_i_m___private___functions_1ga1659cc0ce503ac151568e0c7c02b1ba5" compoundref="stm32f10x__tim_8c" startline="122" endline="215">TIM_DeInit</referencedby>
        <referencedby refid="group___u_s_a_r_t___private___functions_1ga2f8e1ce72da21b6539d8e1f299ec3b0d" compoundref="stm32f10x__usart_8c" startline="130" endline="163">USART_DeInit</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___r_c_c___private___functions_1gab197ae4369c10b92640a733b40ed2801" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RCC_APB1PeriphResetCmd</definition>
        <argsstring>(uint32_t RCC_APB1Periph, FunctionalState NewState)</argsstring>
        <name>RCC_APB1PeriphResetCmd</name>
        <param>
          <type>uint32_t</type>
          <declname>RCC_APB1Periph</declname>
        </param>
        <param>
          <type><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref></type>
          <declname>NewState</declname>
        </param>
        <briefdescription>
<para>Forces or releases Low Speed APB (APB1) peripheral reset. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>RCC_APB1Periph</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the APB1 peripheral to reset. This parameter can be any combination of the following values: <itemizedlist>
<listitem><para>RCC_APB1Periph_TIM2, RCC_APB1Periph_TIM3, RCC_APB1Periph_TIM4, RCC_APB1Periph_TIM5, RCC_APB1Periph_TIM6, RCC_APB1Periph_TIM7, RCC_APB1Periph_WWDG, RCC_APB1Periph_SPI2, RCC_APB1Periph_SPI3, RCC_APB1Periph_USART2, RCC_APB1Periph_USART3, RCC_APB1Periph_USART4, RCC_APB1Periph_USART5, RCC_APB1Periph_I2C1, RCC_APB1Periph_I2C2, RCC_APB1Periph_USB, RCC_APB1Periph_CAN1, RCC_APB1Periph_BKP, RCC_APB1Periph_PWR, RCC_APB1Periph_DAC, RCC_APB1Periph_CEC, RCC_APB1Periph_TIM12, RCC_APB1Periph_TIM13, RCC_APB1Periph_TIM14 </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NewState</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of the specified peripheral clock. This parameter can be: ENABLE or DISABLE. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" line="1216" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" bodystart="1216" bodyend="1229"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___a_p_b1__peripheral_1gab68e85308494436c4c55a69c42a79f36" compoundref="stm32f10x__rcc_8h" startline="554">IS_RCC_APB1_PERIPH</references>
        <references refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" compoundref="stm32f10x_8h" startline="522">IS_FUNCTIONAL_STATE</references>
        <references refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1ad3a9df141be0ccf10389b640f492b26d" compoundref="stm32f10x_8h" startline="521">DISABLE</references>
        <references refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" compoundref="stm32f10x_8h" startline="1443">RCC</references>
        <referencedby refid="group___c_a_n___private___functions_1ga002b74cd69574a14b17ad445090245cd" compoundref="stm32f10x__can_8c" startline="122" endline="141">CAN_DeInit</referencedby>
        <referencedby refid="group___c_e_c___private___functions_1ga604c3b15b51a46303c201fa3deac2212" compoundref="stm32f10x__cec_8c" startline="118" endline="124">CEC_DeInit</referencedby>
        <referencedby refid="group___d_a_c___private___functions_1ga1fae225204e1e049d6795319e99ba8bc" compoundref="stm32f10x__dac_8c" startline="98" endline="104">DAC_DeInit</referencedby>
        <referencedby refid="group___i2_c___private___functions_1ga2ee214364603059ad5d9089f749f5bfd" compoundref="stm32f10x__i2c_8c" startline="162" endline="181">I2C_DeInit</referencedby>
        <referencedby refid="group___p_w_r___private___functions_1gad03a0aac7bc3bc3a9fd012f3769a6990" compoundref="stm32f10x__pwr_8c" startline="112" endline="116">PWR_DeInit</referencedby>
        <referencedby refid="group___s_p_i___private___functions_1gabe36880945fa56785283a9c0092124cc" compoundref="stm32f10x__spi_8c" startline="119" endline="148">SPI_I2S_DeInit</referencedby>
        <referencedby refid="group___t_i_m___private___functions_1ga1659cc0ce503ac151568e0c7c02b1ba5" compoundref="stm32f10x__tim_8c" startline="122" endline="215">TIM_DeInit</referencedby>
        <referencedby refid="group___u_s_a_r_t___private___functions_1ga2f8e1ce72da21b6539d8e1f299ec3b0d" compoundref="stm32f10x__usart_8c" startline="130" endline="163">USART_DeInit</referencedby>
        <referencedby refid="group___w_w_d_g___private___functions_1ga7130f4dc861b9234b62e73f9f57f89a1" compoundref="stm32f10x__wwdg_8c" startline="102" endline="106">WWDG_DeInit</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___r_c_c___private___functions_1ga636c3b72f35391e67f12a551b15fa54a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RCC_BackupResetCmd</definition>
        <argsstring>(FunctionalState NewState)</argsstring>
        <name>RCC_BackupResetCmd</name>
        <param>
          <type><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref></type>
          <declname>NewState</declname>
        </param>
        <briefdescription>
<para>Forces or releases the Backup domain reset. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>NewState</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of the Backup domain reset. This parameter can be: ENABLE or DISABLE. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" line="1237" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" bodystart="1237" bodyend="1242"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" compoundref="stm32f10x_8h" startline="522">IS_FUNCTIONAL_STATE</references>
        <references refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" compoundref="core__cm0_8h" startline="221">__IO</references>
        <references refid="group___r_c_c___private___defines_1ga892fdf297b85b85cbaf0723649b31818" compoundref="stm32f10x__rcc_8c" startline="96">BDCR_BDRST_BB</references>
        <referencedby refid="group___b_k_p___private___functions_1gaabff4d8f5ebf4fd9a840bcc9042ca226" compoundref="stm32f10x__bkp_8c" startline="120" endline="124">BKP_DeInit</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___r_c_c___private___functions_1ga0ff1fd7b9a8a49cdda11b7d7261c3494" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RCC_ClockSecuritySystemCmd</definition>
        <argsstring>(FunctionalState NewState)</argsstring>
        <name>RCC_ClockSecuritySystemCmd</name>
        <param>
          <type><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref></type>
          <declname>NewState</declname>
        </param>
        <briefdescription>
<para>Enables or disables the Clock Security System. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>NewState</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of the Clock Security System.. This parameter can be: ENABLE or DISABLE. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" line="1250" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" bodystart="1250" bodyend="1255"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" compoundref="stm32f10x_8h" startline="522">IS_FUNCTIONAL_STATE</references>
        <references refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" compoundref="core__cm0_8h" startline="221">__IO</references>
        <references refid="group___r_c_c___private___defines_1gaca914aed10477ae4090fea0a9639b1ea" compoundref="stm32f10x__rcc_8c" startline="72">CR_CSSON_BB</references>
      </memberdef>
      <memberdef kind="function" id="group___r_c_c___private___functions_1ga8f62b86c6ca8ae6585ba1cec79431fe5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RCC_MCOConfig</definition>
        <argsstring>(uint8_t RCC_MCO)</argsstring>
        <name>RCC_MCOConfig</name>
        <param>
          <type>uint8_t</type>
          <declname>RCC_MCO</declname>
        </param>
        <briefdescription>
<para>Selects the clock source to output on MCO pin. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>RCC_MCO</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the clock source to output.</para></parameterdescription>
</parameteritem>
</parameterlist>
For <bold>STM32_Connectivity_line_devices</bold>, this parameter can be one of the following values: <itemizedlist>
<listitem><para>RCC_MCO_NoClock: No clock selected </para></listitem>
<listitem><para>RCC_MCO_SYSCLK: System clock selected </para></listitem>
<listitem><para>RCC_MCO_HSI: HSI oscillator clock selected </para></listitem>
<listitem><para>RCC_MCO_HSE: HSE oscillator clock selected </para></listitem>
<listitem><para>RCC_MCO_PLLCLK_Div2: PLL clock divided by 2 selected </para></listitem>
<listitem><para>RCC_MCO_PLL2CLK: PLL2 clock selected </para></listitem>
<listitem><para>RCC_MCO_PLL3CLK_Div2: PLL3 clock divided by 2 selected </para></listitem>
<listitem><para>RCC_MCO_XT1: External 3-25 MHz oscillator clock selected </para></listitem>
<listitem><para>RCC_MCO_PLL3CLK: PLL3 clock selected</para></listitem>
</itemizedlist>
For <bold>other_STM32_devices</bold>, this parameter can be one of the following values: <itemizedlist>
<listitem><para>RCC_MCO_NoClock: No clock selected </para></listitem>
<listitem><para>RCC_MCO_SYSCLK: System clock selected </para></listitem>
<listitem><para>RCC_MCO_HSI: HSI oscillator clock selected </para></listitem>
<listitem><para>RCC_MCO_HSE: HSE oscillator clock selected </para></listitem>
<listitem><para>RCC_MCO_PLLCLK_Div2: PLL clock divided by 2 selected</para></listitem>
</itemizedlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" line="1282" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" bodystart="1282" bodyend="1289"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___clock__source__to__output__on___m_c_o__pin_1ga0c2d4d6aa8881e01b8c06d8816284b73" compoundref="stm32f10x__rcc_8h" startline="571">IS_RCC_MCO</references>
        <references refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" compoundref="core__cm0_8h" startline="221">__IO</references>
        <references refid="group___r_c_c___private___defines_1ga5fea86b59ec4be059d922db57cca3b3f" compoundref="stm32f10x__rcc_8c" startline="172">CFGR_BYTE4_ADDRESS</references>
      </memberdef>
      <memberdef kind="function" id="group___r_c_c___private___functions_1ga2897bdc52f272031c44fb1f72205d295" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___exported__types_1ga89136caac2e14c55151f527ac02daaff" kindref="member">FlagStatus</ref></type>
        <definition>FlagStatus RCC_GetFlagStatus</definition>
        <argsstring>(uint8_t RCC_FLAG)</argsstring>
        <name>RCC_GetFlagStatus</name>
        <param>
          <type>uint8_t</type>
          <declname>RCC_FLAG</declname>
        </param>
        <briefdescription>
<para>Checks whether the specified RCC flag is set or not. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>RCC_FLAG</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the flag to check.</para></parameterdescription>
</parameteritem>
</parameterlist>
For <bold>STM32_Connectivity_line_devices</bold>, this parameter can be one of the following values: <itemizedlist>
<listitem><para>RCC_FLAG_HSIRDY: HSI oscillator clock ready </para></listitem>
<listitem><para>RCC_FLAG_HSERDY: HSE oscillator clock ready </para></listitem>
<listitem><para>RCC_FLAG_PLLRDY: PLL clock ready </para></listitem>
<listitem><para>RCC_FLAG_PLL2RDY: PLL2 clock ready </para></listitem>
<listitem><para>RCC_FLAG_PLL3RDY: PLL3 clock ready </para></listitem>
<listitem><para>RCC_FLAG_LSERDY: LSE oscillator clock ready </para></listitem>
<listitem><para>RCC_FLAG_LSIRDY: LSI oscillator clock ready </para></listitem>
<listitem><para>RCC_FLAG_PINRST: Pin reset </para></listitem>
<listitem><para>RCC_FLAG_PORRST: POR/PDR reset </para></listitem>
<listitem><para>RCC_FLAG_SFTRST: Software reset </para></listitem>
<listitem><para>RCC_FLAG_IWDGRST: Independent Watchdog reset </para></listitem>
<listitem><para>RCC_FLAG_WWDGRST: Window Watchdog reset </para></listitem>
<listitem><para>RCC_FLAG_LPWRRST: Low Power reset</para></listitem>
</itemizedlist>
For <bold>other_STM32_devices</bold>, this parameter can be one of the following values: <itemizedlist>
<listitem><para>RCC_FLAG_HSIRDY: HSI oscillator clock ready </para></listitem>
<listitem><para>RCC_FLAG_HSERDY: HSE oscillator clock ready </para></listitem>
<listitem><para>RCC_FLAG_PLLRDY: PLL clock ready </para></listitem>
<listitem><para>RCC_FLAG_LSERDY: LSE oscillator clock ready </para></listitem>
<listitem><para>RCC_FLAG_LSIRDY: LSI oscillator clock ready </para></listitem>
<listitem><para>RCC_FLAG_PINRST: Pin reset </para></listitem>
<listitem><para>RCC_FLAG_PORRST: POR/PDR reset </para></listitem>
<listitem><para>RCC_FLAG_SFTRST: Software reset </para></listitem>
<listitem><para>RCC_FLAG_IWDGRST: Independent Watchdog reset </para></listitem>
<listitem><para>RCC_FLAG_WWDGRST: Window Watchdog reset </para></listitem>
<listitem><para>RCC_FLAG_LPWRRST: Low Power reset</para></listitem>
</itemizedlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of RCC_FLAG (SET or RESET). </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" line="1326" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" bodystart="1326" bodyend="1362"/>
        <references refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffa589b7d94a3d91d145720e2fed0eb3a05" compoundref="stm32f10x_8h" startline="519">RESET</references>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___r_c_c___flag_1gaa27dea5bb62b26d0881e649770252158" compoundref="stm32f10x__rcc_8h" startline="608">IS_RCC_FLAG</references>
        <references refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" compoundref="stm32f10x_8h" startline="1443">RCC</references>
        <references refid="group___r_c_c___private___defines_1ga2be62bf481cd44de9ab604efe5595ff6" compoundref="stm32f10x__rcc_8c" startline="163">FLAG_Mask</references>
        <references refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffab44c8101cc294c074709ec1b14211792" compoundref="stm32f10x_8h" startline="519">SET</references>
        <referencedby refid="group___r_c_c___private___functions_1gae0f15692614dd048ee4110a056f001dc" compoundref="stm32f10x__rcc_8c" startline="304" endline="326">RCC_WaitForHSEStartUp</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___r_c_c___private___functions_1ga53f909dbb15a54124419084ebda97d72" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RCC_ClearFlag</definition>
        <argsstring>(void)</argsstring>
        <name>RCC_ClearFlag</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Clears the RCC reset flags. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>The reset flags are: RCC_FLAG_PINRST, RCC_FLAG_PORRST, RCC_FLAG_SFTRST, RCC_FLAG_IWDGRST, RCC_FLAG_WWDGRST, RCC_FLAG_LPWRRST </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" line="1371" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" bodystart="1371" bodyend="1375"/>
        <references refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" compoundref="stm32f10x_8h" startline="1443">RCC</references>
        <references refid="group___r_c_c___private___defines_1ga415e9d29487f0ef4101a9c6e4f20151f" compoundref="stm32f10x__rcc_8c" startline="149">CSR_RMVF_Set</references>
      </memberdef>
      <memberdef kind="function" id="group___r_c_c___private___functions_1ga6126c99f398ee4be410ad76ae3aee18f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___exported__types_1gaacbd7ed539db0aacd973a0f6eca34074" kindref="member">ITStatus</ref></type>
        <definition>ITStatus RCC_GetITStatus</definition>
        <argsstring>(uint8_t RCC_IT)</argsstring>
        <name>RCC_GetITStatus</name>
        <param>
          <type>uint8_t</type>
          <declname>RCC_IT</declname>
        </param>
        <briefdescription>
<para>Checks whether the specified RCC interrupt has occurred or not. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>RCC_IT</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the RCC interrupt source to check.</para></parameterdescription>
</parameteritem>
</parameterlist>
For <bold>STM32_Connectivity_line_devices</bold>, this parameter can be one of the following values: <itemizedlist>
<listitem><para>RCC_IT_LSIRDY: LSI ready interrupt </para></listitem>
<listitem><para>RCC_IT_LSERDY: LSE ready interrupt </para></listitem>
<listitem><para>RCC_IT_HSIRDY: HSI ready interrupt </para></listitem>
<listitem><para>RCC_IT_HSERDY: HSE ready interrupt </para></listitem>
<listitem><para>RCC_IT_PLLRDY: PLL ready interrupt </para></listitem>
<listitem><para>RCC_IT_PLL2RDY: PLL2 ready interrupt </para></listitem>
<listitem><para>RCC_IT_PLL3RDY: PLL3 ready interrupt </para></listitem>
<listitem><para>RCC_IT_CSS: Clock Security System interrupt</para></listitem>
</itemizedlist>
For <bold>other_STM32_devices</bold>, this parameter can be one of the following values: <itemizedlist>
<listitem><para>RCC_IT_LSIRDY: LSI ready interrupt </para></listitem>
<listitem><para>RCC_IT_LSERDY: LSE ready interrupt </para></listitem>
<listitem><para>RCC_IT_HSIRDY: HSI ready interrupt </para></listitem>
<listitem><para>RCC_IT_HSERDY: HSE ready interrupt </para></listitem>
<listitem><para>RCC_IT_PLLRDY: PLL ready interrupt </para></listitem>
<listitem><para>RCC_IT_CSS: Clock Security System interrupt</para></listitem>
</itemizedlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of RCC_IT (SET or RESET). </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" line="1402" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" bodystart="1402" bodyend="1420"/>
        <references refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffa589b7d94a3d91d145720e2fed0eb3a05" compoundref="stm32f10x_8h" startline="519">RESET</references>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___r_c_c___interrupt__source_1ga7a1b771d6d9c2d8346ab58a1f046f6a6" compoundref="stm32f10x__rcc_8h" startline="350">IS_RCC_GET_IT</references>
        <references refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" compoundref="stm32f10x_8h" startline="1443">RCC</references>
        <references refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffab44c8101cc294c074709ec1b14211792" compoundref="stm32f10x_8h" startline="519">SET</references>
      </memberdef>
      <memberdef kind="function" id="group___r_c_c___private___functions_1ga529842d165910f8f87e26115da36089b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RCC_ClearITPendingBit</definition>
        <argsstring>(uint8_t RCC_IT)</argsstring>
        <name>RCC_ClearITPendingBit</name>
        <param>
          <type>uint8_t</type>
          <declname>RCC_IT</declname>
        </param>
        <briefdescription>
<para>Clears the RCC&apos;s interrupt pending bits. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>RCC_IT</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the interrupt pending bit to clear.</para></parameterdescription>
</parameteritem>
</parameterlist>
For <bold>STM32_Connectivity_line_devices</bold>, this parameter can be any combination of the following values: <itemizedlist>
<listitem><para>RCC_IT_LSIRDY: LSI ready interrupt </para></listitem>
<listitem><para>RCC_IT_LSERDY: LSE ready interrupt </para></listitem>
<listitem><para>RCC_IT_HSIRDY: HSI ready interrupt </para></listitem>
<listitem><para>RCC_IT_HSERDY: HSE ready interrupt </para></listitem>
<listitem><para>RCC_IT_PLLRDY: PLL ready interrupt </para></listitem>
<listitem><para>RCC_IT_PLL2RDY: PLL2 ready interrupt </para></listitem>
<listitem><para>RCC_IT_PLL3RDY: PLL3 ready interrupt </para></listitem>
<listitem><para>RCC_IT_CSS: Clock Security System interrupt</para></listitem>
</itemizedlist>
For <bold>other_STM32_devices</bold>, this parameter can be any combination of the following values: <itemizedlist>
<listitem><para>RCC_IT_LSIRDY: LSI ready interrupt </para></listitem>
<listitem><para>RCC_IT_LSERDY: LSE ready interrupt </para></listitem>
<listitem><para>RCC_IT_HSIRDY: HSI ready interrupt </para></listitem>
<listitem><para>RCC_IT_HSERDY: HSE ready interrupt </para></listitem>
<listitem><para>RCC_IT_PLLRDY: PLL ready interrupt</para></listitem>
</itemizedlist>
<itemizedlist>
<listitem><para>RCC_IT_CSS: Clock Security System interrupt <parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para></listitem>
</itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" line="1448" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" bodystart="1448" bodyend="1456"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___r_c_c___interrupt__source_1ga8374741e47d696accd1a72647650ba63" compoundref="stm32f10x__rcc_8h" startline="353">IS_RCC_CLEAR_IT</references>
        <references refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" compoundref="core__cm0_8h" startline="221">__IO</references>
        <references refid="group___r_c_c___private___defines_1ga43f47430582c9575970901533e525bb5" compoundref="stm32f10x__rcc_8c" startline="169">CIR_BYTE3_ADDRESS</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
