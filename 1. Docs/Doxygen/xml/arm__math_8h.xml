<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="arm__math_8h" kind="file" language="C++">
    <compoundname>arm_math.h</compoundname>
    <includes local="yes">string.h</includes>
    <includes local="yes">math.h</includes>
    <includedby refid="arm__common__tables_8h" local="yes">C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_common_tables.h</includedby>
    <includedby refid="arm__const__structs_8h" local="yes">C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_const_structs.h</includedby>
    <incdepgraph>
      <node id="104">
        <label>C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h</label>
        <link refid="arm__math_8h"/>
        <childnode refid="105" relation="include">
        </childnode>
        <childnode refid="106" relation="include">
        </childnode>
      </node>
      <node id="105">
        <label>string.h</label>
      </node>
      <node id="106">
        <label>math.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="107">
        <label>C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h</label>
        <link refid="arm__math_8h"/>
        <childnode refid="108" relation="include">
        </childnode>
        <childnode refid="109" relation="include">
        </childnode>
      </node>
      <node id="108">
        <label>C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_common_tables.h</label>
        <link refid="arm__common__tables_8h"/>
        <childnode refid="109" relation="include">
        </childnode>
      </node>
      <node id="109">
        <label>C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_const_structs.h</label>
        <link refid="arm__const__structs_8h"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structarm__fir__instance__q7" prot="public">arm_fir_instance_q7</innerclass>
    <innerclass refid="structarm__fir__instance__q15" prot="public">arm_fir_instance_q15</innerclass>
    <innerclass refid="structarm__fir__instance__q31" prot="public">arm_fir_instance_q31</innerclass>
    <innerclass refid="structarm__fir__instance__f32" prot="public">arm_fir_instance_f32</innerclass>
    <innerclass refid="structarm__biquad__casd__df1__inst__q15" prot="public">arm_biquad_casd_df1_inst_q15</innerclass>
    <innerclass refid="structarm__biquad__casd__df1__inst__q31" prot="public">arm_biquad_casd_df1_inst_q31</innerclass>
    <innerclass refid="structarm__biquad__casd__df1__inst__f32" prot="public">arm_biquad_casd_df1_inst_f32</innerclass>
    <innerclass refid="structarm__matrix__instance__f32" prot="public">arm_matrix_instance_f32</innerclass>
    <innerclass refid="structarm__matrix__instance__f64" prot="public">arm_matrix_instance_f64</innerclass>
    <innerclass refid="structarm__matrix__instance__q15" prot="public">arm_matrix_instance_q15</innerclass>
    <innerclass refid="structarm__matrix__instance__q31" prot="public">arm_matrix_instance_q31</innerclass>
    <innerclass refid="structarm__pid__instance__q15" prot="public">arm_pid_instance_q15</innerclass>
    <innerclass refid="structarm__pid__instance__q31" prot="public">arm_pid_instance_q31</innerclass>
    <innerclass refid="structarm__pid__instance__f32" prot="public">arm_pid_instance_f32</innerclass>
    <innerclass refid="structarm__linear__interp__instance__f32" prot="public">arm_linear_interp_instance_f32</innerclass>
    <innerclass refid="structarm__bilinear__interp__instance__f32" prot="public">arm_bilinear_interp_instance_f32</innerclass>
    <innerclass refid="structarm__bilinear__interp__instance__q31" prot="public">arm_bilinear_interp_instance_q31</innerclass>
    <innerclass refid="structarm__bilinear__interp__instance__q15" prot="public">arm_bilinear_interp_instance_q15</innerclass>
    <innerclass refid="structarm__bilinear__interp__instance__q7" prot="public">arm_bilinear_interp_instance_q7</innerclass>
    <innerclass refid="structarm__cfft__radix2__instance__q15" prot="public">arm_cfft_radix2_instance_q15</innerclass>
    <innerclass refid="structarm__cfft__radix4__instance__q15" prot="public">arm_cfft_radix4_instance_q15</innerclass>
    <innerclass refid="structarm__cfft__radix2__instance__q31" prot="public">arm_cfft_radix2_instance_q31</innerclass>
    <innerclass refid="structarm__cfft__radix4__instance__q31" prot="public">arm_cfft_radix4_instance_q31</innerclass>
    <innerclass refid="structarm__cfft__radix2__instance__f32" prot="public">arm_cfft_radix2_instance_f32</innerclass>
    <innerclass refid="structarm__cfft__radix4__instance__f32" prot="public">arm_cfft_radix4_instance_f32</innerclass>
    <innerclass refid="structarm__cfft__instance__q15" prot="public">arm_cfft_instance_q15</innerclass>
    <innerclass refid="structarm__cfft__instance__q31" prot="public">arm_cfft_instance_q31</innerclass>
    <innerclass refid="structarm__cfft__instance__f32" prot="public">arm_cfft_instance_f32</innerclass>
    <innerclass refid="structarm__rfft__instance__q15" prot="public">arm_rfft_instance_q15</innerclass>
    <innerclass refid="structarm__rfft__instance__q31" prot="public">arm_rfft_instance_q31</innerclass>
    <innerclass refid="structarm__rfft__instance__f32" prot="public">arm_rfft_instance_f32</innerclass>
    <innerclass refid="structarm__rfft__fast__instance__f32" prot="public">arm_rfft_fast_instance_f32</innerclass>
    <innerclass refid="structarm__dct4__instance__f32" prot="public">arm_dct4_instance_f32</innerclass>
    <innerclass refid="structarm__dct4__instance__q31" prot="public">arm_dct4_instance_q31</innerclass>
    <innerclass refid="structarm__dct4__instance__q15" prot="public">arm_dct4_instance_q15</innerclass>
    <innerclass refid="structarm__fir__decimate__instance__q15" prot="public">arm_fir_decimate_instance_q15</innerclass>
    <innerclass refid="structarm__fir__decimate__instance__q31" prot="public">arm_fir_decimate_instance_q31</innerclass>
    <innerclass refid="structarm__fir__decimate__instance__f32" prot="public">arm_fir_decimate_instance_f32</innerclass>
    <innerclass refid="structarm__fir__interpolate__instance__q15" prot="public">arm_fir_interpolate_instance_q15</innerclass>
    <innerclass refid="structarm__fir__interpolate__instance__q31" prot="public">arm_fir_interpolate_instance_q31</innerclass>
    <innerclass refid="structarm__fir__interpolate__instance__f32" prot="public">arm_fir_interpolate_instance_f32</innerclass>
    <innerclass refid="structarm__biquad__cas__df1__32x64__ins__q31" prot="public">arm_biquad_cas_df1_32x64_ins_q31</innerclass>
    <innerclass refid="structarm__biquad__cascade__df2_t__instance__f32" prot="public">arm_biquad_cascade_df2T_instance_f32</innerclass>
    <innerclass refid="structarm__biquad__cascade__stereo__df2_t__instance__f32" prot="public">arm_biquad_cascade_stereo_df2T_instance_f32</innerclass>
    <innerclass refid="structarm__biquad__cascade__df2_t__instance__f64" prot="public">arm_biquad_cascade_df2T_instance_f64</innerclass>
    <innerclass refid="structarm__fir__lattice__instance__q15" prot="public">arm_fir_lattice_instance_q15</innerclass>
    <innerclass refid="structarm__fir__lattice__instance__q31" prot="public">arm_fir_lattice_instance_q31</innerclass>
    <innerclass refid="structarm__fir__lattice__instance__f32" prot="public">arm_fir_lattice_instance_f32</innerclass>
    <innerclass refid="structarm__iir__lattice__instance__q15" prot="public">arm_iir_lattice_instance_q15</innerclass>
    <innerclass refid="structarm__iir__lattice__instance__q31" prot="public">arm_iir_lattice_instance_q31</innerclass>
    <innerclass refid="structarm__iir__lattice__instance__f32" prot="public">arm_iir_lattice_instance_f32</innerclass>
    <innerclass refid="structarm__lms__instance__f32" prot="public">arm_lms_instance_f32</innerclass>
    <innerclass refid="structarm__lms__instance__q15" prot="public">arm_lms_instance_q15</innerclass>
    <innerclass refid="structarm__lms__instance__q31" prot="public">arm_lms_instance_q31</innerclass>
    <innerclass refid="structarm__lms__norm__instance__f32" prot="public">arm_lms_norm_instance_f32</innerclass>
    <innerclass refid="structarm__lms__norm__instance__q31" prot="public">arm_lms_norm_instance_q31</innerclass>
    <innerclass refid="structarm__lms__norm__instance__q15" prot="public">arm_lms_norm_instance_q15</innerclass>
    <innerclass refid="structarm__fir__sparse__instance__f32" prot="public">arm_fir_sparse_instance_f32</innerclass>
    <innerclass refid="structarm__fir__sparse__instance__q31" prot="public">arm_fir_sparse_instance_q31</innerclass>
    <innerclass refid="structarm__fir__sparse__instance__q15" prot="public">arm_fir_sparse_instance_q15</innerclass>
    <innerclass refid="structarm__fir__sparse__instance__q7" prot="public">arm_fir_sparse_instance_q7</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="arm__math_8h_1a87c3b351c33a90de11a2f23e67867a8a" prot="public" static="no">
        <name>__CMSIS_GENERIC</name>
        <initializer>/* disable <ref refid="group___c_m_s_i_s__core__base_1gac8e97e8ce56ae9f57da1363a937f8a17" kindref="member">NVIC</ref> and Systick functions */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="299" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" bodystart="299" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="arm__math_8h_1aad77ae594e95c5af6ae4129bd6a483c2" prot="public" static="no">
        <name>DELTA_Q31</name>
        <initializer>(0x100)</initializer>
        <briefdescription>
<para>Macros required for reciprocal calculation in Normalized LMS. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="330" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" bodystart="330" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="arm__math_8h_1a663277ff19ad0b409fb98b64b2c2750b" prot="public" static="no">
        <name>DELTA_Q15</name>
        <initializer>0x5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="331" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" bodystart="331" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="arm__math_8h_1a29f839928f4752b73c8858d6dbb55294" prot="public" static="no">
        <name>INDEX_MASK</name>
        <initializer>0x0000003F</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="332" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" bodystart="332" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="arm__math_8h_1a598a3330b3c21701223ee0ca14316eca" prot="public" static="no">
        <name>PI</name>
        <initializer>3.14159265358979f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="334" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" bodystart="334" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="arm__math_8h_1afcb9147c96853bea484cfc2dde07463d" prot="public" static="no">
        <name>FAST_MATH_TABLE_SIZE</name>
        <initializer>512</initializer>
        <briefdescription>
<para>Macros required for SINE and COSINE Fast math approximations. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="341" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" bodystart="341" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="arm__math_8h_1a4268f77b1811a0c7fc2532a0bf6108b0" prot="public" static="no">
        <name>FAST_MATH_Q31_SHIFT</name>
        <initializer>(32 - 10)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="342" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" bodystart="342" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="arm__math_8h_1a34716b73c631e65e8dd855e08384ecb2" prot="public" static="no">
        <name>FAST_MATH_Q15_SHIFT</name>
        <initializer>(16 - 10)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="343" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" bodystart="343" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="arm__math_8h_1aaff6d2358c4ada8de838a279254ab550" prot="public" static="no">
        <name>CONTROLLER_Q31_SHIFT</name>
        <initializer>(32 - 9)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="344" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" bodystart="344" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="arm__math_8h_1a032503e76d6f69bc67e99e909c8125da" prot="public" static="no">
        <name>TABLE_SIZE</name>
        <initializer>256</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="345" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" bodystart="345" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="arm__math_8h_1a8407c9e1347d10e3bcf0a7014f1fb2ff" prot="public" static="no">
        <name>TABLE_SPACING_Q31</name>
        <initializer>0x400000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="346" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" bodystart="346" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="arm__math_8h_1a60b0142af7be007902142add27919b82" prot="public" static="no">
        <name>TABLE_SPACING_Q15</name>
        <initializer>0x80</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="347" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" bodystart="347" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="arm__math_8h_1a1339e9abc11a3870e0c04f822a62166a" prot="public" static="no">
        <name>INPUT_SPACING</name>
        <initializer>0xB60B61</initializer>
        <briefdescription>
<para>Macros required for SINE and COSINE Controller functions. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="354" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" bodystart="354" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="arm__math_8h_1a280a402ab28c399fcc4168f2ed631acb" prot="public" static="no">
        <name>ALIGN4</name>
        <briefdescription>
<para>Macro for Unaligned Support. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="360" column="13" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" bodystart="360" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="arm__math_8h_1a9de2e0a5785be82866bcb96012282248" prot="public" static="no">
        <name>__SIMD32</name>
        <param><defname>addr</defname></param>
        <initializer>(*(__SIMD32_TYPE **) &amp; (addr))</initializer>
        <briefdescription>
<para>definition to read/write two 16 bit values. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="445" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" bodystart="445" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="arm__math_8h_1a1185d670d798aaf52eec13f0403f3407" prot="public" static="no">
        <name>__SIMD32_CONST</name>
        <param><defname>addr</defname></param>
        <initializer>((__SIMD32_TYPE *)(addr))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="446" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" bodystart="446" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="arm__math_8h_1af0d54ec57b936994a34f073d0049ea3f" prot="public" static="no">
        <name>_SIMD32_OFFSET</name>
        <param><defname>addr</defname></param>
        <initializer>(*(__SIMD32_TYPE *)  (addr))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="447" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" bodystart="447" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="arm__math_8h_1ad1b053da364f9fd82ca1a381df7590b6" prot="public" static="no">
        <name>__SIMD64</name>
        <param><defname>addr</defname></param>
        <initializer>(*(int64_t **) &amp; (addr))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="448" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" bodystart="448" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="arm__math_8h_1a3ebff224ad44c217fde9f530342e2960" prot="public" static="no">
        <name>__PACKq7</name>
        <param><defname>v0</defname></param>
        <param><defname>v1</defname></param>
        <param><defname>v2</defname></param>
        <param><defname>v3</defname></param>
        <initializer>( (((int32_t)(v0) &lt;&lt;  0) &amp; (int32_t)0x000000FF) | \
                                (((int32_t)(v1) &lt;&lt;  8) &amp; (int32_t)0x0000FF00) | \
                                (((int32_t)(v2) &lt;&lt; 16) &amp; (int32_t)0x00FF0000) | \
                                (((int32_t)(v3) &lt;&lt; 24) &amp; (int32_t)0xFF000000)  )</initializer>
        <briefdescription>
<para>definition to pack four 8 bit values. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="467" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" bodystart="467" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="arm__math_8h_1aba3e538352fc7f9d6d15f9a18d469399" prot="public" static="no">
        <name>multAcc_32x32_keep32_R</name>
        <param><defname>a</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>a = (<ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref>) (((((<ref refid="arm__math_8h_1a5aea1cb12fc02d9d44c8abf217eaa5c6" kindref="member">q63_t</ref>) a) &lt;&lt; 32) + ((<ref refid="arm__math_8h_1a5aea1cb12fc02d9d44c8abf217eaa5c6" kindref="member">q63_t</ref>) x * y) + 0x80000000LL ) &gt;&gt; 32)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>end of BilinearInterpolate group </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="7042" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" bodystart="7042" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="arm__math_8h_1a668fbf1cd1c3bc8faf1b1c83964ade23" prot="public" static="no">
        <name>multSub_32x32_keep32_R</name>
        <param><defname>a</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>a = (<ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref>) (((((<ref refid="arm__math_8h_1a5aea1cb12fc02d9d44c8abf217eaa5c6" kindref="member">q63_t</ref>) a) &lt;&lt; 32) - ((<ref refid="arm__math_8h_1a5aea1cb12fc02d9d44c8abf217eaa5c6" kindref="member">q63_t</ref>) x * y) + 0x80000000LL ) &gt;&gt; 32)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="7046" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" bodystart="7046" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="arm__math_8h_1a960f210642058d2b3d5368729a6e8375" prot="public" static="no">
        <name>mult_32x32_keep32_R</name>
        <param><defname>a</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>a = (<ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref>) (((<ref refid="arm__math_8h_1a5aea1cb12fc02d9d44c8abf217eaa5c6" kindref="member">q63_t</ref>) x * y + 0x80000000LL ) &gt;&gt; 32)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="7050" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" bodystart="7050" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="arm__math_8h_1a58454519e12e8157f0a1c36071333655" prot="public" static="no">
        <name>multAcc_32x32_keep32</name>
        <param><defname>a</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>a += (<ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref>) (((<ref refid="arm__math_8h_1a5aea1cb12fc02d9d44c8abf217eaa5c6" kindref="member">q63_t</ref>) x * y) &gt;&gt; 32)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="7054" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" bodystart="7054" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="arm__math_8h_1a9ec66f3082a4c65c78075638255f42ab" prot="public" static="no">
        <name>multSub_32x32_keep32</name>
        <param><defname>a</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>a -= (<ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref>) (((<ref refid="arm__math_8h_1a5aea1cb12fc02d9d44c8abf217eaa5c6" kindref="member">q63_t</ref>) x * y) &gt;&gt; 32)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="7058" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" bodystart="7058" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="arm__math_8h_1abb4baa0192bbb6fabc9251af4b4cb322" prot="public" static="no">
        <name>mult_32x32_keep32</name>
        <param><defname>a</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>a = (<ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref>) (((<ref refid="arm__math_8h_1a5aea1cb12fc02d9d44c8abf217eaa5c6" kindref="member">q63_t</ref>) x * y ) &gt;&gt; 32)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="7062" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" bodystart="7062" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6" prot="public" static="no">
        <name>arm_status</name>
        <enumvalue id="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6a9f8b2a10bd827fb4600e77d455902eb0" prot="public">
          <name>ARM_MATH_SUCCESS</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>No error </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6a74897e18d4b8f62b12a7d8a01dd2bb35" prot="public">
          <name>ARM_MATH_ARGUMENT_ERROR</name>
          <initializer>= -1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>One or more arguments are incorrect </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6a9ae74d7f8a53aec0512ae8f0a421e0e1" prot="public">
          <name>ARM_MATH_LENGTH_ERROR</name>
          <initializer>= -2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Length of data buffer is incorrect </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6a7071b92f1f6bc3c5c312a237ea91105b" prot="public">
          <name>ARM_MATH_SIZE_MISMATCH</name>
          <initializer>= -3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Size of matrices is not compatible with the operation. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6ac55996aaf19245238a8f57a91aeaefcc" prot="public">
          <name>ARM_MATH_NANINF</name>
          <initializer>= -4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Not-a-number (NaN) or infinity is generated </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6a91509ea9c819dbd592ac13a6b05382dc" prot="public">
          <name>ARM_MATH_SINGULAR</name>
          <initializer>= -5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Generated by matrix inversion if the input matrix is singular and cannot be inverted. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6a09457f2be656b35015fd6d36202fa376" prot="public">
          <name>ARM_MATH_TEST_FAILURE</name>
          <initializer>= -6</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Test Failed </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Error status returned by some functions in the library. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="374" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" bodystart="373" bodyend="382"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="arm__math_8h_1ae541b6f232c305361e9b416fc9eed263" prot="public" static="no">
        <type>int8_t</type>
        <definition>typedef int8_t q7_t</definition>
        <argsstring></argsstring>
        <name>q7_t</name>
        <briefdescription>
<para>8-bit fractional data type in 1.7 format. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="387" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" bodystart="387" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" prot="public" static="no">
        <type>int16_t</type>
        <definition>typedef int16_t q15_t</definition>
        <argsstring></argsstring>
        <name>q15_t</name>
        <briefdescription>
<para>16-bit fractional data type in 1.15 format. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="392" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" bodystart="392" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" prot="public" static="no">
        <type>int32_t</type>
        <definition>typedef int32_t q31_t</definition>
        <argsstring></argsstring>
        <name>q31_t</name>
        <briefdescription>
<para>32-bit fractional data type in 1.31 format. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="397" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" bodystart="397" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="arm__math_8h_1a5aea1cb12fc02d9d44c8abf217eaa5c6" prot="public" static="no">
        <type>int64_t</type>
        <definition>typedef int64_t q63_t</definition>
        <argsstring></argsstring>
        <name>q63_t</name>
        <briefdescription>
<para>64-bit fractional data type in 1.63 format. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="402" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" bodystart="402" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" prot="public" static="no">
        <type>float</type>
        <definition>typedef float float32_t</definition>
        <argsstring></argsstring>
        <name>float32_t</name>
        <briefdescription>
<para>32-bit floating-point type definition. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="407" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" bodystart="407" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="arm__math_8h_1ac55f3ae81b5bc9053760baacf57e47f4" prot="public" static="no">
        <type>double</type>
        <definition>typedef double float64_t</definition>
        <argsstring></argsstring>
        <name>float64_t</name>
        <briefdescription>
<para>64-bit floating-point type definition. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="412" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" bodystart="412" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="arm__math_8h_1ad7373e53d3c2e1adfeafc8c2e9720b5c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__INLINE <ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref></type>
        <definition>static __INLINE q31_t clip_q63_to_q31</definition>
        <argsstring>(q63_t x)</argsstring>
        <name>clip_q63_to_q31</name>
        <param>
          <type><ref refid="arm__math_8h_1a5aea1cb12fc02d9d44c8abf217eaa5c6" kindref="member">q63_t</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Clips Q63 to Q31 values. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="484" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" bodystart="484" bodyend="489"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1aa6f1e5d0d276f42217e75f071ca84a2e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__INLINE <ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref></type>
        <definition>static __INLINE q15_t clip_q63_to_q15</definition>
        <argsstring>(q63_t x)</argsstring>
        <name>clip_q63_to_q15</name>
        <param>
          <type><ref refid="arm__math_8h_1a5aea1cb12fc02d9d44c8abf217eaa5c6" kindref="member">q63_t</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Clips Q63 to Q15 values. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="494" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" bodystart="494" bodyend="499"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1aa9918ce19228b0d4f072fb84776eabc1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__INLINE <ref refid="arm__math_8h_1ae541b6f232c305361e9b416fc9eed263" kindref="member">q7_t</ref></type>
        <definition>static __INLINE q7_t clip_q31_to_q7</definition>
        <argsstring>(q31_t x)</argsstring>
        <name>clip_q31_to_q7</name>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Clips Q31 to Q7 values. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="504" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" bodystart="504" bodyend="509"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a4af3ca330e14587289518e6565fd04bd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__INLINE <ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref></type>
        <definition>static __INLINE q15_t clip_q31_to_q15</definition>
        <argsstring>(q31_t x)</argsstring>
        <name>clip_q31_to_q15</name>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Clips Q31 to Q15 values. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="514" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" bodystart="514" bodyend="519"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a642a29d71f7951a7f6c0b797c300b711" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__INLINE <ref refid="arm__math_8h_1a5aea1cb12fc02d9d44c8abf217eaa5c6" kindref="member">q63_t</ref></type>
        <definition>static __INLINE q63_t mult32x64</definition>
        <argsstring>(q63_t x, q31_t y)</argsstring>
        <name>mult32x64</name>
        <param>
          <type><ref refid="arm__math_8h_1a5aea1cb12fc02d9d44c8abf217eaa5c6" kindref="member">q63_t</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Multiplies 32 X 64 and returns 32 bit result in 2.30 format. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="525" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" bodystart="525" bodyend="531"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a43140f04ca94c2a7394e7a222e2d8fb4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__INLINE uint32_t</type>
        <definition>static __INLINE uint32_t arm_recip_q31</definition>
        <argsstring>(q31_t in, q31_t *dst, q31_t *pRecipTable)</argsstring>
        <name>arm_recip_q31</name>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref></type>
          <declname>in</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pRecipTable</declname>
        </param>
        <briefdescription>
<para>Function to Calculates 1/in (reciprocal) value of Q31 Data type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="563" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" bodystart="563" bodyend="608"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a1c66e370a6ae91aaafbaec5e979198d7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__INLINE uint32_t</type>
        <definition>static __INLINE uint32_t arm_recip_q15</definition>
        <argsstring>(q15_t in, q15_t *dst, q15_t *pRecipTable)</argsstring>
        <name>arm_recip_q15</name>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref></type>
          <declname>in</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pRecipTable</declname>
        </param>
        <briefdescription>
<para>Function to Calculates 1/in (reciprocal) value of Q15 Data type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="614" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" bodystart="614" bodyend="659"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a31c91a0bf0962327ef8f626fae68ea32" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_fir_q7</definition>
        <argsstring>(const arm_fir_instance_q7 *S, q7_t *pSrc, q7_t *pDst, uint32_t blockSize)</argsstring>
        <name>arm_fir_q7</name>
        <param>
          <type>const <ref refid="structarm__fir__instance__q7" kindref="compound">arm_fir_instance_q7</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ae541b6f232c305361e9b416fc9eed263" kindref="member">q7_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ae541b6f232c305361e9b416fc9eed263" kindref="member">q7_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Processing function for the Q7 FIR filter. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">S</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the Q7 FIR filter structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of input data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of output data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples to process. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="1074" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a88e48688224d42dc173dbcec702f0c1d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_fir_init_q7</definition>
        <argsstring>(arm_fir_instance_q7 *S, uint16_t numTaps, q7_t *pCoeffs, q7_t *pState, uint32_t blockSize)</argsstring>
        <name>arm_fir_init_q7</name>
        <param>
          <type><ref refid="structarm__fir__instance__q7" kindref="compound">arm_fir_instance_q7</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>numTaps</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ae541b6f232c305361e9b416fc9eed263" kindref="member">q7_t</ref> *</type>
          <declname>pCoeffs</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ae541b6f232c305361e9b416fc9eed263" kindref="member">q7_t</ref> *</type>
          <declname>pState</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Initialization function for the Q7 FIR filter. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">S</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the Q7 FIR structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">numTaps</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of filter coefficients in the filter. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pCoeffs</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the filter coefficients. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pState</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the state buffer. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples that are processed. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="1089" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a262d173058d6f80fdf60404ba262a8f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_fir_q15</definition>
        <argsstring>(const arm_fir_instance_q15 *S, q15_t *pSrc, q15_t *pDst, uint32_t blockSize)</argsstring>
        <name>arm_fir_q15</name>
        <param>
          <type>const <ref refid="structarm__fir__instance__q15" kindref="compound">arm_fir_instance_q15</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Processing function for the Q15 FIR filter. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">S</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the Q15 FIR structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of input data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of output data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples to process. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="1104" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1ac7d35e9472e49ccd88800f37f3476bd3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_fir_fast_q15</definition>
        <argsstring>(const arm_fir_instance_q15 *S, q15_t *pSrc, q15_t *pDst, uint32_t blockSize)</argsstring>
        <name>arm_fir_fast_q15</name>
        <param>
          <type>const <ref refid="structarm__fir__instance__q15" kindref="compound">arm_fir_instance_q15</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Processing function for the fast Q15 FIR filter for Cortex-M3 and Cortex-M4. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">S</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the Q15 FIR filter structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of input data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of output data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples to process. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="1118" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1ae2a50f692f41ba57e44ed0719b1368bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6" kindref="member">arm_status</ref></type>
        <definition>arm_status arm_fir_init_q15</definition>
        <argsstring>(arm_fir_instance_q15 *S, uint16_t numTaps, q15_t *pCoeffs, q15_t *pState, uint32_t blockSize)</argsstring>
        <name>arm_fir_init_q15</name>
        <param>
          <type><ref refid="structarm__fir__instance__q15" kindref="compound">arm_fir_instance_q15</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>numTaps</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pCoeffs</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pState</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Initialization function for the Q15 FIR filter. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">S</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the Q15 FIR filter structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">numTaps</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of filter coefficients in the filter. Must be even and greater than or equal to 4. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pCoeffs</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the filter coefficients. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pState</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the state buffer. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples that are processed at a time. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The function returns ARM_MATH_SUCCESS if initialization was successful or ARM_MATH_ARGUMENT_ERROR if <computeroutput>numTaps</computeroutput> is not a supported value. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="1135" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1aadd938c68ab08967cbb5fc696f384bb5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_fir_q31</definition>
        <argsstring>(const arm_fir_instance_q31 *S, q31_t *pSrc, q31_t *pDst, uint32_t blockSize)</argsstring>
        <name>arm_fir_q31</name>
        <param>
          <type>const <ref refid="structarm__fir__instance__q31" kindref="compound">arm_fir_instance_q31</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Processing function for the Q31 FIR filter. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">S</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the Q31 FIR filter structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of input data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of output data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples to process. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="1150" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a55aa292e057b43c376428ea1d9a938cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_fir_fast_q31</definition>
        <argsstring>(const arm_fir_instance_q31 *S, q31_t *pSrc, q31_t *pDst, uint32_t blockSize)</argsstring>
        <name>arm_fir_fast_q31</name>
        <param>
          <type>const <ref refid="structarm__fir__instance__q31" kindref="compound">arm_fir_instance_q31</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Processing function for the fast Q31 FIR filter for Cortex-M3 and Cortex-M4. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">S</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the Q31 FIR structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of input data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of output data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples to process. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="1164" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1ac00d53af87684cbbe135767b55e748a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_fir_init_q31</definition>
        <argsstring>(arm_fir_instance_q31 *S, uint16_t numTaps, q31_t *pCoeffs, q31_t *pState, uint32_t blockSize)</argsstring>
        <name>arm_fir_init_q31</name>
        <param>
          <type><ref refid="structarm__fir__instance__q31" kindref="compound">arm_fir_instance_q31</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>numTaps</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pCoeffs</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pState</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Initialization function for the Q31 FIR filter. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">S</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the Q31 FIR structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">numTaps</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of filter coefficients in the filter. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pCoeffs</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the filter coefficients. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pState</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the state buffer. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples that are processed at a time. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="1179" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1ae8fb334ea67eb6ecbd31824ddc14cd6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_fir_f32</definition>
        <argsstring>(const arm_fir_instance_f32 *S, float32_t *pSrc, float32_t *pDst, uint32_t blockSize)</argsstring>
        <name>arm_fir_f32</name>
        <param>
          <type>const <ref refid="structarm__fir__instance__f32" kindref="compound">arm_fir_instance_f32</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Processing function for the floating-point FIR filter. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">S</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the floating-point FIR structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of input data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of output data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples to process. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="1194" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a98d13def6427e29522829f945d0967db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_fir_init_f32</definition>
        <argsstring>(arm_fir_instance_f32 *S, uint16_t numTaps, float32_t *pCoeffs, float32_t *pState, uint32_t blockSize)</argsstring>
        <name>arm_fir_init_f32</name>
        <param>
          <type><ref refid="structarm__fir__instance__f32" kindref="compound">arm_fir_instance_f32</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>numTaps</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pCoeffs</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pState</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Initialization function for the floating-point FIR filter. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">S</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the floating-point FIR filter structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">numTaps</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of filter coefficients in the filter. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pCoeffs</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the filter coefficients. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pState</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the state buffer. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples that are processed at a time. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="1209" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1add66a0aefdc645031d607b0a5b37a942" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_biquad_cascade_df1_q15</definition>
        <argsstring>(const arm_biquad_casd_df1_inst_q15 *S, q15_t *pSrc, q15_t *pDst, uint32_t blockSize)</argsstring>
        <name>arm_biquad_cascade_df1_q15</name>
        <param>
          <type>const <ref refid="structarm__biquad__casd__df1__inst__q15" kindref="compound">arm_biquad_casd_df1_inst_q15</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Processing function for the Q15 Biquad cascade filter. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">S</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the Q15 Biquad cascade structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of input data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of output data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples to process. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="1257" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1ad54c724132f6d742a444eb6df0e9c731" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_biquad_cascade_df1_init_q15</definition>
        <argsstring>(arm_biquad_casd_df1_inst_q15 *S, uint8_t numStages, q15_t *pCoeffs, q15_t *pState, int8_t postShift)</argsstring>
        <name>arm_biquad_cascade_df1_init_q15</name>
        <param>
          <type><ref refid="structarm__biquad__casd__df1__inst__q15" kindref="compound">arm_biquad_casd_df1_inst_q15</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>numStages</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pCoeffs</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pState</declname>
        </param>
        <param>
          <type>int8_t</type>
          <declname>postShift</declname>
        </param>
        <briefdescription>
<para>Initialization function for the Q15 Biquad cascade filter. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">S</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the Q15 Biquad cascade structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">numStages</parametername>
</parameternamelist>
<parameterdescription>
<para>number of 2nd order stages in the filter. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pCoeffs</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the filter coefficients. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pState</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the state buffer. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">postShift</parametername>
</parameternamelist>
<parameterdescription>
<para>Shift to be applied to the output. Varies according to the coefficients format </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="1272" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1affb9792c0220882efd4c58f3c6a05fd7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_biquad_cascade_df1_fast_q15</definition>
        <argsstring>(const arm_biquad_casd_df1_inst_q15 *S, q15_t *pSrc, q15_t *pDst, uint32_t blockSize)</argsstring>
        <name>arm_biquad_cascade_df1_fast_q15</name>
        <param>
          <type>const <ref refid="structarm__biquad__casd__df1__inst__q15" kindref="compound">arm_biquad_casd_df1_inst_q15</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Fast but less precise processing function for the Q15 Biquad cascade filter for Cortex-M3 and Cortex-M4. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">S</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the Q15 Biquad cascade structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of input data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of output data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples to process. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="1287" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a27b0c54da702713976e5202d20b4473f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_biquad_cascade_df1_q31</definition>
        <argsstring>(const arm_biquad_casd_df1_inst_q31 *S, q31_t *pSrc, q31_t *pDst, uint32_t blockSize)</argsstring>
        <name>arm_biquad_cascade_df1_q31</name>
        <param>
          <type>const <ref refid="structarm__biquad__casd__df1__inst__q31" kindref="compound">arm_biquad_casd_df1_inst_q31</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Processing function for the Q31 Biquad cascade filter. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">S</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the Q31 Biquad cascade structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of input data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of output data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples to process. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="1301" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a456390f5e448afad3a38bed7d6e380e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_biquad_cascade_df1_fast_q31</definition>
        <argsstring>(const arm_biquad_casd_df1_inst_q31 *S, q31_t *pSrc, q31_t *pDst, uint32_t blockSize)</argsstring>
        <name>arm_biquad_cascade_df1_fast_q31</name>
        <param>
          <type>const <ref refid="structarm__biquad__casd__df1__inst__q31" kindref="compound">arm_biquad_casd_df1_inst_q31</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Fast but less precise processing function for the Q31 Biquad cascade filter for Cortex-M3 and Cortex-M4. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">S</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the Q31 Biquad cascade structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of input data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of output data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples to process. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="1315" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1af42a44f9b16d61e636418c83eefe577b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_biquad_cascade_df1_init_q31</definition>
        <argsstring>(arm_biquad_casd_df1_inst_q31 *S, uint8_t numStages, q31_t *pCoeffs, q31_t *pState, int8_t postShift)</argsstring>
        <name>arm_biquad_cascade_df1_init_q31</name>
        <param>
          <type><ref refid="structarm__biquad__casd__df1__inst__q31" kindref="compound">arm_biquad_casd_df1_inst_q31</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>numStages</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pCoeffs</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pState</declname>
        </param>
        <param>
          <type>int8_t</type>
          <declname>postShift</declname>
        </param>
        <briefdescription>
<para>Initialization function for the Q31 Biquad cascade filter. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">S</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the Q31 Biquad cascade structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">numStages</parametername>
</parameternamelist>
<parameterdescription>
<para>number of 2nd order stages in the filter. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pCoeffs</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the filter coefficients. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pState</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the state buffer. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">postShift</parametername>
</parameternamelist>
<parameterdescription>
<para>Shift to be applied to the output. Varies according to the coefficients format </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="1330" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1aa0dbe330d763e3c1d8030b3ef12d5bdc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_biquad_cascade_df1_f32</definition>
        <argsstring>(const arm_biquad_casd_df1_inst_f32 *S, float32_t *pSrc, float32_t *pDst, uint32_t blockSize)</argsstring>
        <name>arm_biquad_cascade_df1_f32</name>
        <param>
          <type>const <ref refid="structarm__biquad__casd__df1__inst__f32" kindref="compound">arm_biquad_casd_df1_inst_f32</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Processing function for the floating-point Biquad cascade filter. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">S</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the floating-point Biquad cascade structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of input data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of output data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples to process. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="1345" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a8e73b69a788e681a61bccc8959d823c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_biquad_cascade_df1_init_f32</definition>
        <argsstring>(arm_biquad_casd_df1_inst_f32 *S, uint8_t numStages, float32_t *pCoeffs, float32_t *pState)</argsstring>
        <name>arm_biquad_cascade_df1_init_f32</name>
        <param>
          <type><ref refid="structarm__biquad__casd__df1__inst__f32" kindref="compound">arm_biquad_casd_df1_inst_f32</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>numStages</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pCoeffs</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pState</declname>
        </param>
        <briefdescription>
<para>Initialization function for the floating-point Biquad cascade filter. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">S</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the floating-point Biquad cascade structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">numStages</parametername>
</parameternamelist>
<parameterdescription>
<para>number of 2nd order stages in the filter. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pCoeffs</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the filter coefficients. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pState</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the state buffer. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="1359" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a04bbf64a5f9c9e57dd1efb26a768aba1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6" kindref="member">arm_status</ref></type>
        <definition>arm_status arm_mat_add_f32</definition>
        <argsstring>(const arm_matrix_instance_f32 *pSrcA, const arm_matrix_instance_f32 *pSrcB, arm_matrix_instance_f32 *pDst)</argsstring>
        <name>arm_mat_add_f32</name>
        <param>
          <type>const <ref refid="structarm__matrix__instance__f32" kindref="compound">arm_matrix_instance_f32</ref> *</type>
          <declname>pSrcA</declname>
        </param>
        <param>
          <type>const <ref refid="structarm__matrix__instance__f32" kindref="compound">arm_matrix_instance_f32</ref> *</type>
          <declname>pSrcB</declname>
        </param>
        <param>
          <type><ref refid="structarm__matrix__instance__f32" kindref="compound">arm_matrix_instance_f32</ref> *</type>
          <declname>pDst</declname>
        </param>
        <briefdescription>
<para>Floating-point matrix addition. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrcA</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input matrix structure </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrcB</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input matrix structure </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to output matrix structure </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The function returns either <computeroutput>ARM_MATH_SIZE_MISMATCH</computeroutput> or <computeroutput>ARM_MATH_SUCCESS</computeroutput> based on the outcome of size checking. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="1416" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a147e90b7c12a162735ab8824127a33ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6" kindref="member">arm_status</ref></type>
        <definition>arm_status arm_mat_add_q15</definition>
        <argsstring>(const arm_matrix_instance_q15 *pSrcA, const arm_matrix_instance_q15 *pSrcB, arm_matrix_instance_q15 *pDst)</argsstring>
        <name>arm_mat_add_q15</name>
        <param>
          <type>const <ref refid="structarm__matrix__instance__q15" kindref="compound">arm_matrix_instance_q15</ref> *</type>
          <declname>pSrcA</declname>
        </param>
        <param>
          <type>const <ref refid="structarm__matrix__instance__q15" kindref="compound">arm_matrix_instance_q15</ref> *</type>
          <declname>pSrcB</declname>
        </param>
        <param>
          <type><ref refid="structarm__matrix__instance__q15" kindref="compound">arm_matrix_instance_q15</ref> *</type>
          <declname>pDst</declname>
        </param>
        <briefdescription>
<para>Q15 matrix addition. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrcA</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input matrix structure </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrcB</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input matrix structure </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to output matrix structure </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The function returns either <computeroutput>ARM_MATH_SIZE_MISMATCH</computeroutput> or <computeroutput>ARM_MATH_SUCCESS</computeroutput> based on the outcome of size checking. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="1430" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a7d9d7d81a0832a17b831aad1e4a5dc16" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6" kindref="member">arm_status</ref></type>
        <definition>arm_status arm_mat_add_q31</definition>
        <argsstring>(const arm_matrix_instance_q31 *pSrcA, const arm_matrix_instance_q31 *pSrcB, arm_matrix_instance_q31 *pDst)</argsstring>
        <name>arm_mat_add_q31</name>
        <param>
          <type>const <ref refid="structarm__matrix__instance__q31" kindref="compound">arm_matrix_instance_q31</ref> *</type>
          <declname>pSrcA</declname>
        </param>
        <param>
          <type>const <ref refid="structarm__matrix__instance__q31" kindref="compound">arm_matrix_instance_q31</ref> *</type>
          <declname>pSrcB</declname>
        </param>
        <param>
          <type><ref refid="structarm__matrix__instance__q31" kindref="compound">arm_matrix_instance_q31</ref> *</type>
          <declname>pDst</declname>
        </param>
        <briefdescription>
<para>Q31 matrix addition. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrcA</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input matrix structure </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrcB</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input matrix structure </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to output matrix structure </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The function returns either <computeroutput>ARM_MATH_SIZE_MISMATCH</computeroutput> or <computeroutput>ARM_MATH_SUCCESS</computeroutput> based on the outcome of size checking. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="1444" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a1adb839ac84445b8c2f04efa43faef35" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6" kindref="member">arm_status</ref></type>
        <definition>arm_status arm_mat_cmplx_mult_f32</definition>
        <argsstring>(const arm_matrix_instance_f32 *pSrcA, const arm_matrix_instance_f32 *pSrcB, arm_matrix_instance_f32 *pDst)</argsstring>
        <name>arm_mat_cmplx_mult_f32</name>
        <param>
          <type>const <ref refid="structarm__matrix__instance__f32" kindref="compound">arm_matrix_instance_f32</ref> *</type>
          <declname>pSrcA</declname>
        </param>
        <param>
          <type>const <ref refid="structarm__matrix__instance__f32" kindref="compound">arm_matrix_instance_f32</ref> *</type>
          <declname>pSrcB</declname>
        </param>
        <param>
          <type><ref refid="structarm__matrix__instance__f32" kindref="compound">arm_matrix_instance_f32</ref> *</type>
          <declname>pDst</declname>
        </param>
        <briefdescription>
<para>Floating-point, complex, matrix multiplication. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrcA</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input matrix structure </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrcB</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input matrix structure </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to output matrix structure </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The function returns either <computeroutput>ARM_MATH_SIZE_MISMATCH</computeroutput> or <computeroutput>ARM_MATH_SUCCESS</computeroutput> based on the outcome of size checking. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="1458" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a63066615e7d6f6a44f4358725092419e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6" kindref="member">arm_status</ref></type>
        <definition>arm_status arm_mat_cmplx_mult_q15</definition>
        <argsstring>(const arm_matrix_instance_q15 *pSrcA, const arm_matrix_instance_q15 *pSrcB, arm_matrix_instance_q15 *pDst, q15_t *pScratch)</argsstring>
        <name>arm_mat_cmplx_mult_q15</name>
        <param>
          <type>const <ref refid="structarm__matrix__instance__q15" kindref="compound">arm_matrix_instance_q15</ref> *</type>
          <declname>pSrcA</declname>
        </param>
        <param>
          <type>const <ref refid="structarm__matrix__instance__q15" kindref="compound">arm_matrix_instance_q15</ref> *</type>
          <declname>pSrcB</declname>
        </param>
        <param>
          <type><ref refid="structarm__matrix__instance__q15" kindref="compound">arm_matrix_instance_q15</ref> *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pScratch</declname>
        </param>
        <briefdescription>
<para>Q15, complex, matrix multiplication. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrcA</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input matrix structure </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrcB</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input matrix structure </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to output matrix structure </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The function returns either <computeroutput>ARM_MATH_SIZE_MISMATCH</computeroutput> or <computeroutput>ARM_MATH_SUCCESS</computeroutput> based on the outcome of size checking. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="1472" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1aaf3c0b171ca8412c77bab9fa90804737" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6" kindref="member">arm_status</ref></type>
        <definition>arm_status arm_mat_cmplx_mult_q31</definition>
        <argsstring>(const arm_matrix_instance_q31 *pSrcA, const arm_matrix_instance_q31 *pSrcB, arm_matrix_instance_q31 *pDst)</argsstring>
        <name>arm_mat_cmplx_mult_q31</name>
        <param>
          <type>const <ref refid="structarm__matrix__instance__q31" kindref="compound">arm_matrix_instance_q31</ref> *</type>
          <declname>pSrcA</declname>
        </param>
        <param>
          <type>const <ref refid="structarm__matrix__instance__q31" kindref="compound">arm_matrix_instance_q31</ref> *</type>
          <declname>pSrcB</declname>
        </param>
        <param>
          <type><ref refid="structarm__matrix__instance__q31" kindref="compound">arm_matrix_instance_q31</ref> *</type>
          <declname>pDst</declname>
        </param>
        <briefdescription>
<para>Q31, complex, matrix multiplication. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrcA</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input matrix structure </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrcB</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input matrix structure </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to output matrix structure </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The function returns either <computeroutput>ARM_MATH_SIZE_MISMATCH</computeroutput> or <computeroutput>ARM_MATH_SUCCESS</computeroutput> based on the outcome of size checking. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="1487" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1ad7dd9f108429da13d3864696ceeec789" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6" kindref="member">arm_status</ref></type>
        <definition>arm_status arm_mat_trans_f32</definition>
        <argsstring>(const arm_matrix_instance_f32 *pSrc, arm_matrix_instance_f32 *pDst)</argsstring>
        <name>arm_mat_trans_f32</name>
        <param>
          <type>const <ref refid="structarm__matrix__instance__f32" kindref="compound">arm_matrix_instance_f32</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type><ref refid="structarm__matrix__instance__f32" kindref="compound">arm_matrix_instance_f32</ref> *</type>
          <declname>pDst</declname>
        </param>
        <briefdescription>
<para>Floating-point matrix transpose. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input matrix </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output matrix </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The function returns either <computeroutput>ARM_MATH_SIZE_MISMATCH</computeroutput> or <computeroutput>ARM_MATH_SUCCESS</computeroutput> based on the outcome of size checking. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="1500" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a4f4f821cc695fd0ef9061d702e08050a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6" kindref="member">arm_status</ref></type>
        <definition>arm_status arm_mat_trans_q15</definition>
        <argsstring>(const arm_matrix_instance_q15 *pSrc, arm_matrix_instance_q15 *pDst)</argsstring>
        <name>arm_mat_trans_q15</name>
        <param>
          <type>const <ref refid="structarm__matrix__instance__q15" kindref="compound">arm_matrix_instance_q15</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type><ref refid="structarm__matrix__instance__q15" kindref="compound">arm_matrix_instance_q15</ref> *</type>
          <declname>pDst</declname>
        </param>
        <briefdescription>
<para>Q15 matrix transpose. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input matrix </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output matrix </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The function returns either <computeroutput>ARM_MATH_SIZE_MISMATCH</computeroutput> or <computeroutput>ARM_MATH_SUCCESS</computeroutput> based on the outcome of size checking. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="1512" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a30a4d49489ac67ff98a46b9f58f73bf1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6" kindref="member">arm_status</ref></type>
        <definition>arm_status arm_mat_trans_q31</definition>
        <argsstring>(const arm_matrix_instance_q31 *pSrc, arm_matrix_instance_q31 *pDst)</argsstring>
        <name>arm_mat_trans_q31</name>
        <param>
          <type>const <ref refid="structarm__matrix__instance__q31" kindref="compound">arm_matrix_instance_q31</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type><ref refid="structarm__matrix__instance__q31" kindref="compound">arm_matrix_instance_q31</ref> *</type>
          <declname>pDst</declname>
        </param>
        <briefdescription>
<para>Q31 matrix transpose. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input matrix </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output matrix </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The function returns either <computeroutput>ARM_MATH_SIZE_MISMATCH</computeroutput> or <computeroutput>ARM_MATH_SUCCESS</computeroutput> based on the outcome of size checking. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="1524" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a917bf0270310c1d3f0eda1fc7c0026a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6" kindref="member">arm_status</ref></type>
        <definition>arm_status arm_mat_mult_f32</definition>
        <argsstring>(const arm_matrix_instance_f32 *pSrcA, const arm_matrix_instance_f32 *pSrcB, arm_matrix_instance_f32 *pDst)</argsstring>
        <name>arm_mat_mult_f32</name>
        <param>
          <type>const <ref refid="structarm__matrix__instance__f32" kindref="compound">arm_matrix_instance_f32</ref> *</type>
          <declname>pSrcA</declname>
        </param>
        <param>
          <type>const <ref refid="structarm__matrix__instance__f32" kindref="compound">arm_matrix_instance_f32</ref> *</type>
          <declname>pSrcB</declname>
        </param>
        <param>
          <type><ref refid="structarm__matrix__instance__f32" kindref="compound">arm_matrix_instance_f32</ref> *</type>
          <declname>pDst</declname>
        </param>
        <briefdescription>
<para>Floating-point matrix multiplication. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrcA</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input matrix structure </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrcB</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input matrix structure </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to output matrix structure </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The function returns either <computeroutput>ARM_MATH_SIZE_MISMATCH</computeroutput> or <computeroutput>ARM_MATH_SUCCESS</computeroutput> based on the outcome of size checking. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="1537" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a7521d59196189bb6dde26e8cdfb66e21" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6" kindref="member">arm_status</ref></type>
        <definition>arm_status arm_mat_mult_q15</definition>
        <argsstring>(const arm_matrix_instance_q15 *pSrcA, const arm_matrix_instance_q15 *pSrcB, arm_matrix_instance_q15 *pDst, q15_t *pState)</argsstring>
        <name>arm_mat_mult_q15</name>
        <param>
          <type>const <ref refid="structarm__matrix__instance__q15" kindref="compound">arm_matrix_instance_q15</ref> *</type>
          <declname>pSrcA</declname>
        </param>
        <param>
          <type>const <ref refid="structarm__matrix__instance__q15" kindref="compound">arm_matrix_instance_q15</ref> *</type>
          <declname>pSrcB</declname>
        </param>
        <param>
          <type><ref refid="structarm__matrix__instance__q15" kindref="compound">arm_matrix_instance_q15</ref> *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pState</declname>
        </param>
        <briefdescription>
<para>Q15 matrix multiplication. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrcA</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input matrix structure </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrcB</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input matrix structure </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to output matrix structure </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pState</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the array for storing intermediate results </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The function returns either <computeroutput>ARM_MATH_SIZE_MISMATCH</computeroutput> or <computeroutput>ARM_MATH_SUCCESS</computeroutput> based on the outcome of size checking. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="1552" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a08f37d93a5bfef0c5000dc5e0a411f93" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6" kindref="member">arm_status</ref></type>
        <definition>arm_status arm_mat_mult_fast_q15</definition>
        <argsstring>(const arm_matrix_instance_q15 *pSrcA, const arm_matrix_instance_q15 *pSrcB, arm_matrix_instance_q15 *pDst, q15_t *pState)</argsstring>
        <name>arm_mat_mult_fast_q15</name>
        <param>
          <type>const <ref refid="structarm__matrix__instance__q15" kindref="compound">arm_matrix_instance_q15</ref> *</type>
          <declname>pSrcA</declname>
        </param>
        <param>
          <type>const <ref refid="structarm__matrix__instance__q15" kindref="compound">arm_matrix_instance_q15</ref> *</type>
          <declname>pSrcB</declname>
        </param>
        <param>
          <type><ref refid="structarm__matrix__instance__q15" kindref="compound">arm_matrix_instance_q15</ref> *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pState</declname>
        </param>
        <briefdescription>
<para>Q15 matrix multiplication (fast variant) for Cortex-M3 and Cortex-M4. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrcA</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input matrix structure </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrcB</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input matrix structure </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to output matrix structure </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pState</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the array for storing intermediate results </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The function returns either <computeroutput>ARM_MATH_SIZE_MISMATCH</computeroutput> or <computeroutput>ARM_MATH_SUCCESS</computeroutput> based on the outcome of size checking. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="1568" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a2ec612a8c2c4916477fb9bc1ab548a6e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6" kindref="member">arm_status</ref></type>
        <definition>arm_status arm_mat_mult_q31</definition>
        <argsstring>(const arm_matrix_instance_q31 *pSrcA, const arm_matrix_instance_q31 *pSrcB, arm_matrix_instance_q31 *pDst)</argsstring>
        <name>arm_mat_mult_q31</name>
        <param>
          <type>const <ref refid="structarm__matrix__instance__q31" kindref="compound">arm_matrix_instance_q31</ref> *</type>
          <declname>pSrcA</declname>
        </param>
        <param>
          <type>const <ref refid="structarm__matrix__instance__q31" kindref="compound">arm_matrix_instance_q31</ref> *</type>
          <declname>pSrcB</declname>
        </param>
        <param>
          <type><ref refid="structarm__matrix__instance__q31" kindref="compound">arm_matrix_instance_q31</ref> *</type>
          <declname>pDst</declname>
        </param>
        <briefdescription>
<para>Q31 matrix multiplication. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrcA</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input matrix structure </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrcB</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input matrix structure </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to output matrix structure </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The function returns either <computeroutput>ARM_MATH_SIZE_MISMATCH</computeroutput> or <computeroutput>ARM_MATH_SUCCESS</computeroutput> based on the outcome of size checking. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="1583" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a2785e8c1b785348b0c439b56aaf585a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6" kindref="member">arm_status</ref></type>
        <definition>arm_status arm_mat_mult_fast_q31</definition>
        <argsstring>(const arm_matrix_instance_q31 *pSrcA, const arm_matrix_instance_q31 *pSrcB, arm_matrix_instance_q31 *pDst)</argsstring>
        <name>arm_mat_mult_fast_q31</name>
        <param>
          <type>const <ref refid="structarm__matrix__instance__q31" kindref="compound">arm_matrix_instance_q31</ref> *</type>
          <declname>pSrcA</declname>
        </param>
        <param>
          <type>const <ref refid="structarm__matrix__instance__q31" kindref="compound">arm_matrix_instance_q31</ref> *</type>
          <declname>pSrcB</declname>
        </param>
        <param>
          <type><ref refid="structarm__matrix__instance__q31" kindref="compound">arm_matrix_instance_q31</ref> *</type>
          <declname>pDst</declname>
        </param>
        <briefdescription>
<para>Q31 matrix multiplication (fast variant) for Cortex-M3 and Cortex-M4. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrcA</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input matrix structure </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrcB</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input matrix structure </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to output matrix structure </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The function returns either <computeroutput>ARM_MATH_SIZE_MISMATCH</computeroutput> or <computeroutput>ARM_MATH_SUCCESS</computeroutput> based on the outcome of size checking. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="1597" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1ac8b72fb70246ccfee3b372002345732c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6" kindref="member">arm_status</ref></type>
        <definition>arm_status arm_mat_sub_f32</definition>
        <argsstring>(const arm_matrix_instance_f32 *pSrcA, const arm_matrix_instance_f32 *pSrcB, arm_matrix_instance_f32 *pDst)</argsstring>
        <name>arm_mat_sub_f32</name>
        <param>
          <type>const <ref refid="structarm__matrix__instance__f32" kindref="compound">arm_matrix_instance_f32</ref> *</type>
          <declname>pSrcA</declname>
        </param>
        <param>
          <type>const <ref refid="structarm__matrix__instance__f32" kindref="compound">arm_matrix_instance_f32</ref> *</type>
          <declname>pSrcB</declname>
        </param>
        <param>
          <type><ref refid="structarm__matrix__instance__f32" kindref="compound">arm_matrix_instance_f32</ref> *</type>
          <declname>pDst</declname>
        </param>
        <briefdescription>
<para>Floating-point matrix subtraction. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrcA</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input matrix structure </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrcB</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input matrix structure </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to output matrix structure </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The function returns either <computeroutput>ARM_MATH_SIZE_MISMATCH</computeroutput> or <computeroutput>ARM_MATH_SUCCESS</computeroutput> based on the outcome of size checking. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="1611" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1af647776a425b7f9dd0aca3e11d81f02f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6" kindref="member">arm_status</ref></type>
        <definition>arm_status arm_mat_sub_q15</definition>
        <argsstring>(const arm_matrix_instance_q15 *pSrcA, const arm_matrix_instance_q15 *pSrcB, arm_matrix_instance_q15 *pDst)</argsstring>
        <name>arm_mat_sub_q15</name>
        <param>
          <type>const <ref refid="structarm__matrix__instance__q15" kindref="compound">arm_matrix_instance_q15</ref> *</type>
          <declname>pSrcA</declname>
        </param>
        <param>
          <type>const <ref refid="structarm__matrix__instance__q15" kindref="compound">arm_matrix_instance_q15</ref> *</type>
          <declname>pSrcB</declname>
        </param>
        <param>
          <type><ref refid="structarm__matrix__instance__q15" kindref="compound">arm_matrix_instance_q15</ref> *</type>
          <declname>pDst</declname>
        </param>
        <briefdescription>
<para>Q15 matrix subtraction. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrcA</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input matrix structure </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrcB</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input matrix structure </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to output matrix structure </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The function returns either <computeroutput>ARM_MATH_SIZE_MISMATCH</computeroutput> or <computeroutput>ARM_MATH_SUCCESS</computeroutput> based on the outcome of size checking. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="1625" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a39f42e0e3b7f115fbb909d6ff4e1329d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6" kindref="member">arm_status</ref></type>
        <definition>arm_status arm_mat_sub_q31</definition>
        <argsstring>(const arm_matrix_instance_q31 *pSrcA, const arm_matrix_instance_q31 *pSrcB, arm_matrix_instance_q31 *pDst)</argsstring>
        <name>arm_mat_sub_q31</name>
        <param>
          <type>const <ref refid="structarm__matrix__instance__q31" kindref="compound">arm_matrix_instance_q31</ref> *</type>
          <declname>pSrcA</declname>
        </param>
        <param>
          <type>const <ref refid="structarm__matrix__instance__q31" kindref="compound">arm_matrix_instance_q31</ref> *</type>
          <declname>pSrcB</declname>
        </param>
        <param>
          <type><ref refid="structarm__matrix__instance__q31" kindref="compound">arm_matrix_instance_q31</ref> *</type>
          <declname>pDst</declname>
        </param>
        <briefdescription>
<para>Q31 matrix subtraction. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrcA</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input matrix structure </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrcB</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input matrix structure </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to output matrix structure </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The function returns either <computeroutput>ARM_MATH_SIZE_MISMATCH</computeroutput> or <computeroutput>ARM_MATH_SUCCESS</computeroutput> based on the outcome of size checking. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="1639" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a9cb4e385b18c9a0b9cbc940c1067ca12" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6" kindref="member">arm_status</ref></type>
        <definition>arm_status arm_mat_scale_f32</definition>
        <argsstring>(const arm_matrix_instance_f32 *pSrc, float32_t scale, arm_matrix_instance_f32 *pDst)</argsstring>
        <name>arm_mat_scale_f32</name>
        <param>
          <type>const <ref refid="structarm__matrix__instance__f32" kindref="compound">arm_matrix_instance_f32</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref></type>
          <declname>scale</declname>
        </param>
        <param>
          <type><ref refid="structarm__matrix__instance__f32" kindref="compound">arm_matrix_instance_f32</ref> *</type>
          <declname>pDst</declname>
        </param>
        <briefdescription>
<para>Floating-point matrix scaling. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input matrix </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">scale</parametername>
</parameternamelist>
<parameterdescription>
<para>scale factor </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output matrix </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The function returns either <computeroutput>ARM_MATH_SIZE_MISMATCH</computeroutput> or <computeroutput>ARM_MATH_SUCCESS</computeroutput> based on the outcome of size checking. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="1653" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a7521769e2cf1c3d9c4656138cd2ae2ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6" kindref="member">arm_status</ref></type>
        <definition>arm_status arm_mat_scale_q15</definition>
        <argsstring>(const arm_matrix_instance_q15 *pSrc, q15_t scaleFract, int32_t shift, arm_matrix_instance_q15 *pDst)</argsstring>
        <name>arm_mat_scale_q15</name>
        <param>
          <type>const <ref refid="structarm__matrix__instance__q15" kindref="compound">arm_matrix_instance_q15</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref></type>
          <declname>scaleFract</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>shift</declname>
        </param>
        <param>
          <type><ref refid="structarm__matrix__instance__q15" kindref="compound">arm_matrix_instance_q15</ref> *</type>
          <declname>pDst</declname>
        </param>
        <briefdescription>
<para>Q15 matrix scaling. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>points to input matrix </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">scaleFract</parametername>
</parameternamelist>
<parameterdescription>
<para>fractional portion of the scale factor </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">shift</parametername>
</parameternamelist>
<parameterdescription>
<para>number of bits to shift the result by </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to output matrix </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The function returns either <computeroutput>ARM_MATH_SIZE_MISMATCH</computeroutput> or <computeroutput>ARM_MATH_SUCCESS</computeroutput> based on the outcome of size checking. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="1668" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a609743821ee81fa8c34c4bcdc1ed9744" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6" kindref="member">arm_status</ref></type>
        <definition>arm_status arm_mat_scale_q31</definition>
        <argsstring>(const arm_matrix_instance_q31 *pSrc, q31_t scaleFract, int32_t shift, arm_matrix_instance_q31 *pDst)</argsstring>
        <name>arm_mat_scale_q31</name>
        <param>
          <type>const <ref refid="structarm__matrix__instance__q31" kindref="compound">arm_matrix_instance_q31</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref></type>
          <declname>scaleFract</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>shift</declname>
        </param>
        <param>
          <type><ref refid="structarm__matrix__instance__q31" kindref="compound">arm_matrix_instance_q31</ref> *</type>
          <declname>pDst</declname>
        </param>
        <briefdescription>
<para>Q31 matrix scaling. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>points to input matrix </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">scaleFract</parametername>
</parameternamelist>
<parameterdescription>
<para>fractional portion of the scale factor </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">shift</parametername>
</parameternamelist>
<parameterdescription>
<para>number of bits to shift the result by </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to output matrix structure </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The function returns either <computeroutput>ARM_MATH_SIZE_MISMATCH</computeroutput> or <computeroutput>ARM_MATH_SUCCESS</computeroutput> based on the outcome of size checking. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="1684" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a48a5e5d37e1f062cc57fcfaf683343cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_mat_init_q31</definition>
        <argsstring>(arm_matrix_instance_q31 *S, uint16_t nRows, uint16_t nColumns, q31_t *pData)</argsstring>
        <name>arm_mat_init_q31</name>
        <param>
          <type><ref refid="structarm__matrix__instance__q31" kindref="compound">arm_matrix_instance_q31</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>nRows</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>nColumns</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pData</declname>
        </param>
        <briefdescription>
<para>Q31 matrix initialization. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">S</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the floating-point matrix structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">nRows</parametername>
</parameternamelist>
<parameterdescription>
<para>number of rows in the matrix. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">nColumns</parametername>
</parameternamelist>
<parameterdescription>
<para>number of columns in the matrix. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pData</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the matrix data array. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="1698" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a31a7c2b991803d49719393eb2d53dc26" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_mat_init_q15</definition>
        <argsstring>(arm_matrix_instance_q15 *S, uint16_t nRows, uint16_t nColumns, q15_t *pData)</argsstring>
        <name>arm_mat_init_q15</name>
        <param>
          <type><ref refid="structarm__matrix__instance__q15" kindref="compound">arm_matrix_instance_q15</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>nRows</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>nColumns</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pData</declname>
        </param>
        <briefdescription>
<para>Q15 matrix initialization. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">S</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the floating-point matrix structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">nRows</parametername>
</parameternamelist>
<parameterdescription>
<para>number of rows in the matrix. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">nColumns</parametername>
</parameternamelist>
<parameterdescription>
<para>number of columns in the matrix. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pData</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the matrix data array. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="1712" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a11e3dc41592a6401c13182fef9416a27" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_mat_init_f32</definition>
        <argsstring>(arm_matrix_instance_f32 *S, uint16_t nRows, uint16_t nColumns, float32_t *pData)</argsstring>
        <name>arm_mat_init_f32</name>
        <param>
          <type><ref refid="structarm__matrix__instance__f32" kindref="compound">arm_matrix_instance_f32</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>nRows</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>nColumns</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pData</declname>
        </param>
        <briefdescription>
<para>Floating-point matrix initialization. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">S</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the floating-point matrix structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">nRows</parametername>
</parameternamelist>
<parameterdescription>
<para>number of rows in the matrix. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">nColumns</parametername>
</parameternamelist>
<parameterdescription>
<para>number of columns in the matrix. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pData</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the matrix data array. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="1726" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1ae31536b19b82b93ed184fb1ab73cfcb3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_pid_init_f32</definition>
        <argsstring>(arm_pid_instance_f32 *S, int32_t resetStateFlag)</argsstring>
        <name>arm_pid_init_f32</name>
        <param>
          <type><ref refid="structarm__pid__instance__f32" kindref="compound">arm_pid_instance_f32</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>resetStateFlag</declname>
        </param>
        <briefdescription>
<para>Initialization function for the floating-point PID Control. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">S</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the PID structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">resetStateFlag</parametername>
</parameternamelist>
<parameterdescription>
<para>flag to reset the state. 0 = no change in state 1 = reset the state. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="1787" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a9ec860bcb6f8ca31205bf0f1b51ab723" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_pid_reset_f32</definition>
        <argsstring>(arm_pid_instance_f32 *S)</argsstring>
        <name>arm_pid_reset_f32</name>
        <param>
          <type><ref refid="structarm__pid__instance__f32" kindref="compound">arm_pid_instance_f32</ref> *</type>
          <declname>S</declname>
        </param>
        <briefdescription>
<para>Reset function for the floating-point PID Control. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">S</parametername>
</parameternamelist>
<parameterdescription>
<para>is an instance of the floating-point PID Control structure </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="1796" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1ad9d88485234fa9460b1ce9e64989ac86" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_pid_init_q31</definition>
        <argsstring>(arm_pid_instance_q31 *S, int32_t resetStateFlag)</argsstring>
        <name>arm_pid_init_q31</name>
        <param>
          <type><ref refid="structarm__pid__instance__q31" kindref="compound">arm_pid_instance_q31</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>resetStateFlag</declname>
        </param>
        <briefdescription>
<para>Initialization function for the Q31 PID Control. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">S</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the Q15 PID structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">resetStateFlag</parametername>
</parameternamelist>
<parameterdescription>
<para>flag to reset the state. 0 = no change in state 1 = reset the state. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="1805" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1aeecbacd3fb37c608ec25474d3a0dffa9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_pid_reset_q31</definition>
        <argsstring>(arm_pid_instance_q31 *S)</argsstring>
        <name>arm_pid_reset_q31</name>
        <param>
          <type><ref refid="structarm__pid__instance__q31" kindref="compound">arm_pid_instance_q31</ref> *</type>
          <declname>S</declname>
        </param>
        <briefdescription>
<para>Reset function for the Q31 PID Control. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">S</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the Q31 PID Control structure </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="1815" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a2cb1e3d3ebb167348fdabec74653d5c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_pid_init_q15</definition>
        <argsstring>(arm_pid_instance_q15 *S, int32_t resetStateFlag)</argsstring>
        <name>arm_pid_init_q15</name>
        <param>
          <type><ref refid="structarm__pid__instance__q15" kindref="compound">arm_pid_instance_q15</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>resetStateFlag</declname>
        </param>
        <briefdescription>
<para>Initialization function for the Q15 PID Control. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">S</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the Q15 PID structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">resetStateFlag</parametername>
</parameternamelist>
<parameterdescription>
<para>flag to reset the state. 0 = no change in state 1 = reset the state. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="1824" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a408566dacb4fa6e0458b2c75672e525f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_pid_reset_q15</definition>
        <argsstring>(arm_pid_instance_q15 *S)</argsstring>
        <name>arm_pid_reset_q15</name>
        <param>
          <type><ref refid="structarm__pid__instance__q15" kindref="compound">arm_pid_instance_q15</ref> *</type>
          <declname>S</declname>
        </param>
        <briefdescription>
<para>Reset function for the Q15 PID Control. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">S</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the q15 PID Control structure </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="1833" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a16677275ed83ff0878da531e875c27ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_mult_q7</definition>
        <argsstring>(q7_t *pSrcA, q7_t *pSrcB, q7_t *pDst, uint32_t blockSize)</argsstring>
        <name>arm_mult_q7</name>
        <param>
          <type><ref refid="arm__math_8h_1ae541b6f232c305361e9b416fc9eed263" kindref="member">q7_t</ref> *</type>
          <declname>pSrcA</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ae541b6f232c305361e9b416fc9eed263" kindref="member">q7_t</ref> *</type>
          <declname>pSrcB</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ae541b6f232c305361e9b416fc9eed263" kindref="member">q7_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Q7 vector multiplication. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrcA</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrcB</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples in each vector </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="1896" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1afb0778d27ed98a2a6f2ecb7d48cc8c75" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_mult_q15</definition>
        <argsstring>(q15_t *pSrcA, q15_t *pSrcB, q15_t *pDst, uint32_t blockSize)</argsstring>
        <name>arm_mult_q15</name>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pSrcA</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pSrcB</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Q15 vector multiplication. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrcA</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrcB</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples in each vector </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="1910" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a3528c0f54a0607acc603f0490d3ca6c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_mult_q31</definition>
        <argsstring>(q31_t *pSrcA, q31_t *pSrcB, q31_t *pDst, uint32_t blockSize)</argsstring>
        <name>arm_mult_q31</name>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pSrcA</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pSrcB</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Q31 vector multiplication. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrcA</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrcB</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples in each vector </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="1924" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1aca3f0b8227da431ab29225b88888aa32" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_mult_f32</definition>
        <argsstring>(float32_t *pSrcA, float32_t *pSrcB, float32_t *pDst, uint32_t blockSize)</argsstring>
        <name>arm_mult_f32</name>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pSrcA</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pSrcB</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Floating-point vector multiplication. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrcA</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrcB</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples in each vector </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="1938" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a5c5b2127b3c4ea2d03692127f8543858" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6" kindref="member">arm_status</ref></type>
        <definition>arm_status arm_cfft_radix2_init_q15</definition>
        <argsstring>(arm_cfft_radix2_instance_q15 *S, uint16_t fftLen, uint8_t ifftFlag, uint8_t bitReverseFlag)</argsstring>
        <name>arm_cfft_radix2_init_q15</name>
        <param>
          <type><ref refid="structarm__cfft__radix2__instance__q15" kindref="compound">arm_cfft_radix2_instance_q15</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>fftLen</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ifftFlag</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>bitReverseFlag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="1960" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a55b424341dc3efd3fa0bcaaff4bdbf40" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_cfft_radix2_q15</definition>
        <argsstring>(const arm_cfft_radix2_instance_q15 *S, q15_t *pSrc)</argsstring>
        <name>arm_cfft_radix2_q15</name>
        <param>
          <type>const <ref refid="structarm__cfft__radix2__instance__q15" kindref="compound">arm_cfft_radix2_instance_q15</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="1967" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a0c2acfda3126c452e75b81669e8ad9ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6" kindref="member">arm_status</ref></type>
        <definition>arm_status arm_cfft_radix4_init_q15</definition>
        <argsstring>(arm_cfft_radix4_instance_q15 *S, uint16_t fftLen, uint8_t ifftFlag, uint8_t bitReverseFlag)</argsstring>
        <name>arm_cfft_radix4_init_q15</name>
        <param>
          <type><ref refid="structarm__cfft__radix4__instance__q15" kindref="compound">arm_cfft_radix4_instance_q15</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>fftLen</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ifftFlag</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>bitReverseFlag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="1987" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a8d66cdac41b8bf6cefdb895456eee84a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_cfft_radix4_q15</definition>
        <argsstring>(const arm_cfft_radix4_instance_q15 *S, q15_t *pSrc)</argsstring>
        <name>arm_cfft_radix4_q15</name>
        <param>
          <type>const <ref refid="structarm__cfft__radix4__instance__q15" kindref="compound">arm_cfft_radix4_instance_q15</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="1994" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1abec9611e77382f31e152668bf6b4b638" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6" kindref="member">arm_status</ref></type>
        <definition>arm_status arm_cfft_radix2_init_q31</definition>
        <argsstring>(arm_cfft_radix2_instance_q31 *S, uint16_t fftLen, uint8_t ifftFlag, uint8_t bitReverseFlag)</argsstring>
        <name>arm_cfft_radix2_init_q31</name>
        <param>
          <type><ref refid="structarm__cfft__radix2__instance__q31" kindref="compound">arm_cfft_radix2_instance_q31</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>fftLen</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ifftFlag</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>bitReverseFlag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="2013" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a6321f703ec87a274aedaab33d3e766b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_cfft_radix2_q31</definition>
        <argsstring>(const arm_cfft_radix2_instance_q31 *S, q31_t *pSrc)</argsstring>
        <name>arm_cfft_radix2_q31</name>
        <param>
          <type>const <ref refid="structarm__cfft__radix2__instance__q31" kindref="compound">arm_cfft_radix2_instance_q31</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="2020" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1afde3ee1f58cf393b45a9073174fff548" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_cfft_radix4_q31</definition>
        <argsstring>(const arm_cfft_radix4_instance_q31 *S, q31_t *pSrc)</argsstring>
        <name>arm_cfft_radix4_q31</name>
        <param>
          <type>const <ref refid="structarm__cfft__radix4__instance__q31" kindref="compound">arm_cfft_radix4_instance_q31</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="2039" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1ad5caaafeec900c8ff72321c01bbd462c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6" kindref="member">arm_status</ref></type>
        <definition>arm_status arm_cfft_radix4_init_q31</definition>
        <argsstring>(arm_cfft_radix4_instance_q31 *S, uint16_t fftLen, uint8_t ifftFlag, uint8_t bitReverseFlag)</argsstring>
        <name>arm_cfft_radix4_init_q31</name>
        <param>
          <type><ref refid="structarm__cfft__radix4__instance__q31" kindref="compound">arm_cfft_radix4_instance_q31</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>fftLen</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ifftFlag</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>bitReverseFlag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="2044" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1ac9565e6bc7229577ecf5e090313cafd7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6" kindref="member">arm_status</ref></type>
        <definition>arm_status arm_cfft_radix2_init_f32</definition>
        <argsstring>(arm_cfft_radix2_instance_f32 *S, uint16_t fftLen, uint8_t ifftFlag, uint8_t bitReverseFlag)</argsstring>
        <name>arm_cfft_radix2_init_f32</name>
        <param>
          <type><ref refid="structarm__cfft__radix2__instance__f32" kindref="compound">arm_cfft_radix2_instance_f32</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>fftLen</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ifftFlag</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>bitReverseFlag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="2066" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a9fadd650b802f612ae558ddaab789a6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_cfft_radix2_f32</definition>
        <argsstring>(const arm_cfft_radix2_instance_f32 *S, float32_t *pSrc)</argsstring>
        <name>arm_cfft_radix2_f32</name>
        <param>
          <type>const <ref refid="structarm__cfft__radix2__instance__f32" kindref="compound">arm_cfft_radix2_instance_f32</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="2073" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1af336459f684f0b17bfae539ef1b1b78a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6" kindref="member">arm_status</ref></type>
        <definition>arm_status arm_cfft_radix4_init_f32</definition>
        <argsstring>(arm_cfft_radix4_instance_f32 *S, uint16_t fftLen, uint8_t ifftFlag, uint8_t bitReverseFlag)</argsstring>
        <name>arm_cfft_radix4_init_f32</name>
        <param>
          <type><ref refid="structarm__cfft__radix4__instance__f32" kindref="compound">arm_cfft_radix4_instance_f32</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>fftLen</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ifftFlag</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>bitReverseFlag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="2093" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a521f670cd9c571bc61aff9bec89f4c26" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_cfft_radix4_f32</definition>
        <argsstring>(const arm_cfft_radix4_instance_f32 *S, float32_t *pSrc)</argsstring>
        <name>arm_cfft_radix4_f32</name>
        <param>
          <type>const <ref refid="structarm__cfft__radix4__instance__f32" kindref="compound">arm_cfft_radix4_instance_f32</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="2100" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a68cdacd2267a2967955e40e6b7ec1229" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_cfft_q15</definition>
        <argsstring>(const arm_cfft_instance_q15 *S, q15_t *p1, uint8_t ifftFlag, uint8_t bitReverseFlag)</argsstring>
        <name>arm_cfft_q15</name>
        <param>
          <type>const <ref refid="structarm__cfft__instance__q15" kindref="compound">arm_cfft_instance_q15</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ifftFlag</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>bitReverseFlag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="2115" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a5a0008bd997ab6e2e299ef2fb272fb4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_cfft_q31</definition>
        <argsstring>(const arm_cfft_instance_q31 *S, q31_t *p1, uint8_t ifftFlag, uint8_t bitReverseFlag)</argsstring>
        <name>arm_cfft_q31</name>
        <param>
          <type>const <ref refid="structarm__cfft__instance__q31" kindref="compound">arm_cfft_instance_q31</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ifftFlag</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>bitReverseFlag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="2132" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1ade0f9c4ff157b6b9c72a1eafd86ebf80" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_cfft_f32</definition>
        <argsstring>(const arm_cfft_instance_f32 *S, float32_t *p1, uint8_t ifftFlag, uint8_t bitReverseFlag)</argsstring>
        <name>arm_cfft_f32</name>
        <param>
          <type>const <ref refid="structarm__cfft__instance__f32" kindref="compound">arm_cfft_instance_f32</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ifftFlag</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>bitReverseFlag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="2149" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a053450cc600a55410ba5b5605e96245d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6" kindref="member">arm_status</ref></type>
        <definition>arm_status arm_rfft_init_q15</definition>
        <argsstring>(arm_rfft_instance_q15 *S, uint32_t fftLenReal, uint32_t ifftFlagR, uint32_t bitReverseFlag)</argsstring>
        <name>arm_rfft_init_q15</name>
        <param>
          <type><ref refid="structarm__rfft__instance__q15" kindref="compound">arm_rfft_instance_q15</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>fftLenReal</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>ifftFlagR</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>bitReverseFlag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="2169" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a00e615f5db21736ad5b27fb6146f3fc5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_rfft_q15</definition>
        <argsstring>(const arm_rfft_instance_q15 *S, q15_t *pSrc, q15_t *pDst)</argsstring>
        <name>arm_rfft_q15</name>
        <param>
          <type>const <ref refid="structarm__rfft__instance__q15" kindref="compound">arm_rfft_instance_q15</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="2175" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a5abde938abbe72e95c5bab080eb33c45" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6" kindref="member">arm_status</ref></type>
        <definition>arm_status arm_rfft_init_q31</definition>
        <argsstring>(arm_rfft_instance_q31 *S, uint32_t fftLenReal, uint32_t ifftFlagR, uint32_t bitReverseFlag)</argsstring>
        <name>arm_rfft_init_q31</name>
        <param>
          <type><ref refid="structarm__rfft__instance__q31" kindref="compound">arm_rfft_instance_q31</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>fftLenReal</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>ifftFlagR</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>bitReverseFlag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="2194" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1abaeab5646aeea9844e6d42ca8c73fe3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_rfft_q31</definition>
        <argsstring>(const arm_rfft_instance_q31 *S, q31_t *pSrc, q31_t *pDst)</argsstring>
        <name>arm_rfft_q31</name>
        <param>
          <type>const <ref refid="structarm__rfft__instance__q31" kindref="compound">arm_rfft_instance_q31</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="2200" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a10717ee326bf50832ef1c25b85a23068" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6" kindref="member">arm_status</ref></type>
        <definition>arm_status arm_rfft_init_f32</definition>
        <argsstring>(arm_rfft_instance_f32 *S, arm_cfft_radix4_instance_f32 *S_CFFT, uint32_t fftLenReal, uint32_t ifftFlagR, uint32_t bitReverseFlag)</argsstring>
        <name>arm_rfft_init_f32</name>
        <param>
          <type><ref refid="structarm__rfft__instance__f32" kindref="compound">arm_rfft_instance_f32</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type><ref refid="structarm__cfft__radix4__instance__f32" kindref="compound">arm_cfft_radix4_instance_f32</ref> *</type>
          <declname>S_CFFT</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>fftLenReal</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>ifftFlagR</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>bitReverseFlag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="2220" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a3df1766d230532bc068fc4ed69d0fcdc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_rfft_f32</definition>
        <argsstring>(const arm_rfft_instance_f32 *S, float32_t *pSrc, float32_t *pDst)</argsstring>
        <name>arm_rfft_f32</name>
        <param>
          <type>const <ref refid="structarm__rfft__instance__f32" kindref="compound">arm_rfft_instance_f32</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="2227" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1ac5fceb172551e7c11eb4d0e17ef15aa3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6" kindref="member">arm_status</ref></type>
        <definition>arm_status arm_rfft_fast_init_f32</definition>
        <argsstring>(arm_rfft_fast_instance_f32 *S, uint16_t fftLen)</argsstring>
        <name>arm_rfft_fast_init_f32</name>
        <param>
          <type><ref refid="structarm__rfft__fast__instance__f32" kindref="compound">arm_rfft_fast_instance_f32</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>fftLen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="2242" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a180d8b764d59cbb85d37a2d5f7cd9799" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_rfft_fast_f32</definition>
        <argsstring>(arm_rfft_fast_instance_f32 *S, float32_t *p, float32_t *pOut, uint8_t ifftFlag)</argsstring>
        <name>arm_rfft_fast_f32</name>
        <param>
          <type><ref refid="structarm__rfft__fast__instance__f32" kindref="compound">arm_rfft_fast_instance_f32</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pOut</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ifftFlag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="2246" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1ab094ad3bc6fa1b84e8b12a24e1850a06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6" kindref="member">arm_status</ref></type>
        <definition>arm_status arm_dct4_init_f32</definition>
        <argsstring>(arm_dct4_instance_f32 *S, arm_rfft_instance_f32 *S_RFFT, arm_cfft_radix4_instance_f32 *S_CFFT, uint16_t N, uint16_t Nby2, float32_t normalize)</argsstring>
        <name>arm_dct4_init_f32</name>
        <param>
          <type><ref refid="structarm__dct4__instance__f32" kindref="compound">arm_dct4_instance_f32</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type><ref refid="structarm__rfft__instance__f32" kindref="compound">arm_rfft_instance_f32</ref> *</type>
          <declname>S_RFFT</declname>
        </param>
        <param>
          <type><ref refid="structarm__cfft__radix4__instance__f32" kindref="compound">arm_cfft_radix4_instance_f32</ref> *</type>
          <declname>S_CFFT</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>N</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>Nby2</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref></type>
          <declname>normalize</declname>
        </param>
        <briefdescription>
<para>Initialization function for the floating-point DCT4/IDCT4. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">S</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of floating-point DCT4/IDCT4 structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">S_RFFT</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of floating-point RFFT/RIFFT structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">S_CFFT</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of floating-point CFFT/CIFFT structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">N</parametername>
</parameternamelist>
<parameterdescription>
<para>length of the DCT4. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">Nby2</parametername>
</parameternamelist>
<parameterdescription>
<para>half of the length of the DCT4. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">normalize</parametername>
</parameternamelist>
<parameterdescription>
<para>normalizing factor. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>arm_status function returns ARM_MATH_SUCCESS if initialization is successful or ARM_MATH_ARGUMENT_ERROR if <computeroutput>fftLenReal</computeroutput> is not a supported transform length. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="2276" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1afd538d68886848bc090ec2b0d364cc81" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_dct4_f32</definition>
        <argsstring>(const arm_dct4_instance_f32 *S, float32_t *pState, float32_t *pInlineBuffer)</argsstring>
        <name>arm_dct4_f32</name>
        <param>
          <type>const <ref refid="structarm__dct4__instance__f32" kindref="compound">arm_dct4_instance_f32</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pState</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pInlineBuffer</declname>
        </param>
        <briefdescription>
<para>Processing function for the floating-point DCT4/IDCT4. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">S</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the floating-point DCT4/IDCT4 structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pState</parametername>
</parameternamelist>
<parameterdescription>
<para>points to state buffer. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">pInlineBuffer</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the in-place input and output buffer. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="2291" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a631bb59c7c97c814ff7147ecba6a716a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6" kindref="member">arm_status</ref></type>
        <definition>arm_status arm_dct4_init_q31</definition>
        <argsstring>(arm_dct4_instance_q31 *S, arm_rfft_instance_q31 *S_RFFT, arm_cfft_radix4_instance_q31 *S_CFFT, uint16_t N, uint16_t Nby2, q31_t normalize)</argsstring>
        <name>arm_dct4_init_q31</name>
        <param>
          <type><ref refid="structarm__dct4__instance__q31" kindref="compound">arm_dct4_instance_q31</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type><ref refid="structarm__rfft__instance__q31" kindref="compound">arm_rfft_instance_q31</ref> *</type>
          <declname>S_RFFT</declname>
        </param>
        <param>
          <type><ref refid="structarm__cfft__radix4__instance__q31" kindref="compound">arm_cfft_radix4_instance_q31</ref> *</type>
          <declname>S_CFFT</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>N</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>Nby2</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref></type>
          <declname>normalize</declname>
        </param>
        <briefdescription>
<para>Initialization function for the Q31 DCT4/IDCT4. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">S</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of Q31 DCT4/IDCT4 structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">S_RFFT</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of Q31 RFFT/RIFFT structure </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">S_CFFT</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of Q31 CFFT/CIFFT structure </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">N</parametername>
</parameternamelist>
<parameterdescription>
<para>length of the DCT4. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">Nby2</parametername>
</parameternamelist>
<parameterdescription>
<para>half of the length of the DCT4. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">normalize</parametername>
</parameternamelist>
<parameterdescription>
<para>normalizing factor. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>arm_status function returns ARM_MATH_SUCCESS if initialization is successful or ARM_MATH_ARGUMENT_ERROR if <computeroutput>N</computeroutput> is not a supported transform length. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="2322" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1ad04d0baab6ed081d8e8afe02538eb80b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_dct4_q31</definition>
        <argsstring>(const arm_dct4_instance_q31 *S, q31_t *pState, q31_t *pInlineBuffer)</argsstring>
        <name>arm_dct4_q31</name>
        <param>
          <type>const <ref refid="structarm__dct4__instance__q31" kindref="compound">arm_dct4_instance_q31</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pState</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pInlineBuffer</declname>
        </param>
        <briefdescription>
<para>Processing function for the Q31 DCT4/IDCT4. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">S</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the Q31 DCT4 structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pState</parametername>
</parameternamelist>
<parameterdescription>
<para>points to state buffer. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">pInlineBuffer</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the in-place input and output buffer. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="2337" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a966fd1b66a80873964533703ab5dc054" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6" kindref="member">arm_status</ref></type>
        <definition>arm_status arm_dct4_init_q15</definition>
        <argsstring>(arm_dct4_instance_q15 *S, arm_rfft_instance_q15 *S_RFFT, arm_cfft_radix4_instance_q15 *S_CFFT, uint16_t N, uint16_t Nby2, q15_t normalize)</argsstring>
        <name>arm_dct4_init_q15</name>
        <param>
          <type><ref refid="structarm__dct4__instance__q15" kindref="compound">arm_dct4_instance_q15</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type><ref refid="structarm__rfft__instance__q15" kindref="compound">arm_rfft_instance_q15</ref> *</type>
          <declname>S_RFFT</declname>
        </param>
        <param>
          <type><ref refid="structarm__cfft__radix4__instance__q15" kindref="compound">arm_cfft_radix4_instance_q15</ref> *</type>
          <declname>S_CFFT</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>N</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>Nby2</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref></type>
          <declname>normalize</declname>
        </param>
        <briefdescription>
<para>Initialization function for the Q15 DCT4/IDCT4. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">S</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of Q15 DCT4/IDCT4 structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">S_RFFT</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of Q15 RFFT/RIFFT structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">S_CFFT</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of Q15 CFFT/CIFFT structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">N</parametername>
</parameternamelist>
<parameterdescription>
<para>length of the DCT4. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">Nby2</parametername>
</parameternamelist>
<parameterdescription>
<para>half of the length of the DCT4. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">normalize</parametername>
</parameternamelist>
<parameterdescription>
<para>normalizing factor. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>arm_status function returns ARM_MATH_SUCCESS if initialization is successful or ARM_MATH_ARGUMENT_ERROR if <computeroutput>N</computeroutput> is not a supported transform length. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="2368" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a114cb9635059f678df291fcc887aaf2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_dct4_q15</definition>
        <argsstring>(const arm_dct4_instance_q15 *S, q15_t *pState, q15_t *pInlineBuffer)</argsstring>
        <name>arm_dct4_q15</name>
        <param>
          <type>const <ref refid="structarm__dct4__instance__q15" kindref="compound">arm_dct4_instance_q15</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pState</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pInlineBuffer</declname>
        </param>
        <briefdescription>
<para>Processing function for the Q15 DCT4/IDCT4. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">S</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the Q15 DCT4 structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pState</parametername>
</parameternamelist>
<parameterdescription>
<para>points to state buffer. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">pInlineBuffer</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the in-place input and output buffer. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="2383" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a6a904a547413b10565dd1d251c6bafbd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_add_f32</definition>
        <argsstring>(float32_t *pSrcA, float32_t *pSrcB, float32_t *pDst, uint32_t blockSize)</argsstring>
        <name>arm_add_f32</name>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pSrcA</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pSrcB</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Floating-point vector addition. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrcA</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrcB</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples in each vector </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="2396" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1aed633f415a7840a66861debca2dfb96b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_add_q7</definition>
        <argsstring>(q7_t *pSrcA, q7_t *pSrcB, q7_t *pDst, uint32_t blockSize)</argsstring>
        <name>arm_add_q7</name>
        <param>
          <type><ref refid="arm__math_8h_1ae541b6f232c305361e9b416fc9eed263" kindref="member">q7_t</ref> *</type>
          <declname>pSrcA</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ae541b6f232c305361e9b416fc9eed263" kindref="member">q7_t</ref> *</type>
          <declname>pSrcB</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ae541b6f232c305361e9b416fc9eed263" kindref="member">q7_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Q7 vector addition. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrcA</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrcB</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples in each vector </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="2410" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1abb51285a41f511670bbff62fc0e1bf62" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_add_q15</definition>
        <argsstring>(q15_t *pSrcA, q15_t *pSrcB, q15_t *pDst, uint32_t blockSize)</argsstring>
        <name>arm_add_q15</name>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pSrcA</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pSrcB</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Q15 vector addition. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrcA</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrcB</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples in each vector </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="2424" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a24d6c3f7f8b9fae4847c0c3f26a39a3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_add_q31</definition>
        <argsstring>(q31_t *pSrcA, q31_t *pSrcB, q31_t *pDst, uint32_t blockSize)</argsstring>
        <name>arm_add_q31</name>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pSrcA</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pSrcB</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Q31 vector addition. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrcA</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrcB</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples in each vector </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="2438" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a7f975a472de286331134227c08aad826" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_sub_f32</definition>
        <argsstring>(float32_t *pSrcA, float32_t *pSrcB, float32_t *pDst, uint32_t blockSize)</argsstring>
        <name>arm_sub_f32</name>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pSrcA</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pSrcB</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Floating-point vector subtraction. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrcA</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrcB</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples in each vector </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="2452" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1ab09941de7dfeb247e5c29b406a435fcc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_sub_q7</definition>
        <argsstring>(q7_t *pSrcA, q7_t *pSrcB, q7_t *pDst, uint32_t blockSize)</argsstring>
        <name>arm_sub_q7</name>
        <param>
          <type><ref refid="arm__math_8h_1ae541b6f232c305361e9b416fc9eed263" kindref="member">q7_t</ref> *</type>
          <declname>pSrcA</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ae541b6f232c305361e9b416fc9eed263" kindref="member">q7_t</ref> *</type>
          <declname>pSrcB</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ae541b6f232c305361e9b416fc9eed263" kindref="member">q7_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Q7 vector subtraction. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrcA</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrcB</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples in each vector </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="2466" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a997a8ee93088d15bda23c325d455b588" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_sub_q15</definition>
        <argsstring>(q15_t *pSrcA, q15_t *pSrcB, q15_t *pDst, uint32_t blockSize)</argsstring>
        <name>arm_sub_q15</name>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pSrcA</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pSrcB</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Q15 vector subtraction. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrcA</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrcB</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples in each vector </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="2480" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a28aa6908d092752144413e21933dc878" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_sub_q31</definition>
        <argsstring>(q31_t *pSrcA, q31_t *pSrcB, q31_t *pDst, uint32_t blockSize)</argsstring>
        <name>arm_sub_q31</name>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pSrcA</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pSrcB</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Q31 vector subtraction. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrcA</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrcB</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples in each vector </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="2494" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a3487af88b112f682ee90589cd419e123" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_scale_f32</definition>
        <argsstring>(float32_t *pSrc, float32_t scale, float32_t *pDst, uint32_t blockSize)</argsstring>
        <name>arm_scale_f32</name>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref></type>
          <declname>scale</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Multiplies a floating-point vector by a scalar. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">scale</parametername>
</parameternamelist>
<parameterdescription>
<para>scale factor to be applied </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples in the vector </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="2508" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1abc9fd3d37904c58df56492b351d21fb0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_scale_q7</definition>
        <argsstring>(q7_t *pSrc, q7_t scaleFract, int8_t shift, q7_t *pDst, uint32_t blockSize)</argsstring>
        <name>arm_scale_q7</name>
        <param>
          <type><ref refid="arm__math_8h_1ae541b6f232c305361e9b416fc9eed263" kindref="member">q7_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ae541b6f232c305361e9b416fc9eed263" kindref="member">q7_t</ref></type>
          <declname>scaleFract</declname>
        </param>
        <param>
          <type>int8_t</type>
          <declname>shift</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ae541b6f232c305361e9b416fc9eed263" kindref="member">q7_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Multiplies a Q7 vector by a scalar. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">scaleFract</parametername>
</parameternamelist>
<parameterdescription>
<para>fractional portion of the scale value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">shift</parametername>
</parameternamelist>
<parameterdescription>
<para>number of bits to shift the result by </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples in the vector </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="2523" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1afaac0e1927daffeb68a42719b53ea780" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_scale_q15</definition>
        <argsstring>(q15_t *pSrc, q15_t scaleFract, int8_t shift, q15_t *pDst, uint32_t blockSize)</argsstring>
        <name>arm_scale_q15</name>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref></type>
          <declname>scaleFract</declname>
        </param>
        <param>
          <type>int8_t</type>
          <declname>shift</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Multiplies a Q15 vector by a scalar. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">scaleFract</parametername>
</parameternamelist>
<parameterdescription>
<para>fractional portion of the scale value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">shift</parametername>
</parameternamelist>
<parameterdescription>
<para>number of bits to shift the result by </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples in the vector </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="2539" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a83e36cd82bf51ce35406a199e477d47c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_scale_q31</definition>
        <argsstring>(q31_t *pSrc, q31_t scaleFract, int8_t shift, q31_t *pDst, uint32_t blockSize)</argsstring>
        <name>arm_scale_q31</name>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref></type>
          <declname>scaleFract</declname>
        </param>
        <param>
          <type>int8_t</type>
          <declname>shift</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Multiplies a Q31 vector by a scalar. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">scaleFract</parametername>
</parameternamelist>
<parameterdescription>
<para>fractional portion of the scale value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">shift</parametername>
</parameternamelist>
<parameterdescription>
<para>number of bits to shift the result by </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples in the vector </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="2555" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1adc30985e33fbf96802a5a7954dece3b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_abs_q7</definition>
        <argsstring>(q7_t *pSrc, q7_t *pDst, uint32_t blockSize)</argsstring>
        <name>arm_abs_q7</name>
        <param>
          <type><ref refid="arm__math_8h_1ae541b6f232c305361e9b416fc9eed263" kindref="member">q7_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ae541b6f232c305361e9b416fc9eed263" kindref="member">q7_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Q7 vector absolute value. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples in each vector </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="2569" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a421b6275f9d35f50286c0ff3beceff02" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_abs_f32</definition>
        <argsstring>(float32_t *pSrc, float32_t *pDst, uint32_t blockSize)</argsstring>
        <name>arm_abs_f32</name>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Floating-point vector absolute value. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples in each vector </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="2581" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a39f92964c9b649ba252e26ebe7b95594" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_abs_q15</definition>
        <argsstring>(q15_t *pSrc, q15_t *pDst, uint32_t blockSize)</argsstring>
        <name>arm_abs_q15</name>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Q15 vector absolute value. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples in each vector </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="2593" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a59eafcdcdb52da60d37f20aec6ff4577" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_abs_q31</definition>
        <argsstring>(q31_t *pSrc, q31_t *pDst, uint32_t blockSize)</argsstring>
        <name>arm_abs_q31</name>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Q31 vector absolute value. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples in each vector </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="2605" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a55418d4362f6ba84c327f9b4f089a8c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_dot_prod_f32</definition>
        <argsstring>(float32_t *pSrcA, float32_t *pSrcB, uint32_t blockSize, float32_t *result)</argsstring>
        <name>arm_dot_prod_f32</name>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pSrcA</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pSrcB</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Dot product of floating-point vectors. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrcA</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrcB</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples in each vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">result</parametername>
</parameternamelist>
<parameterdescription>
<para>output result returned here </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="2618" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a9c3293a50ac7ec8ba928bf8e3aaea6c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_dot_prod_q7</definition>
        <argsstring>(q7_t *pSrcA, q7_t *pSrcB, uint32_t blockSize, q31_t *result)</argsstring>
        <name>arm_dot_prod_q7</name>
        <param>
          <type><ref refid="arm__math_8h_1ae541b6f232c305361e9b416fc9eed263" kindref="member">q7_t</ref> *</type>
          <declname>pSrcA</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ae541b6f232c305361e9b416fc9eed263" kindref="member">q7_t</ref> *</type>
          <declname>pSrcB</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Dot product of Q7 vectors. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrcA</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrcB</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples in each vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">result</parametername>
</parameternamelist>
<parameterdescription>
<para>output result returned here </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="2632" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a436d5bed28a4b73b24acbde436a3044b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_dot_prod_q15</definition>
        <argsstring>(q15_t *pSrcA, q15_t *pSrcB, uint32_t blockSize, q63_t *result)</argsstring>
        <name>arm_dot_prod_q15</name>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pSrcA</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pSrcB</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a5aea1cb12fc02d9d44c8abf217eaa5c6" kindref="member">q63_t</ref> *</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Dot product of Q15 vectors. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrcA</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrcB</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples in each vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">result</parametername>
</parameternamelist>
<parameterdescription>
<para>output result returned here </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="2646" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1ab15d8fa060fc85b4d948d091b7deaa11" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_dot_prod_q31</definition>
        <argsstring>(q31_t *pSrcA, q31_t *pSrcB, uint32_t blockSize, q63_t *result)</argsstring>
        <name>arm_dot_prod_q31</name>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pSrcA</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pSrcB</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a5aea1cb12fc02d9d44c8abf217eaa5c6" kindref="member">q63_t</ref> *</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Dot product of Q31 vectors. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrcA</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrcB</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples in each vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">result</parametername>
</parameternamelist>
<parameterdescription>
<para>output result returned here </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="2660" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a47295d08a685f7de700a48dafb4db6fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_shift_q7</definition>
        <argsstring>(q7_t *pSrc, int8_t shiftBits, q7_t *pDst, uint32_t blockSize)</argsstring>
        <name>arm_shift_q7</name>
        <param>
          <type><ref refid="arm__math_8h_1ae541b6f232c305361e9b416fc9eed263" kindref="member">q7_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type>int8_t</type>
          <declname>shiftBits</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ae541b6f232c305361e9b416fc9eed263" kindref="member">q7_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Shifts the elements of a Q7 vector a specified number of bits. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">shiftBits</parametername>
</parameternamelist>
<parameterdescription>
<para>number of bits to shift. A positive value shifts left; a negative value shifts right. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples in the vector </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="2674" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1aa1757e53279780107acc92cf100adb61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_shift_q15</definition>
        <argsstring>(q15_t *pSrc, int8_t shiftBits, q15_t *pDst, uint32_t blockSize)</argsstring>
        <name>arm_shift_q15</name>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type>int8_t</type>
          <declname>shiftBits</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Shifts the elements of a Q15 vector a specified number of bits. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">shiftBits</parametername>
</parameternamelist>
<parameterdescription>
<para>number of bits to shift. A positive value shifts left; a negative value shifts right. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples in the vector </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="2688" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a387dd8b7b87377378280978f16cdb13d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_shift_q31</definition>
        <argsstring>(q31_t *pSrc, int8_t shiftBits, q31_t *pDst, uint32_t blockSize)</argsstring>
        <name>arm_shift_q31</name>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type>int8_t</type>
          <declname>shiftBits</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Shifts the elements of a Q31 vector a specified number of bits. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">shiftBits</parametername>
</parameternamelist>
<parameterdescription>
<para>number of bits to shift. A positive value shifts left; a negative value shifts right. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples in the vector </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="2702" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a989dfae15235799d82f62ef9d356abb4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_offset_f32</definition>
        <argsstring>(float32_t *pSrc, float32_t offset, float32_t *pDst, uint32_t blockSize)</argsstring>
        <name>arm_offset_f32</name>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref></type>
          <declname>offset</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Adds a constant offset to a floating-point vector. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">offset</parametername>
</parameternamelist>
<parameterdescription>
<para>is the offset to be added </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples in the vector </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="2716" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a00bd9cc17c5bf905e76c91ad50886393" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_offset_q7</definition>
        <argsstring>(q7_t *pSrc, q7_t offset, q7_t *pDst, uint32_t blockSize)</argsstring>
        <name>arm_offset_q7</name>
        <param>
          <type><ref refid="arm__math_8h_1ae541b6f232c305361e9b416fc9eed263" kindref="member">q7_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ae541b6f232c305361e9b416fc9eed263" kindref="member">q7_t</ref></type>
          <declname>offset</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ae541b6f232c305361e9b416fc9eed263" kindref="member">q7_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Adds a constant offset to a Q7 vector. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">offset</parametername>
</parameternamelist>
<parameterdescription>
<para>is the offset to be added </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples in the vector </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="2730" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1ab4c1d2391b599549e5a06fdfbc2747bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_offset_q15</definition>
        <argsstring>(q15_t *pSrc, q15_t offset, q15_t *pDst, uint32_t blockSize)</argsstring>
        <name>arm_offset_q15</name>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref></type>
          <declname>offset</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Adds a constant offset to a Q15 vector. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">offset</parametername>
</parameternamelist>
<parameterdescription>
<para>is the offset to be added </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples in the vector </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="2744" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1ac84ec42cbbebc5c197a87d0221819acf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_offset_q31</definition>
        <argsstring>(q31_t *pSrc, q31_t offset, q31_t *pDst, uint32_t blockSize)</argsstring>
        <name>arm_offset_q31</name>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref></type>
          <declname>offset</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Adds a constant offset to a Q31 vector. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">offset</parametername>
</parameternamelist>
<parameterdescription>
<para>is the offset to be added </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples in the vector </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="2758" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a2e169c4de6cc6e3ba4be9473531e6657" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_negate_f32</definition>
        <argsstring>(float32_t *pSrc, float32_t *pDst, uint32_t blockSize)</argsstring>
        <name>arm_negate_f32</name>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Negates the elements of a floating-point vector. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples in the vector </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="2771" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1aae78fc079a43bdaa3055f9b32e2a1f4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_negate_q7</definition>
        <argsstring>(q7_t *pSrc, q7_t *pDst, uint32_t blockSize)</argsstring>
        <name>arm_negate_q7</name>
        <param>
          <type><ref refid="arm__math_8h_1ae541b6f232c305361e9b416fc9eed263" kindref="member">q7_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ae541b6f232c305361e9b416fc9eed263" kindref="member">q7_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Negates the elements of a Q7 vector. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples in the vector </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="2783" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a0239a833d72cf00290b9723c394e5042" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_negate_q15</definition>
        <argsstring>(q15_t *pSrc, q15_t *pDst, uint32_t blockSize)</argsstring>
        <name>arm_negate_q15</name>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Negates the elements of a Q15 vector. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples in the vector </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="2795" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a2784c6887686a73dc7c364e2e41c776c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_negate_q31</definition>
        <argsstring>(q31_t *pSrc, q31_t *pDst, uint32_t blockSize)</argsstring>
        <name>arm_negate_q31</name>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Negates the elements of a Q31 vector. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples in the vector </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="2807" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1add1f737e677e0e6ca31767c7001417b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_copy_f32</definition>
        <argsstring>(float32_t *pSrc, float32_t *pDst, uint32_t blockSize)</argsstring>
        <name>arm_copy_f32</name>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Copies the elements of a floating-point vector. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>input pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>output pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples to process </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="2819" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a467579beda492aa92797529d794c88fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_copy_q7</definition>
        <argsstring>(q7_t *pSrc, q7_t *pDst, uint32_t blockSize)</argsstring>
        <name>arm_copy_q7</name>
        <param>
          <type><ref refid="arm__math_8h_1ae541b6f232c305361e9b416fc9eed263" kindref="member">q7_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ae541b6f232c305361e9b416fc9eed263" kindref="member">q7_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Copies the elements of a Q7 vector. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>input pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>output pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples to process </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="2831" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a872ca4cfc18c680b8991ccd569a5fda0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_copy_q15</definition>
        <argsstring>(q15_t *pSrc, q15_t *pDst, uint32_t blockSize)</argsstring>
        <name>arm_copy_q15</name>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Copies the elements of a Q15 vector. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>input pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>output pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples to process </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="2843" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1addf70be7e3f87e535c324862b501f3f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_copy_q31</definition>
        <argsstring>(q31_t *pSrc, q31_t *pDst, uint32_t blockSize)</argsstring>
        <name>arm_copy_q31</name>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Copies the elements of a Q31 vector. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>input pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>output pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples to process </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="2855" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a2248e8d3901b4afb7827163132baad94" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_fill_f32</definition>
        <argsstring>(float32_t value, float32_t *pDst, uint32_t blockSize)</argsstring>
        <name>arm_fill_f32</name>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref></type>
          <declname>value</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Fills a constant value into a floating-point vector. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>input value to be filled </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>output pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples to process </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="2867" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a0465cf326ada039ed792f94b033d9ec5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_fill_q7</definition>
        <argsstring>(q7_t value, q7_t *pDst, uint32_t blockSize)</argsstring>
        <name>arm_fill_q7</name>
        <param>
          <type><ref refid="arm__math_8h_1ae541b6f232c305361e9b416fc9eed263" kindref="member">q7_t</ref></type>
          <declname>value</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ae541b6f232c305361e9b416fc9eed263" kindref="member">q7_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Fills a constant value into a Q7 vector. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>input value to be filled </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>output pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples to process </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="2879" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a76b21c32a3783a2b3334d930a646e5d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_fill_q15</definition>
        <argsstring>(q15_t value, q15_t *pDst, uint32_t blockSize)</argsstring>
        <name>arm_fill_q15</name>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref></type>
          <declname>value</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Fills a constant value into a Q15 vector. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>input value to be filled </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>output pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples to process </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="2891" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a69cc781cf337bd0a31bb85c772a35f7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_fill_q31</definition>
        <argsstring>(q31_t value, q31_t *pDst, uint32_t blockSize)</argsstring>
        <name>arm_fill_q31</name>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref></type>
          <declname>value</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Fills a constant value into a Q31 vector. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>input value to be filled </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>output pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples to process </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="2903" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a3f860dc98c6fc4cafc421e4a2aed3c89" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_conv_f32</definition>
        <argsstring>(float32_t *pSrcA, uint32_t srcALen, float32_t *pSrcB, uint32_t srcBLen, float32_t *pDst)</argsstring>
        <name>arm_conv_f32</name>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pSrcA</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>srcALen</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pSrcB</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>srcBLen</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <briefdescription>
<para>Convolution of floating-point sequences. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrcA</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input sequence. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">srcALen</parametername>
</parameternamelist>
<parameterdescription>
<para>length of the first input sequence. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrcB</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input sequence. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">srcBLen</parametername>
</parameternamelist>
<parameterdescription>
<para>length of the second input sequence. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the location where the output result is written. Length srcALen+srcBLen-1. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="2917" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1ac77dbcaef5c754cac27eab96c4753a3c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_conv_opt_q15</definition>
        <argsstring>(q15_t *pSrcA, uint32_t srcALen, q15_t *pSrcB, uint32_t srcBLen, q15_t *pDst, q15_t *pScratch1, q15_t *pScratch2)</argsstring>
        <name>arm_conv_opt_q15</name>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pSrcA</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>srcALen</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pSrcB</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>srcBLen</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pScratch1</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pScratch2</declname>
        </param>
        <briefdescription>
<para>Convolution of Q15 sequences. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrcA</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input sequence. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">srcALen</parametername>
</parameternamelist>
<parameterdescription>
<para>length of the first input sequence. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrcB</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input sequence. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">srcBLen</parametername>
</parameternamelist>
<parameterdescription>
<para>length of the second input sequence. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of output data Length srcALen+srcBLen-1. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pScratch1</parametername>
</parameternamelist>
<parameterdescription>
<para>points to scratch buffer of size max(srcALen, srcBLen) + 2*min(srcALen, srcBLen) - 2. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pScratch2</parametername>
</parameternamelist>
<parameterdescription>
<para>points to scratch buffer of size min(srcALen, srcBLen). </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="2935" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1accd6a89b0ff7a94df64610598e6e6893" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_conv_q15</definition>
        <argsstring>(q15_t *pSrcA, uint32_t srcALen, q15_t *pSrcB, uint32_t srcBLen, q15_t *pDst)</argsstring>
        <name>arm_conv_q15</name>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pSrcA</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>srcALen</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pSrcB</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>srcBLen</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <briefdescription>
<para>Convolution of Q15 sequences. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrcA</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input sequence. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">srcALen</parametername>
</parameternamelist>
<parameterdescription>
<para>length of the first input sequence. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrcB</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input sequence. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">srcBLen</parametername>
</parameternamelist>
<parameterdescription>
<para>length of the second input sequence. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the location where the output result is written. Length srcALen+srcBLen-1. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="2953" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1ad75ca978ce906e04abdf86a8d76306d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_conv_fast_q15</definition>
        <argsstring>(q15_t *pSrcA, uint32_t srcALen, q15_t *pSrcB, uint32_t srcBLen, q15_t *pDst)</argsstring>
        <name>arm_conv_fast_q15</name>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pSrcA</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>srcALen</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pSrcB</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>srcBLen</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <briefdescription>
<para>Convolution of Q15 sequences (fast version) for Cortex-M3 and Cortex-M4. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrcA</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input sequence. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">srcALen</parametername>
</parameternamelist>
<parameterdescription>
<para>length of the first input sequence. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrcB</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input sequence. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">srcBLen</parametername>
</parameternamelist>
<parameterdescription>
<para>length of the second input sequence. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of output data Length srcALen+srcBLen-1. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="2969" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1af16f490d245391ec18a42adc73d6d749" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_conv_fast_opt_q15</definition>
        <argsstring>(q15_t *pSrcA, uint32_t srcALen, q15_t *pSrcB, uint32_t srcBLen, q15_t *pDst, q15_t *pScratch1, q15_t *pScratch2)</argsstring>
        <name>arm_conv_fast_opt_q15</name>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pSrcA</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>srcALen</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pSrcB</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>srcBLen</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pScratch1</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pScratch2</declname>
        </param>
        <briefdescription>
<para>Convolution of Q15 sequences (fast version) for Cortex-M3 and Cortex-M4. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrcA</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input sequence. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">srcALen</parametername>
</parameternamelist>
<parameterdescription>
<para>length of the first input sequence. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrcB</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input sequence. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">srcBLen</parametername>
</parameternamelist>
<parameterdescription>
<para>length of the second input sequence. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of output data Length srcALen+srcBLen-1. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pScratch1</parametername>
</parameternamelist>
<parameterdescription>
<para>points to scratch buffer of size max(srcALen, srcBLen) + 2*min(srcALen, srcBLen) - 2. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pScratch2</parametername>
</parameternamelist>
<parameterdescription>
<para>points to scratch buffer of size min(srcALen, srcBLen). </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="2987" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a946b58da734f1e4e78c91fcaab4b12b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_conv_q31</definition>
        <argsstring>(q31_t *pSrcA, uint32_t srcALen, q31_t *pSrcB, uint32_t srcBLen, q31_t *pDst)</argsstring>
        <name>arm_conv_q31</name>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pSrcA</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>srcALen</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pSrcB</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>srcBLen</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <briefdescription>
<para>Convolution of Q31 sequences. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrcA</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input sequence. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">srcALen</parametername>
</parameternamelist>
<parameterdescription>
<para>length of the first input sequence. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrcB</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input sequence. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">srcBLen</parametername>
</parameternamelist>
<parameterdescription>
<para>length of the second input sequence. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of output data Length srcALen+srcBLen-1. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="3005" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a51112dcdf9b3624eb05182cdc4da9ec0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_conv_fast_q31</definition>
        <argsstring>(q31_t *pSrcA, uint32_t srcALen, q31_t *pSrcB, uint32_t srcBLen, q31_t *pDst)</argsstring>
        <name>arm_conv_fast_q31</name>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pSrcA</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>srcALen</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pSrcB</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>srcBLen</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <briefdescription>
<para>Convolution of Q31 sequences (fast version) for Cortex-M3 and Cortex-M4. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrcA</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input sequence. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">srcALen</parametername>
</parameternamelist>
<parameterdescription>
<para>length of the first input sequence. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrcB</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input sequence. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">srcBLen</parametername>
</parameternamelist>
<parameterdescription>
<para>length of the second input sequence. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of output data Length srcALen+srcBLen-1. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="3021" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a4c7cf073e89d6d57cc4e711f078c3f68" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_conv_opt_q7</definition>
        <argsstring>(q7_t *pSrcA, uint32_t srcALen, q7_t *pSrcB, uint32_t srcBLen, q7_t *pDst, q15_t *pScratch1, q15_t *pScratch2)</argsstring>
        <name>arm_conv_opt_q7</name>
        <param>
          <type><ref refid="arm__math_8h_1ae541b6f232c305361e9b416fc9eed263" kindref="member">q7_t</ref> *</type>
          <declname>pSrcA</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>srcALen</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ae541b6f232c305361e9b416fc9eed263" kindref="member">q7_t</ref> *</type>
          <declname>pSrcB</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>srcBLen</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ae541b6f232c305361e9b416fc9eed263" kindref="member">q7_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pScratch1</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pScratch2</declname>
        </param>
        <briefdescription>
<para>Convolution of Q7 sequences. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrcA</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input sequence. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">srcALen</parametername>
</parameternamelist>
<parameterdescription>
<para>length of the first input sequence. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrcB</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input sequence. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">srcBLen</parametername>
</parameternamelist>
<parameterdescription>
<para>length of the second input sequence. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of output data Length srcALen+srcBLen-1. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pScratch1</parametername>
</parameternamelist>
<parameterdescription>
<para>points to scratch buffer(of type q15_t) of size max(srcALen, srcBLen) + 2*min(srcALen, srcBLen) - 2. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pScratch2</parametername>
</parameternamelist>
<parameterdescription>
<para>points to scratch buffer (of type q15_t) of size min(srcALen, srcBLen). </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="3039" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1ae2070cb792a167e78dbad8d06b97cdab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_conv_q7</definition>
        <argsstring>(q7_t *pSrcA, uint32_t srcALen, q7_t *pSrcB, uint32_t srcBLen, q7_t *pDst)</argsstring>
        <name>arm_conv_q7</name>
        <param>
          <type><ref refid="arm__math_8h_1ae541b6f232c305361e9b416fc9eed263" kindref="member">q7_t</ref> *</type>
          <declname>pSrcA</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>srcALen</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ae541b6f232c305361e9b416fc9eed263" kindref="member">q7_t</ref> *</type>
          <declname>pSrcB</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>srcBLen</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ae541b6f232c305361e9b416fc9eed263" kindref="member">q7_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <briefdescription>
<para>Convolution of Q7 sequences. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrcA</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input sequence. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">srcALen</parametername>
</parameternamelist>
<parameterdescription>
<para>length of the first input sequence. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrcB</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input sequence. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">srcBLen</parametername>
</parameternamelist>
<parameterdescription>
<para>length of the second input sequence. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of output data Length srcALen+srcBLen-1. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="3057" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a16d10f32072cd79fc5fb6e785df45f5e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6" kindref="member">arm_status</ref></type>
        <definition>arm_status arm_conv_partial_f32</definition>
        <argsstring>(float32_t *pSrcA, uint32_t srcALen, float32_t *pSrcB, uint32_t srcBLen, float32_t *pDst, uint32_t firstIndex, uint32_t numPoints)</argsstring>
        <name>arm_conv_partial_f32</name>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pSrcA</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>srcALen</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pSrcB</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>srcBLen</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>firstIndex</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>numPoints</declname>
        </param>
        <briefdescription>
<para>Partial convolution of floating-point sequences. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrcA</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input sequence. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">srcALen</parametername>
</parameternamelist>
<parameterdescription>
<para>length of the first input sequence. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrcB</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input sequence. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">srcBLen</parametername>
</parameternamelist>
<parameterdescription>
<para>length of the second input sequence. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of output data </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">firstIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>is the first output sample to start with. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">numPoints</parametername>
</parameternamelist>
<parameterdescription>
<para>is the number of output points to be computed. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUMENT_ERROR if the requested subset is not in the range [0 srcALen+srcBLen-2]. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="3076" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a834b23b4ade8682beeb55778399101f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6" kindref="member">arm_status</ref></type>
        <definition>arm_status arm_conv_partial_opt_q15</definition>
        <argsstring>(q15_t *pSrcA, uint32_t srcALen, q15_t *pSrcB, uint32_t srcBLen, q15_t *pDst, uint32_t firstIndex, uint32_t numPoints, q15_t *pScratch1, q15_t *pScratch2)</argsstring>
        <name>arm_conv_partial_opt_q15</name>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pSrcA</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>srcALen</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pSrcB</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>srcBLen</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>firstIndex</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>numPoints</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pScratch1</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pScratch2</declname>
        </param>
        <briefdescription>
<para>Partial convolution of Q15 sequences. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrcA</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input sequence. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">srcALen</parametername>
</parameternamelist>
<parameterdescription>
<para>length of the first input sequence. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrcB</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input sequence. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">srcBLen</parametername>
</parameternamelist>
<parameterdescription>
<para>length of the second input sequence. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of output data </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">firstIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>is the first output sample to start with. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">numPoints</parametername>
</parameternamelist>
<parameterdescription>
<para>is the number of output points to be computed. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pScratch1</parametername>
</parameternamelist>
<parameterdescription>
<para>points to scratch buffer of size max(srcALen, srcBLen) + 2*min(srcALen, srcBLen) - 2. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pScratch2</parametername>
</parameternamelist>
<parameterdescription>
<para>points to scratch buffer of size min(srcALen, srcBLen). </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUMENT_ERROR if the requested subset is not in the range [0 srcALen+srcBLen-2]. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="3099" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a209a2a913a0c5e5679c5988da8f46b03" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6" kindref="member">arm_status</ref></type>
        <definition>arm_status arm_conv_partial_q15</definition>
        <argsstring>(q15_t *pSrcA, uint32_t srcALen, q15_t *pSrcB, uint32_t srcBLen, q15_t *pDst, uint32_t firstIndex, uint32_t numPoints)</argsstring>
        <name>arm_conv_partial_q15</name>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pSrcA</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>srcALen</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pSrcB</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>srcBLen</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>firstIndex</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>numPoints</declname>
        </param>
        <briefdescription>
<para>Partial convolution of Q15 sequences. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrcA</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input sequence. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">srcALen</parametername>
</parameternamelist>
<parameterdescription>
<para>length of the first input sequence. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrcB</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input sequence. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">srcBLen</parametername>
</parameternamelist>
<parameterdescription>
<para>length of the second input sequence. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of output data </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">firstIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>is the first output sample to start with. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">numPoints</parametername>
</parameternamelist>
<parameterdescription>
<para>is the number of output points to be computed. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUMENT_ERROR if the requested subset is not in the range [0 srcALen+srcBLen-2]. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="3122" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a1e4d43385cb62262a78c6752fe1fafb2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6" kindref="member">arm_status</ref></type>
        <definition>arm_status arm_conv_partial_fast_q15</definition>
        <argsstring>(q15_t *pSrcA, uint32_t srcALen, q15_t *pSrcB, uint32_t srcBLen, q15_t *pDst, uint32_t firstIndex, uint32_t numPoints)</argsstring>
        <name>arm_conv_partial_fast_q15</name>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pSrcA</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>srcALen</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pSrcB</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>srcBLen</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>firstIndex</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>numPoints</declname>
        </param>
        <briefdescription>
<para>Partial convolution of Q15 sequences (fast version) for Cortex-M3 and Cortex-M4. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrcA</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input sequence. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">srcALen</parametername>
</parameternamelist>
<parameterdescription>
<para>length of the first input sequence. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrcB</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input sequence. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">srcBLen</parametername>
</parameternamelist>
<parameterdescription>
<para>length of the second input sequence. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of output data </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">firstIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>is the first output sample to start with. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">numPoints</parametername>
</parameternamelist>
<parameterdescription>
<para>is the number of output points to be computed. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUMENT_ERROR if the requested subset is not in the range [0 srcALen+srcBLen-2]. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="3143" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a3de9c4ddcc7886de25b70d875099a8d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6" kindref="member">arm_status</ref></type>
        <definition>arm_status arm_conv_partial_fast_opt_q15</definition>
        <argsstring>(q15_t *pSrcA, uint32_t srcALen, q15_t *pSrcB, uint32_t srcBLen, q15_t *pDst, uint32_t firstIndex, uint32_t numPoints, q15_t *pScratch1, q15_t *pScratch2)</argsstring>
        <name>arm_conv_partial_fast_opt_q15</name>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pSrcA</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>srcALen</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pSrcB</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>srcBLen</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>firstIndex</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>numPoints</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pScratch1</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pScratch2</declname>
        </param>
        <briefdescription>
<para>Partial convolution of Q15 sequences (fast version) for Cortex-M3 and Cortex-M4. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrcA</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input sequence. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">srcALen</parametername>
</parameternamelist>
<parameterdescription>
<para>length of the first input sequence. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrcB</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input sequence. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">srcBLen</parametername>
</parameternamelist>
<parameterdescription>
<para>length of the second input sequence. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of output data </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">firstIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>is the first output sample to start with. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">numPoints</parametername>
</parameternamelist>
<parameterdescription>
<para>is the number of output points to be computed. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pScratch1</parametername>
</parameternamelist>
<parameterdescription>
<para>points to scratch buffer of size max(srcALen, srcBLen) + 2*min(srcALen, srcBLen) - 2. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pScratch2</parametername>
</parameternamelist>
<parameterdescription>
<para>points to scratch buffer of size min(srcALen, srcBLen). </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUMENT_ERROR if the requested subset is not in the range [0 srcALen+srcBLen-2]. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="3166" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a78e73a5f02d103168a09821fb461e77a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6" kindref="member">arm_status</ref></type>
        <definition>arm_status arm_conv_partial_q31</definition>
        <argsstring>(q31_t *pSrcA, uint32_t srcALen, q31_t *pSrcB, uint32_t srcBLen, q31_t *pDst, uint32_t firstIndex, uint32_t numPoints)</argsstring>
        <name>arm_conv_partial_q31</name>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pSrcA</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>srcALen</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pSrcB</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>srcBLen</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>firstIndex</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>numPoints</declname>
        </param>
        <briefdescription>
<para>Partial convolution of Q31 sequences. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrcA</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input sequence. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">srcALen</parametername>
</parameternamelist>
<parameterdescription>
<para>length of the first input sequence. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrcB</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input sequence. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">srcBLen</parametername>
</parameternamelist>
<parameterdescription>
<para>length of the second input sequence. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of output data </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">firstIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>is the first output sample to start with. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">numPoints</parametername>
</parameternamelist>
<parameterdescription>
<para>is the number of output points to be computed. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUMENT_ERROR if the requested subset is not in the range [0 srcALen+srcBLen-2]. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="3189" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a10c5294cda8c4985386f4e3944be7650" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6" kindref="member">arm_status</ref></type>
        <definition>arm_status arm_conv_partial_fast_q31</definition>
        <argsstring>(q31_t *pSrcA, uint32_t srcALen, q31_t *pSrcB, uint32_t srcBLen, q31_t *pDst, uint32_t firstIndex, uint32_t numPoints)</argsstring>
        <name>arm_conv_partial_fast_q31</name>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pSrcA</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>srcALen</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pSrcB</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>srcBLen</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>firstIndex</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>numPoints</declname>
        </param>
        <briefdescription>
<para>Partial convolution of Q31 sequences (fast version) for Cortex-M3 and Cortex-M4. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrcA</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input sequence. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">srcALen</parametername>
</parameternamelist>
<parameterdescription>
<para>length of the first input sequence. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrcB</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input sequence. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">srcBLen</parametername>
</parameternamelist>
<parameterdescription>
<para>length of the second input sequence. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of output data </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">firstIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>is the first output sample to start with. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">numPoints</parametername>
</parameternamelist>
<parameterdescription>
<para>is the number of output points to be computed. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUMENT_ERROR if the requested subset is not in the range [0 srcALen+srcBLen-2]. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="3210" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a3707e16af1435b215840006a7ab0c98f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6" kindref="member">arm_status</ref></type>
        <definition>arm_status arm_conv_partial_opt_q7</definition>
        <argsstring>(q7_t *pSrcA, uint32_t srcALen, q7_t *pSrcB, uint32_t srcBLen, q7_t *pDst, uint32_t firstIndex, uint32_t numPoints, q15_t *pScratch1, q15_t *pScratch2)</argsstring>
        <name>arm_conv_partial_opt_q7</name>
        <param>
          <type><ref refid="arm__math_8h_1ae541b6f232c305361e9b416fc9eed263" kindref="member">q7_t</ref> *</type>
          <declname>pSrcA</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>srcALen</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ae541b6f232c305361e9b416fc9eed263" kindref="member">q7_t</ref> *</type>
          <declname>pSrcB</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>srcBLen</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ae541b6f232c305361e9b416fc9eed263" kindref="member">q7_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>firstIndex</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>numPoints</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pScratch1</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pScratch2</declname>
        </param>
        <briefdescription>
<para>Partial convolution of Q7 sequences. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrcA</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input sequence. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">srcALen</parametername>
</parameternamelist>
<parameterdescription>
<para>length of the first input sequence. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrcB</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input sequence. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">srcBLen</parametername>
</parameternamelist>
<parameterdescription>
<para>length of the second input sequence. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of output data </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">firstIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>is the first output sample to start with. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">numPoints</parametername>
</parameternamelist>
<parameterdescription>
<para>is the number of output points to be computed. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pScratch1</parametername>
</parameternamelist>
<parameterdescription>
<para>points to scratch buffer(of type q15_t) of size max(srcALen, srcBLen) + 2*min(srcALen, srcBLen) - 2. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pScratch2</parametername>
</parameternamelist>
<parameterdescription>
<para>points to scratch buffer (of type q15_t) of size min(srcALen, srcBLen). </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUMENT_ERROR if the requested subset is not in the range [0 srcALen+srcBLen-2]. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="3233" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a8567259fe18396dd972242c41741ebf4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6" kindref="member">arm_status</ref></type>
        <definition>arm_status arm_conv_partial_q7</definition>
        <argsstring>(q7_t *pSrcA, uint32_t srcALen, q7_t *pSrcB, uint32_t srcBLen, q7_t *pDst, uint32_t firstIndex, uint32_t numPoints)</argsstring>
        <name>arm_conv_partial_q7</name>
        <param>
          <type><ref refid="arm__math_8h_1ae541b6f232c305361e9b416fc9eed263" kindref="member">q7_t</ref> *</type>
          <declname>pSrcA</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>srcALen</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ae541b6f232c305361e9b416fc9eed263" kindref="member">q7_t</ref> *</type>
          <declname>pSrcB</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>srcBLen</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ae541b6f232c305361e9b416fc9eed263" kindref="member">q7_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>firstIndex</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>numPoints</declname>
        </param>
        <briefdescription>
<para>Partial convolution of Q7 sequences. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrcA</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input sequence. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">srcALen</parametername>
</parameternamelist>
<parameterdescription>
<para>length of the first input sequence. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrcB</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input sequence. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">srcBLen</parametername>
</parameternamelist>
<parameterdescription>
<para>length of the second input sequence. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of output data </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">firstIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>is the first output sample to start with. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">numPoints</parametername>
</parameternamelist>
<parameterdescription>
<para>is the number of output points to be computed. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUMENT_ERROR if the requested subset is not in the range [0 srcALen+srcBLen-2]. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="3256" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a25aa3d58a90bf91b6a82272a0bc518f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_fir_decimate_f32</definition>
        <argsstring>(const arm_fir_decimate_instance_f32 *S, float32_t *pSrc, float32_t *pDst, uint32_t blockSize)</argsstring>
        <name>arm_fir_decimate_f32</name>
        <param>
          <type>const <ref refid="structarm__fir__decimate__instance__f32" kindref="compound">arm_fir_decimate_instance_f32</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Processing function for the floating-point FIR decimator. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">S</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the floating-point FIR decimator structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of input data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of output data </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input samples to process per call. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="3307" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1aaa2524b08220fd6c3f753e692ffc7d3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6" kindref="member">arm_status</ref></type>
        <definition>arm_status arm_fir_decimate_init_f32</definition>
        <argsstring>(arm_fir_decimate_instance_f32 *S, uint16_t numTaps, uint8_t M, float32_t *pCoeffs, float32_t *pState, uint32_t blockSize)</argsstring>
        <name>arm_fir_decimate_init_f32</name>
        <param>
          <type><ref refid="structarm__fir__decimate__instance__f32" kindref="compound">arm_fir_decimate_instance_f32</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>numTaps</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>M</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pCoeffs</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pState</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Initialization function for the floating-point FIR decimator. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">S</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the floating-point FIR decimator structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">numTaps</parametername>
</parameternamelist>
<parameterdescription>
<para>number of coefficients in the filter. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">M</parametername>
</parameternamelist>
<parameterdescription>
<para>decimation factor. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pCoeffs</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the filter coefficients. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pState</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the state buffer. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input samples to process per call. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The function returns ARM_MATH_SUCCESS if initialization is successful or ARM_MATH_LENGTH_ERROR if <computeroutput>blockSize</computeroutput> is not a multiple of <computeroutput>M</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="3325" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1ab8bef6d0f6a26fdbfce9485727713ce5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_fir_decimate_q15</definition>
        <argsstring>(const arm_fir_decimate_instance_q15 *S, q15_t *pSrc, q15_t *pDst, uint32_t blockSize)</argsstring>
        <name>arm_fir_decimate_q15</name>
        <param>
          <type>const <ref refid="structarm__fir__decimate__instance__q15" kindref="compound">arm_fir_decimate_instance_q15</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Processing function for the Q15 FIR decimator. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">S</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the Q15 FIR decimator structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of input data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of output data </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input samples to process per call. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="3341" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a3f434c9a5d3b4e68061feac0714ea2ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_fir_decimate_fast_q15</definition>
        <argsstring>(const arm_fir_decimate_instance_q15 *S, q15_t *pSrc, q15_t *pDst, uint32_t blockSize)</argsstring>
        <name>arm_fir_decimate_fast_q15</name>
        <param>
          <type>const <ref refid="structarm__fir__decimate__instance__q15" kindref="compound">arm_fir_decimate_instance_q15</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Processing function for the Q15 FIR decimator (fast variant) for Cortex-M3 and Cortex-M4. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">S</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the Q15 FIR decimator structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of input data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of output data </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input samples to process per call. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="3355" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1ada660e54b93d5d32178c6f5e1c6f368d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6" kindref="member">arm_status</ref></type>
        <definition>arm_status arm_fir_decimate_init_q15</definition>
        <argsstring>(arm_fir_decimate_instance_q15 *S, uint16_t numTaps, uint8_t M, q15_t *pCoeffs, q15_t *pState, uint32_t blockSize)</argsstring>
        <name>arm_fir_decimate_init_q15</name>
        <param>
          <type><ref refid="structarm__fir__decimate__instance__q15" kindref="compound">arm_fir_decimate_instance_q15</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>numTaps</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>M</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pCoeffs</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pState</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Initialization function for the Q15 FIR decimator. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">S</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the Q15 FIR decimator structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">numTaps</parametername>
</parameternamelist>
<parameterdescription>
<para>number of coefficients in the filter. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">M</parametername>
</parameternamelist>
<parameterdescription>
<para>decimation factor. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pCoeffs</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the filter coefficients. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pState</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the state buffer. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input samples to process per call. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The function returns ARM_MATH_SUCCESS if initialization is successful or ARM_MATH_LENGTH_ERROR if <computeroutput>blockSize</computeroutput> is not a multiple of <computeroutput>M</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="3373" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1aef8e86add28f15fdc5ecc484e9dd7a4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_fir_decimate_q31</definition>
        <argsstring>(const arm_fir_decimate_instance_q31 *S, q31_t *pSrc, q31_t *pDst, uint32_t blockSize)</argsstring>
        <name>arm_fir_decimate_q31</name>
        <param>
          <type>const <ref refid="structarm__fir__decimate__instance__q31" kindref="compound">arm_fir_decimate_instance_q31</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Processing function for the Q31 FIR decimator. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">S</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the Q31 FIR decimator structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of input data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of output data </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input samples to process per call. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="3389" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a3c18cc3d0548a410c577f1bead9582b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_fir_decimate_fast_q31</definition>
        <argsstring>(arm_fir_decimate_instance_q31 *S, q31_t *pSrc, q31_t *pDst, uint32_t blockSize)</argsstring>
        <name>arm_fir_decimate_fast_q31</name>
        <param>
          <type><ref refid="structarm__fir__decimate__instance__q31" kindref="compound">arm_fir_decimate_instance_q31</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Processing function for the Q31 FIR decimator (fast variant) for Cortex-M3 and Cortex-M4. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">S</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the Q31 FIR decimator structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of input data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of output data </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input samples to process per call. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="3402" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a9ed47c4e0f58affa935d84e0508a7f39" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6" kindref="member">arm_status</ref></type>
        <definition>arm_status arm_fir_decimate_init_q31</definition>
        <argsstring>(arm_fir_decimate_instance_q31 *S, uint16_t numTaps, uint8_t M, q31_t *pCoeffs, q31_t *pState, uint32_t blockSize)</argsstring>
        <name>arm_fir_decimate_init_q31</name>
        <param>
          <type><ref refid="structarm__fir__decimate__instance__q31" kindref="compound">arm_fir_decimate_instance_q31</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>numTaps</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>M</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pCoeffs</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pState</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Initialization function for the Q31 FIR decimator. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">S</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the Q31 FIR decimator structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">numTaps</parametername>
</parameternamelist>
<parameterdescription>
<para>number of coefficients in the filter. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">M</parametername>
</parameternamelist>
<parameterdescription>
<para>decimation factor. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pCoeffs</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the filter coefficients. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pState</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the state buffer. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input samples to process per call. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The function returns ARM_MATH_SUCCESS if initialization is successful or ARM_MATH_LENGTH_ERROR if <computeroutput>blockSize</computeroutput> is not a multiple of <computeroutput>M</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="3420" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a7962b5f9636e54899f75d0c5936800b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_fir_interpolate_q15</definition>
        <argsstring>(const arm_fir_interpolate_instance_q15 *S, q15_t *pSrc, q15_t *pDst, uint32_t blockSize)</argsstring>
        <name>arm_fir_interpolate_q15</name>
        <param>
          <type>const <ref refid="structarm__fir__interpolate__instance__q15" kindref="compound">arm_fir_interpolate_instance_q15</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Processing function for the Q15 FIR interpolator. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">S</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the Q15 FIR interpolator structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of input data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of output data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input samples to process per call. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="3470" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a18e8c4a74ff1d0f88876cc63f675288f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6" kindref="member">arm_status</ref></type>
        <definition>arm_status arm_fir_interpolate_init_q15</definition>
        <argsstring>(arm_fir_interpolate_instance_q15 *S, uint8_t L, uint16_t numTaps, q15_t *pCoeffs, q15_t *pState, uint32_t blockSize)</argsstring>
        <name>arm_fir_interpolate_init_q15</name>
        <param>
          <type><ref refid="structarm__fir__interpolate__instance__q15" kindref="compound">arm_fir_interpolate_instance_q15</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>L</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>numTaps</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pCoeffs</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pState</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Initialization function for the Q15 FIR interpolator. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">S</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the Q15 FIR interpolator structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">L</parametername>
</parameternamelist>
<parameterdescription>
<para>upsample factor. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">numTaps</parametername>
</parameternamelist>
<parameterdescription>
<para>number of filter coefficients in the filter. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pCoeffs</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the filter coefficient buffer. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pState</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the state buffer. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input samples to process per call. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The function returns ARM_MATH_SUCCESS if initialization is successful or ARM_MATH_LENGTH_ERROR if the filter length <computeroutput>numTaps</computeroutput> is not a multiple of the interpolation factor <computeroutput>L</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="3488" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1aac9c0f01ed91c53f7083995d7411f5ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_fir_interpolate_q31</definition>
        <argsstring>(const arm_fir_interpolate_instance_q31 *S, q31_t *pSrc, q31_t *pDst, uint32_t blockSize)</argsstring>
        <name>arm_fir_interpolate_q31</name>
        <param>
          <type>const <ref refid="structarm__fir__interpolate__instance__q31" kindref="compound">arm_fir_interpolate_instance_q31</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Processing function for the Q31 FIR interpolator. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">S</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the Q15 FIR interpolator structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of input data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of output data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input samples to process per call. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="3504" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a9d0ba38ce9f12a850dd242731d307476" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6" kindref="member">arm_status</ref></type>
        <definition>arm_status arm_fir_interpolate_init_q31</definition>
        <argsstring>(arm_fir_interpolate_instance_q31 *S, uint8_t L, uint16_t numTaps, q31_t *pCoeffs, q31_t *pState, uint32_t blockSize)</argsstring>
        <name>arm_fir_interpolate_init_q31</name>
        <param>
          <type><ref refid="structarm__fir__interpolate__instance__q31" kindref="compound">arm_fir_interpolate_instance_q31</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>L</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>numTaps</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pCoeffs</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pState</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Initialization function for the Q31 FIR interpolator. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">S</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the Q31 FIR interpolator structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">L</parametername>
</parameternamelist>
<parameterdescription>
<para>upsample factor. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">numTaps</parametername>
</parameternamelist>
<parameterdescription>
<para>number of filter coefficients in the filter. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pCoeffs</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the filter coefficient buffer. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pState</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the state buffer. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input samples to process per call. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The function returns ARM_MATH_SUCCESS if initialization is successful or ARM_MATH_LENGTH_ERROR if the filter length <computeroutput>numTaps</computeroutput> is not a multiple of the interpolation factor <computeroutput>L</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="3522" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a9cae104c5cf60b4e7671c82264a8c12e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_fir_interpolate_f32</definition>
        <argsstring>(const arm_fir_interpolate_instance_f32 *S, float32_t *pSrc, float32_t *pDst, uint32_t blockSize)</argsstring>
        <name>arm_fir_interpolate_f32</name>
        <param>
          <type>const <ref refid="structarm__fir__interpolate__instance__f32" kindref="compound">arm_fir_interpolate_instance_f32</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Processing function for the floating-point FIR interpolator. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">S</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the floating-point FIR interpolator structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of input data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of output data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input samples to process per call. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="3538" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a0f857457a815946f7e4dca989ebf6ff6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6" kindref="member">arm_status</ref></type>
        <definition>arm_status arm_fir_interpolate_init_f32</definition>
        <argsstring>(arm_fir_interpolate_instance_f32 *S, uint8_t L, uint16_t numTaps, float32_t *pCoeffs, float32_t *pState, uint32_t blockSize)</argsstring>
        <name>arm_fir_interpolate_init_f32</name>
        <param>
          <type><ref refid="structarm__fir__interpolate__instance__f32" kindref="compound">arm_fir_interpolate_instance_f32</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>L</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>numTaps</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pCoeffs</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pState</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Initialization function for the floating-point FIR interpolator. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">S</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the floating-point FIR interpolator structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">L</parametername>
</parameternamelist>
<parameterdescription>
<para>upsample factor. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">numTaps</parametername>
</parameternamelist>
<parameterdescription>
<para>number of filter coefficients in the filter. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pCoeffs</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the filter coefficient buffer. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pState</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the state buffer. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input samples to process per call. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The function returns ARM_MATH_SUCCESS if initialization is successful or ARM_MATH_LENGTH_ERROR if the filter length <computeroutput>numTaps</computeroutput> is not a multiple of the interpolation factor <computeroutput>L</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="3556" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a953a83e69685de6575cff37feb358a93" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_biquad_cas_df1_32x64_q31</definition>
        <argsstring>(const arm_biquad_cas_df1_32x64_ins_q31 *S, q31_t *pSrc, q31_t *pDst, uint32_t blockSize)</argsstring>
        <name>arm_biquad_cas_df1_32x64_q31</name>
        <param>
          <type>const <ref refid="structarm__biquad__cas__df1__32x64__ins__q31" kindref="compound">arm_biquad_cas_df1_32x64_ins_q31</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">S</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the high precision Q31 Biquad cascade filter structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of input data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of output data </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples to process. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="3583" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a44900cecb8083afcaabf905ffcd656bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_biquad_cas_df1_32x64_init_q31</definition>
        <argsstring>(arm_biquad_cas_df1_32x64_ins_q31 *S, uint8_t numStages, q31_t *pCoeffs, q63_t *pState, uint8_t postShift)</argsstring>
        <name>arm_biquad_cas_df1_32x64_init_q31</name>
        <param>
          <type><ref refid="structarm__biquad__cas__df1__32x64__ins__q31" kindref="compound">arm_biquad_cas_df1_32x64_ins_q31</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>numStages</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pCoeffs</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a5aea1cb12fc02d9d44c8abf217eaa5c6" kindref="member">q63_t</ref> *</type>
          <declname>pState</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>postShift</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">S</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the high precision Q31 Biquad cascade filter structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">numStages</parametername>
</parameternamelist>
<parameterdescription>
<para>number of 2nd order stages in the filter. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pCoeffs</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the filter coefficients. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pState</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the state buffer. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">postShift</parametername>
</parameternamelist>
<parameterdescription>
<para>shift to be applied to the output. Varies according to the coefficients format </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="3597" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a646c25998bf35991c60299b1431460f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_biquad_cascade_df2T_f32</definition>
        <argsstring>(const arm_biquad_cascade_df2T_instance_f32 *S, float32_t *pSrc, float32_t *pDst, uint32_t blockSize)</argsstring>
        <name>arm_biquad_cascade_df2T_f32</name>
        <param>
          <type>const <ref refid="structarm__biquad__cascade__df2_t__instance__f32" kindref="compound">arm_biquad_cascade_df2T_instance_f32</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Processing function for the floating-point transposed direct form II Biquad cascade filter. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">S</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the filter data structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of input data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of output data </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples to process. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="3643" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1aeff8ab405c3db567ae26344ec7539911" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_biquad_cascade_stereo_df2T_f32</definition>
        <argsstring>(const arm_biquad_cascade_stereo_df2T_instance_f32 *S, float32_t *pSrc, float32_t *pDst, uint32_t blockSize)</argsstring>
        <name>arm_biquad_cascade_stereo_df2T_f32</name>
        <param>
          <type>const <ref refid="structarm__biquad__cascade__stereo__df2_t__instance__f32" kindref="compound">arm_biquad_cascade_stereo_df2T_instance_f32</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Processing function for the floating-point transposed direct form II Biquad cascade filter. 2 channels. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">S</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the filter data structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of input data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of output data </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples to process. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="3657" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1ad146359b7ab526d6ebc81d8aca530f78" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_biquad_cascade_df2T_f64</definition>
        <argsstring>(const arm_biquad_cascade_df2T_instance_f64 *S, float64_t *pSrc, float64_t *pDst, uint32_t blockSize)</argsstring>
        <name>arm_biquad_cascade_df2T_f64</name>
        <param>
          <type>const <ref refid="structarm__biquad__cascade__df2_t__instance__f64" kindref="compound">arm_biquad_cascade_df2T_instance_f64</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ac55f3ae81b5bc9053760baacf57e47f4" kindref="member">float64_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ac55f3ae81b5bc9053760baacf57e47f4" kindref="member">float64_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Processing function for the floating-point transposed direct form II Biquad cascade filter. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">S</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the filter data structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of input data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of output data </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples to process. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="3671" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a70eaddf317a4a8bde6bd6a97df67fedd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_biquad_cascade_df2T_init_f32</definition>
        <argsstring>(arm_biquad_cascade_df2T_instance_f32 *S, uint8_t numStages, float32_t *pCoeffs, float32_t *pState)</argsstring>
        <name>arm_biquad_cascade_df2T_init_f32</name>
        <param>
          <type><ref refid="structarm__biquad__cascade__df2_t__instance__f32" kindref="compound">arm_biquad_cascade_df2T_instance_f32</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>numStages</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pCoeffs</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pState</declname>
        </param>
        <briefdescription>
<para>Initialization function for the floating-point transposed direct form II Biquad cascade filter. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">S</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the filter data structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">numStages</parametername>
</parameternamelist>
<parameterdescription>
<para>number of 2nd order stages in the filter. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pCoeffs</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the filter coefficients. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pState</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the state buffer. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="3685" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a405197c89fe4d34003efd23786296425" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_biquad_cascade_stereo_df2T_init_f32</definition>
        <argsstring>(arm_biquad_cascade_stereo_df2T_instance_f32 *S, uint8_t numStages, float32_t *pCoeffs, float32_t *pState)</argsstring>
        <name>arm_biquad_cascade_stereo_df2T_init_f32</name>
        <param>
          <type><ref refid="structarm__biquad__cascade__stereo__df2_t__instance__f32" kindref="compound">arm_biquad_cascade_stereo_df2T_instance_f32</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>numStages</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pCoeffs</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pState</declname>
        </param>
        <briefdescription>
<para>Initialization function for the floating-point transposed direct form II Biquad cascade filter. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">S</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the filter data structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">numStages</parametername>
</parameternamelist>
<parameterdescription>
<para>number of 2nd order stages in the filter. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pCoeffs</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the filter coefficients. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pState</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the state buffer. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="3699" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a12dc5d8e8892806ad70e79ca2ff9f86e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_biquad_cascade_df2T_init_f64</definition>
        <argsstring>(arm_biquad_cascade_df2T_instance_f64 *S, uint8_t numStages, float64_t *pCoeffs, float64_t *pState)</argsstring>
        <name>arm_biquad_cascade_df2T_init_f64</name>
        <param>
          <type><ref refid="structarm__biquad__cascade__df2_t__instance__f64" kindref="compound">arm_biquad_cascade_df2T_instance_f64</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>numStages</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ac55f3ae81b5bc9053760baacf57e47f4" kindref="member">float64_t</ref> *</type>
          <declname>pCoeffs</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ac55f3ae81b5bc9053760baacf57e47f4" kindref="member">float64_t</ref> *</type>
          <declname>pState</declname>
        </param>
        <briefdescription>
<para>Initialization function for the floating-point transposed direct form II Biquad cascade filter. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">S</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the filter data structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">numStages</parametername>
</parameternamelist>
<parameterdescription>
<para>number of 2nd order stages in the filter. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pCoeffs</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the filter coefficients. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pState</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the state buffer. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="3713" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a1b22f30ce1cc19bf5a5d7c9fca154d72" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_fir_lattice_init_q15</definition>
        <argsstring>(arm_fir_lattice_instance_q15 *S, uint16_t numStages, q15_t *pCoeffs, q15_t *pState)</argsstring>
        <name>arm_fir_lattice_init_q15</name>
        <param>
          <type><ref refid="structarm__fir__lattice__instance__q15" kindref="compound">arm_fir_lattice_instance_q15</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>numStages</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pCoeffs</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pState</declname>
        </param>
        <briefdescription>
<para>Initialization function for the Q15 FIR lattice filter. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">S</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the Q15 FIR lattice structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">numStages</parametername>
</parameternamelist>
<parameterdescription>
<para>number of filter stages. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pCoeffs</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the coefficient buffer. The array is of length numStages. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pState</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the state buffer. The array is of length numStages. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="3758" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1abb0ab07fd313b4d863070c3ddca51542" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_fir_lattice_q15</definition>
        <argsstring>(const arm_fir_lattice_instance_q15 *S, q15_t *pSrc, q15_t *pDst, uint32_t blockSize)</argsstring>
        <name>arm_fir_lattice_q15</name>
        <param>
          <type>const <ref refid="structarm__fir__lattice__instance__q15" kindref="compound">arm_fir_lattice_instance_q15</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Processing function for the Q15 FIR lattice filter. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">S</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the Q15 FIR lattice structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of input data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of output data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples to process. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="3772" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1ac05a17a0188bb851b58d19e572870a54" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_fir_lattice_init_q31</definition>
        <argsstring>(arm_fir_lattice_instance_q31 *S, uint16_t numStages, q31_t *pCoeffs, q31_t *pState)</argsstring>
        <name>arm_fir_lattice_init_q31</name>
        <param>
          <type><ref refid="structarm__fir__lattice__instance__q31" kindref="compound">arm_fir_lattice_instance_q31</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>numStages</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pCoeffs</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pState</declname>
        </param>
        <briefdescription>
<para>Initialization function for the Q31 FIR lattice filter. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">S</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the Q31 FIR lattice structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">numStages</parametername>
</parameternamelist>
<parameterdescription>
<para>number of filter stages. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pCoeffs</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the coefficient buffer. The array is of length numStages. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pState</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the state buffer. The array is of length numStages. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="3786" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a2e36fd210e4a1a5dd333ce80dd6d9a88" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_fir_lattice_q31</definition>
        <argsstring>(const arm_fir_lattice_instance_q31 *S, q31_t *pSrc, q31_t *pDst, uint32_t blockSize)</argsstring>
        <name>arm_fir_lattice_q31</name>
        <param>
          <type>const <ref refid="structarm__fir__lattice__instance__q31" kindref="compound">arm_fir_lattice_instance_q31</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Processing function for the Q31 FIR lattice filter. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">S</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the Q31 FIR lattice structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of input data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of output data </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples to process. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="3800" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a86199a1590af2b8941c6532ee9d03229" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_fir_lattice_init_f32</definition>
        <argsstring>(arm_fir_lattice_instance_f32 *S, uint16_t numStages, float32_t *pCoeffs, float32_t *pState)</argsstring>
        <name>arm_fir_lattice_init_f32</name>
        <param>
          <type><ref refid="structarm__fir__lattice__instance__f32" kindref="compound">arm_fir_lattice_instance_f32</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>numStages</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pCoeffs</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pState</declname>
        </param>
        <briefdescription>
<para>Initialization function for the floating-point FIR lattice filter. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">S</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the floating-point FIR lattice structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">numStages</parametername>
</parameternamelist>
<parameterdescription>
<para>number of filter stages. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pCoeffs</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the coefficient buffer. The array is of length numStages. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pState</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the state buffer. The array is of length numStages. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="3814" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1ae63a45a63a11a65f2eae8b8b1fe370a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_fir_lattice_f32</definition>
        <argsstring>(const arm_fir_lattice_instance_f32 *S, float32_t *pSrc, float32_t *pDst, uint32_t blockSize)</argsstring>
        <name>arm_fir_lattice_f32</name>
        <param>
          <type>const <ref refid="structarm__fir__lattice__instance__f32" kindref="compound">arm_fir_lattice_instance_f32</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Processing function for the floating-point FIR lattice filter. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">S</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the floating-point FIR lattice structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of input data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of output data </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples to process. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="3828" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a56164a0fe48619b8ceec160347bdd2ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_iir_lattice_f32</definition>
        <argsstring>(const arm_iir_lattice_instance_f32 *S, float32_t *pSrc, float32_t *pDst, uint32_t blockSize)</argsstring>
        <name>arm_iir_lattice_f32</name>
        <param>
          <type>const <ref refid="structarm__iir__lattice__instance__f32" kindref="compound">arm_iir_lattice_instance_f32</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Processing function for the floating-point IIR lattice filter. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">S</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the floating-point IIR lattice structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of input data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of output data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples to process. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="3876" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1aed3b0230bb77439dc902daa625985e04" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_iir_lattice_init_f32</definition>
        <argsstring>(arm_iir_lattice_instance_f32 *S, uint16_t numStages, float32_t *pkCoeffs, float32_t *pvCoeffs, float32_t *pState, uint32_t blockSize)</argsstring>
        <name>arm_iir_lattice_init_f32</name>
        <param>
          <type><ref refid="structarm__iir__lattice__instance__f32" kindref="compound">arm_iir_lattice_instance_f32</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>numStages</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pkCoeffs</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pvCoeffs</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pState</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Initialization function for the floating-point IIR lattice filter. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">S</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the floating-point IIR lattice structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">numStages</parametername>
</parameternamelist>
<parameterdescription>
<para>number of stages in the filter. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pkCoeffs</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the reflection coefficient buffer. The array is of length numStages. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pvCoeffs</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the ladder coefficient buffer. The array is of length numStages+1. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pState</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the state buffer. The array is of length numStages+blockSize-1. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples to process. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="3892" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a123b26fa9156cd8d3622dd85931741ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_iir_lattice_q31</definition>
        <argsstring>(const arm_iir_lattice_instance_q31 *S, q31_t *pSrc, q31_t *pDst, uint32_t blockSize)</argsstring>
        <name>arm_iir_lattice_q31</name>
        <param>
          <type>const <ref refid="structarm__iir__lattice__instance__q31" kindref="compound">arm_iir_lattice_instance_q31</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Processing function for the Q31 IIR lattice filter. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">S</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the Q31 IIR lattice structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of input data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of output data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples to process. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="3908" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1ab686c14175581797d9c3ad7bf1d5cc1e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_iir_lattice_init_q31</definition>
        <argsstring>(arm_iir_lattice_instance_q31 *S, uint16_t numStages, q31_t *pkCoeffs, q31_t *pvCoeffs, q31_t *pState, uint32_t blockSize)</argsstring>
        <name>arm_iir_lattice_init_q31</name>
        <param>
          <type><ref refid="structarm__iir__lattice__instance__q31" kindref="compound">arm_iir_lattice_instance_q31</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>numStages</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pkCoeffs</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pvCoeffs</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pState</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Initialization function for the Q31 IIR lattice filter. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">S</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the Q31 IIR lattice structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">numStages</parametername>
</parameternamelist>
<parameterdescription>
<para>number of stages in the filter. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pkCoeffs</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the reflection coefficient buffer. The array is of length numStages. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pvCoeffs</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the ladder coefficient buffer. The array is of length numStages+1. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pState</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the state buffer. The array is of length numStages+blockSize. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples to process. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="3924" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1aeb9e9599a288832ed123183eaa8b294a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_iir_lattice_q15</definition>
        <argsstring>(const arm_iir_lattice_instance_q15 *S, q15_t *pSrc, q15_t *pDst, uint32_t blockSize)</argsstring>
        <name>arm_iir_lattice_q15</name>
        <param>
          <type>const <ref refid="structarm__iir__lattice__instance__q15" kindref="compound">arm_iir_lattice_instance_q15</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Processing function for the Q15 IIR lattice filter. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">S</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the Q15 IIR lattice structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of input data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of output data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples to process. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="3940" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a1f4bc2dd3d5641e96815d3a5aad58998" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_iir_lattice_init_q15</definition>
        <argsstring>(arm_iir_lattice_instance_q15 *S, uint16_t numStages, q15_t *pkCoeffs, q15_t *pvCoeffs, q15_t *pState, uint32_t blockSize)</argsstring>
        <name>arm_iir_lattice_init_q15</name>
        <param>
          <type><ref refid="structarm__iir__lattice__instance__q15" kindref="compound">arm_iir_lattice_instance_q15</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>numStages</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pkCoeffs</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pvCoeffs</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pState</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Initialization function for the Q15 IIR lattice filter. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">S</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the fixed-point Q15 IIR lattice structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">numStages</parametername>
</parameternamelist>
<parameterdescription>
<para>number of stages in the filter. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pkCoeffs</parametername>
</parameternamelist>
<parameterdescription>
<para>points to reflection coefficient buffer. The array is of length numStages. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pvCoeffs</parametername>
</parameternamelist>
<parameterdescription>
<para>points to ladder coefficient buffer. The array is of length numStages+1. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pState</parametername>
</parameternamelist>
<parameterdescription>
<para>points to state buffer. The array is of length numStages+blockSize. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples to process per call. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="3956" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1ae266d009e682180421601627c79a3843" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_lms_f32</definition>
        <argsstring>(const arm_lms_instance_f32 *S, float32_t *pSrc, float32_t *pRef, float32_t *pOut, float32_t *pErr, uint32_t blockSize)</argsstring>
        <name>arm_lms_f32</name>
        <param>
          <type>const <ref refid="structarm__lms__instance__f32" kindref="compound">arm_lms_instance_f32</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pRef</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pOut</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pErr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Processing function for floating-point LMS filter. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">S</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the floating-point LMS filter structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of input data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pRef</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of reference data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pOut</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of output data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pErr</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of error data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples to process. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="3986" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a9fc7adca0966ff2cec1746fca8364cee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_lms_init_f32</definition>
        <argsstring>(arm_lms_instance_f32 *S, uint16_t numTaps, float32_t *pCoeffs, float32_t *pState, float32_t mu, uint32_t blockSize)</argsstring>
        <name>arm_lms_init_f32</name>
        <param>
          <type><ref refid="structarm__lms__instance__f32" kindref="compound">arm_lms_instance_f32</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>numTaps</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pCoeffs</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pState</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref></type>
          <declname>mu</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Initialization function for floating-point LMS filter. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">S</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the floating-point LMS filter structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">numTaps</parametername>
</parameternamelist>
<parameterdescription>
<para>number of filter coefficients. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pCoeffs</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the coefficient buffer. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pState</parametername>
</parameternamelist>
<parameterdescription>
<para>points to state buffer. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mu</parametername>
</parameternamelist>
<parameterdescription>
<para>step size that controls filter coefficient updates. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples to process. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="4004" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a9544cc26f18cd4465cfbed371be822b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_lms_init_q15</definition>
        <argsstring>(arm_lms_instance_q15 *S, uint16_t numTaps, q15_t *pCoeffs, q15_t *pState, q15_t mu, uint32_t blockSize, uint32_t postShift)</argsstring>
        <name>arm_lms_init_q15</name>
        <param>
          <type><ref refid="structarm__lms__instance__q15" kindref="compound">arm_lms_instance_q15</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>numTaps</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pCoeffs</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pState</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref></type>
          <declname>mu</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>postShift</declname>
        </param>
        <briefdescription>
<para>Initialization function for the Q15 LMS filter. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">S</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the Q15 LMS filter structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">numTaps</parametername>
</parameternamelist>
<parameterdescription>
<para>number of filter coefficients. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pCoeffs</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the coefficient buffer. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pState</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the state buffer. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mu</parametername>
</parameternamelist>
<parameterdescription>
<para>step size that controls filter coefficient updates. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples to process. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">postShift</parametername>
</parameternamelist>
<parameterdescription>
<para>bit shift applied to coefficients. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="4036" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1acde16c17eb75979f81b34e2e2a58c7ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_lms_q15</definition>
        <argsstring>(const arm_lms_instance_q15 *S, q15_t *pSrc, q15_t *pRef, q15_t *pOut, q15_t *pErr, uint32_t blockSize)</argsstring>
        <name>arm_lms_q15</name>
        <param>
          <type>const <ref refid="structarm__lms__instance__q15" kindref="compound">arm_lms_instance_q15</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pRef</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pOut</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pErr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Processing function for Q15 LMS filter. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">S</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the Q15 LMS filter structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of input data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pRef</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of reference data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pOut</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of output data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pErr</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of error data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples to process. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="4055" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a6a0abfe6041253a6f91c63b383a64257" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_lms_q31</definition>
        <argsstring>(const arm_lms_instance_q31 *S, q31_t *pSrc, q31_t *pRef, q31_t *pOut, q31_t *pErr, uint32_t blockSize)</argsstring>
        <name>arm_lms_q31</name>
        <param>
          <type>const <ref refid="structarm__lms__instance__q31" kindref="compound">arm_lms_instance_q31</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pRef</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pOut</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pErr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Processing function for Q31 LMS filter. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">S</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the Q15 LMS filter structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of input data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pRef</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of reference data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pOut</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of output data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pErr</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of error data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples to process. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="4086" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a8d4bc251169f4b102355097a9f7530d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_lms_init_q31</definition>
        <argsstring>(arm_lms_instance_q31 *S, uint16_t numTaps, q31_t *pCoeffs, q31_t *pState, q31_t mu, uint32_t blockSize, uint32_t postShift)</argsstring>
        <name>arm_lms_init_q31</name>
        <param>
          <type><ref refid="structarm__lms__instance__q31" kindref="compound">arm_lms_instance_q31</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>numTaps</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pCoeffs</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pState</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref></type>
          <declname>mu</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>postShift</declname>
        </param>
        <briefdescription>
<para>Initialization function for Q31 LMS filter. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">S</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the Q31 LMS filter structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">numTaps</parametername>
</parameternamelist>
<parameterdescription>
<para>number of filter coefficients. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pCoeffs</parametername>
</parameternamelist>
<parameterdescription>
<para>points to coefficient buffer. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pState</parametername>
</parameternamelist>
<parameterdescription>
<para>points to state buffer. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mu</parametername>
</parameternamelist>
<parameterdescription>
<para>step size that controls filter coefficient updates. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples to process. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">postShift</parametername>
</parameternamelist>
<parameterdescription>
<para>bit shift applied to coefficients. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="4105" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a2418c929087c6eba719758eaae3f3300" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_lms_norm_f32</definition>
        <argsstring>(arm_lms_norm_instance_f32 *S, float32_t *pSrc, float32_t *pRef, float32_t *pOut, float32_t *pErr, uint32_t blockSize)</argsstring>
        <name>arm_lms_norm_f32</name>
        <param>
          <type><ref refid="structarm__lms__norm__instance__f32" kindref="compound">arm_lms_norm_instance_f32</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pRef</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pOut</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pErr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Processing function for floating-point normalized LMS filter. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">S</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the floating-point normalized LMS filter structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of input data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pRef</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of reference data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pOut</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of output data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pErr</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of error data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples to process. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="4138" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1ac7ccbaea863882056eee815456464670" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_lms_norm_init_f32</definition>
        <argsstring>(arm_lms_norm_instance_f32 *S, uint16_t numTaps, float32_t *pCoeffs, float32_t *pState, float32_t mu, uint32_t blockSize)</argsstring>
        <name>arm_lms_norm_init_f32</name>
        <param>
          <type><ref refid="structarm__lms__norm__instance__f32" kindref="compound">arm_lms_norm_instance_f32</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>numTaps</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pCoeffs</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pState</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref></type>
          <declname>mu</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Initialization function for floating-point normalized LMS filter. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">S</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the floating-point LMS filter structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">numTaps</parametername>
</parameternamelist>
<parameterdescription>
<para>number of filter coefficients. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pCoeffs</parametername>
</parameternamelist>
<parameterdescription>
<para>points to coefficient buffer. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pState</parametername>
</parameternamelist>
<parameterdescription>
<para>points to state buffer. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mu</parametername>
</parameternamelist>
<parameterdescription>
<para>step size that controls filter coefficient updates. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples to process. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="4156" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a7128775e99817c183a7d7ad34e8b6e05" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_lms_norm_q31</definition>
        <argsstring>(arm_lms_norm_instance_q31 *S, q31_t *pSrc, q31_t *pRef, q31_t *pOut, q31_t *pErr, uint32_t blockSize)</argsstring>
        <name>arm_lms_norm_q31</name>
        <param>
          <type><ref refid="structarm__lms__norm__instance__q31" kindref="compound">arm_lms_norm_instance_q31</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pRef</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pOut</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pErr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Processing function for Q31 normalized LMS filter. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">S</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the Q31 normalized LMS filter structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of input data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pRef</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of reference data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pOut</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of output data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pErr</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of error data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples to process. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="4190" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a1d9659dbbea4c89a7a9d14d5fc0dd490" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_lms_norm_init_q31</definition>
        <argsstring>(arm_lms_norm_instance_q31 *S, uint16_t numTaps, q31_t *pCoeffs, q31_t *pState, q31_t mu, uint32_t blockSize, uint8_t postShift)</argsstring>
        <name>arm_lms_norm_init_q31</name>
        <param>
          <type><ref refid="structarm__lms__norm__instance__q31" kindref="compound">arm_lms_norm_instance_q31</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>numTaps</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pCoeffs</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pState</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref></type>
          <declname>mu</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>postShift</declname>
        </param>
        <briefdescription>
<para>Initialization function for Q31 normalized LMS filter. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">S</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the Q31 normalized LMS filter structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">numTaps</parametername>
</parameternamelist>
<parameterdescription>
<para>number of filter coefficients. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pCoeffs</parametername>
</parameternamelist>
<parameterdescription>
<para>points to coefficient buffer. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pState</parametername>
</parameternamelist>
<parameterdescription>
<para>points to state buffer. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mu</parametername>
</parameternamelist>
<parameterdescription>
<para>step size that controls filter coefficient updates. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples to process. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">postShift</parametername>
</parameternamelist>
<parameterdescription>
<para>bit shift applied to coefficients. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="4209" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1ad47486a399dedb0bc85a5990ec5cf981" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_lms_norm_q15</definition>
        <argsstring>(arm_lms_norm_instance_q15 *S, q15_t *pSrc, q15_t *pRef, q15_t *pOut, q15_t *pErr, uint32_t blockSize)</argsstring>
        <name>arm_lms_norm_q15</name>
        <param>
          <type><ref refid="structarm__lms__norm__instance__q15" kindref="compound">arm_lms_norm_instance_q15</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pRef</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pOut</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pErr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Processing function for Q15 normalized LMS filter. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">S</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the Q15 normalized LMS filter structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of input data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pRef</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of reference data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pOut</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of output data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pErr</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of error data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples to process. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="4244" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a213ab1ee2e154cc2fa30d667b1994b89" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_lms_norm_init_q15</definition>
        <argsstring>(arm_lms_norm_instance_q15 *S, uint16_t numTaps, q15_t *pCoeffs, q15_t *pState, q15_t mu, uint32_t blockSize, uint8_t postShift)</argsstring>
        <name>arm_lms_norm_init_q15</name>
        <param>
          <type><ref refid="structarm__lms__norm__instance__q15" kindref="compound">arm_lms_norm_instance_q15</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>numTaps</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pCoeffs</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pState</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref></type>
          <declname>mu</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>postShift</declname>
        </param>
        <briefdescription>
<para>Initialization function for Q15 normalized LMS filter. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">S</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the Q15 normalized LMS filter structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">numTaps</parametername>
</parameternamelist>
<parameterdescription>
<para>number of filter coefficients. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pCoeffs</parametername>
</parameternamelist>
<parameterdescription>
<para>points to coefficient buffer. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pState</parametername>
</parameternamelist>
<parameterdescription>
<para>points to state buffer. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mu</parametername>
</parameternamelist>
<parameterdescription>
<para>step size that controls filter coefficient updates. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples to process. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">postShift</parametername>
</parameternamelist>
<parameterdescription>
<para>bit shift applied to coefficients. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="4263" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a22021e4222773f01e9960358a531cfb8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_correlate_f32</definition>
        <argsstring>(float32_t *pSrcA, uint32_t srcALen, float32_t *pSrcB, uint32_t srcBLen, float32_t *pDst)</argsstring>
        <name>arm_correlate_f32</name>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pSrcA</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>srcALen</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pSrcB</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>srcBLen</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <briefdescription>
<para>Correlation of floating-point sequences. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrcA</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input sequence. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">srcALen</parametername>
</parameternamelist>
<parameterdescription>
<para>length of the first input sequence. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrcB</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input sequence. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">srcBLen</parametername>
</parameternamelist>
<parameterdescription>
<para>length of the second input sequence. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of output data Length 2 * max(srcALen, srcBLen) - 1. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="4281" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1ad71c0ec70ec69edbc48563d9a5f68451" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_correlate_opt_q15</definition>
        <argsstring>(q15_t *pSrcA, uint32_t srcALen, q15_t *pSrcB, uint32_t srcBLen, q15_t *pDst, q15_t *pScratch)</argsstring>
        <name>arm_correlate_opt_q15</name>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pSrcA</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>srcALen</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pSrcB</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>srcBLen</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pScratch</declname>
        </param>
        <briefdescription>
<para>Correlation of Q15 sequences. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrcA</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input sequence. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">srcALen</parametername>
</parameternamelist>
<parameterdescription>
<para>length of the first input sequence. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrcB</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input sequence. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">srcBLen</parametername>
</parameternamelist>
<parameterdescription>
<para>length of the second input sequence. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of output data Length 2 * max(srcALen, srcBLen) - 1. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pScratch</parametername>
</parameternamelist>
<parameterdescription>
<para>points to scratch buffer of size max(srcALen, srcBLen) + 2*min(srcALen, srcBLen) - 2. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="4298" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a5ec96b8e420d68b0e626df0812274d46" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_correlate_q15</definition>
        <argsstring>(q15_t *pSrcA, uint32_t srcALen, q15_t *pSrcB, uint32_t srcBLen, q15_t *pDst)</argsstring>
        <name>arm_correlate_q15</name>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pSrcA</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>srcALen</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pSrcB</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>srcBLen</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <briefdescription>
<para>Correlation of Q15 sequences. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrcA</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input sequence. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">srcALen</parametername>
</parameternamelist>
<parameterdescription>
<para>length of the first input sequence. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrcB</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input sequence. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">srcBLen</parametername>
</parameternamelist>
<parameterdescription>
<para>length of the second input sequence. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of output data Length 2 * max(srcALen, srcBLen) - 1. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="4316" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1ac8de3da44f58e86c2c86156276ca154f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_correlate_fast_q15</definition>
        <argsstring>(q15_t *pSrcA, uint32_t srcALen, q15_t *pSrcB, uint32_t srcBLen, q15_t *pDst)</argsstring>
        <name>arm_correlate_fast_q15</name>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pSrcA</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>srcALen</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pSrcB</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>srcBLen</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <briefdescription>
<para>Correlation of Q15 sequences (fast version) for Cortex-M3 and Cortex-M4. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrcA</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input sequence. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">srcALen</parametername>
</parameternamelist>
<parameterdescription>
<para>length of the first input sequence. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrcB</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input sequence. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">srcBLen</parametername>
</parameternamelist>
<parameterdescription>
<para>length of the second input sequence. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of output data Length 2 * max(srcALen, srcBLen) - 1. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="4333" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a40a0236b17220e8e22a22b5bc1c53c6b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_correlate_fast_opt_q15</definition>
        <argsstring>(q15_t *pSrcA, uint32_t srcALen, q15_t *pSrcB, uint32_t srcBLen, q15_t *pDst, q15_t *pScratch)</argsstring>
        <name>arm_correlate_fast_opt_q15</name>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pSrcA</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>srcALen</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pSrcB</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>srcBLen</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pScratch</declname>
        </param>
        <briefdescription>
<para>Correlation of Q15 sequences (fast version) for Cortex-M3 and Cortex-M4. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrcA</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input sequence. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">srcALen</parametername>
</parameternamelist>
<parameterdescription>
<para>length of the first input sequence. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrcB</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input sequence. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">srcBLen</parametername>
</parameternamelist>
<parameterdescription>
<para>length of the second input sequence. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of output data Length 2 * max(srcALen, srcBLen) - 1. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pScratch</parametername>
</parameternamelist>
<parameterdescription>
<para>points to scratch buffer of size max(srcALen, srcBLen) + 2*min(srcALen, srcBLen) - 2. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="4350" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a1367dc6c80476406c951e68d7fac4e8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_correlate_q31</definition>
        <argsstring>(q31_t *pSrcA, uint32_t srcALen, q31_t *pSrcB, uint32_t srcBLen, q31_t *pDst)</argsstring>
        <name>arm_correlate_q31</name>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pSrcA</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>srcALen</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pSrcB</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>srcBLen</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <briefdescription>
<para>Correlation of Q31 sequences. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrcA</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input sequence. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">srcALen</parametername>
</parameternamelist>
<parameterdescription>
<para>length of the first input sequence. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrcB</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input sequence. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">srcBLen</parametername>
</parameternamelist>
<parameterdescription>
<para>length of the second input sequence. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of output data Length 2 * max(srcALen, srcBLen) - 1. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="4367" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1abecd3d7b077dbbef43f93e9e037815ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_correlate_fast_q31</definition>
        <argsstring>(q31_t *pSrcA, uint32_t srcALen, q31_t *pSrcB, uint32_t srcBLen, q31_t *pDst)</argsstring>
        <name>arm_correlate_fast_q31</name>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pSrcA</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>srcALen</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pSrcB</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>srcBLen</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <briefdescription>
<para>Correlation of Q31 sequences (fast version) for Cortex-M3 and Cortex-M4. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrcA</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input sequence. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">srcALen</parametername>
</parameternamelist>
<parameterdescription>
<para>length of the first input sequence. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrcB</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input sequence. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">srcBLen</parametername>
</parameternamelist>
<parameterdescription>
<para>length of the second input sequence. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of output data Length 2 * max(srcALen, srcBLen) - 1. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="4383" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a746e8857cafe33ec5d6780729c18c311" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_correlate_opt_q7</definition>
        <argsstring>(q7_t *pSrcA, uint32_t srcALen, q7_t *pSrcB, uint32_t srcBLen, q7_t *pDst, q15_t *pScratch1, q15_t *pScratch2)</argsstring>
        <name>arm_correlate_opt_q7</name>
        <param>
          <type><ref refid="arm__math_8h_1ae541b6f232c305361e9b416fc9eed263" kindref="member">q7_t</ref> *</type>
          <declname>pSrcA</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>srcALen</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ae541b6f232c305361e9b416fc9eed263" kindref="member">q7_t</ref> *</type>
          <declname>pSrcB</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>srcBLen</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ae541b6f232c305361e9b416fc9eed263" kindref="member">q7_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pScratch1</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pScratch2</declname>
        </param>
        <briefdescription>
<para>Correlation of Q7 sequences. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrcA</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input sequence. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">srcALen</parametername>
</parameternamelist>
<parameterdescription>
<para>length of the first input sequence. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrcB</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input sequence. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">srcBLen</parametername>
</parameternamelist>
<parameterdescription>
<para>length of the second input sequence. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of output data Length 2 * max(srcALen, srcBLen) - 1. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pScratch1</parametername>
</parameternamelist>
<parameterdescription>
<para>points to scratch buffer(of type q15_t) of size max(srcALen, srcBLen) + 2*min(srcALen, srcBLen) - 2. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pScratch2</parametername>
</parameternamelist>
<parameterdescription>
<para>points to scratch buffer (of type q15_t) of size min(srcALen, srcBLen). </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="4401" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a284ddcc49e4ac532d52a70d0383c5992" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_correlate_q7</definition>
        <argsstring>(q7_t *pSrcA, uint32_t srcALen, q7_t *pSrcB, uint32_t srcBLen, q7_t *pDst)</argsstring>
        <name>arm_correlate_q7</name>
        <param>
          <type><ref refid="arm__math_8h_1ae541b6f232c305361e9b416fc9eed263" kindref="member">q7_t</ref> *</type>
          <declname>pSrcA</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>srcALen</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ae541b6f232c305361e9b416fc9eed263" kindref="member">q7_t</ref> *</type>
          <declname>pSrcB</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>srcBLen</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ae541b6f232c305361e9b416fc9eed263" kindref="member">q7_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <briefdescription>
<para>Correlation of Q7 sequences. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrcA</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input sequence. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">srcALen</parametername>
</parameternamelist>
<parameterdescription>
<para>length of the first input sequence. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrcB</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input sequence. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">srcBLen</parametername>
</parameternamelist>
<parameterdescription>
<para>length of the second input sequence. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of output data Length 2 * max(srcALen, srcBLen) - 1. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="4419" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a23a9284de5ee39406713b91d18ac8838" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_fir_sparse_f32</definition>
        <argsstring>(arm_fir_sparse_instance_f32 *S, float32_t *pSrc, float32_t *pDst, float32_t *pScratchIn, uint32_t blockSize)</argsstring>
        <name>arm_fir_sparse_f32</name>
        <param>
          <type><ref refid="structarm__fir__sparse__instance__f32" kindref="compound">arm_fir_sparse_instance_f32</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pScratchIn</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Processing function for the floating-point sparse FIR filter. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">S</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the floating-point sparse FIR structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of input data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of output data </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pScratchIn</parametername>
</parameternamelist>
<parameterdescription>
<para>points to a temporary buffer of size blockSize. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input samples to process per call. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="4488" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a86378a08a9d9e1e0e5de77843b34d396" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_fir_sparse_init_f32</definition>
        <argsstring>(arm_fir_sparse_instance_f32 *S, uint16_t numTaps, float32_t *pCoeffs, float32_t *pState, int32_t *pTapDelay, uint16_t maxDelay, uint32_t blockSize)</argsstring>
        <name>arm_fir_sparse_init_f32</name>
        <param>
          <type><ref refid="structarm__fir__sparse__instance__f32" kindref="compound">arm_fir_sparse_instance_f32</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>numTaps</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pCoeffs</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pState</declname>
        </param>
        <param>
          <type>int32_t *</type>
          <declname>pTapDelay</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>maxDelay</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Initialization function for the floating-point sparse FIR filter. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">S</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the floating-point sparse FIR structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">numTaps</parametername>
</parameternamelist>
<parameterdescription>
<para>number of nonzero coefficients in the filter. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pCoeffs</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the array of filter coefficients. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pState</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the state buffer. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pTapDelay</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the array of offset times. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">maxDelay</parametername>
</parameternamelist>
<parameterdescription>
<para>maximum offset time supported. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples that will be processed per block. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="4506" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a03e9c2f0f35ad67d20bac66be9f920ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_fir_sparse_q31</definition>
        <argsstring>(arm_fir_sparse_instance_q31 *S, q31_t *pSrc, q31_t *pDst, q31_t *pScratchIn, uint32_t blockSize)</argsstring>
        <name>arm_fir_sparse_q31</name>
        <param>
          <type><ref refid="structarm__fir__sparse__instance__q31" kindref="compound">arm_fir_sparse_instance_q31</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pScratchIn</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Processing function for the Q31 sparse FIR filter. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">S</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the Q31 sparse FIR structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of input data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of output data </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pScratchIn</parametername>
</parameternamelist>
<parameterdescription>
<para>points to a temporary buffer of size blockSize. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input samples to process per call. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="4524" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a9a0bb2134bc85d3e55c6be6d946ee634" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_fir_sparse_init_q31</definition>
        <argsstring>(arm_fir_sparse_instance_q31 *S, uint16_t numTaps, q31_t *pCoeffs, q31_t *pState, int32_t *pTapDelay, uint16_t maxDelay, uint32_t blockSize)</argsstring>
        <name>arm_fir_sparse_init_q31</name>
        <param>
          <type><ref refid="structarm__fir__sparse__instance__q31" kindref="compound">arm_fir_sparse_instance_q31</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>numTaps</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pCoeffs</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pState</declname>
        </param>
        <param>
          <type>int32_t *</type>
          <declname>pTapDelay</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>maxDelay</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Initialization function for the Q31 sparse FIR filter. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">S</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the Q31 sparse FIR structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">numTaps</parametername>
</parameternamelist>
<parameterdescription>
<para>number of nonzero coefficients in the filter. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pCoeffs</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the array of filter coefficients. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pState</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the state buffer. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pTapDelay</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the array of offset times. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">maxDelay</parametername>
</parameternamelist>
<parameterdescription>
<para>maximum offset time supported. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples that will be processed per block. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="4542" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a2bffda2e156e72427e19276cd9c3d3cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_fir_sparse_q15</definition>
        <argsstring>(arm_fir_sparse_instance_q15 *S, q15_t *pSrc, q15_t *pDst, q15_t *pScratchIn, q31_t *pScratchOut, uint32_t blockSize)</argsstring>
        <name>arm_fir_sparse_q15</name>
        <param>
          <type><ref refid="structarm__fir__sparse__instance__q15" kindref="compound">arm_fir_sparse_instance_q15</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pScratchIn</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pScratchOut</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Processing function for the Q15 sparse FIR filter. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">S</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the Q15 sparse FIR structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of input data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of output data </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pScratchIn</parametername>
</parameternamelist>
<parameterdescription>
<para>points to a temporary buffer of size blockSize. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pScratchOut</parametername>
</parameternamelist>
<parameterdescription>
<para>points to a temporary buffer of size blockSize. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input samples to process per call. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="4561" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a5eaa80bf72bcccef5a2c5fc6648d1baa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_fir_sparse_init_q15</definition>
        <argsstring>(arm_fir_sparse_instance_q15 *S, uint16_t numTaps, q15_t *pCoeffs, q15_t *pState, int32_t *pTapDelay, uint16_t maxDelay, uint32_t blockSize)</argsstring>
        <name>arm_fir_sparse_init_q15</name>
        <param>
          <type><ref refid="structarm__fir__sparse__instance__q15" kindref="compound">arm_fir_sparse_instance_q15</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>numTaps</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pCoeffs</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pState</declname>
        </param>
        <param>
          <type>int32_t *</type>
          <declname>pTapDelay</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>maxDelay</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Initialization function for the Q15 sparse FIR filter. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">S</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the Q15 sparse FIR structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">numTaps</parametername>
</parameternamelist>
<parameterdescription>
<para>number of nonzero coefficients in the filter. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pCoeffs</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the array of filter coefficients. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pState</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the state buffer. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pTapDelay</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the array of offset times. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">maxDelay</parametername>
</parameternamelist>
<parameterdescription>
<para>maximum offset time supported. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples that will be processed per block. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="4580" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1ae86c145efc2d9ec32dc6d8c1ad2ccb3c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_fir_sparse_q7</definition>
        <argsstring>(arm_fir_sparse_instance_q7 *S, q7_t *pSrc, q7_t *pDst, q7_t *pScratchIn, q31_t *pScratchOut, uint32_t blockSize)</argsstring>
        <name>arm_fir_sparse_q7</name>
        <param>
          <type><ref refid="structarm__fir__sparse__instance__q7" kindref="compound">arm_fir_sparse_instance_q7</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ae541b6f232c305361e9b416fc9eed263" kindref="member">q7_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ae541b6f232c305361e9b416fc9eed263" kindref="member">q7_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ae541b6f232c305361e9b416fc9eed263" kindref="member">q7_t</ref> *</type>
          <declname>pScratchIn</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pScratchOut</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Processing function for the Q7 sparse FIR filter. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">S</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the Q7 sparse FIR structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of input data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of output data </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pScratchIn</parametername>
</parameternamelist>
<parameterdescription>
<para>points to a temporary buffer of size blockSize. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pScratchOut</parametername>
</parameternamelist>
<parameterdescription>
<para>points to a temporary buffer of size blockSize. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input samples to process per call. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="4599" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a98f5c1a097d4572ce4ff3b0c58ebcdbd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_fir_sparse_init_q7</definition>
        <argsstring>(arm_fir_sparse_instance_q7 *S, uint16_t numTaps, q7_t *pCoeffs, q7_t *pState, int32_t *pTapDelay, uint16_t maxDelay, uint32_t blockSize)</argsstring>
        <name>arm_fir_sparse_init_q7</name>
        <param>
          <type><ref refid="structarm__fir__sparse__instance__q7" kindref="compound">arm_fir_sparse_instance_q7</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>numTaps</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ae541b6f232c305361e9b416fc9eed263" kindref="member">q7_t</ref> *</type>
          <declname>pCoeffs</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ae541b6f232c305361e9b416fc9eed263" kindref="member">q7_t</ref> *</type>
          <declname>pState</declname>
        </param>
        <param>
          <type>int32_t *</type>
          <declname>pTapDelay</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>maxDelay</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Initialization function for the Q7 sparse FIR filter. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">S</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the Q7 sparse FIR structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">numTaps</parametername>
</parameternamelist>
<parameterdescription>
<para>number of nonzero coefficients in the filter. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pCoeffs</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the array of filter coefficients. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pState</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the state buffer. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pTapDelay</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the array of offset times. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">maxDelay</parametername>
</parameternamelist>
<parameterdescription>
<para>maximum offset time supported. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples that will be processed per block. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="4618" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a4420d45c37d58c310ef9ae1b5fe58020" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_sin_cos_f32</definition>
        <argsstring>(float32_t theta, float32_t *pSinVal, float32_t *pCosVal)</argsstring>
        <name>arm_sin_cos_f32</name>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref></type>
          <declname>theta</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pSinVal</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pCosVal</declname>
        </param>
        <briefdescription>
<para>Floating-point sin_cos function. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">theta</parametername>
</parameternamelist>
<parameterdescription>
<para>input value in degrees </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pSinVal</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the processed sine output. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pCosVal</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the processed cos output. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="4634" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1ae9e4ddebff9d4eb5d0a093e28e0bc504" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_sin_cos_q31</definition>
        <argsstring>(q31_t theta, q31_t *pSinVal, q31_t *pCosVal)</argsstring>
        <name>arm_sin_cos_q31</name>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref></type>
          <declname>theta</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pSinVal</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pCosVal</declname>
        </param>
        <briefdescription>
<para>Q31 sin_cos function. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">theta</parametername>
</parameternamelist>
<parameterdescription>
<para>scaled input value in degrees </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pSinVal</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the processed sine output. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pCosVal</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the processed cosine output. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="4646" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a3a102aead6460ad9fcb0626f6b226ffb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_cmplx_conj_f32</definition>
        <argsstring>(float32_t *pSrc, float32_t *pDst, uint32_t numSamples)</argsstring>
        <name>arm_cmplx_conj_f32</name>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>numSamples</declname>
        </param>
        <briefdescription>
<para>Floating-point complex conjugate. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">numSamples</parametername>
</parameternamelist>
<parameterdescription>
<para>number of complex samples in each vector </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="4658" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1afecc94879a383c5208ec3ef99485e4b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_cmplx_conj_q31</definition>
        <argsstring>(q31_t *pSrc, q31_t *pDst, uint32_t numSamples)</argsstring>
        <name>arm_cmplx_conj_q31</name>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>numSamples</declname>
        </param>
        <briefdescription>
<para>Q31 complex conjugate. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">numSamples</parametername>
</parameternamelist>
<parameterdescription>
<para>number of complex samples in each vector </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="4669" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1af47689ae07962acaecb8ddde556df4a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_cmplx_conj_q15</definition>
        <argsstring>(q15_t *pSrc, q15_t *pDst, uint32_t numSamples)</argsstring>
        <name>arm_cmplx_conj_q15</name>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>numSamples</declname>
        </param>
        <briefdescription>
<para>Q15 complex conjugate. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">numSamples</parametername>
</parameternamelist>
<parameterdescription>
<para>number of complex samples in each vector </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="4681" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1aa7faccc0d96b061d8b7d0d7d82045074" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_cmplx_mag_squared_f32</definition>
        <argsstring>(float32_t *pSrc, float32_t *pDst, uint32_t numSamples)</argsstring>
        <name>arm_cmplx_mag_squared_f32</name>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>numSamples</declname>
        </param>
        <briefdescription>
<para>Floating-point complex magnitude squared. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the complex input vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the real output vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">numSamples</parametername>
</parameternamelist>
<parameterdescription>
<para>number of complex samples in the input vector </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="4693" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a384b0538101e8c03fa4fa14271e63b04" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_cmplx_mag_squared_q31</definition>
        <argsstring>(q31_t *pSrc, q31_t *pDst, uint32_t numSamples)</argsstring>
        <name>arm_cmplx_mag_squared_q31</name>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>numSamples</declname>
        </param>
        <briefdescription>
<para>Q31 complex magnitude squared. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the complex input vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the real output vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">numSamples</parametername>
</parameternamelist>
<parameterdescription>
<para>number of complex samples in the input vector </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="4705" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a45537f576102d960d467eb722b8431f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_cmplx_mag_squared_q15</definition>
        <argsstring>(q15_t *pSrc, q15_t *pDst, uint32_t numSamples)</argsstring>
        <name>arm_cmplx_mag_squared_q15</name>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>numSamples</declname>
        </param>
        <briefdescription>
<para>Q15 complex magnitude squared. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the complex input vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the real output vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">numSamples</parametername>
</parameternamelist>
<parameterdescription>
<para>number of complex samples in the input vector </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="4717" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___p_i_d_1gac5c79ed46abf2d72b8cf41fa6c708bda" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__INLINE <ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref></type>
        <definition>static __INLINE float32_t arm_pid_f32</definition>
        <argsstring>(arm_pid_instance_f32 *S, float32_t in)</argsstring>
        <name>arm_pid_f32</name>
        <param>
          <type><ref refid="structarm__pid__instance__f32" kindref="compound">arm_pid_instance_f32</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref></type>
          <declname>in</declname>
        </param>
        <briefdescription>
<para>Process function for the floating-point PID Control. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">S</parametername>
</parameternamelist>
<parameterdescription>
<para>is an instance of the floating-point PID Control structure </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in</parametername>
</parameternamelist>
<parameterdescription>
<para>input sample to process </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>out processed output sample. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="4795" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" bodystart="4795" bodyend="4813"/>
      </memberdef>
      <memberdef kind="function" id="group___p_i_d_1ga5f6f941e7ae981728dd3a662f8f4ecd7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__INLINE <ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref></type>
        <definition>static __INLINE q31_t arm_pid_q31</definition>
        <argsstring>(arm_pid_instance_q31 *S, q31_t in)</argsstring>
        <name>arm_pid_q31</name>
        <param>
          <type><ref refid="structarm__pid__instance__q31" kindref="compound">arm_pid_instance_q31</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref></type>
          <declname>in</declname>
        </param>
        <briefdescription>
<para>Process function for the Q31 PID Control. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">S</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the Q31 PID Control structure </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in</parametername>
</parameternamelist>
<parameterdescription>
<para>input sample to process </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>out processed output sample.</para></simplesect>
<bold>Scaling and Overflow Behavior:</bold> <simplesect kind="par"><title></title><para>The function is implemented using an internal 64-bit accumulator. The accumulator has a 2.62 format and maintains full precision of the intermediate multiplication results but provides only a single guard bit. Thus, if the accumulator result overflows it wraps around rather than clip. In order to avoid overflows completely the input signal must be scaled down by 2 bits as there are four additions. After all multiply-accumulates are performed, the 2.62 accumulator is truncated to 1.32 format and then saturated to 1.31 format. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="4829" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" bodystart="4829" bodyend="4858"/>
      </memberdef>
      <memberdef kind="function" id="group___p_i_d_1ga084f646bbb20d55f225c3efafcf7fc1f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__INLINE <ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref></type>
        <definition>static __INLINE q15_t arm_pid_q15</definition>
        <argsstring>(arm_pid_instance_q15 *S, q15_t in)</argsstring>
        <name>arm_pid_q15</name>
        <param>
          <type><ref refid="structarm__pid__instance__q15" kindref="compound">arm_pid_instance_q15</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref></type>
          <declname>in</declname>
        </param>
        <briefdescription>
<para>Process function for the Q15 PID Control. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">S</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the Q15 PID Control structure </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in</parametername>
</parameternamelist>
<parameterdescription>
<para>input sample to process </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>out processed output sample.</para></simplesect>
<bold>Scaling and Overflow Behavior:</bold> <simplesect kind="par"><title></title><para>The function is implemented using a 64-bit internal accumulator. Both Gains and state variables are represented in 1.15 format and multiplications yield a 2.30 result. The 2.30 intermediate results are accumulated in a 64-bit accumulator in 34.30 format. There is no risk of internal overflow with this approach and the full precision of intermediate multiplications is preserved. After all additions have been performed, the accumulator is truncated to 34.15 format by discarding low 15 bits. Lastly, the accumulator is saturated to yield a result in 1.15 format. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="4876" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" bodystart="4876" bodyend="4916"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1ab1283b23c96da04362a0efcdc7f23901" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6" kindref="member">arm_status</ref></type>
        <definition>arm_status arm_mat_inverse_f32</definition>
        <argsstring>(const arm_matrix_instance_f32 *src, arm_matrix_instance_f32 *dst)</argsstring>
        <name>arm_mat_inverse_f32</name>
        <param>
          <type>const <ref refid="structarm__matrix__instance__f32" kindref="compound">arm_matrix_instance_f32</ref> *</type>
          <declname>src</declname>
        </param>
        <param>
          <type><ref refid="structarm__matrix__instance__f32" kindref="compound">arm_matrix_instance_f32</ref> *</type>
          <declname>dst</declname>
        </param>
        <briefdescription>
<para>Floating-point matrix inverse. </para>        </briefdescription>
        <detaileddescription>
<para>end of PID group <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">src</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the instance of the input floating-point matrix structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the instance of the output floating-point matrix structure. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The function returns ARM_MATH_SIZE_MISMATCH, if the dimensions do not match. If the input matrix is singular (does not have an inverse), then the algorithm terminates and returns error status ARM_MATH_SINGULAR. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="4930" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a3dd167a2b71330f9f7b606374e9ec063" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6" kindref="member">arm_status</ref></type>
        <definition>arm_status arm_mat_inverse_f64</definition>
        <argsstring>(const arm_matrix_instance_f64 *src, arm_matrix_instance_f64 *dst)</argsstring>
        <name>arm_mat_inverse_f64</name>
        <param>
          <type>const <ref refid="structarm__matrix__instance__f64" kindref="compound">arm_matrix_instance_f64</ref> *</type>
          <declname>src</declname>
        </param>
        <param>
          <type><ref refid="structarm__matrix__instance__f64" kindref="compound">arm_matrix_instance_f64</ref> *</type>
          <declname>dst</declname>
        </param>
        <briefdescription>
<para>Floating-point matrix inverse. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">src</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the instance of the input floating-point matrix structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the instance of the output floating-point matrix structure. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The function returns ARM_MATH_SIZE_MISMATCH, if the dimensions do not match. If the input matrix is singular (does not have an inverse), then the algorithm terminates and returns error status ARM_MATH_SINGULAR. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="4942" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__clarke_1ga2b4ebec76215e1277c970c269ffdbd76" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__INLINE void</type>
        <definition>static __INLINE void arm_clarke_f32</definition>
        <argsstring>(float32_t Ia, float32_t Ib, float32_t *pIalpha, float32_t *pIbeta)</argsstring>
        <name>arm_clarke_f32</name>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref></type>
          <declname>Ia</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref></type>
          <declname>Ib</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pIalpha</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pIbeta</declname>
        </param>
        <briefdescription>
<para>Floating-point Clarke transform. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">Ia</parametername>
</parameternamelist>
<parameterdescription>
<para>input three-phase coordinate <computeroutput>a</computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">Ib</parametername>
</parameternamelist>
<parameterdescription>
<para>input three-phase coordinate <computeroutput>b</computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pIalpha</parametername>
</parameternamelist>
<parameterdescription>
<para>points to output two-phase orthogonal vector axis alpha </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pIbeta</parametername>
</parameternamelist>
<parameterdescription>
<para>points to output two-phase orthogonal vector axis beta </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="4987" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" bodystart="4987" bodyend="4998"/>
      </memberdef>
      <memberdef kind="function" id="group__clarke_1ga7fd106ca8d346a2a472842e0656014c1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__INLINE void</type>
        <definition>static __INLINE void arm_clarke_q31</definition>
        <argsstring>(q31_t Ia, q31_t Ib, q31_t *pIalpha, q31_t *pIbeta)</argsstring>
        <name>arm_clarke_q31</name>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref></type>
          <declname>Ia</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref></type>
          <declname>Ib</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pIalpha</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pIbeta</declname>
        </param>
        <briefdescription>
<para>Clarke transform for Q31 version. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">Ia</parametername>
</parameternamelist>
<parameterdescription>
<para>input three-phase coordinate <computeroutput>a</computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">Ib</parametername>
</parameternamelist>
<parameterdescription>
<para>input three-phase coordinate <computeroutput>b</computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pIalpha</parametername>
</parameternamelist>
<parameterdescription>
<para>points to output two-phase orthogonal vector axis alpha </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pIbeta</parametername>
</parameternamelist>
<parameterdescription>
<para>points to output two-phase orthogonal vector axis beta</para></parameterdescription>
</parameteritem>
</parameterlist>
<bold>Scaling and Overflow Behavior:</bold> <simplesect kind="par"><title></title><para>The function is implemented using an internal 32-bit accumulator. The accumulator maintains 1.31 format by truncating lower 31 bits of the intermediate multiplication in 2.62 format. There is saturation on the addition, hence there is no risk of overflow. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="5014" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" bodystart="5014" bodyend="5033"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1ad8958cd3cb7f521466168b46a25b7908" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_q7_to_q31</definition>
        <argsstring>(q7_t *pSrc, q31_t *pDst, uint32_t blockSize)</argsstring>
        <name>arm_q7_to_q31</name>
        <param>
          <type><ref refid="arm__math_8h_1ae541b6f232c305361e9b416fc9eed263" kindref="member">q7_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Converts the elements of the Q7 vector to Q31 vector. </para>        </briefdescription>
        <detaileddescription>
<para>end of clarke group <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>input pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>output pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples to process </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="5045" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__inv__clarke_1ga137f0396d837477b899ecae89f075a50" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__INLINE void</type>
        <definition>static __INLINE void arm_inv_clarke_f32</definition>
        <argsstring>(float32_t Ialpha, float32_t Ibeta, float32_t *pIa, float32_t *pIb)</argsstring>
        <name>arm_inv_clarke_f32</name>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref></type>
          <declname>Ialpha</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref></type>
          <declname>Ibeta</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pIa</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pIb</declname>
        </param>
        <briefdescription>
<para>Floating-point Inverse Clarke transform. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">Ialpha</parametername>
</parameternamelist>
<parameterdescription>
<para>input two-phase orthogonal vector axis alpha </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">Ibeta</parametername>
</parameternamelist>
<parameterdescription>
<para>input two-phase orthogonal vector axis beta </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pIa</parametername>
</parameternamelist>
<parameterdescription>
<para>points to output three-phase coordinate <computeroutput>a</computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pIb</parametername>
</parameternamelist>
<parameterdescription>
<para>points to output three-phase coordinate <computeroutput>b</computeroutput> </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="5084" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" bodystart="5084" bodyend="5095"/>
      </memberdef>
      <memberdef kind="function" id="group__inv__clarke_1ga2d0c60f114f095a2f27442d98781ba02" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__INLINE void</type>
        <definition>static __INLINE void arm_inv_clarke_q31</definition>
        <argsstring>(q31_t Ialpha, q31_t Ibeta, q31_t *pIa, q31_t *pIb)</argsstring>
        <name>arm_inv_clarke_q31</name>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref></type>
          <declname>Ialpha</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref></type>
          <declname>Ibeta</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pIa</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pIb</declname>
        </param>
        <briefdescription>
<para>Inverse Clarke transform for Q31 version. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">Ialpha</parametername>
</parameternamelist>
<parameterdescription>
<para>input two-phase orthogonal vector axis alpha </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">Ibeta</parametername>
</parameternamelist>
<parameterdescription>
<para>input two-phase orthogonal vector axis beta </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pIa</parametername>
</parameternamelist>
<parameterdescription>
<para>points to output three-phase coordinate <computeroutput>a</computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pIb</parametername>
</parameternamelist>
<parameterdescription>
<para>points to output three-phase coordinate <computeroutput>b</computeroutput></para></parameterdescription>
</parameteritem>
</parameterlist>
<bold>Scaling and Overflow Behavior:</bold> <simplesect kind="par"><title></title><para>The function is implemented using an internal 32-bit accumulator. The accumulator maintains 1.31 format by truncating lower 31 bits of the intermediate multiplication in 2.62 format. There is saturation on the subtraction, hence there is no risk of overflow. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="5111" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" bodystart="5111" bodyend="5130"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1abc02597fc3f01033daf43ec0547a2f78" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_q7_to_q15</definition>
        <argsstring>(q7_t *pSrc, q15_t *pDst, uint32_t blockSize)</argsstring>
        <name>arm_q7_to_q15</name>
        <param>
          <type><ref refid="arm__math_8h_1ae541b6f232c305361e9b416fc9eed263" kindref="member">q7_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Converts the elements of the Q7 vector to Q15 vector. </para>        </briefdescription>
        <detaileddescription>
<para>end of inv_clarke group <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>input pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>output pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples to process </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="5142" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__park_1ga08b3a683197de7e143fb00497787683c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__INLINE void</type>
        <definition>static __INLINE void arm_park_f32</definition>
        <argsstring>(float32_t Ialpha, float32_t Ibeta, float32_t *pId, float32_t *pIq, float32_t sinVal, float32_t cosVal)</argsstring>
        <name>arm_park_f32</name>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref></type>
          <declname>Ialpha</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref></type>
          <declname>Ibeta</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pId</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pIq</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref></type>
          <declname>sinVal</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref></type>
          <declname>cosVal</declname>
        </param>
        <briefdescription>
<para>Floating-point Park transform. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">Ialpha</parametername>
</parameternamelist>
<parameterdescription>
<para>input two-phase vector coordinate alpha </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">Ibeta</parametername>
</parameternamelist>
<parameterdescription>
<para>input two-phase vector coordinate beta </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pId</parametername>
</parameternamelist>
<parameterdescription>
<para>points to output rotor reference frame d </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pIq</parametername>
</parameternamelist>
<parameterdescription>
<para>points to output rotor reference frame q </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">sinVal</parametername>
</parameternamelist>
<parameterdescription>
<para>sine value of rotation angle theta </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cosVal</parametername>
</parameternamelist>
<parameterdescription>
<para>cosine value of rotation angle theta</para></parameterdescription>
</parameteritem>
</parameterlist>
The function implements the forward Park transform. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="5194" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" bodystart="5194" bodyend="5207"/>
      </memberdef>
      <memberdef kind="function" id="group__park_1gaf4cc6370c0cfc14ea66774ed3c5bb10f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__INLINE void</type>
        <definition>static __INLINE void arm_park_q31</definition>
        <argsstring>(q31_t Ialpha, q31_t Ibeta, q31_t *pId, q31_t *pIq, q31_t sinVal, q31_t cosVal)</argsstring>
        <name>arm_park_q31</name>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref></type>
          <declname>Ialpha</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref></type>
          <declname>Ibeta</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pId</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pIq</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref></type>
          <declname>sinVal</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref></type>
          <declname>cosVal</declname>
        </param>
        <briefdescription>
<para>Park transform for Q31 version. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">Ialpha</parametername>
</parameternamelist>
<parameterdescription>
<para>input two-phase vector coordinate alpha </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">Ibeta</parametername>
</parameternamelist>
<parameterdescription>
<para>input two-phase vector coordinate beta </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pId</parametername>
</parameternamelist>
<parameterdescription>
<para>points to output rotor reference frame d </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pIq</parametername>
</parameternamelist>
<parameterdescription>
<para>points to output rotor reference frame q </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">sinVal</parametername>
</parameternamelist>
<parameterdescription>
<para>sine value of rotation angle theta </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cosVal</parametername>
</parameternamelist>
<parameterdescription>
<para>cosine value of rotation angle theta</para></parameterdescription>
</parameteritem>
</parameterlist>
<bold>Scaling and Overflow Behavior:</bold> <simplesect kind="par"><title></title><para>The function is implemented using an internal 32-bit accumulator. The accumulator maintains 1.31 format by truncating lower 31 bits of the intermediate multiplication in 2.62 format. There is saturation on the addition and subtraction, hence there is no risk of overflow. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="5225" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" bodystart="5225" bodyend="5254"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a656620f957b65512ed83db03fd455ec5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_q7_to_float</definition>
        <argsstring>(q7_t *pSrc, float32_t *pDst, uint32_t blockSize)</argsstring>
        <name>arm_q7_to_float</name>
        <param>
          <type><ref refid="arm__math_8h_1ae541b6f232c305361e9b416fc9eed263" kindref="member">q7_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Converts the elements of the Q7 vector to floating-point vector. </para>        </briefdescription>
        <detaileddescription>
<para>end of park group <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>is input pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>is output pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>is the number of samples to process </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="5266" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__inv__park_1gaaf6bef0de21946f774d49df050dd8b05" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__INLINE void</type>
        <definition>static __INLINE void arm_inv_park_f32</definition>
        <argsstring>(float32_t Id, float32_t Iq, float32_t *pIalpha, float32_t *pIbeta, float32_t sinVal, float32_t cosVal)</argsstring>
        <name>arm_inv_park_f32</name>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref></type>
          <declname>Id</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref></type>
          <declname>Iq</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pIalpha</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pIbeta</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref></type>
          <declname>sinVal</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref></type>
          <declname>cosVal</declname>
        </param>
        <briefdescription>
<para>Floating-point Inverse Park transform. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">Id</parametername>
</parameternamelist>
<parameterdescription>
<para>input coordinate of rotor reference frame d </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">Iq</parametername>
</parameternamelist>
<parameterdescription>
<para>input coordinate of rotor reference frame q </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pIalpha</parametername>
</parameternamelist>
<parameterdescription>
<para>points to output two-phase orthogonal vector axis alpha </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pIbeta</parametername>
</parameternamelist>
<parameterdescription>
<para>points to output two-phase orthogonal vector axis beta </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">sinVal</parametername>
</parameternamelist>
<parameterdescription>
<para>sine value of rotation angle theta </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cosVal</parametername>
</parameternamelist>
<parameterdescription>
<para>cosine value of rotation angle theta </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="5307" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" bodystart="5307" bodyend="5320"/>
      </memberdef>
      <memberdef kind="function" id="group__inv__park_1ga0b33822b988a15455773d28440c5579a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__INLINE void</type>
        <definition>static __INLINE void arm_inv_park_q31</definition>
        <argsstring>(q31_t Id, q31_t Iq, q31_t *pIalpha, q31_t *pIbeta, q31_t sinVal, q31_t cosVal)</argsstring>
        <name>arm_inv_park_q31</name>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref></type>
          <declname>Id</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref></type>
          <declname>Iq</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pIalpha</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pIbeta</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref></type>
          <declname>sinVal</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref></type>
          <declname>cosVal</declname>
        </param>
        <briefdescription>
<para>Inverse Park transform for Q31 version. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">Id</parametername>
</parameternamelist>
<parameterdescription>
<para>input coordinate of rotor reference frame d </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">Iq</parametername>
</parameternamelist>
<parameterdescription>
<para>input coordinate of rotor reference frame q </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pIalpha</parametername>
</parameternamelist>
<parameterdescription>
<para>points to output two-phase orthogonal vector axis alpha </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pIbeta</parametername>
</parameternamelist>
<parameterdescription>
<para>points to output two-phase orthogonal vector axis beta </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">sinVal</parametername>
</parameternamelist>
<parameterdescription>
<para>sine value of rotation angle theta </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cosVal</parametername>
</parameternamelist>
<parameterdescription>
<para>cosine value of rotation angle theta</para></parameterdescription>
</parameteritem>
</parameterlist>
<bold>Scaling and Overflow Behavior:</bold> <simplesect kind="par"><title></title><para>The function is implemented using an internal 32-bit accumulator. The accumulator maintains 1.31 format by truncating lower 31 bits of the intermediate multiplication in 2.62 format. There is saturation on the addition, hence there is no risk of overflow. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="5338" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" bodystart="5338" bodyend="5367"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1acf407b007a37da18e99dabd9023c56b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_q31_to_float</definition>
        <argsstring>(q31_t *pSrc, float32_t *pDst, uint32_t blockSize)</argsstring>
        <name>arm_q31_to_float</name>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Converts the elements of the Q31 vector to floating-point vector. </para>        </briefdescription>
        <detaileddescription>
<para>end of Inverse park group <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>is input pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>is output pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>is the number of samples to process </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="5380" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___linear_interpolate_1ga2269263d810cafcd19681957b37d5cf6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__INLINE <ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref></type>
        <definition>static __INLINE float32_t arm_linear_interp_f32</definition>
        <argsstring>(arm_linear_interp_instance_f32 *S, float32_t x)</argsstring>
        <name>arm_linear_interp_f32</name>
        <param>
          <type><ref refid="structarm__linear__interp__instance__f32" kindref="compound">arm_linear_interp_instance_f32</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Process function for the floating-point Linear Interpolation Function. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">S</parametername>
</parameternamelist>
<parameterdescription>
<para>is an instance of the floating-point Linear Interpolation structure </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">x</parametername>
</parameternamelist>
<parameterdescription>
<para>input sample to process </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>y processed output sample. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="5433" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" bodystart="5433" bodyend="5474"/>
      </memberdef>
      <memberdef kind="function" id="group___linear_interpolate_1ga690e63e9a513ca0a741b1b174805d031" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__INLINE <ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref></type>
        <definition>static __INLINE q31_t arm_linear_interp_q31</definition>
        <argsstring>(q31_t *pYData, q31_t x, uint32_t nValues)</argsstring>
        <name>arm_linear_interp_q31</name>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pYData</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>nValues</declname>
        </param>
        <briefdescription>
<para>Process function for the Q31 Linear Interpolation Function. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pYData</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to Q31 Linear Interpolation table </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">x</parametername>
</parameternamelist>
<parameterdescription>
<para>input sample to process </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">nValues</parametername>
</parameternamelist>
<parameterdescription>
<para>number of table values </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>y processed output sample.</para></simplesect>
<simplesect kind="par"><title></title><para>Input sample <computeroutput>x</computeroutput> is in 12.20 format which contains 12 bits for table index and 20 bits for fractional part. This function can support maximum of table size 2^12. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="5490" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" bodystart="5490" bodyend="5532"/>
      </memberdef>
      <memberdef kind="function" id="group___linear_interpolate_1ga42c9206e5d2d22b8808716dc30622846" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__INLINE <ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref></type>
        <definition>static __INLINE q15_t arm_linear_interp_q15</definition>
        <argsstring>(q15_t *pYData, q31_t x, uint32_t nValues)</argsstring>
        <name>arm_linear_interp_q15</name>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pYData</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>nValues</declname>
        </param>
        <briefdescription>
<para>Process function for the Q15 Linear Interpolation Function. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pYData</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to Q15 Linear Interpolation table </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">x</parametername>
</parameternamelist>
<parameterdescription>
<para>input sample to process </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">nValues</parametername>
</parameternamelist>
<parameterdescription>
<para>number of table values </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>y processed output sample.</para></simplesect>
<simplesect kind="par"><title></title><para>Input sample <computeroutput>x</computeroutput> is in 12.20 format which contains 12 bits for table index and 20 bits for fractional part. This function can support maximum of table size 2^12. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="5548" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" bodystart="5548" bodyend="5590"/>
      </memberdef>
      <memberdef kind="function" id="group___linear_interpolate_1gacb0d44fe00aca0ba1d036d469a1763fc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__INLINE <ref refid="arm__math_8h_1ae541b6f232c305361e9b416fc9eed263" kindref="member">q7_t</ref></type>
        <definition>static __INLINE q7_t arm_linear_interp_q7</definition>
        <argsstring>(q7_t *pYData, q31_t x, uint32_t nValues)</argsstring>
        <name>arm_linear_interp_q7</name>
        <param>
          <type><ref refid="arm__math_8h_1ae541b6f232c305361e9b416fc9eed263" kindref="member">q7_t</ref> *</type>
          <declname>pYData</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>nValues</declname>
        </param>
        <briefdescription>
<para>Process function for the Q7 Linear Interpolation Function. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pYData</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to Q7 Linear Interpolation table </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">x</parametername>
</parameternamelist>
<parameterdescription>
<para>input sample to process </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">nValues</parametername>
</parameternamelist>
<parameterdescription>
<para>number of table values </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>y processed output sample.</para></simplesect>
<simplesect kind="par"><title></title><para>Input sample <computeroutput>x</computeroutput> is in 12.20 format which contains 12 bits for table index and 20 bits for fractional part. This function can support maximum of table size 2^12. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="5605" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" bodystart="5605" bodyend="5647"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1ae164899c4a3fc0e946dc5d55555fe541" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref></type>
        <definition>float32_t arm_sin_f32</definition>
        <argsstring>(float32_t x)</argsstring>
        <name>arm_sin_f32</name>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Fast approximation to the trigonometric sine function for floating-point data. </para>        </briefdescription>
        <detaileddescription>
<para>end of LinearInterpolate group <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">x</parametername>
</parameternamelist>
<parameterdescription>
<para>input value in radians. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>sin(x). </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="5658" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a57aade7d8892585992cdc6375bd82f9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref></type>
        <definition>q31_t arm_sin_q31</definition>
        <argsstring>(q31_t x)</argsstring>
        <name>arm_sin_q31</name>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Fast approximation to the trigonometric sine function for Q31 data. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">x</parametername>
</parameternamelist>
<parameterdescription>
<para>Scaled input value in radians. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>sin(x). </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="5667" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a1fc6d6640be6cfa688a8bea0a48397ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref></type>
        <definition>q15_t arm_sin_q15</definition>
        <argsstring>(q15_t x)</argsstring>
        <name>arm_sin_q15</name>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Fast approximation to the trigonometric sine function for Q15 data. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">x</parametername>
</parameternamelist>
<parameterdescription>
<para>Scaled input value in radians. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>sin(x). </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="5676" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1ace15287f9c64b9b4084d1c797d4c49d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref></type>
        <definition>float32_t arm_cos_f32</definition>
        <argsstring>(float32_t x)</argsstring>
        <name>arm_cos_f32</name>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Fast approximation to the trigonometric cosine function for floating-point data. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">x</parametername>
</parameternamelist>
<parameterdescription>
<para>input value in radians. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>cos(x). </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="5685" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1ad80f121949ef885a77d83ab36e002567" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref></type>
        <definition>q31_t arm_cos_q31</definition>
        <argsstring>(q31_t x)</argsstring>
        <name>arm_cos_q31</name>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Fast approximation to the trigonometric cosine function for Q31 data. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">x</parametername>
</parameternamelist>
<parameterdescription>
<para>Scaled input value in radians. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>cos(x). </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="5694" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1adfd60c24def501638c0d5db20f4c869b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref></type>
        <definition>q15_t arm_cos_q15</definition>
        <argsstring>(q15_t x)</argsstring>
        <name>arm_cos_q15</name>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Fast approximation to the trigonometric cosine function for Q15 data. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">x</parametername>
</parameternamelist>
<parameterdescription>
<para>Scaled input value in radians. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>cos(x). </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="5703" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___s_q_r_t_1ga56a40d1cf842b0b45267df6761975da0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__INLINE <ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6" kindref="member">arm_status</ref></type>
        <definition>static __INLINE arm_status arm_sqrt_f32</definition>
        <argsstring>(float32_t in, float32_t *pOut)</argsstring>
        <name>arm_sqrt_f32</name>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref></type>
          <declname>in</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pOut</declname>
        </param>
        <briefdescription>
<para>Floating-point square root function. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in</parametername>
</parameternamelist>
<parameterdescription>
<para>input value. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pOut</parametername>
</parameternamelist>
<parameterdescription>
<para>square root of input value. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The function returns ARM_MATH_SUCCESS if input value is positive value or ARM_MATH_ARGUMENT_ERROR if <computeroutput>in</computeroutput> is negative value and returns zero output for negative values. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="5745" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" bodystart="5745" bodyend="5771"/>
      </memberdef>
      <memberdef kind="function" id="group___s_q_r_t_1ga119e25831e141d734d7ef10636670058" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6" kindref="member">arm_status</ref></type>
        <definition>arm_status arm_sqrt_q31</definition>
        <argsstring>(q31_t in, q31_t *pOut)</argsstring>
        <name>arm_sqrt_q31</name>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref></type>
          <declname>in</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pOut</declname>
        </param>
        <briefdescription>
<para>Q31 square root function. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in</parametername>
</parameternamelist>
<parameterdescription>
<para>input value. The range of the input value is [0 +1) or 0x00000000 to 0x7FFFFFFF. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pOut</parametername>
</parameternamelist>
<parameterdescription>
<para>square root of input value. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The function returns ARM_MATH_SUCCESS if input value is positive value or ARM_MATH_ARGUMENT_ERROR if <computeroutput>in</computeroutput> is negative value and returns zero output for negative values. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="5781" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___s_q_r_t_1ga5abe5ca724f3e15849662b03752c1238" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6" kindref="member">arm_status</ref></type>
        <definition>arm_status arm_sqrt_q15</definition>
        <argsstring>(q15_t in, q15_t *pOut)</argsstring>
        <name>arm_sqrt_q15</name>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref></type>
          <declname>in</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pOut</declname>
        </param>
        <briefdescription>
<para>Q15 square root function. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in</parametername>
</parameternamelist>
<parameterdescription>
<para>input value. The range of the input value is [0 +1) or 0x0000 to 0x7FFF. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pOut</parametername>
</parameternamelist>
<parameterdescription>
<para>square root of input value. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The function returns ARM_MATH_SUCCESS if input value is positive value or ARM_MATH_ARGUMENT_ERROR if <computeroutput>in</computeroutput> is negative value and returns zero output for negative values. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="5793" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a6ff56c0896ce00712ba8f2fcf72cacd3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__INLINE void</type>
        <definition>static __INLINE void arm_circularWrite_f32</definition>
        <argsstring>(int32_t *circBuffer, int32_t L, uint16_t *writeOffset, int32_t bufferInc, const int32_t *src, int32_t srcInc, uint32_t blockSize)</argsstring>
        <name>arm_circularWrite_f32</name>
        <param>
          <type>int32_t *</type>
          <declname>circBuffer</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>L</declname>
        </param>
        <param>
          <type>uint16_t *</type>
          <declname>writeOffset</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>bufferInc</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>srcInc</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>floating-point Circular write function. </para>        </briefdescription>
        <detaileddescription>
<para>end of SQRT group </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="5805" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" bodystart="5805" bodyend="5843"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1ae469fac5e1df35f8bcf1b3d7c3136484" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__INLINE void</type>
        <definition>static __INLINE void arm_circularRead_f32</definition>
        <argsstring>(int32_t *circBuffer, int32_t L, int32_t *readOffset, int32_t bufferInc, int32_t *dst, int32_t *dst_base, int32_t dst_length, int32_t dstInc, uint32_t blockSize)</argsstring>
        <name>arm_circularRead_f32</name>
        <param>
          <type>int32_t *</type>
          <declname>circBuffer</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>L</declname>
        </param>
        <param>
          <type>int32_t *</type>
          <declname>readOffset</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>bufferInc</declname>
        </param>
        <param>
          <type>int32_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>int32_t *</type>
          <declname>dst_base</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>dst_length</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>dstInc</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>floating-point Circular Read function. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="5850" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" bodystart="5850" bodyend="5899"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a3ba2d215477e692def7fda46dda883ed" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__INLINE void</type>
        <definition>static __INLINE void arm_circularWrite_q15</definition>
        <argsstring>(q15_t *circBuffer, int32_t L, uint16_t *writeOffset, int32_t bufferInc, const q15_t *src, int32_t srcInc, uint32_t blockSize)</argsstring>
        <name>arm_circularWrite_q15</name>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>circBuffer</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>L</declname>
        </param>
        <param>
          <type>uint16_t *</type>
          <declname>writeOffset</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>bufferInc</declname>
        </param>
        <param>
          <type>const <ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>srcInc</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Q15 Circular write function. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="5905" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" bodystart="5905" bodyend="5943"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1ad5fb134f83f2c802261f172e3dceb131" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__INLINE void</type>
        <definition>static __INLINE void arm_circularRead_q15</definition>
        <argsstring>(q15_t *circBuffer, int32_t L, int32_t *readOffset, int32_t bufferInc, q15_t *dst, q15_t *dst_base, int32_t dst_length, int32_t dstInc, uint32_t blockSize)</argsstring>
        <name>arm_circularRead_q15</name>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>circBuffer</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>L</declname>
        </param>
        <param>
          <type>int32_t *</type>
          <declname>readOffset</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>bufferInc</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>dst_base</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>dst_length</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>dstInc</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Q15 Circular Read function. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="5949" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" bodystart="5949" bodyend="5999"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1addba85b1f7fbd472fd00ddd9ce43aea8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__INLINE void</type>
        <definition>static __INLINE void arm_circularWrite_q7</definition>
        <argsstring>(q7_t *circBuffer, int32_t L, uint16_t *writeOffset, int32_t bufferInc, const q7_t *src, int32_t srcInc, uint32_t blockSize)</argsstring>
        <name>arm_circularWrite_q7</name>
        <param>
          <type><ref refid="arm__math_8h_1ae541b6f232c305361e9b416fc9eed263" kindref="member">q7_t</ref> *</type>
          <declname>circBuffer</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>L</declname>
        </param>
        <param>
          <type>uint16_t *</type>
          <declname>writeOffset</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>bufferInc</declname>
        </param>
        <param>
          <type>const <ref refid="arm__math_8h_1ae541b6f232c305361e9b416fc9eed263" kindref="member">q7_t</ref> *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>srcInc</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Q7 Circular write function. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="6005" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" bodystart="6005" bodyend="6043"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a30aa80ea20abe71f3afa99f2f0391ed5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__INLINE void</type>
        <definition>static __INLINE void arm_circularRead_q7</definition>
        <argsstring>(q7_t *circBuffer, int32_t L, int32_t *readOffset, int32_t bufferInc, q7_t *dst, q7_t *dst_base, int32_t dst_length, int32_t dstInc, uint32_t blockSize)</argsstring>
        <name>arm_circularRead_q7</name>
        <param>
          <type><ref refid="arm__math_8h_1ae541b6f232c305361e9b416fc9eed263" kindref="member">q7_t</ref> *</type>
          <declname>circBuffer</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>L</declname>
        </param>
        <param>
          <type>int32_t *</type>
          <declname>readOffset</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>bufferInc</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ae541b6f232c305361e9b416fc9eed263" kindref="member">q7_t</ref> *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ae541b6f232c305361e9b416fc9eed263" kindref="member">q7_t</ref> *</type>
          <declname>dst_base</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>dst_length</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>dstInc</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Q7 Circular Read function. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="6049" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" bodystart="6049" bodyend="6099"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a0b93d31bb5b5ed214c2b94d8a7744cd2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_power_q31</definition>
        <argsstring>(q31_t *pSrc, uint32_t blockSize, q63_t *pResult)</argsstring>
        <name>arm_power_q31</name>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a5aea1cb12fc02d9d44c8abf217eaa5c6" kindref="member">q63_t</ref> *</type>
          <declname>pResult</declname>
        </param>
        <briefdescription>
<para>Sum of the squares of the elements of a Q31 vector. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>is input pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>is the number of samples to process </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pResult</parametername>
</parameternamelist>
<parameterdescription>
<para>is output value. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="6108" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a993c00dd7f661d66bdb6e58426e893aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_power_f32</definition>
        <argsstring>(float32_t *pSrc, uint32_t blockSize, float32_t *pResult)</argsstring>
        <name>arm_power_f32</name>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pResult</declname>
        </param>
        <briefdescription>
<para>Sum of the squares of the elements of a floating-point vector. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>is input pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>is the number of samples to process </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pResult</parametername>
</parameternamelist>
<parameterdescription>
<para>is output value. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="6120" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a7050c04b7515e01a75c38f1abbaf71ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_power_q15</definition>
        <argsstring>(q15_t *pSrc, uint32_t blockSize, q63_t *pResult)</argsstring>
        <name>arm_power_q15</name>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a5aea1cb12fc02d9d44c8abf217eaa5c6" kindref="member">q63_t</ref> *</type>
          <declname>pResult</declname>
        </param>
        <briefdescription>
<para>Sum of the squares of the elements of a Q15 vector. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>is input pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>is the number of samples to process </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pResult</parametername>
</parameternamelist>
<parameterdescription>
<para>is output value. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="6132" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1af969c85c5655e3d72d7b99ff188f92c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_power_q7</definition>
        <argsstring>(q7_t *pSrc, uint32_t blockSize, q31_t *pResult)</argsstring>
        <name>arm_power_q7</name>
        <param>
          <type><ref refid="arm__math_8h_1ae541b6f232c305361e9b416fc9eed263" kindref="member">q7_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pResult</declname>
        </param>
        <briefdescription>
<para>Sum of the squares of the elements of a Q7 vector. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>is input pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>is the number of samples to process </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pResult</parametername>
</parameternamelist>
<parameterdescription>
<para>is output value. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="6144" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1aebc707ee539020357c25da4c75b52eb7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_mean_q7</definition>
        <argsstring>(q7_t *pSrc, uint32_t blockSize, q7_t *pResult)</argsstring>
        <name>arm_mean_q7</name>
        <param>
          <type><ref refid="arm__math_8h_1ae541b6f232c305361e9b416fc9eed263" kindref="member">q7_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ae541b6f232c305361e9b416fc9eed263" kindref="member">q7_t</ref> *</type>
          <declname>pResult</declname>
        </param>
        <briefdescription>
<para>Mean value of a Q7 vector. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>is input pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>is the number of samples to process </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pResult</parametername>
</parameternamelist>
<parameterdescription>
<para>is output value. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="6156" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1ac882495d5f098819fd3939c1ef7795b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_mean_q15</definition>
        <argsstring>(q15_t *pSrc, uint32_t blockSize, q15_t *pResult)</argsstring>
        <name>arm_mean_q15</name>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pResult</declname>
        </param>
        <briefdescription>
<para>Mean value of a Q15 vector. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>is input pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>is the number of samples to process </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pResult</parametername>
</parameternamelist>
<parameterdescription>
<para>is output value. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="6168" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1acf2526d8c2d75e486e8f0b0e31877ad0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_mean_q31</definition>
        <argsstring>(q31_t *pSrc, uint32_t blockSize, q31_t *pResult)</argsstring>
        <name>arm_mean_q31</name>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pResult</declname>
        </param>
        <briefdescription>
<para>Mean value of a Q31 vector. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>is input pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>is the number of samples to process </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pResult</parametername>
</parameternamelist>
<parameterdescription>
<para>is output value. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="6180" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a74ce08c49ab61e57bd50c3a0ca1fdb2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_mean_f32</definition>
        <argsstring>(float32_t *pSrc, uint32_t blockSize, float32_t *pResult)</argsstring>
        <name>arm_mean_f32</name>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pResult</declname>
        </param>
        <briefdescription>
<para>Mean value of a floating-point vector. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>is input pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>is the number of samples to process </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pResult</parametername>
</parameternamelist>
<parameterdescription>
<para>is output value. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="6192" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a393f26c5a3bfa05624fb8d32232a6d96" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_var_f32</definition>
        <argsstring>(float32_t *pSrc, uint32_t blockSize, float32_t *pResult)</argsstring>
        <name>arm_var_f32</name>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pResult</declname>
        </param>
        <briefdescription>
<para>Variance of the elements of a floating-point vector. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>is input pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>is the number of samples to process </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pResult</parametername>
</parameternamelist>
<parameterdescription>
<para>is output value. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="6204" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1ac02873f1c2cc80adfd799305f0e6465d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_var_q31</definition>
        <argsstring>(q31_t *pSrc, uint32_t blockSize, q31_t *pResult)</argsstring>
        <name>arm_var_q31</name>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pResult</declname>
        </param>
        <briefdescription>
<para>Variance of the elements of a Q31 vector. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>is input pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>is the number of samples to process </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pResult</parametername>
</parameternamelist>
<parameterdescription>
<para>is output value. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="6216" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a79dce009ed2de28a125aeb3f19631654" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_var_q15</definition>
        <argsstring>(q15_t *pSrc, uint32_t blockSize, q15_t *pResult)</argsstring>
        <name>arm_var_q15</name>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pResult</declname>
        </param>
        <briefdescription>
<para>Variance of the elements of a Q15 vector. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>is input pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>is the number of samples to process </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pResult</parametername>
</parameternamelist>
<parameterdescription>
<para>is output value. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="6228" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a0e3ab1b57da32d45388d1fa90d7fd88c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_rms_f32</definition>
        <argsstring>(float32_t *pSrc, uint32_t blockSize, float32_t *pResult)</argsstring>
        <name>arm_rms_f32</name>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pResult</declname>
        </param>
        <briefdescription>
<para>Root Mean Square of the elements of a floating-point vector. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>is input pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>is the number of samples to process </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pResult</parametername>
</parameternamelist>
<parameterdescription>
<para>is output value. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="6240" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1ae33015fda23fc44e7ead5e5ed7e8d314" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_rms_q31</definition>
        <argsstring>(q31_t *pSrc, uint32_t blockSize, q31_t *pResult)</argsstring>
        <name>arm_rms_q31</name>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pResult</declname>
        </param>
        <briefdescription>
<para>Root Mean Square of the elements of a Q31 vector. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>is input pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>is the number of samples to process </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pResult</parametername>
</parameternamelist>
<parameterdescription>
<para>is output value. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="6252" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1af5b836b72dda9e5dfbbd17c7906fd13f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_rms_q15</definition>
        <argsstring>(q15_t *pSrc, uint32_t blockSize, q15_t *pResult)</argsstring>
        <name>arm_rms_q15</name>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pResult</declname>
        </param>
        <briefdescription>
<para>Root Mean Square of the elements of a Q15 vector. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>is input pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>is the number of samples to process </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pResult</parametername>
</parameternamelist>
<parameterdescription>
<para>is output value. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="6264" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a4969b5b5f3d001377bc401a3ee99dfc2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_std_f32</definition>
        <argsstring>(float32_t *pSrc, uint32_t blockSize, float32_t *pResult)</argsstring>
        <name>arm_std_f32</name>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pResult</declname>
        </param>
        <briefdescription>
<para>Standard deviation of the elements of a floating-point vector. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>is input pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>is the number of samples to process </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pResult</parametername>
</parameternamelist>
<parameterdescription>
<para>is output value. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="6276" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a39495e74f96116178be085c9dc7742f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_std_q31</definition>
        <argsstring>(q31_t *pSrc, uint32_t blockSize, q31_t *pResult)</argsstring>
        <name>arm_std_q31</name>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pResult</declname>
        </param>
        <briefdescription>
<para>Standard deviation of the elements of a Q31 vector. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>is input pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>is the number of samples to process </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pResult</parametername>
</parameternamelist>
<parameterdescription>
<para>is output value. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="6288" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1af9d27afa9928ff28a63cd98ea9218a72" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_std_q15</definition>
        <argsstring>(q15_t *pSrc, uint32_t blockSize, q15_t *pResult)</argsstring>
        <name>arm_std_q15</name>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pResult</declname>
        </param>
        <briefdescription>
<para>Standard deviation of the elements of a Q15 vector. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>is input pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>is the number of samples to process </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pResult</parametername>
</parameternamelist>
<parameterdescription>
<para>is output value. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="6300" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1ae45024c497392cde2ae358a76d435213" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_cmplx_mag_f32</definition>
        <argsstring>(float32_t *pSrc, float32_t *pDst, uint32_t numSamples)</argsstring>
        <name>arm_cmplx_mag_f32</name>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>numSamples</declname>
        </param>
        <briefdescription>
<para>Floating-point complex magnitude. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the complex input vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the real output vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">numSamples</parametername>
</parameternamelist>
<parameterdescription>
<para>number of complex samples in the input vector </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="6312" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a14f82f9230e9d96d5b9774e2fefcb7be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_cmplx_mag_q31</definition>
        <argsstring>(q31_t *pSrc, q31_t *pDst, uint32_t numSamples)</argsstring>
        <name>arm_cmplx_mag_q31</name>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>numSamples</declname>
        </param>
        <briefdescription>
<para>Q31 complex magnitude. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the complex input vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the real output vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">numSamples</parametername>
</parameternamelist>
<parameterdescription>
<para>number of complex samples in the input vector </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="6324" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a0a4a8f77a6a51d9b3f3b9d729f85b7a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_cmplx_mag_q15</definition>
        <argsstring>(q15_t *pSrc, q15_t *pDst, uint32_t numSamples)</argsstring>
        <name>arm_cmplx_mag_q15</name>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>numSamples</declname>
        </param>
        <briefdescription>
<para>Q15 complex magnitude. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the complex input vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the real output vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">numSamples</parametername>
</parameternamelist>
<parameterdescription>
<para>number of complex samples in the input vector </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="6336" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a2b08b5e8001d2c15204639d00893fc70" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_cmplx_dot_prod_q15</definition>
        <argsstring>(q15_t *pSrcA, q15_t *pSrcB, uint32_t numSamples, q31_t *realResult, q31_t *imagResult)</argsstring>
        <name>arm_cmplx_dot_prod_q15</name>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pSrcA</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pSrcB</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>numSamples</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>realResult</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>imagResult</declname>
        </param>
        <briefdescription>
<para>Q15 complex dot product. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrcA</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrcB</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">numSamples</parametername>
</parameternamelist>
<parameterdescription>
<para>number of complex samples in each vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">realResult</parametername>
</parameternamelist>
<parameterdescription>
<para>real part of the result returned here </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">imagResult</parametername>
</parameternamelist>
<parameterdescription>
<para>imaginary part of the result returned here </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="6350" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a5b731a59db062a9ad84562ef68a6c8af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_cmplx_dot_prod_q31</definition>
        <argsstring>(q31_t *pSrcA, q31_t *pSrcB, uint32_t numSamples, q63_t *realResult, q63_t *imagResult)</argsstring>
        <name>arm_cmplx_dot_prod_q31</name>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pSrcA</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pSrcB</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>numSamples</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a5aea1cb12fc02d9d44c8abf217eaa5c6" kindref="member">q63_t</ref> *</type>
          <declname>realResult</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a5aea1cb12fc02d9d44c8abf217eaa5c6" kindref="member">q63_t</ref> *</type>
          <declname>imagResult</declname>
        </param>
        <briefdescription>
<para>Q31 complex dot product. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrcA</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrcB</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">numSamples</parametername>
</parameternamelist>
<parameterdescription>
<para>number of complex samples in each vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">realResult</parametername>
</parameternamelist>
<parameterdescription>
<para>real part of the result returned here </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">imagResult</parametername>
</parameternamelist>
<parameterdescription>
<para>imaginary part of the result returned here </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="6366" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1adcfaf567a25eb641da4043eafb9bb076" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_cmplx_dot_prod_f32</definition>
        <argsstring>(float32_t *pSrcA, float32_t *pSrcB, uint32_t numSamples, float32_t *realResult, float32_t *imagResult)</argsstring>
        <name>arm_cmplx_dot_prod_f32</name>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pSrcA</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pSrcB</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>numSamples</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>realResult</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>imagResult</declname>
        </param>
        <briefdescription>
<para>Floating-point complex dot product. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrcA</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrcB</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">numSamples</parametername>
</parameternamelist>
<parameterdescription>
<para>number of complex samples in each vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">realResult</parametername>
</parameternamelist>
<parameterdescription>
<para>real part of the result returned here </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">imagResult</parametername>
</parameternamelist>
<parameterdescription>
<para>imaginary part of the result returned here </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="6382" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a3bd8889dcb45980e1d3e53344df54e85" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_cmplx_mult_real_q15</definition>
        <argsstring>(q15_t *pSrcCmplx, q15_t *pSrcReal, q15_t *pCmplxDst, uint32_t numSamples)</argsstring>
        <name>arm_cmplx_mult_real_q15</name>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pSrcCmplx</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pSrcReal</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pCmplxDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>numSamples</declname>
        </param>
        <briefdescription>
<para>Q15 complex-by-real multiplication. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrcCmplx</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the complex input vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrcReal</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the real input vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pCmplxDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the complex output vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">numSamples</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples in each vector </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="6397" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a715e4bb8e945b8ca51ec5237611697ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_cmplx_mult_real_q31</definition>
        <argsstring>(q31_t *pSrcCmplx, q31_t *pSrcReal, q31_t *pCmplxDst, uint32_t numSamples)</argsstring>
        <name>arm_cmplx_mult_real_q31</name>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pSrcCmplx</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pSrcReal</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pCmplxDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>numSamples</declname>
        </param>
        <briefdescription>
<para>Q31 complex-by-real multiplication. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrcCmplx</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the complex input vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrcReal</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the real input vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pCmplxDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the complex output vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">numSamples</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples in each vector </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="6411" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a9c18616f56cb4d3c0889ce0b339221ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_cmplx_mult_real_f32</definition>
        <argsstring>(float32_t *pSrcCmplx, float32_t *pSrcReal, float32_t *pCmplxDst, uint32_t numSamples)</argsstring>
        <name>arm_cmplx_mult_real_f32</name>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pSrcCmplx</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pSrcReal</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pCmplxDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>numSamples</declname>
        </param>
        <briefdescription>
<para>Floating-point complex-by-real multiplication. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrcCmplx</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the complex input vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrcReal</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the real input vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pCmplxDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the complex output vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">numSamples</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples in each vector </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="6425" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a1f5f8212a4994882b647f0538a55856c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_min_q7</definition>
        <argsstring>(q7_t *pSrc, uint32_t blockSize, q7_t *result, uint32_t *index)</argsstring>
        <name>arm_min_q7</name>
        <param>
          <type><ref refid="arm__math_8h_1ae541b6f232c305361e9b416fc9eed263" kindref="member">q7_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ae541b6f232c305361e9b416fc9eed263" kindref="member">q7_t</ref> *</type>
          <declname>result</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Minimum value of a Q7 vector. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>is input pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>is the number of samples to process </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">result</parametername>
</parameternamelist>
<parameterdescription>
<para>is output pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>is the array index of the minimum value in the input buffer. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="6439" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1ad065e37535ebb726750ac1545cb3fa6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_min_q15</definition>
        <argsstring>(q15_t *pSrc, uint32_t blockSize, q15_t *pResult, uint32_t *pIndex)</argsstring>
        <name>arm_min_q15</name>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pResult</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>pIndex</declname>
        </param>
        <briefdescription>
<para>Minimum value of a Q15 vector. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>is input pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>is the number of samples to process </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pResult</parametername>
</parameternamelist>
<parameterdescription>
<para>is output pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>is the array index of the minimum value in the input buffer. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="6453" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1ab20faeceb5ff5d2d9dd628c2ecf41303" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_min_q31</definition>
        <argsstring>(q31_t *pSrc, uint32_t blockSize, q31_t *pResult, uint32_t *pIndex)</argsstring>
        <name>arm_min_q31</name>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pResult</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>pIndex</declname>
        </param>
        <briefdescription>
<para>Minimum value of a Q31 vector. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>is input pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>is the number of samples to process </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pResult</parametername>
</parameternamelist>
<parameterdescription>
<para>is output pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>is the array index of the minimum value in the input buffer. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="6467" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1af62b1673740fc516ea64daf777b7d74a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_min_f32</definition>
        <argsstring>(float32_t *pSrc, uint32_t blockSize, float32_t *pResult, uint32_t *pIndex)</argsstring>
        <name>arm_min_f32</name>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pResult</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>pIndex</declname>
        </param>
        <briefdescription>
<para>Minimum value of a floating-point vector. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>is input pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>is the number of samples to process </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pResult</parametername>
</parameternamelist>
<parameterdescription>
<para>is output pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>is the array index of the minimum value in the input buffer. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="6481" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a6afd64d381b5c232de59163ebfe71e35" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_max_q7</definition>
        <argsstring>(q7_t *pSrc, uint32_t blockSize, q7_t *pResult, uint32_t *pIndex)</argsstring>
        <name>arm_max_q7</name>
        <param>
          <type><ref refid="arm__math_8h_1ae541b6f232c305361e9b416fc9eed263" kindref="member">q7_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ae541b6f232c305361e9b416fc9eed263" kindref="member">q7_t</ref> *</type>
          <declname>pResult</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>pIndex</declname>
        </param>
        <briefdescription>
<para>Maximum value of a Q7 vector. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>length of the input vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pResult</parametername>
</parameternamelist>
<parameterdescription>
<para>maximum value returned here </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>index of maximum value returned here </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="6495" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1ac132856c68f4bf2a056eaad5921c7880" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_max_q15</definition>
        <argsstring>(q15_t *pSrc, uint32_t blockSize, q15_t *pResult, uint32_t *pIndex)</argsstring>
        <name>arm_max_q15</name>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pResult</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>pIndex</declname>
        </param>
        <briefdescription>
<para>Maximum value of a Q15 vector. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>length of the input vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pResult</parametername>
</parameternamelist>
<parameterdescription>
<para>maximum value returned here </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>index of maximum value returned here </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="6509" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1aff7cbd4e955382def06724cc4cc85795" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_max_q31</definition>
        <argsstring>(q31_t *pSrc, uint32_t blockSize, q31_t *pResult, uint32_t *pIndex)</argsstring>
        <name>arm_max_q31</name>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pResult</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>pIndex</declname>
        </param>
        <briefdescription>
<para>Maximum value of a Q31 vector. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>length of the input vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pResult</parametername>
</parameternamelist>
<parameterdescription>
<para>maximum value returned here </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>index of maximum value returned here </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="6523" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a5b89d1b04575aeec494f678695fb87d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_max_f32</definition>
        <argsstring>(float32_t *pSrc, uint32_t blockSize, float32_t *pResult, uint32_t *pIndex)</argsstring>
        <name>arm_max_f32</name>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pResult</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>pIndex</declname>
        </param>
        <briefdescription>
<para>Maximum value of a floating-point vector. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>length of the input vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pResult</parametername>
</parameternamelist>
<parameterdescription>
<para>maximum value returned here </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>index of maximum value returned here </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="6537" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a67e96abfc9c3e30efb70a2ec9d0fe7e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_cmplx_mult_cmplx_q15</definition>
        <argsstring>(q15_t *pSrcA, q15_t *pSrcB, q15_t *pDst, uint32_t numSamples)</argsstring>
        <name>arm_cmplx_mult_cmplx_q15</name>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pSrcA</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pSrcB</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>numSamples</declname>
        </param>
        <briefdescription>
<para>Q15 complex-by-complex multiplication. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrcA</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrcB</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">numSamples</parametername>
</parameternamelist>
<parameterdescription>
<para>number of complex samples in each vector </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="6551" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a1829e50993a90742de225a0ce4213838" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_cmplx_mult_cmplx_q31</definition>
        <argsstring>(q31_t *pSrcA, q31_t *pSrcB, q31_t *pDst, uint32_t numSamples)</argsstring>
        <name>arm_cmplx_mult_cmplx_q31</name>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pSrcA</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pSrcB</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>numSamples</declname>
        </param>
        <briefdescription>
<para>Q31 complex-by-complex multiplication. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrcA</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrcB</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">numSamples</parametername>
</parameternamelist>
<parameterdescription>
<para>number of complex samples in each vector </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="6565" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a14b47080054a1ba1250a86805be1ff6b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_cmplx_mult_cmplx_f32</definition>
        <argsstring>(float32_t *pSrcA, float32_t *pSrcB, float32_t *pDst, uint32_t numSamples)</argsstring>
        <name>arm_cmplx_mult_cmplx_f32</name>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pSrcA</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pSrcB</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>numSamples</declname>
        </param>
        <briefdescription>
<para>Floating-point complex-by-complex multiplication. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrcA</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrcB</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">numSamples</parametername>
</parameternamelist>
<parameterdescription>
<para>number of complex samples in each vector </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="6579" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a177704107f94564e9abe4daaa36f4554" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_float_to_q31</definition>
        <argsstring>(float32_t *pSrc, q31_t *pDst, uint32_t blockSize)</argsstring>
        <name>arm_float_to_q31</name>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Converts the elements of the floating-point vector to Q31 vector. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the floating-point input vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the Q31 output vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>length of the input vector </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="6592" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a215456e35a18db86882e1d3f0d24e1f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_float_to_q15</definition>
        <argsstring>(float32_t *pSrc, q15_t *pDst, uint32_t blockSize)</argsstring>
        <name>arm_float_to_q15</name>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Converts the elements of the floating-point vector to Q15 vector. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the floating-point input vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the Q15 output vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>length of the input vector </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="6604" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a44a393818cdee8dce80f2d66add25411" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_float_to_q7</definition>
        <argsstring>(float32_t *pSrc, q7_t *pDst, uint32_t blockSize)</argsstring>
        <name>arm_float_to_q7</name>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ae541b6f232c305361e9b416fc9eed263" kindref="member">q7_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Converts the elements of the floating-point vector to Q7 vector. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the floating-point input vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the Q7 output vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>length of the input vector </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="6616" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a901dede4661365c9e7c630d3eb31c32c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_q31_to_q15</definition>
        <argsstring>(q31_t *pSrc, q15_t *pDst, uint32_t blockSize)</argsstring>
        <name>arm_q31_to_q15</name>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Converts the elements of the Q31 vector to Q15 vector. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>is input pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>is output pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>is the number of samples to process </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="6628" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a7f297d1a7d776805395095fdb24a8071" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_q31_to_q7</definition>
        <argsstring>(q31_t *pSrc, q7_t *pDst, uint32_t blockSize)</argsstring>
        <name>arm_q31_to_q7</name>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ae541b6f232c305361e9b416fc9eed263" kindref="member">q7_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Converts the elements of the Q31 vector to Q7 vector. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>is input pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>is output pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>is the number of samples to process </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="6640" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1af8b0d2324de273fc430b0e61ad4e9eb2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_q15_to_float</definition>
        <argsstring>(q15_t *pSrc, float32_t *pDst, uint32_t blockSize)</argsstring>
        <name>arm_q15_to_float</name>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Converts the elements of the Q15 vector to floating-point vector. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>is input pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>is output pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>is the number of samples to process </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="6652" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a7ba2d87366990ad5380439e2b4a4c0a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_q15_to_q31</definition>
        <argsstring>(q15_t *pSrc, q31_t *pDst, uint32_t blockSize)</argsstring>
        <name>arm_q15_to_q31</name>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Converts the elements of the Q15 vector to Q31 vector. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>is input pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>is output pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>is the number of samples to process </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="6664" column="1"/>
      </memberdef>
      <memberdef kind="function" id="arm__math_8h_1a8fb31855ff8cce09c2ec9308f48ded69" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arm_q15_to_q7</definition>
        <argsstring>(q15_t *pSrc, q7_t *pDst, uint32_t blockSize)</argsstring>
        <name>arm_q15_to_q7</name>
        <param>
          <type><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1ae541b6f232c305361e9b416fc9eed263" kindref="member">q7_t</ref> *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Converts the elements of the Q15 vector to Q7 vector. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>is input pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>is output pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>is the number of samples to process </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="6676" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___bilinear_interpolate_1gab49a4c0f64854903d996d01ba38f711a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__INLINE <ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref></type>
        <definition>static __INLINE float32_t arm_bilinear_interp_f32</definition>
        <argsstring>(const arm_bilinear_interp_instance_f32 *S, float32_t X, float32_t Y)</argsstring>
        <name>arm_bilinear_interp_f32</name>
        <param>
          <type>const <ref refid="structarm__bilinear__interp__instance__f32" kindref="compound">arm_bilinear_interp_instance_f32</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref></type>
          <declname>X</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref></type>
          <declname>Y</declname>
        </param>
        <briefdescription>
<para>Floating-point bilinear interpolation. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">S</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the interpolation structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">X</parametername>
</parameternamelist>
<parameterdescription>
<para>interpolation coordinate. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">Y</parametername>
</parameternamelist>
<parameterdescription>
<para>interpolation coordinate. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>out interpolated value. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="6752" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" bodystart="6752" bodyend="6807"/>
      </memberdef>
      <memberdef kind="function" id="group___bilinear_interpolate_1ga202a033c8a2ad3678b136f93153b6d13" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__INLINE <ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref></type>
        <definition>static __INLINE q31_t arm_bilinear_interp_q31</definition>
        <argsstring>(arm_bilinear_interp_instance_q31 *S, q31_t X, q31_t Y)</argsstring>
        <name>arm_bilinear_interp_q31</name>
        <param>
          <type><ref refid="structarm__bilinear__interp__instance__q31" kindref="compound">arm_bilinear_interp_instance_q31</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref></type>
          <declname>X</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref></type>
          <declname>Y</declname>
        </param>
        <briefdescription>
<para>Q31 bilinear interpolation. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">S</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the interpolation structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">X</parametername>
</parameternamelist>
<parameterdescription>
<para>interpolation coordinate in 12.20 format. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">Y</parametername>
</parameternamelist>
<parameterdescription>
<para>interpolation coordinate in 12.20 format. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>out interpolated value. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="6818" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" bodystart="6818" bodyend="6882"/>
      </memberdef>
      <memberdef kind="function" id="group___bilinear_interpolate_1gaa8dffbc2a01bb7accf231384498ec85e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__INLINE <ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref></type>
        <definition>static __INLINE q15_t arm_bilinear_interp_q15</definition>
        <argsstring>(arm_bilinear_interp_instance_q15 *S, q31_t X, q31_t Y)</argsstring>
        <name>arm_bilinear_interp_q15</name>
        <param>
          <type><ref refid="structarm__bilinear__interp__instance__q15" kindref="compound">arm_bilinear_interp_instance_q15</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref></type>
          <declname>X</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref></type>
          <declname>Y</declname>
        </param>
        <briefdescription>
<para>Q15 bilinear interpolation. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">S</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the interpolation structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">X</parametername>
</parameternamelist>
<parameterdescription>
<para>interpolation coordinate in 12.20 format. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">Y</parametername>
</parameternamelist>
<parameterdescription>
<para>interpolation coordinate in 12.20 format. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>out interpolated value. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="6892" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" bodystart="6892" bodyend="6960"/>
      </memberdef>
      <memberdef kind="function" id="group___bilinear_interpolate_1gade8db9706a3ae9ad03b2750a239d2ee6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__INLINE <ref refid="arm__math_8h_1ae541b6f232c305361e9b416fc9eed263" kindref="member">q7_t</ref></type>
        <definition>static __INLINE q7_t arm_bilinear_interp_q7</definition>
        <argsstring>(arm_bilinear_interp_instance_q7 *S, q31_t X, q31_t Y)</argsstring>
        <name>arm_bilinear_interp_q7</name>
        <param>
          <type><ref refid="structarm__bilinear__interp__instance__q7" kindref="compound">arm_bilinear_interp_instance_q7</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref></type>
          <declname>X</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref></type>
          <declname>Y</declname>
        </param>
        <briefdescription>
<para>Q7 bilinear interpolation. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">S</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the interpolation structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">X</parametername>
</parameternamelist>
<parameterdescription>
<para>interpolation coordinate in 12.20 format. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">Y</parametername>
</parameternamelist>
<parameterdescription>
<para>interpolation coordinate in 12.20 format. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>out interpolated value. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="6970" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" bodystart="6970" bodyend="7034"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>----------------------------------------------------------------------</highlight></codeline>
<codeline lineno="2"><highlight class="comment">*<sp/>Copyright<sp/>(C)<sp/>2010-2015<sp/>ARM<sp/>Limited.<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="3"><highlight class="comment">*</highlight></codeline>
<codeline lineno="4"><highlight class="comment">*<sp/>$Date:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>20.<sp/>October<sp/>2015</highlight></codeline>
<codeline lineno="5"><highlight class="comment">*<sp/>$Revision:<sp/><sp/><sp/><sp/>V1.4.5<sp/>b</highlight></codeline>
<codeline lineno="6"><highlight class="comment">*</highlight></codeline>
<codeline lineno="7"><highlight class="comment">*<sp/>Project:<sp/><sp/><sp/><sp/><sp/><sp/>CMSIS<sp/>DSP<sp/>Library</highlight></codeline>
<codeline lineno="8"><highlight class="comment">*<sp/>Title:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arm_math.h</highlight></codeline>
<codeline lineno="9"><highlight class="comment">*</highlight></codeline>
<codeline lineno="10"><highlight class="comment">*<sp/>Description:<sp/><sp/>Public<sp/>header<sp/>file<sp/>for<sp/>CMSIS<sp/>DSP<sp/>Library</highlight></codeline>
<codeline lineno="11"><highlight class="comment">*</highlight></codeline>
<codeline lineno="12"><highlight class="comment">*<sp/>Target<sp/>Processor:<sp/>Cortex-M7/Cortex-M4/Cortex-M3/Cortex-M0</highlight></codeline>
<codeline lineno="13"><highlight class="comment">*</highlight></codeline>
<codeline lineno="14"><highlight class="comment">*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="15"><highlight class="comment">*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions</highlight></codeline>
<codeline lineno="16"><highlight class="comment">*<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="17"><highlight class="comment">*<sp/><sp/><sp/>-<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="18"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="19"><highlight class="comment">*<sp/><sp/><sp/>-<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="20"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in</highlight></codeline>
<codeline lineno="21"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>the<sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the</highlight></codeline>
<codeline lineno="22"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>distribution.</highlight></codeline>
<codeline lineno="23"><highlight class="comment">*<sp/><sp/><sp/>-<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>ARM<sp/>LIMITED<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its<sp/>contributors</highlight></codeline>
<codeline lineno="24"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from<sp/>this</highlight></codeline>
<codeline lineno="25"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="26"><highlight class="comment">*</highlight></codeline>
<codeline lineno="27"><highlight class="comment">*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS</highlight></codeline>
<codeline lineno="28"><highlight class="comment">*<sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT</highlight></codeline>
<codeline lineno="29"><highlight class="comment">*<sp/>LIMITED<sp/>TO,<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS</highlight></codeline>
<codeline lineno="30"><highlight class="comment">*<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE</highlight></codeline>
<codeline lineno="31"><highlight class="comment">*<sp/>COPYRIGHT<sp/>OWNER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,</highlight></codeline>
<codeline lineno="32"><highlight class="comment">*<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,</highlight></codeline>
<codeline lineno="33"><highlight class="comment">*<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;</highlight></codeline>
<codeline lineno="34"><highlight class="comment">*<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER</highlight></codeline>
<codeline lineno="35"><highlight class="comment">*<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT</highlight></codeline>
<codeline lineno="36"><highlight class="comment">*<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN</highlight></codeline>
<codeline lineno="37"><highlight class="comment">*<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE</highlight></codeline>
<codeline lineno="38"><highlight class="comment">*<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*<sp/>--------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="preprocessor">#ifndef<sp/>_ARM_MATH_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_ARM_MATH_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>ignore<sp/>some<sp/>GCC<sp/>warnings<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>(<sp/>__GNUC__<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>GCC<sp/>diagnostic<sp/>push</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>GCC<sp/>diagnostic<sp/>ignored<sp/>&quot;-Wsign-conversion&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>GCC<sp/>diagnostic<sp/>ignored<sp/>&quot;-Wconversion&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>GCC<sp/>diagnostic<sp/>ignored<sp/>&quot;-Wunused-parameter&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299" refid="arm__math_8h_1a87c3b351c33a90de11a2f23e67867a8a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__CMSIS_GENERIC<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>disable<sp/>NVIC<sp/>and<sp/>Systick<sp/>functions<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(ARM_MATH_CM7)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#include<sp/>&quot;<ref refid="core__cm7_8h" kindref="compound">core_cm7.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined<sp/>(ARM_MATH_CM4)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#include<sp/>&quot;<ref refid="core__cm4_8h" kindref="compound">core_cm4.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined<sp/>(ARM_MATH_CM3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#include<sp/>&quot;<ref refid="core__cm3_8h" kindref="compound">core_cm3.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined<sp/>(ARM_MATH_CM0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#include<sp/>&quot;<ref refid="core__cm0_8h" kindref="compound">core_cm0.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>ARM_MATH_CM0_FAMILY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined<sp/>(ARM_MATH_CM0PLUS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#include<sp/>&quot;<ref refid="core__cm0plus_8h" kindref="compound">core_cm0plus.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>ARM_MATH_CM0_FAMILY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#error<sp/>&quot;Define<sp/>according<sp/>the<sp/>used<sp/>Cortex<sp/>core<sp/>ARM_MATH_CM7,<sp/>ARM_MATH_CM4,<sp/>ARM_MATH_CM3,<sp/>ARM_MATH_CM0PLUS<sp/>or<sp/>ARM_MATH_CM0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/><sp/>__CMSIS_GENERIC<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>enable<sp/>NVIC<sp/>and<sp/>Systick<sp/>functions<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;string.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;math.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/><sp/><sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal">{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="330" refid="arm__math_8h_1aad77ae594e95c5af6ae4129bd6a483c2" refkind="member"><highlight class="preprocessor">#define<sp/>DELTA_Q31<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0x100)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331" refid="arm__math_8h_1a663277ff19ad0b409fb98b64b2c2750b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DELTA_Q15<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332" refid="arm__math_8h_1a29f839928f4752b73c8858d6dbb55294" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INDEX_MASK<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x0000003F</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>PI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334" refid="arm__math_8h_1a598a3330b3c21701223ee0ca14316eca" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PI<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3.14159265358979f</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="341" refid="arm__math_8h_1afcb9147c96853bea484cfc2dde07463d" refkind="member"><highlight class="preprocessor">#define<sp/>FAST_MATH_TABLE_SIZE<sp/><sp/>512</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342" refid="arm__math_8h_1a4268f77b1811a0c7fc2532a0bf6108b0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FAST_MATH_Q31_SHIFT<sp/><sp/><sp/>(32<sp/>-<sp/>10)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343" refid="arm__math_8h_1a34716b73c631e65e8dd855e08384ecb2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FAST_MATH_Q15_SHIFT<sp/><sp/><sp/>(16<sp/>-<sp/>10)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344" refid="arm__math_8h_1aaff6d2358c4ada8de838a279254ab550" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CONTROLLER_Q31_SHIFT<sp/><sp/>(32<sp/>-<sp/>9)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345" refid="arm__math_8h_1a032503e76d6f69bc67e99e909c8125da" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TABLE_SIZE<sp/><sp/>256</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346" refid="arm__math_8h_1a8407c9e1347d10e3bcf0a7014f1fb2ff" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TABLE_SPACING_Q31<sp/><sp/><sp/><sp/><sp/>0x400000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347" refid="arm__math_8h_1a60b0142af7be007902142add27919b82" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TABLE_SPACING_Q15<sp/><sp/><sp/><sp/><sp/>0x80</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>1.31(q31)<sp/>Fixed<sp/>value<sp/>of<sp/>2/360<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>-1<sp/>to<sp/>+1<sp/>is<sp/>divided<sp/>into<sp/>360<sp/>values<sp/>so<sp/>total<sp/>spacing<sp/>is<sp/>(2/360)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354" refid="arm__math_8h_1a1339e9abc11a3870e0c04f822a62166a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INPUT_SPACING<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0xB60B61</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="preprocessor">#ifndef<sp/>UNALIGNED_SUPPORT_DISABLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360" refid="arm__math_8h_1a280a402ab28c399fcc4168f2ed631acb" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>ALIGN4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>defined<sp/><sp/>(__GNUC__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>ALIGN4<sp/>__attribute__((aligned(4)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>ALIGN4<sp/>__align(4)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>#ifndef<sp/>UNALIGNED_SUPPORT_DISABLE<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="373" refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="375" refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6a9f8b2a10bd827fb4600e77d455902eb0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6a9f8b2a10bd827fb4600e77d455902eb0" kindref="member">ARM_MATH_SUCCESS</ref><sp/>=<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="376" refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6a74897e18d4b8f62b12a7d8a01dd2bb35" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6a74897e18d4b8f62b12a7d8a01dd2bb35" kindref="member">ARM_MATH_ARGUMENT_ERROR</ref><sp/>=<sp/>-1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="377" refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6a9ae74d7f8a53aec0512ae8f0a421e0e1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6a9ae74d7f8a53aec0512ae8f0a421e0e1" kindref="member">ARM_MATH_LENGTH_ERROR</ref><sp/>=<sp/>-2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="378" refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6a7071b92f1f6bc3c5c312a237ea91105b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6a7071b92f1f6bc3c5c312a237ea91105b" kindref="member">ARM_MATH_SIZE_MISMATCH</ref><sp/>=<sp/>-3,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="379" refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6ac55996aaf19245238a8f57a91aeaefcc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6ac55996aaf19245238a8f57a91aeaefcc" kindref="member">ARM_MATH_NANINF</ref><sp/>=<sp/>-4,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="380" refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6a91509ea9c819dbd592ac13a6b05382dc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6a91509ea9c819dbd592ac13a6b05382dc" kindref="member">ARM_MATH_SINGULAR</ref><sp/>=<sp/>-5,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="381" refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6a09457f2be656b35015fd6d36202fa376" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6a09457f2be656b35015fd6d36202fa376" kindref="member">ARM_MATH_TEST_FAILURE</ref><sp/>=<sp/>-6<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/>}<sp/><ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6" kindref="member">arm_status</ref>;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="387" refid="arm__math_8h_1ae541b6f232c305361e9b416fc9eed263" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int8_t<sp/><ref refid="arm__math_8h_1ae541b6f232c305361e9b416fc9eed263" kindref="member">q7_t</ref>;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="392" refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int16_t<sp/><ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref>;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="397" refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref>;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="402" refid="arm__math_8h_1a5aea1cb12fc02d9d44c8abf217eaa5c6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int64_t<sp/><ref refid="arm__math_8h_1a5aea1cb12fc02d9d44c8abf217eaa5c6" kindref="member">q63_t</ref>;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="407" refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref>;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="412" refid="arm__math_8h_1ac55f3ae81b5bc9053760baacf57e47f4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1ac55f3ae81b5bc9053760baacf57e47f4" kindref="member">float64_t</ref>;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="preprocessor">#if<sp/>defined<sp/>__CC_ARM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__SIMD32_TYPE<sp/>int32_t<sp/>__packed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CMSIS_UNUSED<sp/>__attribute__((unused))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(__ARMCC_VERSION)<sp/>&amp;&amp;<sp/>(__ARMCC_VERSION<sp/>&gt;=<sp/>6010050)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__SIMD32_TYPE<sp/>int32_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CMSIS_UNUSED<sp/>__attribute__((unused))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined<sp/>__GNUC__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__SIMD32_TYPE<sp/>int32_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CMSIS_UNUSED<sp/>__attribute__((unused))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined<sp/>__ICCARM__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__SIMD32_TYPE<sp/>int32_t<sp/>__packed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CMSIS_UNUSED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined<sp/>__CSMC__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__SIMD32_TYPE<sp/>int32_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CMSIS_UNUSED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined<sp/>__TASKING__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__SIMD32_TYPE<sp/>__unaligned<sp/>int32_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CMSIS_UNUSED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#error<sp/>Unknown<sp/>compiler</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="445" refid="arm__math_8h_1a9de2e0a5785be82866bcb96012282248" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__SIMD32(addr)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*(__SIMD32_TYPE<sp/>**)<sp/>&amp;<sp/>(addr))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446" refid="arm__math_8h_1a1185d670d798aaf52eec13f0403f3407" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__SIMD32_CONST(addr)<sp/><sp/>((__SIMD32_TYPE<sp/>*)(addr))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447" refid="arm__math_8h_1af0d54ec57b936994a34f073d0049ea3f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_SIMD32_OFFSET(addr)<sp/><sp/>(*(__SIMD32_TYPE<sp/>*)<sp/><sp/>(addr))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448" refid="arm__math_8h_1ad1b053da364f9fd82ca1a381df7590b6" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__SIMD64(addr)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*(int64_t<sp/>**)<sp/>&amp;<sp/>(addr))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>(ARM_MATH_CM3)<sp/>||<sp/>defined<sp/>(ARM_MATH_CM0_FAMILY)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="preprocessor">#define<sp/>__PKHBT(ARG1,<sp/>ARG2,<sp/>ARG3)<sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>(((int32_t)(ARG1)<sp/>&lt;&lt;<sp/><sp/>0)<sp/>&amp;<sp/>(int32_t)0x0000FFFF)<sp/>|<sp/>\</highlight></codeline>
<codeline lineno="455"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((int32_t)(ARG2)<sp/>&lt;&lt;<sp/>ARG3)<sp/>&amp;<sp/>(int32_t)0xFFFF0000)<sp/><sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__PKHTB(ARG1,<sp/>ARG2,<sp/>ARG3)<sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>(((int32_t)(ARG1)<sp/>&lt;&lt;<sp/><sp/>0)<sp/>&amp;<sp/>(int32_t)0xFFFF0000)<sp/>|<sp/>\</highlight></codeline>
<codeline lineno="457"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((int32_t)(ARG2)<sp/>&gt;&gt;<sp/>ARG3)<sp/>&amp;<sp/>(int32_t)0x0000FFFF)<sp/><sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="preprocessor">#ifndef<sp/>ARM_MATH_BIG_ENDIAN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467" refid="arm__math_8h_1a3ebff224ad44c217fde9f530342e2960" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__PACKq7(v0,v1,v2,v3)<sp/>(<sp/>(((int32_t)(v0)<sp/>&lt;&lt;<sp/><sp/>0)<sp/>&amp;<sp/>(int32_t)0x000000FF)<sp/>|<sp/>\</highlight></codeline>
<codeline lineno="468"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((int32_t)(v1)<sp/>&lt;&lt;<sp/><sp/>8)<sp/>&amp;<sp/>(int32_t)0x0000FF00)<sp/>|<sp/>\</highlight></codeline>
<codeline lineno="469"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((int32_t)(v2)<sp/>&lt;&lt;<sp/>16)<sp/>&amp;<sp/>(int32_t)0x00FF0000)<sp/>|<sp/>\</highlight></codeline>
<codeline lineno="470"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((int32_t)(v3)<sp/>&lt;&lt;<sp/>24)<sp/>&amp;<sp/>(int32_t)0xFF000000)<sp/><sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__PACKq7(v0,v1,v2,v3)<sp/>(<sp/>(((int32_t)(v3)<sp/>&lt;&lt;<sp/><sp/>0)<sp/>&amp;<sp/>(int32_t)0x000000FF)<sp/>|<sp/>\</highlight></codeline>
<codeline lineno="474"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((int32_t)(v2)<sp/>&lt;&lt;<sp/><sp/>8)<sp/>&amp;<sp/>(int32_t)0x0000FF00)<sp/>|<sp/>\</highlight></codeline>
<codeline lineno="475"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((int32_t)(v1)<sp/>&lt;&lt;<sp/>16)<sp/>&amp;<sp/>(int32_t)0x00FF0000)<sp/>|<sp/>\</highlight></codeline>
<codeline lineno="476"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((int32_t)(v0)<sp/>&lt;&lt;<sp/>24)<sp/>&amp;<sp/>(int32_t)0xFF000000)<sp/><sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>__INLINE<sp/>q31_t<sp/>clip_q63_to_q31(</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/>q63_t<sp/>x)</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((q31_t)<sp/>(x<sp/>&gt;&gt;<sp/>32)<sp/>!=<sp/>((q31_t)<sp/>x<sp/>&gt;&gt;<sp/>31))<sp/>?</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>((0x7FFFFFFF<sp/>^<sp/>((<ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref>)<sp/>(x<sp/>&gt;&gt;<sp/>63))))<sp/>:<sp/>(q31_t)<sp/>x;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>__INLINE<sp/>q15_t<sp/>clip_q63_to_q15(</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/>q63_t<sp/>x)</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((q31_t)<sp/>(x<sp/>&gt;&gt;<sp/>32)<sp/>!=<sp/>((q31_t)<sp/>x<sp/>&gt;&gt;<sp/>31))<sp/>?</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>((0x7FFF<sp/>^<sp/>((<ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref>)<sp/>(x<sp/>&gt;&gt;<sp/>63))))<sp/>:<sp/>(q15_t)<sp/>(x<sp/>&gt;&gt;<sp/>15);</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>__INLINE<sp/>q7_t<sp/>clip_q31_to_q7(</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/>q31_t<sp/>x)</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((q31_t)<sp/>(x<sp/>&gt;&gt;<sp/>24)<sp/>!=<sp/>((q31_t)<sp/>x<sp/>&gt;&gt;<sp/>23))<sp/>?</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>((0x7F<sp/>^<sp/>((<ref refid="arm__math_8h_1ae541b6f232c305361e9b416fc9eed263" kindref="member">q7_t</ref>)<sp/>(x<sp/>&gt;&gt;<sp/>31))))<sp/>:<sp/>(q7_t)<sp/>x;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>__INLINE<sp/>q15_t<sp/>clip_q31_to_q15(</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/>q31_t<sp/>x)</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((q31_t)<sp/>(x<sp/>&gt;&gt;<sp/>16)<sp/>!=<sp/>((q31_t)<sp/>x<sp/>&gt;&gt;<sp/>15))<sp/>?</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>((0x7FFF<sp/>^<sp/>((<ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref>)<sp/>(x<sp/>&gt;&gt;<sp/>31))))<sp/>:<sp/>(q15_t)<sp/>x;</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>__INLINE<sp/>q63_t<sp/>mult32x64(</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/>q63_t<sp/>x,</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/>q31_t<sp/>y)</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((((q63_t)<sp/>(x<sp/>&amp;<sp/>0x00000000FFFFFFFF)<sp/>*<sp/>y)<sp/>&gt;&gt;<sp/>32)<sp/>+</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((q63_t)<sp/>(x<sp/>&gt;&gt;<sp/>32)<sp/>*<sp/>y)));</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="534"><highlight class="comment"><sp/><sp/>#if<sp/>defined<sp/>(ARM_MATH_CM0_FAMILY)<sp/>&amp;&amp;<sp/>defined<sp/>(<sp/>__CC_ARM<sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="535"><highlight class="comment"><sp/><sp/>#define<sp/>__CLZ<sp/>__clz</highlight></codeline>
<codeline lineno="536"><highlight class="comment"><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="537"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>note:<sp/>function<sp/>can<sp/>be<sp/>removed<sp/>when<sp/>all<sp/>toolchain<sp/>support<sp/>__CLZ<sp/>for<sp/>Cortex-M0<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>(ARM_MATH_CM0_FAMILY)<sp/>&amp;&amp;<sp/>((defined<sp/>(__ICCARM__))<sp/><sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>__INLINE<sp/>uint32_t<sp/><ref refid="group___c_m_s_i_s___core___instruction_interface_1ga5d5bb1527e042be4a9fa5a33f65cc248" kindref="member">__CLZ</ref>(</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/>q31_t<sp/>data);</highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>__INLINE<sp/>uint32_t<sp/><ref refid="group___c_m_s_i_s___core___instruction_interface_1ga5d5bb1527e042be4a9fa5a33f65cc248" kindref="member">__CLZ</ref>(</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/>q31_t<sp/>data)</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>mask<sp/>=<sp/>0x80000000;</highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">((data<sp/>&amp;<sp/>mask)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>count<sp/>+=<sp/>1u;</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mask<sp/>=<sp/>mask<sp/>&gt;&gt;<sp/>1u;</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(count);</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>__INLINE<sp/>uint32_t<sp/>arm_recip_q31(</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/>q31_t<sp/>in,</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>dst,</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pRecipTable)</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/>q31_t<sp/>out;</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>tempVal;</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>index,<sp/>i;</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>signBits;</highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(in<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>signBits<sp/>=<sp/>((uint32_t)<sp/>(<ref refid="group___c_m_s_i_s___core___instruction_interface_1ga5d5bb1527e042be4a9fa5a33f65cc248" kindref="member">__CLZ</ref>(<sp/>in)<sp/>-<sp/>1));</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>signBits<sp/>=<sp/>((uint32_t)<sp/>(<ref refid="group___c_m_s_i_s___core___instruction_interface_1ga5d5bb1527e042be4a9fa5a33f65cc248" kindref="member">__CLZ</ref>(-in)<sp/>-<sp/>1));</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Convert<sp/>input<sp/>sample<sp/>to<sp/>1.31<sp/>format<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/>in<sp/>=<sp/>(in<sp/>&lt;&lt;<sp/>signBits);</highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>calculation<sp/>of<sp/>index<sp/>for<sp/>initial<sp/>approximated<sp/>Val<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/>index<sp/>=<sp/>(uint32_t)(in<sp/>&gt;&gt;<sp/>24);</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/>index<sp/>=<sp/>(index<sp/>&amp;<sp/><ref refid="arm__math_8h_1a29f839928f4752b73c8858d6dbb55294" kindref="member">INDEX_MASK</ref>);</highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>1.31<sp/>with<sp/>exp<sp/>1<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/>out<sp/>=<sp/>pRecipTable[index];</highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>calculation<sp/>of<sp/>reciprocal<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>running<sp/>approximation<sp/>for<sp/>two<sp/>iterations<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0u;<sp/>i<sp/>&lt;<sp/>2u;<sp/>i++)</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tempVal<sp/>=<sp/>(uint32_t)<sp/>(((q63_t)<sp/>in<sp/>*<sp/>out)<sp/>&gt;&gt;<sp/>31);</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tempVal<sp/>=<sp/>0x7FFFFFFFu<sp/>-<sp/>tempVal;</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/>1.31<sp/>with<sp/>exp<sp/>1<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>out<sp/>=<sp/>(q31_t)<sp/>(((q63_t)<sp/>out<sp/>*<sp/>tempVal)<sp/>&gt;&gt;<sp/>30);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>=<sp/>clip_q63_to_q31(((q63_t)<sp/>out<sp/>*<sp/>tempVal)<sp/>&gt;&gt;<sp/>30);</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>write<sp/>output<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/>*dst<sp/>=<sp/>out;</highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>return<sp/>num<sp/>of<sp/>signbits<sp/>of<sp/>out<sp/>=<sp/>1/in<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(signBits<sp/>+<sp/>1u);</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>__INLINE<sp/>uint32_t<sp/>arm_recip_q15(</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/>q15_t<sp/>in,</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>dst,</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pRecipTable)</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/>q15_t<sp/>out<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>tempVal<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>index<sp/>=<sp/>0,<sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>signBits<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(in<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>signBits<sp/>=<sp/>((uint32_t)(<ref refid="group___c_m_s_i_s___core___instruction_interface_1ga5d5bb1527e042be4a9fa5a33f65cc248" kindref="member">__CLZ</ref>(<sp/>in)<sp/>-<sp/>17));</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>signBits<sp/>=<sp/>((uint32_t)(<ref refid="group___c_m_s_i_s___core___instruction_interface_1ga5d5bb1527e042be4a9fa5a33f65cc248" kindref="member">__CLZ</ref>(-in)<sp/>-<sp/>17));</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Convert<sp/>input<sp/>sample<sp/>to<sp/>1.15<sp/>format<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/>in<sp/>=<sp/>(in<sp/>&lt;&lt;<sp/>signBits);</highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>calculation<sp/>of<sp/>index<sp/>for<sp/>initial<sp/>approximated<sp/>Val<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/>index<sp/>=<sp/>(uint32_t)(in<sp/>&gt;&gt;<sp/><sp/>8);</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/>index<sp/>=<sp/>(index<sp/>&amp;<sp/><ref refid="arm__math_8h_1a29f839928f4752b73c8858d6dbb55294" kindref="member">INDEX_MASK</ref>);</highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/>1.15<sp/>with<sp/>exp<sp/>1<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/>out<sp/>=<sp/>pRecipTable[index];</highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>calculation<sp/>of<sp/>reciprocal<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>running<sp/>approximation<sp/>for<sp/>two<sp/>iterations<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0u;<sp/>i<sp/>&lt;<sp/>2u;<sp/>i++)</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tempVal<sp/>=<sp/>(uint32_t)<sp/>(((q31_t)<sp/>in<sp/>*<sp/>out)<sp/>&gt;&gt;<sp/>15);</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tempVal<sp/>=<sp/>0x7FFFu<sp/>-<sp/>tempVal;</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/>1.15<sp/>with<sp/>exp<sp/>1<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>=<sp/>(<ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref>)<sp/>(((q31_t)<sp/>out<sp/>*<sp/>tempVal)<sp/>&gt;&gt;<sp/>14);</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>out<sp/>=<sp/>clip_q31_to_q15(((q31_t)<sp/>out<sp/>*<sp/>tempVal)<sp/>&gt;&gt;<sp/>14);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>write<sp/>output<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/>*dst<sp/>=<sp/>out;</highlight></codeline>
<codeline lineno="656"><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>return<sp/>num<sp/>of<sp/>signbits<sp/>of<sp/>out<sp/>=<sp/>1/in<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(signBits<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="663"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@brief<sp/>C<sp/>custom<sp/>defined<sp/>intrinisic<sp/>function<sp/>for<sp/>only<sp/>M0<sp/>processors</highlight></codeline>
<codeline lineno="664"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(ARM_MATH_CM0_FAMILY)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>__INLINE<sp/>q31_t<sp/>__SSAT(</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/>q31_t<sp/>x,</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/>uint32_t<sp/>y)</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>posMax,<sp/>negMin;</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>i;</highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/>posMax<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>(y<sp/>-<sp/>1);<sp/>i++)</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>posMax<sp/>=<sp/>posMax<sp/>*<sp/>2;</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>posMax<sp/>=<sp/>(posMax<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x<sp/>&gt;<sp/>posMax)</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>posMax;</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>negMin<sp/>=<sp/>-posMax;</highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x<sp/>&lt;<sp/>negMin)</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>negMin;</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(x);</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>end<sp/>of<sp/>ARM_MATH_CM0_FAMILY<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="703"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@brief<sp/>C<sp/>custom<sp/>defined<sp/>intrinsic<sp/>function<sp/>for<sp/>M3<sp/>and<sp/>M0<sp/>processors</highlight></codeline>
<codeline lineno="704"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>(ARM_MATH_CM3)<sp/>||<sp/>defined<sp/>(ARM_MATH_CM0_FAMILY)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="708"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@brief<sp/>C<sp/>custom<sp/>defined<sp/>QADD8<sp/>for<sp/>M3<sp/>and<sp/>M0<sp/>processors</highlight></codeline>
<codeline lineno="709"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>__INLINE<sp/>uint32_t<sp/>__QADD8(</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/>uint32_t<sp/>x,</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/>uint32_t<sp/>y)</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/>q31_t<sp/>r,<sp/>s,<sp/>t,<sp/>u;</highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/>r<sp/>=<sp/>__SSAT(((((q31_t)x<sp/>&lt;&lt;<sp/>24)<sp/>&gt;&gt;<sp/>24)<sp/>+<sp/>(((q31_t)y<sp/>&lt;&lt;<sp/>24)<sp/>&gt;&gt;<sp/>24)),<sp/>8)<sp/>&amp;<sp/>(int32_t)0x000000FF;</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/>s<sp/>=<sp/>__SSAT(((((q31_t)x<sp/>&lt;&lt;<sp/>16)<sp/>&gt;&gt;<sp/>24)<sp/>+<sp/>(((q31_t)y<sp/>&lt;&lt;<sp/>16)<sp/>&gt;&gt;<sp/>24)),<sp/>8)<sp/>&amp;<sp/>(int32_t)0x000000FF;</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>=<sp/>__SSAT(((((q31_t)x<sp/>&lt;&lt;<sp/><sp/>8)<sp/>&gt;&gt;<sp/>24)<sp/>+<sp/>(((q31_t)y<sp/>&lt;&lt;<sp/><sp/>8)<sp/>&gt;&gt;<sp/>24)),<sp/>8)<sp/>&amp;<sp/>(int32_t)0x000000FF;</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/>u<sp/>=<sp/>__SSAT(((((q31_t)x<sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>&gt;&gt;<sp/>24)<sp/>+<sp/>(((q31_t)y<sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>&gt;&gt;<sp/>24)),<sp/>8)<sp/>&amp;<sp/>(int32_t)0x000000FF;</highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((uint32_t)((u<sp/>&lt;&lt;<sp/>24)<sp/>|<sp/>(t<sp/>&lt;&lt;<sp/>16)<sp/>|<sp/>(s<sp/>&lt;&lt;<sp/><sp/>8)<sp/>|<sp/>(r<sp/><sp/><sp/><sp/><sp/><sp/>)));</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="723"><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="726"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@brief<sp/>C<sp/>custom<sp/>defined<sp/>QSUB8<sp/>for<sp/>M3<sp/>and<sp/>M0<sp/>processors</highlight></codeline>
<codeline lineno="727"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>__INLINE<sp/>uint32_t<sp/>__QSUB8(</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/>uint32_t<sp/>x,</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/>uint32_t<sp/>y)</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/>q31_t<sp/>r,<sp/>s,<sp/>t,<sp/>u;</highlight></codeline>
<codeline lineno="733"><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/>r<sp/>=<sp/>__SSAT(((((q31_t)x<sp/>&lt;&lt;<sp/>24)<sp/>&gt;&gt;<sp/>24)<sp/>-<sp/>(((q31_t)y<sp/>&lt;&lt;<sp/>24)<sp/>&gt;&gt;<sp/>24)),<sp/>8)<sp/>&amp;<sp/>(int32_t)0x000000FF;</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/>s<sp/>=<sp/>__SSAT(((((q31_t)x<sp/>&lt;&lt;<sp/>16)<sp/>&gt;&gt;<sp/>24)<sp/>-<sp/>(((q31_t)y<sp/>&lt;&lt;<sp/>16)<sp/>&gt;&gt;<sp/>24)),<sp/>8)<sp/>&amp;<sp/>(int32_t)0x000000FF;</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>=<sp/>__SSAT(((((q31_t)x<sp/>&lt;&lt;<sp/><sp/>8)<sp/>&gt;&gt;<sp/>24)<sp/>-<sp/>(((q31_t)y<sp/>&lt;&lt;<sp/><sp/>8)<sp/>&gt;&gt;<sp/>24)),<sp/>8)<sp/>&amp;<sp/>(int32_t)0x000000FF;</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/>u<sp/>=<sp/>__SSAT(((((q31_t)x<sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>&gt;&gt;<sp/>24)<sp/>-<sp/>(((q31_t)y<sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>&gt;&gt;<sp/>24)),<sp/>8)<sp/>&amp;<sp/>(int32_t)0x000000FF;</highlight></codeline>
<codeline lineno="738"><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((uint32_t)((u<sp/>&lt;&lt;<sp/>24)<sp/>|<sp/>(t<sp/>&lt;&lt;<sp/>16)<sp/>|<sp/>(s<sp/>&lt;&lt;<sp/><sp/>8)<sp/>|<sp/>(r<sp/><sp/><sp/><sp/><sp/><sp/>)));</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="741"><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="744"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@brief<sp/>C<sp/>custom<sp/>defined<sp/>QADD16<sp/>for<sp/>M3<sp/>and<sp/>M0<sp/>processors</highlight></codeline>
<codeline lineno="745"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>__INLINE<sp/>uint32_t<sp/>__QADD16(</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/>uint32_t<sp/>x,</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/>uint32_t<sp/>y)</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>q31_t<sp/>r,<sp/><sp/><sp/><sp/><sp/>s;<sp/><sp/>without<sp/>initialisation<sp/>&apos;arm_offset_q15<sp/>test&apos;<sp/>fails<sp/><sp/>but<sp/>&apos;intrinsic&apos;<sp/>tests<sp/>pass!<sp/>for<sp/>armCC<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/>q31_t<sp/>r<sp/>=<sp/>0,<sp/>s<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="752"><highlight class="normal"></highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/>r<sp/>=<sp/>__SSAT(((((q31_t)x<sp/>&lt;&lt;<sp/>16)<sp/>&gt;&gt;<sp/>16)<sp/>+<sp/>(((q31_t)y<sp/>&lt;&lt;<sp/>16)<sp/>&gt;&gt;<sp/>16)),<sp/>16)<sp/>&amp;<sp/>(int32_t)0x0000FFFF;</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/>s<sp/>=<sp/>__SSAT(((((q31_t)x<sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>&gt;&gt;<sp/>16)<sp/>+<sp/>(((q31_t)y<sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>&gt;&gt;<sp/>16)),<sp/>16)<sp/>&amp;<sp/>(int32_t)0x0000FFFF;</highlight></codeline>
<codeline lineno="755"><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((uint32_t)((s<sp/>&lt;&lt;<sp/>16)<sp/>|<sp/>(r<sp/><sp/><sp/><sp/><sp/><sp/>)));</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="758"><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="761"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@brief<sp/>C<sp/>custom<sp/>defined<sp/>SHADD16<sp/>for<sp/>M3<sp/>and<sp/>M0<sp/>processors</highlight></codeline>
<codeline lineno="762"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>__INLINE<sp/>uint32_t<sp/>__SHADD16(</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/>uint32_t<sp/>x,</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/>uint32_t<sp/>y)</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/>q31_t<sp/>r,<sp/>s;</highlight></codeline>
<codeline lineno="768"><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/>r<sp/>=<sp/>(((((<ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref>)x<sp/>&lt;&lt;<sp/>16)<sp/>&gt;&gt;<sp/>16)<sp/>+<sp/>(((q31_t)y<sp/>&lt;&lt;<sp/>16)<sp/>&gt;&gt;<sp/>16))<sp/>&gt;&gt;<sp/>1)<sp/>&amp;<sp/>(int32_t)0x0000FFFF;</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/>s<sp/>=<sp/>(((((<ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref>)x<sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>&gt;&gt;<sp/>16)<sp/>+<sp/>(((q31_t)y<sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>&gt;&gt;<sp/>16))<sp/>&gt;&gt;<sp/>1)<sp/>&amp;<sp/>(int32_t)0x0000FFFF;</highlight></codeline>
<codeline lineno="771"><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((uint32_t)((s<sp/>&lt;&lt;<sp/>16)<sp/>|<sp/>(r<sp/><sp/><sp/><sp/><sp/><sp/>)));</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="777"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@brief<sp/>C<sp/>custom<sp/>defined<sp/>QSUB16<sp/>for<sp/>M3<sp/>and<sp/>M0<sp/>processors</highlight></codeline>
<codeline lineno="778"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>__INLINE<sp/>uint32_t<sp/>__QSUB16(</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/>uint32_t<sp/>x,</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/>uint32_t<sp/>y)</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/>q31_t<sp/>r,<sp/>s;</highlight></codeline>
<codeline lineno="784"><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/>r<sp/>=<sp/>__SSAT(((((q31_t)x<sp/>&lt;&lt;<sp/>16)<sp/>&gt;&gt;<sp/>16)<sp/>-<sp/>(((q31_t)y<sp/>&lt;&lt;<sp/>16)<sp/>&gt;&gt;<sp/>16)),<sp/>16)<sp/>&amp;<sp/>(int32_t)0x0000FFFF;</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/>s<sp/>=<sp/>__SSAT(((((q31_t)x<sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>&gt;&gt;<sp/>16)<sp/>-<sp/>(((q31_t)y<sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>&gt;&gt;<sp/>16)),<sp/>16)<sp/>&amp;<sp/>(int32_t)0x0000FFFF;</highlight></codeline>
<codeline lineno="787"><highlight class="normal"></highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((uint32_t)((s<sp/>&lt;&lt;<sp/>16)<sp/>|<sp/>(r<sp/><sp/><sp/><sp/><sp/><sp/>)));</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="790"><highlight class="normal"></highlight></codeline>
<codeline lineno="791"><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="793"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@brief<sp/>C<sp/>custom<sp/>defined<sp/>SHSUB16<sp/>for<sp/>M3<sp/>and<sp/>M0<sp/>processors</highlight></codeline>
<codeline lineno="794"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>__INLINE<sp/>uint32_t<sp/>__SHSUB16(</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/>uint32_t<sp/>x,</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/>uint32_t<sp/>y)</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/>q31_t<sp/>r,<sp/>s;</highlight></codeline>
<codeline lineno="800"><highlight class="normal"></highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/>r<sp/>=<sp/>(((((<ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref>)x<sp/>&lt;&lt;<sp/>16)<sp/>&gt;&gt;<sp/>16)<sp/>-<sp/>(((q31_t)y<sp/>&lt;&lt;<sp/>16)<sp/>&gt;&gt;<sp/>16))<sp/>&gt;&gt;<sp/>1)<sp/>&amp;<sp/>(int32_t)0x0000FFFF;</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/>s<sp/>=<sp/>(((((<ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref>)x<sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>&gt;&gt;<sp/>16)<sp/>-<sp/>(((q31_t)y<sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>&gt;&gt;<sp/>16))<sp/>&gt;&gt;<sp/>1)<sp/>&amp;<sp/>(int32_t)0x0000FFFF;</highlight></codeline>
<codeline lineno="803"><highlight class="normal"></highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((uint32_t)((s<sp/>&lt;&lt;<sp/>16)<sp/>|<sp/>(r<sp/><sp/><sp/><sp/><sp/><sp/>)));</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="806"><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="809"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@brief<sp/>C<sp/>custom<sp/>defined<sp/>QASX<sp/>for<sp/>M3<sp/>and<sp/>M0<sp/>processors</highlight></codeline>
<codeline lineno="810"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>__INLINE<sp/>uint32_t<sp/>__QASX(</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/>uint32_t<sp/>x,</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/>uint32_t<sp/>y)</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/>q31_t<sp/>r,<sp/>s;</highlight></codeline>
<codeline lineno="816"><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/>r<sp/>=<sp/>__SSAT(((((q31_t)x<sp/>&lt;&lt;<sp/>16)<sp/>&gt;&gt;<sp/>16)<sp/>-<sp/>(((q31_t)y<sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>&gt;&gt;<sp/>16)),<sp/>16)<sp/>&amp;<sp/>(int32_t)0x0000FFFF;</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/>s<sp/>=<sp/>__SSAT(((((q31_t)x<sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>&gt;&gt;<sp/>16)<sp/>+<sp/>(((q31_t)y<sp/>&lt;&lt;<sp/>16)<sp/>&gt;&gt;<sp/>16)),<sp/>16)<sp/>&amp;<sp/>(int32_t)0x0000FFFF;</highlight></codeline>
<codeline lineno="819"><highlight class="normal"></highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((uint32_t)((s<sp/>&lt;&lt;<sp/>16)<sp/>|<sp/>(r<sp/><sp/><sp/><sp/><sp/><sp/>)));</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="822"><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="825"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@brief<sp/>C<sp/>custom<sp/>defined<sp/>SHASX<sp/>for<sp/>M3<sp/>and<sp/>M0<sp/>processors</highlight></codeline>
<codeline lineno="826"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>__INLINE<sp/>uint32_t<sp/>__SHASX(</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/>uint32_t<sp/>x,</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/>uint32_t<sp/>y)</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/>q31_t<sp/>r,<sp/>s;</highlight></codeline>
<codeline lineno="832"><highlight class="normal"></highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/>r<sp/>=<sp/>(((((<ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref>)x<sp/>&lt;&lt;<sp/>16)<sp/>&gt;&gt;<sp/>16)<sp/>-<sp/>(((q31_t)y<sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>&gt;&gt;<sp/>16))<sp/>&gt;&gt;<sp/>1)<sp/>&amp;<sp/>(int32_t)0x0000FFFF;</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/>s<sp/>=<sp/>(((((<ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref>)x<sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>&gt;&gt;<sp/>16)<sp/>+<sp/>(((q31_t)y<sp/>&lt;&lt;<sp/>16)<sp/>&gt;&gt;<sp/>16))<sp/>&gt;&gt;<sp/>1)<sp/>&amp;<sp/>(int32_t)0x0000FFFF;</highlight></codeline>
<codeline lineno="835"><highlight class="normal"></highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((uint32_t)((s<sp/>&lt;&lt;<sp/>16)<sp/>|<sp/>(r<sp/><sp/><sp/><sp/><sp/><sp/>)));</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="838"><highlight class="normal"></highlight></codeline>
<codeline lineno="839"><highlight class="normal"></highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="841"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@brief<sp/>C<sp/>custom<sp/>defined<sp/>QSAX<sp/>for<sp/>M3<sp/>and<sp/>M0<sp/>processors</highlight></codeline>
<codeline lineno="842"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>__INLINE<sp/>uint32_t<sp/>__QSAX(</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/>uint32_t<sp/>x,</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/>uint32_t<sp/>y)</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/>q31_t<sp/>r,<sp/>s;</highlight></codeline>
<codeline lineno="848"><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/>r<sp/>=<sp/>__SSAT(((((q31_t)x<sp/>&lt;&lt;<sp/>16)<sp/>&gt;&gt;<sp/>16)<sp/>+<sp/>(((q31_t)y<sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>&gt;&gt;<sp/>16)),<sp/>16)<sp/>&amp;<sp/>(int32_t)0x0000FFFF;</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/>s<sp/>=<sp/>__SSAT(((((q31_t)x<sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>&gt;&gt;<sp/>16)<sp/>-<sp/>(((q31_t)y<sp/>&lt;&lt;<sp/>16)<sp/>&gt;&gt;<sp/>16)),<sp/>16)<sp/>&amp;<sp/>(int32_t)0x0000FFFF;</highlight></codeline>
<codeline lineno="851"><highlight class="normal"></highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((uint32_t)((s<sp/>&lt;&lt;<sp/>16)<sp/>|<sp/>(r<sp/><sp/><sp/><sp/><sp/><sp/>)));</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="854"><highlight class="normal"></highlight></codeline>
<codeline lineno="855"><highlight class="normal"></highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="857"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@brief<sp/>C<sp/>custom<sp/>defined<sp/>SHSAX<sp/>for<sp/>M3<sp/>and<sp/>M0<sp/>processors</highlight></codeline>
<codeline lineno="858"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>__INLINE<sp/>uint32_t<sp/>__SHSAX(</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/>uint32_t<sp/>x,</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/>uint32_t<sp/>y)</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/>q31_t<sp/>r,<sp/>s;</highlight></codeline>
<codeline lineno="864"><highlight class="normal"></highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/>r<sp/>=<sp/>(((((<ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref>)x<sp/>&lt;&lt;<sp/>16)<sp/>&gt;&gt;<sp/>16)<sp/>+<sp/>(((q31_t)y<sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>&gt;&gt;<sp/>16))<sp/>&gt;&gt;<sp/>1)<sp/>&amp;<sp/>(int32_t)0x0000FFFF;</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/>s<sp/>=<sp/>(((((<ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref>)x<sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>&gt;&gt;<sp/>16)<sp/>-<sp/>(((q31_t)y<sp/>&lt;&lt;<sp/>16)<sp/>&gt;&gt;<sp/>16))<sp/>&gt;&gt;<sp/>1)<sp/>&amp;<sp/>(int32_t)0x0000FFFF;</highlight></codeline>
<codeline lineno="867"><highlight class="normal"></highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((uint32_t)((s<sp/>&lt;&lt;<sp/>16)<sp/>|<sp/>(r<sp/><sp/><sp/><sp/><sp/><sp/>)));</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="870"><highlight class="normal"></highlight></codeline>
<codeline lineno="871"><highlight class="normal"></highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="873"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@brief<sp/>C<sp/>custom<sp/>defined<sp/>SMUSDX<sp/>for<sp/>M3<sp/>and<sp/>M0<sp/>processors</highlight></codeline>
<codeline lineno="874"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>__INLINE<sp/>uint32_t<sp/>__SMUSDX(</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/>uint32_t<sp/>x,</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/>uint32_t<sp/>y)</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((uint32_t)(((((q31_t)x<sp/>&lt;&lt;<sp/>16)<sp/>&gt;&gt;<sp/>16)<sp/>*<sp/>(((q31_t)y<sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>&gt;&gt;<sp/>16))<sp/>-</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((((q31_t)x<sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>&gt;&gt;<sp/>16)<sp/>*<sp/>(((q31_t)y<sp/>&lt;&lt;<sp/>16)<sp/>&gt;&gt;<sp/>16))<sp/><sp/><sp/>));</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="882"><highlight class="normal"></highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="884"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@brief<sp/>C<sp/>custom<sp/>defined<sp/>SMUADX<sp/>for<sp/>M3<sp/>and<sp/>M0<sp/>processors</highlight></codeline>
<codeline lineno="885"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>__INLINE<sp/>uint32_t<sp/>__SMUADX(</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/>uint32_t<sp/>x,</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/>uint32_t<sp/>y)</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((uint32_t)(((((q31_t)x<sp/>&lt;&lt;<sp/>16)<sp/>&gt;&gt;<sp/>16)<sp/>*<sp/>(((q31_t)y<sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>&gt;&gt;<sp/>16))<sp/>+</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((((q31_t)x<sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>&gt;&gt;<sp/>16)<sp/>*<sp/>(((q31_t)y<sp/>&lt;&lt;<sp/>16)<sp/>&gt;&gt;<sp/>16))<sp/><sp/><sp/>));</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="893"><highlight class="normal"></highlight></codeline>
<codeline lineno="894"><highlight class="normal"></highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="896"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@brief<sp/>C<sp/>custom<sp/>defined<sp/>QADD<sp/>for<sp/>M3<sp/>and<sp/>M0<sp/>processors</highlight></codeline>
<codeline lineno="897"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>__INLINE<sp/>int32_t<sp/>__QADD(</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/>int32_t<sp/>x,</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/>int32_t<sp/>y)</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((int32_t)(clip_q63_to_q31((q63_t)x<sp/>+<sp/>(q31_t)y)));</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="904"><highlight class="normal"></highlight></codeline>
<codeline lineno="905"><highlight class="normal"></highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="907"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@brief<sp/>C<sp/>custom<sp/>defined<sp/>QSUB<sp/>for<sp/>M3<sp/>and<sp/>M0<sp/>processors</highlight></codeline>
<codeline lineno="908"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>__INLINE<sp/>int32_t<sp/>__QSUB(</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/>int32_t<sp/>x,</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/>int32_t<sp/>y)</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((int32_t)(clip_q63_to_q31((q63_t)x<sp/>-<sp/>(q31_t)y)));</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="915"><highlight class="normal"></highlight></codeline>
<codeline lineno="916"><highlight class="normal"></highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="918"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@brief<sp/>C<sp/>custom<sp/>defined<sp/>SMLAD<sp/>for<sp/>M3<sp/>and<sp/>M0<sp/>processors</highlight></codeline>
<codeline lineno="919"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>__INLINE<sp/>uint32_t<sp/>__SMLAD(</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/>uint32_t<sp/>x,</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/>uint32_t<sp/>y,</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/>uint32_t<sp/>sum)</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((uint32_t)(((((q31_t)x<sp/>&lt;&lt;<sp/>16)<sp/>&gt;&gt;<sp/>16)<sp/>*<sp/>(((q31_t)y<sp/>&lt;&lt;<sp/>16)<sp/>&gt;&gt;<sp/>16))<sp/>+</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((((q31_t)x<sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>&gt;&gt;<sp/>16)<sp/>*<sp/>(((q31_t)y<sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>&gt;&gt;<sp/>16))<sp/>+</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>((q31_t)sum<sp/><sp/><sp/><sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/><sp/><sp/>));</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="929"><highlight class="normal"></highlight></codeline>
<codeline lineno="930"><highlight class="normal"></highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="932"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@brief<sp/>C<sp/>custom<sp/>defined<sp/>SMLADX<sp/>for<sp/>M3<sp/>and<sp/>M0<sp/>processors</highlight></codeline>
<codeline lineno="933"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>__INLINE<sp/>uint32_t<sp/>__SMLADX(</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/>uint32_t<sp/>x,</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/>uint32_t<sp/>y,</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/>uint32_t<sp/>sum)</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((uint32_t)(((((q31_t)x<sp/>&lt;&lt;<sp/>16)<sp/>&gt;&gt;<sp/>16)<sp/>*<sp/>(((q31_t)y<sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>&gt;&gt;<sp/>16))<sp/>+</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((((q31_t)x<sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>&gt;&gt;<sp/>16)<sp/>*<sp/>(((q31_t)y<sp/>&lt;&lt;<sp/>16)<sp/>&gt;&gt;<sp/>16))<sp/>+</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>((q31_t)sum<sp/><sp/><sp/><sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/><sp/><sp/>));</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="943"><highlight class="normal"></highlight></codeline>
<codeline lineno="944"><highlight class="normal"></highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="946"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@brief<sp/>C<sp/>custom<sp/>defined<sp/>SMLSDX<sp/>for<sp/>M3<sp/>and<sp/>M0<sp/>processors</highlight></codeline>
<codeline lineno="947"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>__INLINE<sp/>uint32_t<sp/>__SMLSDX(</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/>uint32_t<sp/>x,</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/>uint32_t<sp/>y,</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/>uint32_t<sp/>sum)</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((uint32_t)(((((q31_t)x<sp/>&lt;&lt;<sp/>16)<sp/>&gt;&gt;<sp/>16)<sp/>*<sp/>(((q31_t)y<sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>&gt;&gt;<sp/>16))<sp/>-</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((((q31_t)x<sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>&gt;&gt;<sp/>16)<sp/>*<sp/>(((q31_t)y<sp/>&lt;&lt;<sp/>16)<sp/>&gt;&gt;<sp/>16))<sp/>+</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>((q31_t)sum<sp/><sp/><sp/><sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/><sp/><sp/>));</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="957"><highlight class="normal"></highlight></codeline>
<codeline lineno="958"><highlight class="normal"></highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="960"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@brief<sp/>C<sp/>custom<sp/>defined<sp/>SMLALD<sp/>for<sp/>M3<sp/>and<sp/>M0<sp/>processors</highlight></codeline>
<codeline lineno="961"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>__INLINE<sp/>uint64_t<sp/>__SMLALD(</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/>uint32_t<sp/>x,</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/>uint32_t<sp/>y,</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/>uint64_t<sp/>sum)</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="967"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>return<sp/>(sum<sp/>+<sp/>((q15_t)<sp/>(x<sp/>&gt;&gt;<sp/>16)<sp/>*<sp/>(q15_t)<sp/>(y<sp/>&gt;&gt;<sp/>16))<sp/>+<sp/>((q15_t)<sp/>x<sp/>*<sp/>(q15_t)<sp/>y));<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((uint64_t)(((((q31_t)x<sp/>&lt;&lt;<sp/>16)<sp/>&gt;&gt;<sp/>16)<sp/>*<sp/>(((q31_t)y<sp/>&lt;&lt;<sp/>16)<sp/>&gt;&gt;<sp/>16))<sp/>+</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((((q31_t)x<sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>&gt;&gt;<sp/>16)<sp/>*<sp/>(((q31_t)y<sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>&gt;&gt;<sp/>16))<sp/>+</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>((q63_t)sum<sp/><sp/><sp/><sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/><sp/><sp/>));</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="972"><highlight class="normal"></highlight></codeline>
<codeline lineno="973"><highlight class="normal"></highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="975"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@brief<sp/>C<sp/>custom<sp/>defined<sp/>SMLALDX<sp/>for<sp/>M3<sp/>and<sp/>M0<sp/>processors</highlight></codeline>
<codeline lineno="976"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>__INLINE<sp/>uint64_t<sp/>__SMLALDX(</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/>uint32_t<sp/>x,</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/>uint32_t<sp/>y,</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/>uint64_t<sp/>sum)</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="982"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>return<sp/>(sum<sp/>+<sp/>((q15_t)<sp/>(x<sp/>&gt;&gt;<sp/>16)<sp/>*<sp/>(q15_t)<sp/>y))<sp/>+<sp/>((q15_t)<sp/>x<sp/>*<sp/>(q15_t)<sp/>(y<sp/>&gt;&gt;<sp/>16));<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((uint64_t)(((((q31_t)x<sp/>&lt;&lt;<sp/>16)<sp/>&gt;&gt;<sp/>16)<sp/>*<sp/>(((q31_t)y<sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>&gt;&gt;<sp/>16))<sp/>+</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((((q31_t)x<sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>&gt;&gt;<sp/>16)<sp/>*<sp/>(((q31_t)y<sp/>&lt;&lt;<sp/>16)<sp/>&gt;&gt;<sp/>16))<sp/>+</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>((q63_t)sum<sp/><sp/><sp/><sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/><sp/><sp/>));</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="987"><highlight class="normal"></highlight></codeline>
<codeline lineno="988"><highlight class="normal"></highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="990"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@brief<sp/>C<sp/>custom<sp/>defined<sp/>SMUAD<sp/>for<sp/>M3<sp/>and<sp/>M0<sp/>processors</highlight></codeline>
<codeline lineno="991"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>__INLINE<sp/>uint32_t<sp/>__SMUAD(</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/>uint32_t<sp/>x,</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/>uint32_t<sp/>y)</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((uint32_t)(((((q31_t)x<sp/>&lt;&lt;<sp/>16)<sp/>&gt;&gt;<sp/>16)<sp/>*<sp/>(((q31_t)y<sp/>&lt;&lt;<sp/>16)<sp/>&gt;&gt;<sp/>16))<sp/>+</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((((q31_t)x<sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>&gt;&gt;<sp/>16)<sp/>*<sp/>(((q31_t)y<sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>&gt;&gt;<sp/>16))<sp/><sp/><sp/>));</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="999"><highlight class="normal"></highlight></codeline>
<codeline lineno="1000"><highlight class="normal"></highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1002"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@brief<sp/>C<sp/>custom<sp/>defined<sp/>SMUSD<sp/>for<sp/>M3<sp/>and<sp/>M0<sp/>processors</highlight></codeline>
<codeline lineno="1003"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>__INLINE<sp/>uint32_t<sp/>__SMUSD(</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/>uint32_t<sp/>x,</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/>uint32_t<sp/>y)</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((uint32_t)(((((q31_t)x<sp/>&lt;&lt;<sp/>16)<sp/>&gt;&gt;<sp/>16)<sp/>*<sp/>(((q31_t)y<sp/>&lt;&lt;<sp/>16)<sp/>&gt;&gt;<sp/>16))<sp/>-</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((((q31_t)x<sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>&gt;&gt;<sp/>16)<sp/>*<sp/>(((q31_t)y<sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>&gt;&gt;<sp/>16))<sp/><sp/><sp/>));</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"></highlight></codeline>
<codeline lineno="1012"><highlight class="normal"></highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1014"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@brief<sp/>C<sp/>custom<sp/>defined<sp/>SXTB16<sp/>for<sp/>M3<sp/>and<sp/>M0<sp/>processors</highlight></codeline>
<codeline lineno="1015"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>__INLINE<sp/>uint32_t<sp/>__SXTB16(</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/>uint32_t<sp/>x)</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((uint32_t)(((((q31_t)x<sp/>&lt;&lt;<sp/>24)<sp/>&gt;&gt;<sp/>24)<sp/>&amp;<sp/>(q31_t)0x0000FFFF)<sp/>|</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((((q31_t)x<sp/>&lt;&lt;<sp/><sp/>8)<sp/>&gt;&gt;<sp/><sp/>8)<sp/>&amp;<sp/>(q31_t)0xFFFF0000)<sp/><sp/>));</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"></highlight></codeline>
<codeline lineno="1023"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>defined<sp/>(ARM_MATH_CM3)<sp/>||<sp/>defined<sp/>(ARM_MATH_CM0_FAMILY)<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1024"><highlight class="normal"></highlight></codeline>
<codeline lineno="1025"><highlight class="normal"></highlight></codeline>
<codeline lineno="1029" refid="structarm__fir__instance__q7" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1031" refid="structarm__fir__instance__q7_1a9b50840e2c5ef5b17e1a584fb4cf0d06" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structarm__fir__instance__q7_1a9b50840e2c5ef5b17e1a584fb4cf0d06" kindref="member">numTaps</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1032" refid="structarm__fir__instance__q7_1aaddea3b9c7e16ddfd9428b7bf9f9c200" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>q7_t<sp/>*<ref refid="structarm__fir__instance__q7_1aaddea3b9c7e16ddfd9428b7bf9f9c200" kindref="member">pState</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1033" refid="structarm__fir__instance__q7_1a0e45aedefc3fffad6cb315c5b6e5bd49" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>q7_t<sp/>*<ref refid="structarm__fir__instance__q7_1a0e45aedefc3fffad6cb315c5b6e5bd49" kindref="member">pCoeffs</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/>}<sp/><ref refid="structarm__fir__instance__q7" kindref="compound">arm_fir_instance_q7</ref>;</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"></highlight></codeline>
<codeline lineno="1039" refid="structarm__fir__instance__q15" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1041" refid="structarm__fir__instance__q15_1a0e46f93cf51bfb18b1be808be9c5bfc9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structarm__fir__instance__q15_1a0e46f93cf51bfb18b1be808be9c5bfc9" kindref="member">numTaps</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1042" refid="structarm__fir__instance__q15_1aa8d25f44f45b6a6c4cf38c31569b8a01" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="structarm__fir__instance__q15_1aa8d25f44f45b6a6c4cf38c31569b8a01" kindref="member">pState</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1043" refid="structarm__fir__instance__q15_1a6d16db16a5f8f0db54938f2967244d9e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="structarm__fir__instance__q15_1a6d16db16a5f8f0db54938f2967244d9e" kindref="member">pCoeffs</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/>}<sp/><ref refid="structarm__fir__instance__q15" kindref="compound">arm_fir_instance_q15</ref>;</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"></highlight></codeline>
<codeline lineno="1049" refid="structarm__fir__instance__q31" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1051" refid="structarm__fir__instance__q31_1a918fadd775b7a0482b21bf34dae2f094" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structarm__fir__instance__q31_1a918fadd775b7a0482b21bf34dae2f094" kindref="member">numTaps</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1052" refid="structarm__fir__instance__q31_1a409f39c93b744784648bdc365541444d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>q31_t<sp/>*<ref refid="structarm__fir__instance__q31_1a409f39c93b744784648bdc365541444d" kindref="member">pState</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1053" refid="structarm__fir__instance__q31_1afaae4c884bdf11a4ec2f3b9bb2bb51d0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>q31_t<sp/>*<ref refid="structarm__fir__instance__q31_1afaae4c884bdf11a4ec2f3b9bb2bb51d0" kindref="member">pCoeffs</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/>}<sp/><ref refid="structarm__fir__instance__q31" kindref="compound">arm_fir_instance_q31</ref>;</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"></highlight></codeline>
<codeline lineno="1059" refid="structarm__fir__instance__f32" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1061" refid="structarm__fir__instance__f32_1a20cf98c92b5323799b7881c9ff4d2f7c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structarm__fir__instance__f32_1a20cf98c92b5323799b7881c9ff4d2f7c" kindref="member">numTaps</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1062" refid="structarm__fir__instance__f32_1a7afcf4022e8560db9b8fd28b0d090a15" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>float32_t<sp/>*<ref refid="structarm__fir__instance__f32_1a7afcf4022e8560db9b8fd28b0d090a15" kindref="member">pState</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1063" refid="structarm__fir__instance__f32_1a1c9cfca901d5902afeb640f2831488f4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>float32_t<sp/>*<ref refid="structarm__fir__instance__f32_1a1c9cfca901d5902afeb640f2831488f4" kindref="member">pCoeffs</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/>}<sp/><ref refid="structarm__fir__instance__f32" kindref="compound">arm_fir_instance_f32</ref>;</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"></highlight></codeline>
<codeline lineno="1066"><highlight class="normal"></highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a31c91a0bf0962327ef8f626fae68ea32" kindref="member">arm_fir_q7</ref>(</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarm__fir__instance__q7" kindref="compound">arm_fir_instance_q7</ref><sp/>*<sp/>S,</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/>q7_t<sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/>q7_t<sp/>*<sp/>pDst,</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize);</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"></highlight></codeline>
<codeline lineno="1080"><highlight class="normal"></highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a88e48688224d42dc173dbcec702f0c1d" kindref="member">arm_fir_init_q7</ref>(</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><ref refid="structarm__fir__instance__q7" kindref="compound">arm_fir_instance_q7</ref><sp/>*<sp/>S,</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/>uint16_t<sp/>numTaps,</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/>q7_t<sp/>*<sp/>pCoeffs,</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/>q7_t<sp/>*<sp/>pState,</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize);</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"></highlight></codeline>
<codeline lineno="1096"><highlight class="normal"></highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a262d173058d6f80fdf60404ba262a8f5" kindref="member">arm_fir_q15</ref>(</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarm__fir__instance__q15" kindref="compound">arm_fir_instance_q15</ref><sp/>*<sp/>S,</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pDst,</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize);</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"></highlight></codeline>
<codeline lineno="1110"><highlight class="normal"></highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1ac7d35e9472e49ccd88800f37f3476bd3" kindref="member">arm_fir_fast_q15</ref>(</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarm__fir__instance__q15" kindref="compound">arm_fir_instance_q15</ref><sp/>*<sp/>S,</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pDst,</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize);</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"></highlight></codeline>
<codeline lineno="1124"><highlight class="normal"></highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6" kindref="member">arm_status</ref><sp/><ref refid="arm__math_8h_1ae2a50f692f41ba57e44ed0719b1368bd" kindref="member">arm_fir_init_q15</ref>(</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><ref refid="structarm__fir__instance__q15" kindref="compound">arm_fir_instance_q15</ref><sp/>*<sp/>S,</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/>uint16_t<sp/>numTaps,</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pCoeffs,</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pState,</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize);</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"></highlight></codeline>
<codeline lineno="1142"><highlight class="normal"></highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1aadd938c68ab08967cbb5fc696f384bb5" kindref="member">arm_fir_q31</ref>(</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarm__fir__instance__q31" kindref="compound">arm_fir_instance_q31</ref><sp/>*<sp/>S,</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pDst,</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize);</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"></highlight></codeline>
<codeline lineno="1156"><highlight class="normal"></highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a55aa292e057b43c376428ea1d9a938cc" kindref="member">arm_fir_fast_q31</ref>(</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarm__fir__instance__q31" kindref="compound">arm_fir_instance_q31</ref><sp/>*<sp/>S,</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pDst,</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize);</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"></highlight></codeline>
<codeline lineno="1170"><highlight class="normal"></highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1ac00d53af87684cbbe135767b55e748a5" kindref="member">arm_fir_init_q31</ref>(</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><ref refid="structarm__fir__instance__q31" kindref="compound">arm_fir_instance_q31</ref><sp/>*<sp/>S,</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/>uint16_t<sp/>numTaps,</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pCoeffs,</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pState,</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize);</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"></highlight></codeline>
<codeline lineno="1186"><highlight class="normal"></highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1ae8fb334ea67eb6ecbd31824ddc14cd6a" kindref="member">arm_fir_f32</ref>(</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarm__fir__instance__f32" kindref="compound">arm_fir_instance_f32</ref><sp/>*<sp/>S,</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pDst,</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize);</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"></highlight></codeline>
<codeline lineno="1200"><highlight class="normal"></highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a98d13def6427e29522829f945d0967db" kindref="member">arm_fir_init_f32</ref>(</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><ref refid="structarm__fir__instance__f32" kindref="compound">arm_fir_instance_f32</ref><sp/>*<sp/>S,</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/>uint16_t<sp/>numTaps,</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pCoeffs,</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pState,</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize);</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"></highlight></codeline>
<codeline lineno="1216"><highlight class="normal"></highlight></codeline>
<codeline lineno="1220" refid="structarm__biquad__casd__df1__inst__q15" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1222" refid="structarm__biquad__casd__df1__inst__q15_1ad6d95e70abcf4ff1300181415ad92153" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>int8_t<sp/><ref refid="structarm__biquad__casd__df1__inst__q15_1ad6d95e70abcf4ff1300181415ad92153" kindref="member">numStages</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1223" refid="structarm__biquad__casd__df1__inst__q15_1a5481104ef2f8f81360b80b47d69ae932" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="structarm__biquad__casd__df1__inst__q15_1a5481104ef2f8f81360b80b47d69ae932" kindref="member">pState</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1224" refid="structarm__biquad__casd__df1__inst__q15_1a1edaacdebb5b09d7635bf20c779855fc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="structarm__biquad__casd__df1__inst__q15_1a1edaacdebb5b09d7635bf20c779855fc" kindref="member">pCoeffs</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1225" refid="structarm__biquad__casd__df1__inst__q15_1ada7e9d6269e6ed4eacf8f68729e9832d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>int8_t<sp/><ref refid="structarm__biquad__casd__df1__inst__q15_1ada7e9d6269e6ed4eacf8f68729e9832d" kindref="member">postShift</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/>}<sp/><ref refid="structarm__biquad__casd__df1__inst__q15" kindref="compound">arm_biquad_casd_df1_inst_q15</ref>;</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"></highlight></codeline>
<codeline lineno="1231" refid="structarm__biquad__casd__df1__inst__q31" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1233" refid="structarm__biquad__casd__df1__inst__q31_1a2c2b579f1df1d8273a5d9d945c27e1b2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structarm__biquad__casd__df1__inst__q31_1a2c2b579f1df1d8273a5d9d945c27e1b2" kindref="member">numStages</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1234" refid="structarm__biquad__casd__df1__inst__q31_1a5dcf4727f58eb4e8e8b392508d8657bb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>q31_t<sp/>*<ref refid="structarm__biquad__casd__df1__inst__q31_1a5dcf4727f58eb4e8e8b392508d8657bb" kindref="member">pState</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1235" refid="structarm__biquad__casd__df1__inst__q31_1aa62366c632f3b5305086f841f079dbd2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>q31_t<sp/>*<ref refid="structarm__biquad__casd__df1__inst__q31_1aa62366c632f3b5305086f841f079dbd2" kindref="member">pCoeffs</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1236" refid="structarm__biquad__casd__df1__inst__q31_1a636c7fbe09ec4bef0bc0a4b4e2151cbe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structarm__biquad__casd__df1__inst__q31_1a636c7fbe09ec4bef0bc0a4b4e2151cbe" kindref="member">postShift</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/>}<sp/><ref refid="structarm__biquad__casd__df1__inst__q31" kindref="compound">arm_biquad_casd_df1_inst_q31</ref>;</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"></highlight></codeline>
<codeline lineno="1242" refid="structarm__biquad__casd__df1__inst__f32" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1244" refid="structarm__biquad__casd__df1__inst__f32_1af69820c37a87252c46453e4cfe120585" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structarm__biquad__casd__df1__inst__f32_1af69820c37a87252c46453e4cfe120585" kindref="member">numStages</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1245" refid="structarm__biquad__casd__df1__inst__f32_1a8c245d79e0d8cfabc82409d4b54fb682" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>float32_t<sp/>*<ref refid="structarm__biquad__casd__df1__inst__f32_1a8c245d79e0d8cfabc82409d4b54fb682" kindref="member">pState</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1246" refid="structarm__biquad__casd__df1__inst__f32_1af9df3820576fb921809d1462c9c6d16c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>float32_t<sp/>*<ref refid="structarm__biquad__casd__df1__inst__f32_1af9df3820576fb921809d1462c9c6d16c" kindref="member">pCoeffs</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/>}<sp/><ref refid="structarm__biquad__casd__df1__inst__f32" kindref="compound">arm_biquad_casd_df1_inst_f32</ref>;</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"></highlight></codeline>
<codeline lineno="1249"><highlight class="normal"></highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1add66a0aefdc645031d607b0a5b37a942" kindref="member">arm_biquad_cascade_df1_q15</ref>(</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarm__biquad__casd__df1__inst__q15" kindref="compound">arm_biquad_casd_df1_inst_q15</ref><sp/>*<sp/>S,</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pDst,</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize);</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"></highlight></codeline>
<codeline lineno="1263"><highlight class="normal"></highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1ad54c724132f6d742a444eb6df0e9c731" kindref="member">arm_biquad_cascade_df1_init_q15</ref>(</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><ref refid="structarm__biquad__casd__df1__inst__q15" kindref="compound">arm_biquad_casd_df1_inst_q15</ref><sp/>*<sp/>S,</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/>uint8_t<sp/>numStages,</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pCoeffs,</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pState,</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/>int8_t<sp/>postShift);</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"></highlight></codeline>
<codeline lineno="1279"><highlight class="normal"></highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1affb9792c0220882efd4c58f3c6a05fd7" kindref="member">arm_biquad_cascade_df1_fast_q15</ref>(</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarm__biquad__casd__df1__inst__q15" kindref="compound">arm_biquad_casd_df1_inst_q15</ref><sp/>*<sp/>S,</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pDst,</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize);</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"></highlight></codeline>
<codeline lineno="1293"><highlight class="normal"></highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a27b0c54da702713976e5202d20b4473f" kindref="member">arm_biquad_cascade_df1_q31</ref>(</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarm__biquad__casd__df1__inst__q31" kindref="compound">arm_biquad_casd_df1_inst_q31</ref><sp/>*<sp/>S,</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pDst,</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize);</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"></highlight></codeline>
<codeline lineno="1307"><highlight class="normal"></highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a456390f5e448afad3a38bed7d6e380e3" kindref="member">arm_biquad_cascade_df1_fast_q31</ref>(</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarm__biquad__casd__df1__inst__q31" kindref="compound">arm_biquad_casd_df1_inst_q31</ref><sp/>*<sp/>S,</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pDst,</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize);</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"></highlight></codeline>
<codeline lineno="1321"><highlight class="normal"></highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1af42a44f9b16d61e636418c83eefe577b" kindref="member">arm_biquad_cascade_df1_init_q31</ref>(</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><ref refid="structarm__biquad__casd__df1__inst__q31" kindref="compound">arm_biquad_casd_df1_inst_q31</ref><sp/>*<sp/>S,</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/>uint8_t<sp/>numStages,</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pCoeffs,</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pState,</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/>int8_t<sp/>postShift);</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"></highlight></codeline>
<codeline lineno="1337"><highlight class="normal"></highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1aa0dbe330d763e3c1d8030b3ef12d5bdc" kindref="member">arm_biquad_cascade_df1_f32</ref>(</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarm__biquad__casd__df1__inst__f32" kindref="compound">arm_biquad_casd_df1_inst_f32</ref><sp/>*<sp/>S,</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pDst,</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize);</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"></highlight></codeline>
<codeline lineno="1351"><highlight class="normal"></highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a8e73b69a788e681a61bccc8959d823c5" kindref="member">arm_biquad_cascade_df1_init_f32</ref>(</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><ref refid="structarm__biquad__casd__df1__inst__f32" kindref="compound">arm_biquad_casd_df1_inst_f32</ref><sp/>*<sp/>S,</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/>uint8_t<sp/>numStages,</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pCoeffs,</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pState);</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"></highlight></codeline>
<codeline lineno="1365"><highlight class="normal"></highlight></codeline>
<codeline lineno="1369" refid="structarm__matrix__instance__f32" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1371" refid="structarm__matrix__instance__f32_1a23f4e34d70a82c9cad7612add5640b7b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structarm__matrix__instance__f32_1a23f4e34d70a82c9cad7612add5640b7b" kindref="member">numRows</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1372" refid="structarm__matrix__instance__f32_1acdd1fb73734df68b89565c54f1dd8ae2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structarm__matrix__instance__f32_1acdd1fb73734df68b89565c54f1dd8ae2" kindref="member">numCols</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1373" refid="structarm__matrix__instance__f32_1af3917c032600a9dfd5ed4a96f074910a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>float32_t<sp/>*<ref refid="structarm__matrix__instance__f32_1af3917c032600a9dfd5ed4a96f074910a" kindref="member">pData</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/>}<sp/><ref refid="structarm__matrix__instance__f32" kindref="compound">arm_matrix_instance_f32</ref>;</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"></highlight></codeline>
<codeline lineno="1376"><highlight class="normal"></highlight></codeline>
<codeline lineno="1380" refid="structarm__matrix__instance__f64" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1382" refid="structarm__matrix__instance__f64_1a8b44d1e5003345047c4ead9e1593bf22" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structarm__matrix__instance__f64_1a8b44d1e5003345047c4ead9e1593bf22" kindref="member">numRows</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1383" refid="structarm__matrix__instance__f64_1ab0f0399aff3201880e2d8a447de9a7ee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structarm__matrix__instance__f64_1ab0f0399aff3201880e2d8a447de9a7ee" kindref="member">numCols</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1384" refid="structarm__matrix__instance__f64_1a5b2475f8ff1e4818955cdd18bc40a097" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>float64_t<sp/>*<ref refid="structarm__matrix__instance__f64_1a5b2475f8ff1e4818955cdd18bc40a097" kindref="member">pData</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/>}<sp/><ref refid="structarm__matrix__instance__f64" kindref="compound">arm_matrix_instance_f64</ref>;</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"></highlight></codeline>
<codeline lineno="1390" refid="structarm__matrix__instance__q15" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1392" refid="structarm__matrix__instance__q15_1a9bac6ed54be287c4d4f01a1a28be65f5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structarm__matrix__instance__q15_1a9bac6ed54be287c4d4f01a1a28be65f5" kindref="member">numRows</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1393" refid="structarm__matrix__instance__q15_1acbbce67ba058d8e1c867c71d57288c97" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structarm__matrix__instance__q15_1acbbce67ba058d8e1c867c71d57288c97" kindref="member">numCols</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1394" refid="structarm__matrix__instance__q15_1a6da33a5553e634787d0f515cf8d724af" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="structarm__matrix__instance__q15_1a6da33a5553e634787d0f515cf8d724af" kindref="member">pData</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/>}<sp/><ref refid="structarm__matrix__instance__q15" kindref="compound">arm_matrix_instance_q15</ref>;</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"></highlight></codeline>
<codeline lineno="1400" refid="structarm__matrix__instance__q31" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1402" refid="structarm__matrix__instance__q31_1a63bacac158a821c8cfc06088d251598c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structarm__matrix__instance__q31_1a63bacac158a821c8cfc06088d251598c" kindref="member">numRows</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1403" refid="structarm__matrix__instance__q31_1abd161da7614eda927157f18b698074b1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structarm__matrix__instance__q31_1abd161da7614eda927157f18b698074b1" kindref="member">numCols</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1404" refid="structarm__matrix__instance__q31_1a09a64267c0579fef086efc9059741e56" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>q31_t<sp/>*<ref refid="structarm__matrix__instance__q31_1a09a64267c0579fef086efc9059741e56" kindref="member">pData</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/>}<sp/><ref refid="structarm__matrix__instance__q31" kindref="compound">arm_matrix_instance_q31</ref>;</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"></highlight></codeline>
<codeline lineno="1407"><highlight class="normal"></highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6" kindref="member">arm_status</ref><sp/><ref refid="arm__math_8h_1a04bbf64a5f9c9e57dd1efb26a768aba1" kindref="member">arm_mat_add_f32</ref>(</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarm__matrix__instance__f32" kindref="compound">arm_matrix_instance_f32</ref><sp/>*<sp/>pSrcA,</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarm__matrix__instance__f32" kindref="compound">arm_matrix_instance_f32</ref><sp/>*<sp/>pSrcB,</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/><ref refid="structarm__matrix__instance__f32" kindref="compound">arm_matrix_instance_f32</ref><sp/>*<sp/>pDst);</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"></highlight></codeline>
<codeline lineno="1421"><highlight class="normal"></highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6" kindref="member">arm_status</ref><sp/><ref refid="arm__math_8h_1a147e90b7c12a162735ab8824127a33ee" kindref="member">arm_mat_add_q15</ref>(</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarm__matrix__instance__q15" kindref="compound">arm_matrix_instance_q15</ref><sp/>*<sp/>pSrcA,</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarm__matrix__instance__q15" kindref="compound">arm_matrix_instance_q15</ref><sp/>*<sp/>pSrcB,</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><ref refid="structarm__matrix__instance__q15" kindref="compound">arm_matrix_instance_q15</ref><sp/>*<sp/>pDst);</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"></highlight></codeline>
<codeline lineno="1435"><highlight class="normal"></highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6" kindref="member">arm_status</ref><sp/><ref refid="arm__math_8h_1a7d9d7d81a0832a17b831aad1e4a5dc16" kindref="member">arm_mat_add_q31</ref>(</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarm__matrix__instance__q31" kindref="compound">arm_matrix_instance_q31</ref><sp/>*<sp/>pSrcA,</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarm__matrix__instance__q31" kindref="compound">arm_matrix_instance_q31</ref><sp/>*<sp/>pSrcB,</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/><ref refid="structarm__matrix__instance__q31" kindref="compound">arm_matrix_instance_q31</ref><sp/>*<sp/>pDst);</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"></highlight></codeline>
<codeline lineno="1449"><highlight class="normal"></highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/><ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6" kindref="member">arm_status</ref><sp/><ref refid="arm__math_8h_1a1adb839ac84445b8c2f04efa43faef35" kindref="member">arm_mat_cmplx_mult_f32</ref>(</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarm__matrix__instance__f32" kindref="compound">arm_matrix_instance_f32</ref><sp/>*<sp/>pSrcA,</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarm__matrix__instance__f32" kindref="compound">arm_matrix_instance_f32</ref><sp/>*<sp/>pSrcB,</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/><ref refid="structarm__matrix__instance__f32" kindref="compound">arm_matrix_instance_f32</ref><sp/>*<sp/>pDst);</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"></highlight></codeline>
<codeline lineno="1463"><highlight class="normal"></highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/><ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6" kindref="member">arm_status</ref><sp/><ref refid="arm__math_8h_1a63066615e7d6f6a44f4358725092419e" kindref="member">arm_mat_cmplx_mult_q15</ref>(</highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarm__matrix__instance__q15" kindref="compound">arm_matrix_instance_q15</ref><sp/>*<sp/>pSrcA,</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarm__matrix__instance__q15" kindref="compound">arm_matrix_instance_q15</ref><sp/>*<sp/>pSrcB,</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/><ref refid="structarm__matrix__instance__q15" kindref="compound">arm_matrix_instance_q15</ref><sp/>*<sp/>pDst,</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pScratch);</highlight></codeline>
<codeline lineno="1477"><highlight class="normal"></highlight></codeline>
<codeline lineno="1478"><highlight class="normal"></highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/><ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6" kindref="member">arm_status</ref><sp/><ref refid="arm__math_8h_1aaf3c0b171ca8412c77bab9fa90804737" kindref="member">arm_mat_cmplx_mult_q31</ref>(</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarm__matrix__instance__q31" kindref="compound">arm_matrix_instance_q31</ref><sp/>*<sp/>pSrcA,</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarm__matrix__instance__q31" kindref="compound">arm_matrix_instance_q31</ref><sp/>*<sp/>pSrcB,</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/><ref refid="structarm__matrix__instance__q31" kindref="compound">arm_matrix_instance_q31</ref><sp/>*<sp/>pDst);</highlight></codeline>
<codeline lineno="1491"><highlight class="normal"></highlight></codeline>
<codeline lineno="1492"><highlight class="normal"></highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/><ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6" kindref="member">arm_status</ref><sp/><ref refid="arm__math_8h_1ad7dd9f108429da13d3864696ceeec789" kindref="member">arm_mat_trans_f32</ref>(</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarm__matrix__instance__f32" kindref="compound">arm_matrix_instance_f32</ref><sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/><ref refid="structarm__matrix__instance__f32" kindref="compound">arm_matrix_instance_f32</ref><sp/>*<sp/>pDst);</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"></highlight></codeline>
<codeline lineno="1504"><highlight class="normal"></highlight></codeline>
<codeline lineno="1512"><highlight class="normal"><sp/><sp/><ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6" kindref="member">arm_status</ref><sp/><ref refid="arm__math_8h_1a4f4f821cc695fd0ef9061d702e08050a" kindref="member">arm_mat_trans_q15</ref>(</highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarm__matrix__instance__q15" kindref="compound">arm_matrix_instance_q15</ref><sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/><ref refid="structarm__matrix__instance__q15" kindref="compound">arm_matrix_instance_q15</ref><sp/>*<sp/>pDst);</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"></highlight></codeline>
<codeline lineno="1516"><highlight class="normal"></highlight></codeline>
<codeline lineno="1524"><highlight class="normal"><sp/><sp/><ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6" kindref="member">arm_status</ref><sp/><ref refid="arm__math_8h_1a30a4d49489ac67ff98a46b9f58f73bf1" kindref="member">arm_mat_trans_q31</ref>(</highlight></codeline>
<codeline lineno="1525"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarm__matrix__instance__q31" kindref="compound">arm_matrix_instance_q31</ref><sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/><ref refid="structarm__matrix__instance__q31" kindref="compound">arm_matrix_instance_q31</ref><sp/>*<sp/>pDst);</highlight></codeline>
<codeline lineno="1527"><highlight class="normal"></highlight></codeline>
<codeline lineno="1528"><highlight class="normal"></highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/><ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6" kindref="member">arm_status</ref><sp/><ref refid="arm__math_8h_1a917bf0270310c1d3f0eda1fc7c0026a0" kindref="member">arm_mat_mult_f32</ref>(</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarm__matrix__instance__f32" kindref="compound">arm_matrix_instance_f32</ref><sp/>*<sp/>pSrcA,</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarm__matrix__instance__f32" kindref="compound">arm_matrix_instance_f32</ref><sp/>*<sp/>pSrcB,</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/><ref refid="structarm__matrix__instance__f32" kindref="compound">arm_matrix_instance_f32</ref><sp/>*<sp/>pDst);</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"></highlight></codeline>
<codeline lineno="1542"><highlight class="normal"></highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/><ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6" kindref="member">arm_status</ref><sp/><ref refid="arm__math_8h_1a7521d59196189bb6dde26e8cdfb66e21" kindref="member">arm_mat_mult_q15</ref>(</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarm__matrix__instance__q15" kindref="compound">arm_matrix_instance_q15</ref><sp/>*<sp/>pSrcA,</highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarm__matrix__instance__q15" kindref="compound">arm_matrix_instance_q15</ref><sp/>*<sp/>pSrcB,</highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/><ref refid="structarm__matrix__instance__q15" kindref="compound">arm_matrix_instance_q15</ref><sp/>*<sp/>pDst,</highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pState);</highlight></codeline>
<codeline lineno="1557"><highlight class="normal"></highlight></codeline>
<codeline lineno="1558"><highlight class="normal"></highlight></codeline>
<codeline lineno="1568"><highlight class="normal"><sp/><sp/><ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6" kindref="member">arm_status</ref><sp/><ref refid="arm__math_8h_1a08f37d93a5bfef0c5000dc5e0a411f93" kindref="member">arm_mat_mult_fast_q15</ref>(</highlight></codeline>
<codeline lineno="1569"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarm__matrix__instance__q15" kindref="compound">arm_matrix_instance_q15</ref><sp/>*<sp/>pSrcA,</highlight></codeline>
<codeline lineno="1570"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarm__matrix__instance__q15" kindref="compound">arm_matrix_instance_q15</ref><sp/>*<sp/>pSrcB,</highlight></codeline>
<codeline lineno="1571"><highlight class="normal"><sp/><sp/><ref refid="structarm__matrix__instance__q15" kindref="compound">arm_matrix_instance_q15</ref><sp/>*<sp/>pDst,</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pState);</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"></highlight></codeline>
<codeline lineno="1574"><highlight class="normal"></highlight></codeline>
<codeline lineno="1583"><highlight class="normal"><sp/><sp/><ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6" kindref="member">arm_status</ref><sp/><ref refid="arm__math_8h_1a2ec612a8c2c4916477fb9bc1ab548a6e" kindref="member">arm_mat_mult_q31</ref>(</highlight></codeline>
<codeline lineno="1584"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarm__matrix__instance__q31" kindref="compound">arm_matrix_instance_q31</ref><sp/>*<sp/>pSrcA,</highlight></codeline>
<codeline lineno="1585"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarm__matrix__instance__q31" kindref="compound">arm_matrix_instance_q31</ref><sp/>*<sp/>pSrcB,</highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/><ref refid="structarm__matrix__instance__q31" kindref="compound">arm_matrix_instance_q31</ref><sp/>*<sp/>pDst);</highlight></codeline>
<codeline lineno="1587"><highlight class="normal"></highlight></codeline>
<codeline lineno="1588"><highlight class="normal"></highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/><ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6" kindref="member">arm_status</ref><sp/><ref refid="arm__math_8h_1a2785e8c1b785348b0c439b56aaf585a3" kindref="member">arm_mat_mult_fast_q31</ref>(</highlight></codeline>
<codeline lineno="1598"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarm__matrix__instance__q31" kindref="compound">arm_matrix_instance_q31</ref><sp/>*<sp/>pSrcA,</highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarm__matrix__instance__q31" kindref="compound">arm_matrix_instance_q31</ref><sp/>*<sp/>pSrcB,</highlight></codeline>
<codeline lineno="1600"><highlight class="normal"><sp/><sp/><ref refid="structarm__matrix__instance__q31" kindref="compound">arm_matrix_instance_q31</ref><sp/>*<sp/>pDst);</highlight></codeline>
<codeline lineno="1601"><highlight class="normal"></highlight></codeline>
<codeline lineno="1602"><highlight class="normal"></highlight></codeline>
<codeline lineno="1611"><highlight class="normal"><sp/><sp/><ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6" kindref="member">arm_status</ref><sp/><ref refid="arm__math_8h_1ac8b72fb70246ccfee3b372002345732c" kindref="member">arm_mat_sub_f32</ref>(</highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarm__matrix__instance__f32" kindref="compound">arm_matrix_instance_f32</ref><sp/>*<sp/>pSrcA,</highlight></codeline>
<codeline lineno="1613"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarm__matrix__instance__f32" kindref="compound">arm_matrix_instance_f32</ref><sp/>*<sp/>pSrcB,</highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><sp/><sp/><ref refid="structarm__matrix__instance__f32" kindref="compound">arm_matrix_instance_f32</ref><sp/>*<sp/>pDst);</highlight></codeline>
<codeline lineno="1615"><highlight class="normal"></highlight></codeline>
<codeline lineno="1616"><highlight class="normal"></highlight></codeline>
<codeline lineno="1625"><highlight class="normal"><sp/><sp/><ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6" kindref="member">arm_status</ref><sp/><ref refid="arm__math_8h_1af647776a425b7f9dd0aca3e11d81f02f" kindref="member">arm_mat_sub_q15</ref>(</highlight></codeline>
<codeline lineno="1626"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarm__matrix__instance__q15" kindref="compound">arm_matrix_instance_q15</ref><sp/>*<sp/>pSrcA,</highlight></codeline>
<codeline lineno="1627"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarm__matrix__instance__q15" kindref="compound">arm_matrix_instance_q15</ref><sp/>*<sp/>pSrcB,</highlight></codeline>
<codeline lineno="1628"><highlight class="normal"><sp/><sp/><ref refid="structarm__matrix__instance__q15" kindref="compound">arm_matrix_instance_q15</ref><sp/>*<sp/>pDst);</highlight></codeline>
<codeline lineno="1629"><highlight class="normal"></highlight></codeline>
<codeline lineno="1630"><highlight class="normal"></highlight></codeline>
<codeline lineno="1639"><highlight class="normal"><sp/><sp/><ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6" kindref="member">arm_status</ref><sp/><ref refid="arm__math_8h_1a39f42e0e3b7f115fbb909d6ff4e1329d" kindref="member">arm_mat_sub_q31</ref>(</highlight></codeline>
<codeline lineno="1640"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarm__matrix__instance__q31" kindref="compound">arm_matrix_instance_q31</ref><sp/>*<sp/>pSrcA,</highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarm__matrix__instance__q31" kindref="compound">arm_matrix_instance_q31</ref><sp/>*<sp/>pSrcB,</highlight></codeline>
<codeline lineno="1642"><highlight class="normal"><sp/><sp/><ref refid="structarm__matrix__instance__q31" kindref="compound">arm_matrix_instance_q31</ref><sp/>*<sp/>pDst);</highlight></codeline>
<codeline lineno="1643"><highlight class="normal"></highlight></codeline>
<codeline lineno="1644"><highlight class="normal"></highlight></codeline>
<codeline lineno="1653"><highlight class="normal"><sp/><sp/><ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6" kindref="member">arm_status</ref><sp/><ref refid="arm__math_8h_1a9cb4e385b18c9a0b9cbc940c1067ca12" kindref="member">arm_mat_scale_f32</ref>(</highlight></codeline>
<codeline lineno="1654"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarm__matrix__instance__f32" kindref="compound">arm_matrix_instance_f32</ref><sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="1655"><highlight class="normal"><sp/><sp/>float32_t<sp/>scale,</highlight></codeline>
<codeline lineno="1656"><highlight class="normal"><sp/><sp/><ref refid="structarm__matrix__instance__f32" kindref="compound">arm_matrix_instance_f32</ref><sp/>*<sp/>pDst);</highlight></codeline>
<codeline lineno="1657"><highlight class="normal"></highlight></codeline>
<codeline lineno="1658"><highlight class="normal"></highlight></codeline>
<codeline lineno="1668"><highlight class="normal"><sp/><sp/><ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6" kindref="member">arm_status</ref><sp/><ref refid="arm__math_8h_1a7521769e2cf1c3d9c4656138cd2ae2ca" kindref="member">arm_mat_scale_q15</ref>(</highlight></codeline>
<codeline lineno="1669"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarm__matrix__instance__q15" kindref="compound">arm_matrix_instance_q15</ref><sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="1670"><highlight class="normal"><sp/><sp/>q15_t<sp/>scaleFract,</highlight></codeline>
<codeline lineno="1671"><highlight class="normal"><sp/><sp/>int32_t<sp/>shift,</highlight></codeline>
<codeline lineno="1672"><highlight class="normal"><sp/><sp/><ref refid="structarm__matrix__instance__q15" kindref="compound">arm_matrix_instance_q15</ref><sp/>*<sp/>pDst);</highlight></codeline>
<codeline lineno="1673"><highlight class="normal"></highlight></codeline>
<codeline lineno="1674"><highlight class="normal"></highlight></codeline>
<codeline lineno="1684"><highlight class="normal"><sp/><sp/><ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6" kindref="member">arm_status</ref><sp/><ref refid="arm__math_8h_1a609743821ee81fa8c34c4bcdc1ed9744" kindref="member">arm_mat_scale_q31</ref>(</highlight></codeline>
<codeline lineno="1685"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarm__matrix__instance__q31" kindref="compound">arm_matrix_instance_q31</ref><sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="1686"><highlight class="normal"><sp/><sp/>q31_t<sp/>scaleFract,</highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/>int32_t<sp/>shift,</highlight></codeline>
<codeline lineno="1688"><highlight class="normal"><sp/><sp/><ref refid="structarm__matrix__instance__q31" kindref="compound">arm_matrix_instance_q31</ref><sp/>*<sp/>pDst);</highlight></codeline>
<codeline lineno="1689"><highlight class="normal"></highlight></codeline>
<codeline lineno="1690"><highlight class="normal"></highlight></codeline>
<codeline lineno="1698"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a48a5e5d37e1f062cc57fcfaf683343cc" kindref="member">arm_mat_init_q31</ref>(</highlight></codeline>
<codeline lineno="1699"><highlight class="normal"><sp/><sp/><ref refid="structarm__matrix__instance__q31" kindref="compound">arm_matrix_instance_q31</ref><sp/>*<sp/>S,</highlight></codeline>
<codeline lineno="1700"><highlight class="normal"><sp/><sp/>uint16_t<sp/>nRows,</highlight></codeline>
<codeline lineno="1701"><highlight class="normal"><sp/><sp/>uint16_t<sp/>nColumns,</highlight></codeline>
<codeline lineno="1702"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pData);</highlight></codeline>
<codeline lineno="1703"><highlight class="normal"></highlight></codeline>
<codeline lineno="1704"><highlight class="normal"></highlight></codeline>
<codeline lineno="1712"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a31a7c2b991803d49719393eb2d53dc26" kindref="member">arm_mat_init_q15</ref>(</highlight></codeline>
<codeline lineno="1713"><highlight class="normal"><sp/><sp/><ref refid="structarm__matrix__instance__q15" kindref="compound">arm_matrix_instance_q15</ref><sp/>*<sp/>S,</highlight></codeline>
<codeline lineno="1714"><highlight class="normal"><sp/><sp/>uint16_t<sp/>nRows,</highlight></codeline>
<codeline lineno="1715"><highlight class="normal"><sp/><sp/>uint16_t<sp/>nColumns,</highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pData);</highlight></codeline>
<codeline lineno="1717"><highlight class="normal"></highlight></codeline>
<codeline lineno="1718"><highlight class="normal"></highlight></codeline>
<codeline lineno="1726"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a11e3dc41592a6401c13182fef9416a27" kindref="member">arm_mat_init_f32</ref>(</highlight></codeline>
<codeline lineno="1727"><highlight class="normal"><sp/><sp/><ref refid="structarm__matrix__instance__f32" kindref="compound">arm_matrix_instance_f32</ref><sp/>*<sp/>S,</highlight></codeline>
<codeline lineno="1728"><highlight class="normal"><sp/><sp/>uint16_t<sp/>nRows,</highlight></codeline>
<codeline lineno="1729"><highlight class="normal"><sp/><sp/>uint16_t<sp/>nColumns,</highlight></codeline>
<codeline lineno="1730"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pData);</highlight></codeline>
<codeline lineno="1731"><highlight class="normal"></highlight></codeline>
<codeline lineno="1732"><highlight class="normal"></highlight></codeline>
<codeline lineno="1733"><highlight class="normal"></highlight></codeline>
<codeline lineno="1737" refid="structarm__pid__instance__q15" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1738"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1739" refid="structarm__pid__instance__q15_1ad77f3a2823c7f96de42c92a3fbf3246b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>q15_t<sp/><ref refid="structarm__pid__instance__q15_1ad77f3a2823c7f96de42c92a3fbf3246b" kindref="member">A0</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1740"><highlight class="preprocessor">#ifdef<sp/>ARM_MATH_CM0_FAMILY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1741"><highlight class="normal"><sp/><sp/><sp/><sp/>q15_t<sp/>A1;</highlight></codeline>
<codeline lineno="1742"><highlight class="normal"><sp/><sp/><sp/><sp/>q15_t<sp/>A2;</highlight></codeline>
<codeline lineno="1743"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1744" refid="structarm__pid__instance__q15_1a1b8412c517071962a9acfdc6778906ec" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>q31_t<sp/><ref refid="structarm__pid__instance__q15_1a1b8412c517071962a9acfdc6778906ec" kindref="member">A1</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1745"><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1746" refid="structarm__pid__instance__q15_1a4a3f0a878b5b6b055e3478a2f244cd30" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>q15_t<sp/>state[3];<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1747" refid="structarm__pid__instance__q15_1ad228aae24a1b6d855c93a8b9bbc1c4f1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>q15_t<sp/><ref refid="structarm__pid__instance__q15_1ad228aae24a1b6d855c93a8b9bbc1c4f1" kindref="member">Kp</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1748" refid="structarm__pid__instance__q15_1a0dcc19d5c8f7bc401acea9e8318cd777" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>q15_t<sp/><ref refid="structarm__pid__instance__q15_1a0dcc19d5c8f7bc401acea9e8318cd777" kindref="member">Ki</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1749" refid="structarm__pid__instance__q15_1af5d4b53091f19eff7536636b7cc43111" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>q15_t<sp/><ref refid="structarm__pid__instance__q15_1af5d4b53091f19eff7536636b7cc43111" kindref="member">Kd</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1750"><highlight class="normal"><sp/><sp/>}<sp/><ref refid="structarm__pid__instance__q15" kindref="compound">arm_pid_instance_q15</ref>;</highlight></codeline>
<codeline lineno="1751"><highlight class="normal"></highlight></codeline>
<codeline lineno="1755" refid="structarm__pid__instance__q31" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1756"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1757" refid="structarm__pid__instance__q31_1aa5332635ce9c7078cdb4c1ecf442eadd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>q31_t<sp/><ref refid="structarm__pid__instance__q31_1aa5332635ce9c7078cdb4c1ecf442eadd" kindref="member">A0</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1758" refid="structarm__pid__instance__q31_1a2f7492bd6fb92fae5e2de7fbbec39b0e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>q31_t<sp/><ref refid="structarm__pid__instance__q31_1a2f7492bd6fb92fae5e2de7fbbec39b0e" kindref="member">A1</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1759" refid="structarm__pid__instance__q31_1a3e34537c53af4f9ad7bfffa4dff27c82" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>q31_t<sp/><ref refid="structarm__pid__instance__q31_1a3e34537c53af4f9ad7bfffa4dff27c82" kindref="member">A2</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1760" refid="structarm__pid__instance__q31_1a228e4a64da6014844a0a671a1fa391d4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>q31_t<sp/>state[3];<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1761" refid="structarm__pid__instance__q31_1ac2410bf7f856d58dc1d773d4983cac8e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>q31_t<sp/><ref refid="structarm__pid__instance__q31_1ac2410bf7f856d58dc1d773d4983cac8e" kindref="member">Kp</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1762" refid="structarm__pid__instance__q31_1aa861d69fd398f29aa0b4b455a823ed72" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>q31_t<sp/><ref refid="structarm__pid__instance__q31_1aa861d69fd398f29aa0b4b455a823ed72" kindref="member">Ki</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1763" refid="structarm__pid__instance__q31_1aab4ff371d14441df501f1169f71cbd17" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>q31_t<sp/><ref refid="structarm__pid__instance__q31_1aab4ff371d14441df501f1169f71cbd17" kindref="member">Kd</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1764"><highlight class="normal"><sp/><sp/>}<sp/><ref refid="structarm__pid__instance__q31" kindref="compound">arm_pid_instance_q31</ref>;</highlight></codeline>
<codeline lineno="1765"><highlight class="normal"></highlight></codeline>
<codeline lineno="1769" refid="structarm__pid__instance__f32" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1770"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1771" refid="structarm__pid__instance__f32_1ad7b0bed64915d0a25a3409fa2dc45556" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>float32_t<sp/><ref refid="structarm__pid__instance__f32_1ad7b0bed64915d0a25a3409fa2dc45556" kindref="member">A0</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1772" refid="structarm__pid__instance__f32_1a7def89571c50f7137a213326a396e560" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>float32_t<sp/><ref refid="structarm__pid__instance__f32_1a7def89571c50f7137a213326a396e560" kindref="member">A1</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1773" refid="structarm__pid__instance__f32_1a155acf642ba2f521869f19d694cd7fa0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>float32_t<sp/><ref refid="structarm__pid__instance__f32_1a155acf642ba2f521869f19d694cd7fa0" kindref="member">A2</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1774" refid="structarm__pid__instance__f32_1afd394e1e52fb1d526aa472c83b8f2464" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>float32_t<sp/>state[3];<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1775" refid="structarm__pid__instance__f32_1aa9b9aa9e413c6cec376a9dddc9f01ebe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>float32_t<sp/><ref refid="structarm__pid__instance__f32_1aa9b9aa9e413c6cec376a9dddc9f01ebe" kindref="member">Kp</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1776" refid="structarm__pid__instance__f32_1ac0feffde05fe391eeab3bf78e953830a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>float32_t<sp/><ref refid="structarm__pid__instance__f32_1ac0feffde05fe391eeab3bf78e953830a" kindref="member">Ki</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1777" refid="structarm__pid__instance__f32_1ad5b68fbf84d16188ae4747ff91f6f088" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>float32_t<sp/><ref refid="structarm__pid__instance__f32_1ad5b68fbf84d16188ae4747ff91f6f088" kindref="member">Kd</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1778"><highlight class="normal"><sp/><sp/>}<sp/><ref refid="structarm__pid__instance__f32" kindref="compound">arm_pid_instance_f32</ref>;</highlight></codeline>
<codeline lineno="1779"><highlight class="normal"></highlight></codeline>
<codeline lineno="1780"><highlight class="normal"></highlight></codeline>
<codeline lineno="1781"><highlight class="normal"></highlight></codeline>
<codeline lineno="1787"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1ae31536b19b82b93ed184fb1ab73cfcb3" kindref="member">arm_pid_init_f32</ref>(</highlight></codeline>
<codeline lineno="1788"><highlight class="normal"><sp/><sp/><ref refid="structarm__pid__instance__f32" kindref="compound">arm_pid_instance_f32</ref><sp/>*<sp/>S,</highlight></codeline>
<codeline lineno="1789"><highlight class="normal"><sp/><sp/>int32_t<sp/>resetStateFlag);</highlight></codeline>
<codeline lineno="1790"><highlight class="normal"></highlight></codeline>
<codeline lineno="1791"><highlight class="normal"></highlight></codeline>
<codeline lineno="1796"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a9ec860bcb6f8ca31205bf0f1b51ab723" kindref="member">arm_pid_reset_f32</ref>(</highlight></codeline>
<codeline lineno="1797"><highlight class="normal"><sp/><sp/><ref refid="structarm__pid__instance__f32" kindref="compound">arm_pid_instance_f32</ref><sp/>*<sp/>S);</highlight></codeline>
<codeline lineno="1798"><highlight class="normal"></highlight></codeline>
<codeline lineno="1799"><highlight class="normal"></highlight></codeline>
<codeline lineno="1805"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1ad9d88485234fa9460b1ce9e64989ac86" kindref="member">arm_pid_init_q31</ref>(</highlight></codeline>
<codeline lineno="1806"><highlight class="normal"><sp/><sp/><ref refid="structarm__pid__instance__q31" kindref="compound">arm_pid_instance_q31</ref><sp/>*<sp/>S,</highlight></codeline>
<codeline lineno="1807"><highlight class="normal"><sp/><sp/>int32_t<sp/>resetStateFlag);</highlight></codeline>
<codeline lineno="1808"><highlight class="normal"></highlight></codeline>
<codeline lineno="1809"><highlight class="normal"></highlight></codeline>
<codeline lineno="1815"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1aeecbacd3fb37c608ec25474d3a0dffa9" kindref="member">arm_pid_reset_q31</ref>(</highlight></codeline>
<codeline lineno="1816"><highlight class="normal"><sp/><sp/><ref refid="structarm__pid__instance__q31" kindref="compound">arm_pid_instance_q31</ref><sp/>*<sp/>S);</highlight></codeline>
<codeline lineno="1817"><highlight class="normal"></highlight></codeline>
<codeline lineno="1818"><highlight class="normal"></highlight></codeline>
<codeline lineno="1824"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a2cb1e3d3ebb167348fdabec74653d5c3" kindref="member">arm_pid_init_q15</ref>(</highlight></codeline>
<codeline lineno="1825"><highlight class="normal"><sp/><sp/><ref refid="structarm__pid__instance__q15" kindref="compound">arm_pid_instance_q15</ref><sp/>*<sp/>S,</highlight></codeline>
<codeline lineno="1826"><highlight class="normal"><sp/><sp/>int32_t<sp/>resetStateFlag);</highlight></codeline>
<codeline lineno="1827"><highlight class="normal"></highlight></codeline>
<codeline lineno="1828"><highlight class="normal"></highlight></codeline>
<codeline lineno="1833"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a408566dacb4fa6e0458b2c75672e525f" kindref="member">arm_pid_reset_q15</ref>(</highlight></codeline>
<codeline lineno="1834"><highlight class="normal"><sp/><sp/><ref refid="structarm__pid__instance__q15" kindref="compound">arm_pid_instance_q15</ref><sp/>*<sp/>S);</highlight></codeline>
<codeline lineno="1835"><highlight class="normal"></highlight></codeline>
<codeline lineno="1836"><highlight class="normal"></highlight></codeline>
<codeline lineno="1840" refid="structarm__linear__interp__instance__f32" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1841"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1842" refid="structarm__linear__interp__instance__f32_1a95f02a926b16d35359aca5b31e813b11" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structarm__linear__interp__instance__f32_1a95f02a926b16d35359aca5b31e813b11" kindref="member">nValues</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1843" refid="structarm__linear__interp__instance__f32_1a08352dc6ea82fbc0827408e018535481" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>float32_t<sp/><ref refid="structarm__linear__interp__instance__f32_1a08352dc6ea82fbc0827408e018535481" kindref="member">x1</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1844" refid="structarm__linear__interp__instance__f32_1aa8e2d686b5434a406d390b347b183511" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>float32_t<sp/><ref refid="structarm__linear__interp__instance__f32_1aa8e2d686b5434a406d390b347b183511" kindref="member">xSpacing</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1845" refid="structarm__linear__interp__instance__f32_1ab373001f6afad0850359c344a4d7eee4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>float32_t<sp/>*<ref refid="structarm__linear__interp__instance__f32_1ab373001f6afad0850359c344a4d7eee4" kindref="member">pYData</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1846"><highlight class="normal"><sp/><sp/>}<sp/><ref refid="structarm__linear__interp__instance__f32" kindref="compound">arm_linear_interp_instance_f32</ref>;</highlight></codeline>
<codeline lineno="1847"><highlight class="normal"></highlight></codeline>
<codeline lineno="1851" refid="structarm__bilinear__interp__instance__f32" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1852"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1853" refid="structarm__bilinear__interp__instance__f32_1a34f2b17cc57b95011960df9718af6ed6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structarm__bilinear__interp__instance__f32_1a34f2b17cc57b95011960df9718af6ed6" kindref="member">numRows</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1854" refid="structarm__bilinear__interp__instance__f32_1aede17bebfb1f835b61d71dd813eab3f8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structarm__bilinear__interp__instance__f32_1aede17bebfb1f835b61d71dd813eab3f8" kindref="member">numCols</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1855" refid="structarm__bilinear__interp__instance__f32_1afd1e764591c991c212d56c893efb5ea4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>float32_t<sp/>*<ref refid="structarm__bilinear__interp__instance__f32_1afd1e764591c991c212d56c893efb5ea4" kindref="member">pData</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1856"><highlight class="normal"><sp/><sp/>}<sp/><ref refid="structarm__bilinear__interp__instance__f32" kindref="compound">arm_bilinear_interp_instance_f32</ref>;</highlight></codeline>
<codeline lineno="1857"><highlight class="normal"></highlight></codeline>
<codeline lineno="1861" refid="structarm__bilinear__interp__instance__q31" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1862"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1863" refid="structarm__bilinear__interp__instance__q31_1a2082e3eac56354d75291f03e96ce4aa5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structarm__bilinear__interp__instance__q31_1a2082e3eac56354d75291f03e96ce4aa5" kindref="member">numRows</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1864" refid="structarm__bilinear__interp__instance__q31_1a6c3eff4eb17ff1d43f170efb84713a2d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structarm__bilinear__interp__instance__q31_1a6c3eff4eb17ff1d43f170efb84713a2d" kindref="member">numCols</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1865" refid="structarm__bilinear__interp__instance__q31_1a843eae0c9db5f815e77e1aaf9afea358" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>q31_t<sp/>*<ref refid="structarm__bilinear__interp__instance__q31_1a843eae0c9db5f815e77e1aaf9afea358" kindref="member">pData</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1866"><highlight class="normal"><sp/><sp/>}<sp/><ref refid="structarm__bilinear__interp__instance__q31" kindref="compound">arm_bilinear_interp_instance_q31</ref>;</highlight></codeline>
<codeline lineno="1867"><highlight class="normal"></highlight></codeline>
<codeline lineno="1871" refid="structarm__bilinear__interp__instance__q15" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1872"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1873" refid="structarm__bilinear__interp__instance__q15_1a2130ae30a804995a9f5d0e2189e08565" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structarm__bilinear__interp__instance__q15_1a2130ae30a804995a9f5d0e2189e08565" kindref="member">numRows</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1874" refid="structarm__bilinear__interp__instance__q15_1a7fa8772d01583374ff8ac18205a26a37" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structarm__bilinear__interp__instance__q15_1a7fa8772d01583374ff8ac18205a26a37" kindref="member">numCols</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1875" refid="structarm__bilinear__interp__instance__q15_1a50d75b1316cee3e0dfad6dcc4c9a2954" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="structarm__bilinear__interp__instance__q15_1a50d75b1316cee3e0dfad6dcc4c9a2954" kindref="member">pData</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1876"><highlight class="normal"><sp/><sp/>}<sp/><ref refid="structarm__bilinear__interp__instance__q15" kindref="compound">arm_bilinear_interp_instance_q15</ref>;</highlight></codeline>
<codeline lineno="1877"><highlight class="normal"></highlight></codeline>
<codeline lineno="1881" refid="structarm__bilinear__interp__instance__q7" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1882"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1883" refid="structarm__bilinear__interp__instance__q7_1ad5a8067cab5f9ea4688b11a623e16607" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structarm__bilinear__interp__instance__q7_1ad5a8067cab5f9ea4688b11a623e16607" kindref="member">numRows</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1884" refid="structarm__bilinear__interp__instance__q7_1a860dd0d24380ea06cfbb348fb3b12c9a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structarm__bilinear__interp__instance__q7_1a860dd0d24380ea06cfbb348fb3b12c9a" kindref="member">numCols</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1885" refid="structarm__bilinear__interp__instance__q7_1af05194d691bbefb02c34bafb22ca9ef0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>q7_t<sp/>*<ref refid="structarm__bilinear__interp__instance__q7_1af05194d691bbefb02c34bafb22ca9ef0" kindref="member">pData</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1886"><highlight class="normal"><sp/><sp/>}<sp/><ref refid="structarm__bilinear__interp__instance__q7" kindref="compound">arm_bilinear_interp_instance_q7</ref>;</highlight></codeline>
<codeline lineno="1887"><highlight class="normal"></highlight></codeline>
<codeline lineno="1888"><highlight class="normal"></highlight></codeline>
<codeline lineno="1896"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a16677275ed83ff0878da531e875c27ef" kindref="member">arm_mult_q7</ref>(</highlight></codeline>
<codeline lineno="1897"><highlight class="normal"><sp/><sp/>q7_t<sp/>*<sp/>pSrcA,</highlight></codeline>
<codeline lineno="1898"><highlight class="normal"><sp/><sp/>q7_t<sp/>*<sp/>pSrcB,</highlight></codeline>
<codeline lineno="1899"><highlight class="normal"><sp/><sp/>q7_t<sp/>*<sp/>pDst,</highlight></codeline>
<codeline lineno="1900"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize);</highlight></codeline>
<codeline lineno="1901"><highlight class="normal"></highlight></codeline>
<codeline lineno="1902"><highlight class="normal"></highlight></codeline>
<codeline lineno="1910"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1afb0778d27ed98a2a6f2ecb7d48cc8c75" kindref="member">arm_mult_q15</ref>(</highlight></codeline>
<codeline lineno="1911"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pSrcA,</highlight></codeline>
<codeline lineno="1912"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pSrcB,</highlight></codeline>
<codeline lineno="1913"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pDst,</highlight></codeline>
<codeline lineno="1914"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize);</highlight></codeline>
<codeline lineno="1915"><highlight class="normal"></highlight></codeline>
<codeline lineno="1916"><highlight class="normal"></highlight></codeline>
<codeline lineno="1924"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a3528c0f54a0607acc603f0490d3ca6c6" kindref="member">arm_mult_q31</ref>(</highlight></codeline>
<codeline lineno="1925"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pSrcA,</highlight></codeline>
<codeline lineno="1926"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pSrcB,</highlight></codeline>
<codeline lineno="1927"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pDst,</highlight></codeline>
<codeline lineno="1928"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize);</highlight></codeline>
<codeline lineno="1929"><highlight class="normal"></highlight></codeline>
<codeline lineno="1930"><highlight class="normal"></highlight></codeline>
<codeline lineno="1938"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1aca3f0b8227da431ab29225b88888aa32" kindref="member">arm_mult_f32</ref>(</highlight></codeline>
<codeline lineno="1939"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pSrcA,</highlight></codeline>
<codeline lineno="1940"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pSrcB,</highlight></codeline>
<codeline lineno="1941"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pDst,</highlight></codeline>
<codeline lineno="1942"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize);</highlight></codeline>
<codeline lineno="1943"><highlight class="normal"></highlight></codeline>
<codeline lineno="1944"><highlight class="normal"></highlight></codeline>
<codeline lineno="1948" refid="structarm__cfft__radix2__instance__q15" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1949"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1950" refid="structarm__cfft__radix2__instance__q15_1a874085647351dcf3f0de39d2b1d49744" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structarm__cfft__radix2__instance__q15_1a874085647351dcf3f0de39d2b1d49744" kindref="member">fftLen</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1951" refid="structarm__cfft__radix2__instance__q15_1ab5c073286bdd2f6e2bf783ced36bf1de" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structarm__cfft__radix2__instance__q15_1ab5c073286bdd2f6e2bf783ced36bf1de" kindref="member">ifftFlag</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1952" refid="structarm__cfft__radix2__instance__q15_1af8300c1f60caa21e6b44b9240ab5af19" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structarm__cfft__radix2__instance__q15_1af8300c1f60caa21e6b44b9240ab5af19" kindref="member">bitReverseFlag</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1953" refid="structarm__cfft__radix2__instance__q15_1a3809dd15e7cbf1a054c728cfbbb0cc5a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="structarm__cfft__radix2__instance__q15_1a3809dd15e7cbf1a054c728cfbbb0cc5a" kindref="member">pTwiddle</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1954" refid="structarm__cfft__radix2__instance__q15_1ab88afeff6493be3c8b5e4530efa82d51" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>*<ref refid="structarm__cfft__radix2__instance__q15_1ab88afeff6493be3c8b5e4530efa82d51" kindref="member">pBitRevTable</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1955" refid="structarm__cfft__radix2__instance__q15_1a6f2ab87fb4c568656e1f92f687b5c850" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structarm__cfft__radix2__instance__q15_1a6f2ab87fb4c568656e1f92f687b5c850" kindref="member">twidCoefModifier</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1956" refid="structarm__cfft__radix2__instance__q15_1a8722720c542cabd41df83fe88ef4f4cb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structarm__cfft__radix2__instance__q15_1a8722720c542cabd41df83fe88ef4f4cb" kindref="member">bitRevFactor</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1957"><highlight class="normal"><sp/><sp/>}<sp/><ref refid="structarm__cfft__radix2__instance__q15" kindref="compound">arm_cfft_radix2_instance_q15</ref>;</highlight></codeline>
<codeline lineno="1958"><highlight class="normal"></highlight></codeline>
<codeline lineno="1959"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Deprecated<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1960"><highlight class="normal"><sp/><sp/><ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6" kindref="member">arm_status</ref><sp/><ref refid="arm__math_8h_1a5c5b2127b3c4ea2d03692127f8543858" kindref="member">arm_cfft_radix2_init_q15</ref>(</highlight></codeline>
<codeline lineno="1961"><highlight class="normal"><sp/><sp/><ref refid="structarm__cfft__radix2__instance__q15" kindref="compound">arm_cfft_radix2_instance_q15</ref><sp/>*<sp/>S,</highlight></codeline>
<codeline lineno="1962"><highlight class="normal"><sp/><sp/>uint16_t<sp/>fftLen,</highlight></codeline>
<codeline lineno="1963"><highlight class="normal"><sp/><sp/>uint8_t<sp/>ifftFlag,</highlight></codeline>
<codeline lineno="1964"><highlight class="normal"><sp/><sp/>uint8_t<sp/>bitReverseFlag);</highlight></codeline>
<codeline lineno="1965"><highlight class="normal"></highlight></codeline>
<codeline lineno="1966"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Deprecated<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1967"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a55b424341dc3efd3fa0bcaaff4bdbf40" kindref="member">arm_cfft_radix2_q15</ref>(</highlight></codeline>
<codeline lineno="1968"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarm__cfft__radix2__instance__q15" kindref="compound">arm_cfft_radix2_instance_q15</ref><sp/>*<sp/>S,</highlight></codeline>
<codeline lineno="1969"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pSrc);</highlight></codeline>
<codeline lineno="1970"><highlight class="normal"></highlight></codeline>
<codeline lineno="1971"><highlight class="normal"></highlight></codeline>
<codeline lineno="1975" refid="structarm__cfft__radix4__instance__q15" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1976"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1977" refid="structarm__cfft__radix4__instance__q15_1a5fc543e7d84ca8cb7cf6648970f21ca6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structarm__cfft__radix4__instance__q15_1a5fc543e7d84ca8cb7cf6648970f21ca6" kindref="member">fftLen</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1978" refid="structarm__cfft__radix4__instance__q15_1a2ecff6ea735cb4d22e922d0fd5736655" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structarm__cfft__radix4__instance__q15_1a2ecff6ea735cb4d22e922d0fd5736655" kindref="member">ifftFlag</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1979" refid="structarm__cfft__radix4__instance__q15_1a101e3f7b0bd6b5b14cd5214f23df4133" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structarm__cfft__radix4__instance__q15_1a101e3f7b0bd6b5b14cd5214f23df4133" kindref="member">bitReverseFlag</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1980" refid="structarm__cfft__radix4__instance__q15_1a29dd693537e45421a36891f8439e1fba" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="structarm__cfft__radix4__instance__q15_1a29dd693537e45421a36891f8439e1fba" kindref="member">pTwiddle</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1981" refid="structarm__cfft__radix4__instance__q15_1a4acf704ae0cf30b53bf0fbfae8e34a59" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>*<ref refid="structarm__cfft__radix4__instance__q15_1a4acf704ae0cf30b53bf0fbfae8e34a59" kindref="member">pBitRevTable</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1982" refid="structarm__cfft__radix4__instance__q15_1af32fdc78bcc27ca385f9b76a0a1f71c3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structarm__cfft__radix4__instance__q15_1af32fdc78bcc27ca385f9b76a0a1f71c3" kindref="member">twidCoefModifier</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1983" refid="structarm__cfft__radix4__instance__q15_1a6b010e5f02d1130c621e3d2e26b95df1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structarm__cfft__radix4__instance__q15_1a6b010e5f02d1130c621e3d2e26b95df1" kindref="member">bitRevFactor</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1984"><highlight class="normal"><sp/><sp/>}<sp/><ref refid="structarm__cfft__radix4__instance__q15" kindref="compound">arm_cfft_radix4_instance_q15</ref>;</highlight></codeline>
<codeline lineno="1985"><highlight class="normal"></highlight></codeline>
<codeline lineno="1986"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Deprecated<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1987"><highlight class="normal"><sp/><sp/><ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6" kindref="member">arm_status</ref><sp/><ref refid="arm__math_8h_1a0c2acfda3126c452e75b81669e8ad9ef" kindref="member">arm_cfft_radix4_init_q15</ref>(</highlight></codeline>
<codeline lineno="1988"><highlight class="normal"><sp/><sp/><ref refid="structarm__cfft__radix4__instance__q15" kindref="compound">arm_cfft_radix4_instance_q15</ref><sp/>*<sp/>S,</highlight></codeline>
<codeline lineno="1989"><highlight class="normal"><sp/><sp/>uint16_t<sp/>fftLen,</highlight></codeline>
<codeline lineno="1990"><highlight class="normal"><sp/><sp/>uint8_t<sp/>ifftFlag,</highlight></codeline>
<codeline lineno="1991"><highlight class="normal"><sp/><sp/>uint8_t<sp/>bitReverseFlag);</highlight></codeline>
<codeline lineno="1992"><highlight class="normal"></highlight></codeline>
<codeline lineno="1993"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Deprecated<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1994"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a8d66cdac41b8bf6cefdb895456eee84a" kindref="member">arm_cfft_radix4_q15</ref>(</highlight></codeline>
<codeline lineno="1995"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarm__cfft__radix4__instance__q15" kindref="compound">arm_cfft_radix4_instance_q15</ref><sp/>*<sp/>S,</highlight></codeline>
<codeline lineno="1996"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pSrc);</highlight></codeline>
<codeline lineno="1997"><highlight class="normal"></highlight></codeline>
<codeline lineno="2001" refid="structarm__cfft__radix2__instance__q31" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2002"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2003" refid="structarm__cfft__radix2__instance__q31_1a960199f1373a192366878ef279eab00f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structarm__cfft__radix2__instance__q31_1a960199f1373a192366878ef279eab00f" kindref="member">fftLen</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2004" refid="structarm__cfft__radix2__instance__q31_1a2607378ce64be16698bb8a3b1af8d3c8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structarm__cfft__radix2__instance__q31_1a2607378ce64be16698bb8a3b1af8d3c8" kindref="member">ifftFlag</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2005" refid="structarm__cfft__radix2__instance__q31_1a6239b8d268285334e88c008c07d68616" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structarm__cfft__radix2__instance__q31_1a6239b8d268285334e88c008c07d68616" kindref="member">bitReverseFlag</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2006" refid="structarm__cfft__radix2__instance__q31_1a1d5bbe9a991e133f81652a77a7985d23" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>q31_t<sp/>*<ref refid="structarm__cfft__radix2__instance__q31_1a1d5bbe9a991e133f81652a77a7985d23" kindref="member">pTwiddle</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2007" refid="structarm__cfft__radix2__instance__q31_1ada8e5264f4b22ff4c621817978994674" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>*<ref refid="structarm__cfft__radix2__instance__q31_1ada8e5264f4b22ff4c621817978994674" kindref="member">pBitRevTable</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2008" refid="structarm__cfft__radix2__instance__q31_1ae63ca9193322cd477970c1d2086407d1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structarm__cfft__radix2__instance__q31_1ae63ca9193322cd477970c1d2086407d1" kindref="member">twidCoefModifier</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2009" refid="structarm__cfft__radix2__instance__q31_1a9d17a87263953fe3559a007512c9f3a4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structarm__cfft__radix2__instance__q31_1a9d17a87263953fe3559a007512c9f3a4" kindref="member">bitRevFactor</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2010"><highlight class="normal"><sp/><sp/>}<sp/><ref refid="structarm__cfft__radix2__instance__q31" kindref="compound">arm_cfft_radix2_instance_q31</ref>;</highlight></codeline>
<codeline lineno="2011"><highlight class="normal"></highlight></codeline>
<codeline lineno="2012"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Deprecated<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2013"><highlight class="normal"><sp/><sp/><ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6" kindref="member">arm_status</ref><sp/><ref refid="arm__math_8h_1abec9611e77382f31e152668bf6b4b638" kindref="member">arm_cfft_radix2_init_q31</ref>(</highlight></codeline>
<codeline lineno="2014"><highlight class="normal"><sp/><sp/><ref refid="structarm__cfft__radix2__instance__q31" kindref="compound">arm_cfft_radix2_instance_q31</ref><sp/>*<sp/>S,</highlight></codeline>
<codeline lineno="2015"><highlight class="normal"><sp/><sp/>uint16_t<sp/>fftLen,</highlight></codeline>
<codeline lineno="2016"><highlight class="normal"><sp/><sp/>uint8_t<sp/>ifftFlag,</highlight></codeline>
<codeline lineno="2017"><highlight class="normal"><sp/><sp/>uint8_t<sp/>bitReverseFlag);</highlight></codeline>
<codeline lineno="2018"><highlight class="normal"></highlight></codeline>
<codeline lineno="2019"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Deprecated<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2020"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a6321f703ec87a274aedaab33d3e766b4" kindref="member">arm_cfft_radix2_q31</ref>(</highlight></codeline>
<codeline lineno="2021"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarm__cfft__radix2__instance__q31" kindref="compound">arm_cfft_radix2_instance_q31</ref><sp/>*<sp/>S,</highlight></codeline>
<codeline lineno="2022"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pSrc);</highlight></codeline>
<codeline lineno="2023"><highlight class="normal"></highlight></codeline>
<codeline lineno="2027" refid="structarm__cfft__radix4__instance__q31" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2028"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2029" refid="structarm__cfft__radix4__instance__q31_1ab413d2a5d3f45fa187d93813bf3bf81b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structarm__cfft__radix4__instance__q31_1ab413d2a5d3f45fa187d93813bf3bf81b" kindref="member">fftLen</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2030" refid="structarm__cfft__radix4__instance__q31_1adc0a62ba669ad2282ecbe43d5d96abab" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structarm__cfft__radix4__instance__q31_1adc0a62ba669ad2282ecbe43d5d96abab" kindref="member">ifftFlag</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2031" refid="structarm__cfft__radix4__instance__q31_1a5a7c4f4c7b3fb655cbb2bc11ef160a2a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structarm__cfft__radix4__instance__q31_1a5a7c4f4c7b3fb655cbb2bc11ef160a2a" kindref="member">bitReverseFlag</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2032" refid="structarm__cfft__radix4__instance__q31_1a561c22dee4cbdcfa0fd5f15106ecc306" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>q31_t<sp/>*<ref refid="structarm__cfft__radix4__instance__q31_1a561c22dee4cbdcfa0fd5f15106ecc306" kindref="member">pTwiddle</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2033" refid="structarm__cfft__radix4__instance__q31_1a33a3bc774c97373261699463c05dfe54" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>*<ref refid="structarm__cfft__radix4__instance__q31_1a33a3bc774c97373261699463c05dfe54" kindref="member">pBitRevTable</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2034" refid="structarm__cfft__radix4__instance__q31_1a8cf8187b8232815cf17ee82bf572ecf9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structarm__cfft__radix4__instance__q31_1a8cf8187b8232815cf17ee82bf572ecf9" kindref="member">twidCoefModifier</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2035" refid="structarm__cfft__radix4__instance__q31_1a94d2fead4efa4d5eaae142bbe30b0e15" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structarm__cfft__radix4__instance__q31_1a94d2fead4efa4d5eaae142bbe30b0e15" kindref="member">bitRevFactor</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2036"><highlight class="normal"><sp/><sp/>}<sp/><ref refid="structarm__cfft__radix4__instance__q31" kindref="compound">arm_cfft_radix4_instance_q31</ref>;</highlight></codeline>
<codeline lineno="2037"><highlight class="normal"></highlight></codeline>
<codeline lineno="2038"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Deprecated<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2039"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1afde3ee1f58cf393b45a9073174fff548" kindref="member">arm_cfft_radix4_q31</ref>(</highlight></codeline>
<codeline lineno="2040"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarm__cfft__radix4__instance__q31" kindref="compound">arm_cfft_radix4_instance_q31</ref><sp/>*<sp/>S,</highlight></codeline>
<codeline lineno="2041"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pSrc);</highlight></codeline>
<codeline lineno="2042"><highlight class="normal"></highlight></codeline>
<codeline lineno="2043"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Deprecated<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2044"><highlight class="normal"><sp/><sp/><ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6" kindref="member">arm_status</ref><sp/><ref refid="arm__math_8h_1ad5caaafeec900c8ff72321c01bbd462c" kindref="member">arm_cfft_radix4_init_q31</ref>(</highlight></codeline>
<codeline lineno="2045"><highlight class="normal"><sp/><sp/><ref refid="structarm__cfft__radix4__instance__q31" kindref="compound">arm_cfft_radix4_instance_q31</ref><sp/>*<sp/>S,</highlight></codeline>
<codeline lineno="2046"><highlight class="normal"><sp/><sp/>uint16_t<sp/>fftLen,</highlight></codeline>
<codeline lineno="2047"><highlight class="normal"><sp/><sp/>uint8_t<sp/>ifftFlag,</highlight></codeline>
<codeline lineno="2048"><highlight class="normal"><sp/><sp/>uint8_t<sp/>bitReverseFlag);</highlight></codeline>
<codeline lineno="2049"><highlight class="normal"></highlight></codeline>
<codeline lineno="2053" refid="structarm__cfft__radix2__instance__f32" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2054"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2055" refid="structarm__cfft__radix2__instance__f32_1a2f915a1c29635c1623086aaaa726be8f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structarm__cfft__radix2__instance__f32_1a2f915a1c29635c1623086aaaa726be8f" kindref="member">fftLen</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2056" refid="structarm__cfft__radix2__instance__f32_1a8dbe98d2c924e35e0a3fed2fe948176f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structarm__cfft__radix2__instance__f32_1a8dbe98d2c924e35e0a3fed2fe948176f" kindref="member">ifftFlag</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2057" refid="structarm__cfft__radix2__instance__f32_1af713b4ac5256a19bc965c89fe3005fa3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structarm__cfft__radix2__instance__f32_1af713b4ac5256a19bc965c89fe3005fa3" kindref="member">bitReverseFlag</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2058" refid="structarm__cfft__radix2__instance__f32_1adb0c9d47dbfbd90a6f6ed0a05313a974" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>float32_t<sp/>*<ref refid="structarm__cfft__radix2__instance__f32_1adb0c9d47dbfbd90a6f6ed0a05313a974" kindref="member">pTwiddle</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2059" refid="structarm__cfft__radix2__instance__f32_1a92b8fa0a151cd800436094903a5ca0a4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>*<ref refid="structarm__cfft__radix2__instance__f32_1a92b8fa0a151cd800436094903a5ca0a4" kindref="member">pBitRevTable</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2060" refid="structarm__cfft__radix2__instance__f32_1a411f75b6ed01690293f4f5988030ea42" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structarm__cfft__radix2__instance__f32_1a411f75b6ed01690293f4f5988030ea42" kindref="member">twidCoefModifier</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2061" refid="structarm__cfft__radix2__instance__f32_1ac1688dafa5177f6b1505abbfd0cf8b21" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structarm__cfft__radix2__instance__f32_1ac1688dafa5177f6b1505abbfd0cf8b21" kindref="member">bitRevFactor</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2062" refid="structarm__cfft__radix2__instance__f32_1a1d3d289d47443e597d88a40effd14b8f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>float32_t<sp/><ref refid="structarm__cfft__radix2__instance__f32_1a1d3d289d47443e597d88a40effd14b8f" kindref="member">onebyfftLen</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2063"><highlight class="normal"><sp/><sp/>}<sp/><ref refid="structarm__cfft__radix2__instance__f32" kindref="compound">arm_cfft_radix2_instance_f32</ref>;</highlight></codeline>
<codeline lineno="2064"><highlight class="normal"></highlight></codeline>
<codeline lineno="2065"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Deprecated<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2066"><highlight class="normal"><sp/><sp/><ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6" kindref="member">arm_status</ref><sp/><ref refid="arm__math_8h_1ac9565e6bc7229577ecf5e090313cafd7" kindref="member">arm_cfft_radix2_init_f32</ref>(</highlight></codeline>
<codeline lineno="2067"><highlight class="normal"><sp/><sp/><ref refid="structarm__cfft__radix2__instance__f32" kindref="compound">arm_cfft_radix2_instance_f32</ref><sp/>*<sp/>S,</highlight></codeline>
<codeline lineno="2068"><highlight class="normal"><sp/><sp/>uint16_t<sp/>fftLen,</highlight></codeline>
<codeline lineno="2069"><highlight class="normal"><sp/><sp/>uint8_t<sp/>ifftFlag,</highlight></codeline>
<codeline lineno="2070"><highlight class="normal"><sp/><sp/>uint8_t<sp/>bitReverseFlag);</highlight></codeline>
<codeline lineno="2071"><highlight class="normal"></highlight></codeline>
<codeline lineno="2072"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Deprecated<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2073"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a9fadd650b802f612ae558ddaab789a6d" kindref="member">arm_cfft_radix2_f32</ref>(</highlight></codeline>
<codeline lineno="2074"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarm__cfft__radix2__instance__f32" kindref="compound">arm_cfft_radix2_instance_f32</ref><sp/>*<sp/>S,</highlight></codeline>
<codeline lineno="2075"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pSrc);</highlight></codeline>
<codeline lineno="2076"><highlight class="normal"></highlight></codeline>
<codeline lineno="2080" refid="structarm__cfft__radix4__instance__f32" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2081"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2082" refid="structarm__cfft__radix4__instance__f32_1a7e6a6d290ce158ce9a15a45e364b021a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structarm__cfft__radix4__instance__f32_1a7e6a6d290ce158ce9a15a45e364b021a" kindref="member">fftLen</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2083" refid="structarm__cfft__radix4__instance__f32_1a25d1da64dd6487c291f04d226f9acc66" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structarm__cfft__radix4__instance__f32_1a25d1da64dd6487c291f04d226f9acc66" kindref="member">ifftFlag</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2084" refid="structarm__cfft__radix4__instance__f32_1ac10927a1620195a88649ce63dab66120" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structarm__cfft__radix4__instance__f32_1ac10927a1620195a88649ce63dab66120" kindref="member">bitReverseFlag</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2085" refid="structarm__cfft__radix4__instance__f32_1a14860c7544911702ca1fa0bf78204ef3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>float32_t<sp/>*<ref refid="structarm__cfft__radix4__instance__f32_1a14860c7544911702ca1fa0bf78204ef3" kindref="member">pTwiddle</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2086" refid="structarm__cfft__radix4__instance__f32_1a8da0d2ca69749fde8cbb95caeac6fe6a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>*<ref refid="structarm__cfft__radix4__instance__f32_1a8da0d2ca69749fde8cbb95caeac6fe6a" kindref="member">pBitRevTable</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2087" refid="structarm__cfft__radix4__instance__f32_1abe31ea2157dfa233e389cdfd3b9993ee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structarm__cfft__radix4__instance__f32_1abe31ea2157dfa233e389cdfd3b9993ee" kindref="member">twidCoefModifier</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2088" refid="structarm__cfft__radix4__instance__f32_1acc8cb18a8b901b8321ab9d86491e41a3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structarm__cfft__radix4__instance__f32_1acc8cb18a8b901b8321ab9d86491e41a3" kindref="member">bitRevFactor</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2089" refid="structarm__cfft__radix4__instance__f32_1ab9eed39e40b8d7c16381fbccf84467cd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>float32_t<sp/><ref refid="structarm__cfft__radix4__instance__f32_1ab9eed39e40b8d7c16381fbccf84467cd" kindref="member">onebyfftLen</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2090"><highlight class="normal"><sp/><sp/>}<sp/><ref refid="structarm__cfft__radix4__instance__f32" kindref="compound">arm_cfft_radix4_instance_f32</ref>;</highlight></codeline>
<codeline lineno="2091"><highlight class="normal"></highlight></codeline>
<codeline lineno="2092"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Deprecated<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2093"><highlight class="normal"><sp/><sp/><ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6" kindref="member">arm_status</ref><sp/><ref refid="arm__math_8h_1af336459f684f0b17bfae539ef1b1b78a" kindref="member">arm_cfft_radix4_init_f32</ref>(</highlight></codeline>
<codeline lineno="2094"><highlight class="normal"><sp/><sp/><ref refid="structarm__cfft__radix4__instance__f32" kindref="compound">arm_cfft_radix4_instance_f32</ref><sp/>*<sp/>S,</highlight></codeline>
<codeline lineno="2095"><highlight class="normal"><sp/><sp/>uint16_t<sp/>fftLen,</highlight></codeline>
<codeline lineno="2096"><highlight class="normal"><sp/><sp/>uint8_t<sp/>ifftFlag,</highlight></codeline>
<codeline lineno="2097"><highlight class="normal"><sp/><sp/>uint8_t<sp/>bitReverseFlag);</highlight></codeline>
<codeline lineno="2098"><highlight class="normal"></highlight></codeline>
<codeline lineno="2099"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Deprecated<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a521f670cd9c571bc61aff9bec89f4c26" kindref="member">arm_cfft_radix4_f32</ref>(</highlight></codeline>
<codeline lineno="2101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarm__cfft__radix4__instance__f32" kindref="compound">arm_cfft_radix4_instance_f32</ref><sp/>*<sp/>S,</highlight></codeline>
<codeline lineno="2102"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pSrc);</highlight></codeline>
<codeline lineno="2103"><highlight class="normal"></highlight></codeline>
<codeline lineno="2107" refid="structarm__cfft__instance__q15" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2108"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2109" refid="structarm__cfft__instance__q15_1a5f9e1d3a8c127ee323b5e6929aeb90df" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structarm__cfft__instance__q15_1a5f9e1d3a8c127ee323b5e6929aeb90df" kindref="member">fftLen</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2110" refid="structarm__cfft__instance__q15_1afdaf12ce4687cec021c5ae73d0987a3f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q15_t<sp/>*<ref refid="structarm__cfft__instance__q15_1afdaf12ce4687cec021c5ae73d0987a3f" kindref="member">pTwiddle</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2111" refid="structarm__cfft__instance__q15_1ac9160b80243b99a0b6e2f75ddb5cf0ae" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>*<ref refid="structarm__cfft__instance__q15_1ac9160b80243b99a0b6e2f75ddb5cf0ae" kindref="member">pBitRevTable</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2112" refid="structarm__cfft__instance__q15_1a738907cf34bdbbaf724414ac2decbc3c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structarm__cfft__instance__q15_1a738907cf34bdbbaf724414ac2decbc3c" kindref="member">bitRevLength</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2113"><highlight class="normal"><sp/><sp/>}<sp/><ref refid="structarm__cfft__instance__q15" kindref="compound">arm_cfft_instance_q15</ref>;</highlight></codeline>
<codeline lineno="2114"><highlight class="normal"></highlight></codeline>
<codeline lineno="2115"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a68cdacd2267a2967955e40e6b7ec1229" kindref="member">arm_cfft_q15</ref>(</highlight></codeline>
<codeline lineno="2116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarm__cfft__instance__q15" kindref="compound">arm_cfft_instance_q15</ref><sp/>*<sp/>S,</highlight></codeline>
<codeline lineno="2117"><highlight class="normal"><sp/><sp/><sp/><sp/>q15_t<sp/>*<sp/>p1,</highlight></codeline>
<codeline lineno="2118"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>ifftFlag,</highlight></codeline>
<codeline lineno="2119"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>bitReverseFlag);</highlight></codeline>
<codeline lineno="2120"><highlight class="normal"></highlight></codeline>
<codeline lineno="2124" refid="structarm__cfft__instance__q31" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2125"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2126" refid="structarm__cfft__instance__q31_1a4406f23e8fd0bff8d555225612e2a2a8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structarm__cfft__instance__q31_1a4406f23e8fd0bff8d555225612e2a2a8" kindref="member">fftLen</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2127" refid="structarm__cfft__instance__q31_1af751114feb91de3ace8600e91bdd0872" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q31_t<sp/>*<ref refid="structarm__cfft__instance__q31_1af751114feb91de3ace8600e91bdd0872" kindref="member">pTwiddle</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2128" refid="structarm__cfft__instance__q31_1a8a464461649f023325ced1e10470f5d0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>*<ref refid="structarm__cfft__instance__q31_1a8a464461649f023325ced1e10470f5d0" kindref="member">pBitRevTable</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2129" refid="structarm__cfft__instance__q31_1a2250fa6b8fe73292c5418c50c0549f87" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structarm__cfft__instance__q31_1a2250fa6b8fe73292c5418c50c0549f87" kindref="member">bitRevLength</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2130"><highlight class="normal"><sp/><sp/>}<sp/><ref refid="structarm__cfft__instance__q31" kindref="compound">arm_cfft_instance_q31</ref>;</highlight></codeline>
<codeline lineno="2131"><highlight class="normal"></highlight></codeline>
<codeline lineno="2132"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a5a0008bd997ab6e2e299ef2fb272fb4b" kindref="member">arm_cfft_q31</ref>(</highlight></codeline>
<codeline lineno="2133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarm__cfft__instance__q31" kindref="compound">arm_cfft_instance_q31</ref><sp/>*<sp/>S,</highlight></codeline>
<codeline lineno="2134"><highlight class="normal"><sp/><sp/><sp/><sp/>q31_t<sp/>*<sp/>p1,</highlight></codeline>
<codeline lineno="2135"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>ifftFlag,</highlight></codeline>
<codeline lineno="2136"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>bitReverseFlag);</highlight></codeline>
<codeline lineno="2137"><highlight class="normal"></highlight></codeline>
<codeline lineno="2141" refid="structarm__cfft__instance__f32" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2142"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2143" refid="structarm__cfft__instance__f32_1acd8f9e9540e3dd348212726e5d6aaa95" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structarm__cfft__instance__f32_1acd8f9e9540e3dd348212726e5d6aaa95" kindref="member">fftLen</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2144" refid="structarm__cfft__instance__f32_1a59cc6f753f1498716e1444ac054c06de" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>float32_t<sp/>*<ref refid="structarm__cfft__instance__f32_1a59cc6f753f1498716e1444ac054c06de" kindref="member">pTwiddle</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2145" refid="structarm__cfft__instance__f32_1a21ceaf59a1bb8440af57c28d2dd9bbab" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>*<ref refid="structarm__cfft__instance__f32_1a21ceaf59a1bb8440af57c28d2dd9bbab" kindref="member">pBitRevTable</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2146" refid="structarm__cfft__instance__f32_1a3ba329ed153d182746376208e773d648" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structarm__cfft__instance__f32_1a3ba329ed153d182746376208e773d648" kindref="member">bitRevLength</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2147"><highlight class="normal"><sp/><sp/>}<sp/><ref refid="structarm__cfft__instance__f32" kindref="compound">arm_cfft_instance_f32</ref>;</highlight></codeline>
<codeline lineno="2148"><highlight class="normal"></highlight></codeline>
<codeline lineno="2149"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1ade0f9c4ff157b6b9c72a1eafd86ebf80" kindref="member">arm_cfft_f32</ref>(</highlight></codeline>
<codeline lineno="2150"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarm__cfft__instance__f32" kindref="compound">arm_cfft_instance_f32</ref><sp/>*<sp/>S,</highlight></codeline>
<codeline lineno="2151"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>p1,</highlight></codeline>
<codeline lineno="2152"><highlight class="normal"><sp/><sp/>uint8_t<sp/>ifftFlag,</highlight></codeline>
<codeline lineno="2153"><highlight class="normal"><sp/><sp/>uint8_t<sp/>bitReverseFlag);</highlight></codeline>
<codeline lineno="2154"><highlight class="normal"></highlight></codeline>
<codeline lineno="2158" refid="structarm__rfft__instance__q15" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2159"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2160" refid="structarm__rfft__instance__q15_1aac5cf9e825917cbb14f439e56bb86ab3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structarm__rfft__instance__q15_1aac5cf9e825917cbb14f439e56bb86ab3" kindref="member">fftLenReal</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2161" refid="structarm__rfft__instance__q15_1a8051ffe268c147e431e1bea7bb4c4258" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structarm__rfft__instance__q15_1a8051ffe268c147e431e1bea7bb4c4258" kindref="member">ifftFlagR</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2162" refid="structarm__rfft__instance__q15_1a4c65cd40e0098ec2f5c0dc31488b9bc6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structarm__rfft__instance__q15_1a4c65cd40e0098ec2f5c0dc31488b9bc6" kindref="member">bitReverseFlagR</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2163" refid="structarm__rfft__instance__q15_1afd444d05858c5f419980e94e8240d5c3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structarm__rfft__instance__q15_1afd444d05858c5f419980e94e8240d5c3" kindref="member">twidCoefRModifier</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2164" refid="structarm__rfft__instance__q15_1affbf2de522ac029432d98e8373c0ec53" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="structarm__rfft__instance__q15_1affbf2de522ac029432d98e8373c0ec53" kindref="member">pTwiddleAReal</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2165" refid="structarm__rfft__instance__q15_1a937d815022adc557b435ba8c6cd58b0d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="structarm__rfft__instance__q15_1a937d815022adc557b435ba8c6cd58b0d" kindref="member">pTwiddleBReal</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2166" refid="structarm__rfft__instance__q15_1a4329c15b056444746d37ff082a24d31a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarm__cfft__instance__q15" kindref="compound">arm_cfft_instance_q15</ref><sp/>*<ref refid="structarm__rfft__instance__q15_1a4329c15b056444746d37ff082a24d31a" kindref="member">pCfft</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2167"><highlight class="normal"><sp/><sp/>}<sp/><ref refid="structarm__rfft__instance__q15" kindref="compound">arm_rfft_instance_q15</ref>;</highlight></codeline>
<codeline lineno="2168"><highlight class="normal"></highlight></codeline>
<codeline lineno="2169"><highlight class="normal"><sp/><sp/><ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6" kindref="member">arm_status</ref><sp/><ref refid="arm__math_8h_1a053450cc600a55410ba5b5605e96245d" kindref="member">arm_rfft_init_q15</ref>(</highlight></codeline>
<codeline lineno="2170"><highlight class="normal"><sp/><sp/><ref refid="structarm__rfft__instance__q15" kindref="compound">arm_rfft_instance_q15</ref><sp/>*<sp/>S,</highlight></codeline>
<codeline lineno="2171"><highlight class="normal"><sp/><sp/>uint32_t<sp/>fftLenReal,</highlight></codeline>
<codeline lineno="2172"><highlight class="normal"><sp/><sp/>uint32_t<sp/>ifftFlagR,</highlight></codeline>
<codeline lineno="2173"><highlight class="normal"><sp/><sp/>uint32_t<sp/>bitReverseFlag);</highlight></codeline>
<codeline lineno="2174"><highlight class="normal"></highlight></codeline>
<codeline lineno="2175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a00e615f5db21736ad5b27fb6146f3fc5" kindref="member">arm_rfft_q15</ref>(</highlight></codeline>
<codeline lineno="2176"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarm__rfft__instance__q15" kindref="compound">arm_rfft_instance_q15</ref><sp/>*<sp/>S,</highlight></codeline>
<codeline lineno="2177"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="2178"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pDst);</highlight></codeline>
<codeline lineno="2179"><highlight class="normal"></highlight></codeline>
<codeline lineno="2183" refid="structarm__rfft__instance__q31" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2184"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2185" refid="structarm__rfft__instance__q31_1af777b0cadd5abaf064323692c2e6693b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structarm__rfft__instance__q31_1af777b0cadd5abaf064323692c2e6693b" kindref="member">fftLenReal</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2186" refid="structarm__rfft__instance__q31_1af5c2615e6cde15524df38fa57ea32d94" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structarm__rfft__instance__q31_1af5c2615e6cde15524df38fa57ea32d94" kindref="member">ifftFlagR</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2187" refid="structarm__rfft__instance__q31_1a3cb90cdc928a88b0203917dcb3dc1b71" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structarm__rfft__instance__q31_1a3cb90cdc928a88b0203917dcb3dc1b71" kindref="member">bitReverseFlagR</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2188" refid="structarm__rfft__instance__q31_1a6fc90252b579f7c29e01bd279334fc43" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structarm__rfft__instance__q31_1a6fc90252b579f7c29e01bd279334fc43" kindref="member">twidCoefRModifier</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2189" refid="structarm__rfft__instance__q31_1a2a0c944e66bab92fcbe19d1c29153250" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>q31_t<sp/>*<ref refid="structarm__rfft__instance__q31_1a2a0c944e66bab92fcbe19d1c29153250" kindref="member">pTwiddleAReal</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2190" refid="structarm__rfft__instance__q31_1ae5070be4c2e0327e618f5e1f4c5b9d80" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>q31_t<sp/>*<ref refid="structarm__rfft__instance__q31_1ae5070be4c2e0327e618f5e1f4c5b9d80" kindref="member">pTwiddleBReal</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2191" refid="structarm__rfft__instance__q31_1a8fe10d425b59e096c23aa4bb5caa1974" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarm__cfft__instance__q31" kindref="compound">arm_cfft_instance_q31</ref><sp/>*<ref refid="structarm__rfft__instance__q31_1a8fe10d425b59e096c23aa4bb5caa1974" kindref="member">pCfft</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2192"><highlight class="normal"><sp/><sp/>}<sp/><ref refid="structarm__rfft__instance__q31" kindref="compound">arm_rfft_instance_q31</ref>;</highlight></codeline>
<codeline lineno="2193"><highlight class="normal"></highlight></codeline>
<codeline lineno="2194"><highlight class="normal"><sp/><sp/><ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6" kindref="member">arm_status</ref><sp/><ref refid="arm__math_8h_1a5abde938abbe72e95c5bab080eb33c45" kindref="member">arm_rfft_init_q31</ref>(</highlight></codeline>
<codeline lineno="2195"><highlight class="normal"><sp/><sp/><ref refid="structarm__rfft__instance__q31" kindref="compound">arm_rfft_instance_q31</ref><sp/>*<sp/>S,</highlight></codeline>
<codeline lineno="2196"><highlight class="normal"><sp/><sp/>uint32_t<sp/>fftLenReal,</highlight></codeline>
<codeline lineno="2197"><highlight class="normal"><sp/><sp/>uint32_t<sp/>ifftFlagR,</highlight></codeline>
<codeline lineno="2198"><highlight class="normal"><sp/><sp/>uint32_t<sp/>bitReverseFlag);</highlight></codeline>
<codeline lineno="2199"><highlight class="normal"></highlight></codeline>
<codeline lineno="2200"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1abaeab5646aeea9844e6d42ca8c73fe3a" kindref="member">arm_rfft_q31</ref>(</highlight></codeline>
<codeline lineno="2201"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarm__rfft__instance__q31" kindref="compound">arm_rfft_instance_q31</ref><sp/>*<sp/>S,</highlight></codeline>
<codeline lineno="2202"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="2203"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pDst);</highlight></codeline>
<codeline lineno="2204"><highlight class="normal"></highlight></codeline>
<codeline lineno="2208" refid="structarm__rfft__instance__f32" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2209"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2210" refid="structarm__rfft__instance__f32_1a4219d4669699e4efdcb150ed7a0d9a57" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structarm__rfft__instance__f32_1a4219d4669699e4efdcb150ed7a0d9a57" kindref="member">fftLenReal</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2211" refid="structarm__rfft__instance__f32_1a075076e07ebb8521d8e3b49a31db6c57" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structarm__rfft__instance__f32_1a075076e07ebb8521d8e3b49a31db6c57" kindref="member">fftLenBy2</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2212" refid="structarm__rfft__instance__f32_1a5ee6d10a934ab4b666e0bb286c3d633f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structarm__rfft__instance__f32_1a5ee6d10a934ab4b666e0bb286c3d633f" kindref="member">ifftFlagR</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2213" refid="structarm__rfft__instance__f32_1ac342f3248157cbbd2f04a3c8ec9fc9eb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structarm__rfft__instance__f32_1ac342f3248157cbbd2f04a3c8ec9fc9eb" kindref="member">bitReverseFlagR</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2214" refid="structarm__rfft__instance__f32_1aede85350fb5ae6baa1b3e8bfa15b18d6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structarm__rfft__instance__f32_1aede85350fb5ae6baa1b3e8bfa15b18d6" kindref="member">twidCoefRModifier</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2215" refid="structarm__rfft__instance__f32_1a534cc7e6e9b3e3dd022fad611c762142" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>float32_t<sp/>*<ref refid="structarm__rfft__instance__f32_1a534cc7e6e9b3e3dd022fad611c762142" kindref="member">pTwiddleAReal</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2216" refid="structarm__rfft__instance__f32_1a23543ecfd027fea2477fe1eea23c3c4d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>float32_t<sp/>*<ref refid="structarm__rfft__instance__f32_1a23543ecfd027fea2477fe1eea23c3c4d" kindref="member">pTwiddleBReal</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2217" refid="structarm__rfft__instance__f32_1a9f47ba9f50c81e4445ae3827b981bc05" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structarm__cfft__radix4__instance__f32" kindref="compound">arm_cfft_radix4_instance_f32</ref><sp/>*<ref refid="structarm__rfft__instance__f32_1a9f47ba9f50c81e4445ae3827b981bc05" kindref="member">pCfft</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2218"><highlight class="normal"><sp/><sp/>}<sp/><ref refid="structarm__rfft__instance__f32" kindref="compound">arm_rfft_instance_f32</ref>;</highlight></codeline>
<codeline lineno="2219"><highlight class="normal"></highlight></codeline>
<codeline lineno="2220"><highlight class="normal"><sp/><sp/><ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6" kindref="member">arm_status</ref><sp/><ref refid="arm__math_8h_1a10717ee326bf50832ef1c25b85a23068" kindref="member">arm_rfft_init_f32</ref>(</highlight></codeline>
<codeline lineno="2221"><highlight class="normal"><sp/><sp/><ref refid="structarm__rfft__instance__f32" kindref="compound">arm_rfft_instance_f32</ref><sp/>*<sp/>S,</highlight></codeline>
<codeline lineno="2222"><highlight class="normal"><sp/><sp/><ref refid="structarm__cfft__radix4__instance__f32" kindref="compound">arm_cfft_radix4_instance_f32</ref><sp/>*<sp/>S_CFFT,</highlight></codeline>
<codeline lineno="2223"><highlight class="normal"><sp/><sp/>uint32_t<sp/>fftLenReal,</highlight></codeline>
<codeline lineno="2224"><highlight class="normal"><sp/><sp/>uint32_t<sp/>ifftFlagR,</highlight></codeline>
<codeline lineno="2225"><highlight class="normal"><sp/><sp/>uint32_t<sp/>bitReverseFlag);</highlight></codeline>
<codeline lineno="2226"><highlight class="normal"></highlight></codeline>
<codeline lineno="2227"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a3df1766d230532bc068fc4ed69d0fcdc" kindref="member">arm_rfft_f32</ref>(</highlight></codeline>
<codeline lineno="2228"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarm__rfft__instance__f32" kindref="compound">arm_rfft_instance_f32</ref><sp/>*<sp/>S,</highlight></codeline>
<codeline lineno="2229"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="2230"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pDst);</highlight></codeline>
<codeline lineno="2231"><highlight class="normal"></highlight></codeline>
<codeline lineno="2235" refid="structarm__rfft__fast__instance__f32" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2236"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2237" refid="structarm__rfft__fast__instance__f32_1a37419ababdfb3151b1891ae6bcd21012" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structarm__cfft__instance__f32" kindref="compound">arm_cfft_instance_f32</ref><sp/><ref refid="structarm__rfft__fast__instance__f32_1a37419ababdfb3151b1891ae6bcd21012" kindref="member">Sint</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2238" refid="structarm__rfft__fast__instance__f32_1aef06ab665041ec36f5b25d464f0cab14" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structarm__rfft__fast__instance__f32_1aef06ab665041ec36f5b25d464f0cab14" kindref="member">fftLenRFFT</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2239" refid="structarm__rfft__fast__instance__f32_1a9f30b04f163fabc1b24421d3c323d5fc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>float32_t<sp/>*<sp/><ref refid="structarm__rfft__fast__instance__f32_1a9f30b04f163fabc1b24421d3c323d5fc" kindref="member">pTwiddleRFFT</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2240"><highlight class="normal"><sp/><sp/>}<sp/><ref refid="structarm__rfft__fast__instance__f32" kindref="compound">arm_rfft_fast_instance_f32</ref><sp/>;</highlight></codeline>
<codeline lineno="2241"><highlight class="normal"></highlight></codeline>
<codeline lineno="2242"><highlight class="normal"><ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6" kindref="member">arm_status</ref><sp/><ref refid="arm__math_8h_1ac5fceb172551e7c11eb4d0e17ef15aa3" kindref="member">arm_rfft_fast_init_f32</ref><sp/>(</highlight></codeline>
<codeline lineno="2243"><highlight class="normal"><sp/><sp/><sp/><ref refid="structarm__rfft__fast__instance__f32" kindref="compound">arm_rfft_fast_instance_f32</ref><sp/>*<sp/>S,</highlight></codeline>
<codeline lineno="2244"><highlight class="normal"><sp/><sp/><sp/>uint16_t<sp/>fftLen);</highlight></codeline>
<codeline lineno="2245"><highlight class="normal"></highlight></codeline>
<codeline lineno="2246"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a180d8b764d59cbb85d37a2d5f7cd9799" kindref="member">arm_rfft_fast_f32</ref>(</highlight></codeline>
<codeline lineno="2247"><highlight class="normal"><sp/><sp/><ref refid="structarm__rfft__fast__instance__f32" kindref="compound">arm_rfft_fast_instance_f32</ref><sp/>*<sp/>S,</highlight></codeline>
<codeline lineno="2248"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>p,<sp/>float32_t<sp/>*<sp/>pOut,</highlight></codeline>
<codeline lineno="2249"><highlight class="normal"><sp/><sp/>uint8_t<sp/>ifftFlag);</highlight></codeline>
<codeline lineno="2250"><highlight class="normal"></highlight></codeline>
<codeline lineno="2254" refid="structarm__dct4__instance__f32" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2255"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2256" refid="structarm__dct4__instance__f32_1a262b29a51c371b46efc89120e31ccf37" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structarm__dct4__instance__f32_1a262b29a51c371b46efc89120e31ccf37" kindref="member">N</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2257" refid="structarm__dct4__instance__f32_1adb1ef2739ddbe62e5cdadc47455a4147" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structarm__dct4__instance__f32_1adb1ef2739ddbe62e5cdadc47455a4147" kindref="member">Nby2</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2258" refid="structarm__dct4__instance__f32_1a61ce8c967b2e998a9c0041cca73cdef8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>float32_t<sp/><ref refid="structarm__dct4__instance__f32_1a61ce8c967b2e998a9c0041cca73cdef8" kindref="member">normalize</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2259" refid="structarm__dct4__instance__f32_1ad13544aafad268588c62e3eb35ae662c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>float32_t<sp/>*<ref refid="structarm__dct4__instance__f32_1ad13544aafad268588c62e3eb35ae662c" kindref="member">pTwiddle</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2260" refid="structarm__dct4__instance__f32_1a6da1187e070801e011ce5e0582efa861" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>float32_t<sp/>*<ref refid="structarm__dct4__instance__f32_1a6da1187e070801e011ce5e0582efa861" kindref="member">pCosFactor</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2261" refid="structarm__dct4__instance__f32_1a978f37fc19add31af243ab5c63ae502f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structarm__rfft__instance__f32" kindref="compound">arm_rfft_instance_f32</ref><sp/>*<ref refid="structarm__dct4__instance__f32_1a978f37fc19add31af243ab5c63ae502f" kindref="member">pRfft</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2262" refid="structarm__dct4__instance__f32_1a018f7860b6e070af533fb7d76c7cdc32" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structarm__cfft__radix4__instance__f32" kindref="compound">arm_cfft_radix4_instance_f32</ref><sp/>*<ref refid="structarm__dct4__instance__f32_1a018f7860b6e070af533fb7d76c7cdc32" kindref="member">pCfft</ref>;<sp/></highlight></codeline>
<codeline lineno="2263"><highlight class="normal"><sp/><sp/>}<sp/><ref refid="structarm__dct4__instance__f32" kindref="compound">arm_dct4_instance_f32</ref>;</highlight></codeline>
<codeline lineno="2264"><highlight class="normal"></highlight></codeline>
<codeline lineno="2265"><highlight class="normal"></highlight></codeline>
<codeline lineno="2276"><highlight class="normal"><sp/><sp/><ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6" kindref="member">arm_status</ref><sp/><ref refid="arm__math_8h_1ab094ad3bc6fa1b84e8b12a24e1850a06" kindref="member">arm_dct4_init_f32</ref>(</highlight></codeline>
<codeline lineno="2277"><highlight class="normal"><sp/><sp/><ref refid="structarm__dct4__instance__f32" kindref="compound">arm_dct4_instance_f32</ref><sp/>*<sp/>S,</highlight></codeline>
<codeline lineno="2278"><highlight class="normal"><sp/><sp/><ref refid="structarm__rfft__instance__f32" kindref="compound">arm_rfft_instance_f32</ref><sp/>*<sp/>S_RFFT,</highlight></codeline>
<codeline lineno="2279"><highlight class="normal"><sp/><sp/><ref refid="structarm__cfft__radix4__instance__f32" kindref="compound">arm_cfft_radix4_instance_f32</ref><sp/>*<sp/>S_CFFT,</highlight></codeline>
<codeline lineno="2280"><highlight class="normal"><sp/><sp/>uint16_t<sp/>N,</highlight></codeline>
<codeline lineno="2281"><highlight class="normal"><sp/><sp/>uint16_t<sp/>Nby2,</highlight></codeline>
<codeline lineno="2282"><highlight class="normal"><sp/><sp/>float32_t<sp/>normalize);</highlight></codeline>
<codeline lineno="2283"><highlight class="normal"></highlight></codeline>
<codeline lineno="2284"><highlight class="normal"></highlight></codeline>
<codeline lineno="2291"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1afd538d68886848bc090ec2b0d364cc81" kindref="member">arm_dct4_f32</ref>(</highlight></codeline>
<codeline lineno="2292"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarm__dct4__instance__f32" kindref="compound">arm_dct4_instance_f32</ref><sp/>*<sp/>S,</highlight></codeline>
<codeline lineno="2293"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pState,</highlight></codeline>
<codeline lineno="2294"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pInlineBuffer);</highlight></codeline>
<codeline lineno="2295"><highlight class="normal"></highlight></codeline>
<codeline lineno="2296"><highlight class="normal"></highlight></codeline>
<codeline lineno="2300" refid="structarm__dct4__instance__q31" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2301"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2302" refid="structarm__dct4__instance__q31_1a46a9f136457350676e2bfd3768ff9d6d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structarm__dct4__instance__q31_1a46a9f136457350676e2bfd3768ff9d6d" kindref="member">N</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2303" refid="structarm__dct4__instance__q31_1a32d3268ba4629908dba056599f0a904d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structarm__dct4__instance__q31_1a32d3268ba4629908dba056599f0a904d" kindref="member">Nby2</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2304" refid="structarm__dct4__instance__q31_1ac80ff7b28fca36aeef74dea12e8312dd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>q31_t<sp/><ref refid="structarm__dct4__instance__q31_1ac80ff7b28fca36aeef74dea12e8312dd" kindref="member">normalize</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2305" refid="structarm__dct4__instance__q31_1a7db236e22673146bb1d2c962f0713f08" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>q31_t<sp/>*<ref refid="structarm__dct4__instance__q31_1a7db236e22673146bb1d2c962f0713f08" kindref="member">pTwiddle</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2306" refid="structarm__dct4__instance__q31_1af97204d1838925621fc82021a0c2d6c1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>q31_t<sp/>*<ref refid="structarm__dct4__instance__q31_1af97204d1838925621fc82021a0c2d6c1" kindref="member">pCosFactor</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2307" refid="structarm__dct4__instance__q31_1af1487dab5e7963b85dc0fdc6bf492542" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structarm__rfft__instance__q31" kindref="compound">arm_rfft_instance_q31</ref><sp/>*<ref refid="structarm__dct4__instance__q31_1af1487dab5e7963b85dc0fdc6bf492542" kindref="member">pRfft</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2308" refid="structarm__dct4__instance__q31_1ac96579cfb28d08bb11dd2fe4c6303833" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structarm__cfft__radix4__instance__q31" kindref="compound">arm_cfft_radix4_instance_q31</ref><sp/>*<ref refid="structarm__dct4__instance__q31_1ac96579cfb28d08bb11dd2fe4c6303833" kindref="member">pCfft</ref>;<sp/></highlight></codeline>
<codeline lineno="2309"><highlight class="normal"><sp/><sp/>}<sp/><ref refid="structarm__dct4__instance__q31" kindref="compound">arm_dct4_instance_q31</ref>;</highlight></codeline>
<codeline lineno="2310"><highlight class="normal"></highlight></codeline>
<codeline lineno="2311"><highlight class="normal"></highlight></codeline>
<codeline lineno="2322"><highlight class="normal"><sp/><sp/><ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6" kindref="member">arm_status</ref><sp/><ref refid="arm__math_8h_1a631bb59c7c97c814ff7147ecba6a716a" kindref="member">arm_dct4_init_q31</ref>(</highlight></codeline>
<codeline lineno="2323"><highlight class="normal"><sp/><sp/><ref refid="structarm__dct4__instance__q31" kindref="compound">arm_dct4_instance_q31</ref><sp/>*<sp/>S,</highlight></codeline>
<codeline lineno="2324"><highlight class="normal"><sp/><sp/><ref refid="structarm__rfft__instance__q31" kindref="compound">arm_rfft_instance_q31</ref><sp/>*<sp/>S_RFFT,</highlight></codeline>
<codeline lineno="2325"><highlight class="normal"><sp/><sp/><ref refid="structarm__cfft__radix4__instance__q31" kindref="compound">arm_cfft_radix4_instance_q31</ref><sp/>*<sp/>S_CFFT,</highlight></codeline>
<codeline lineno="2326"><highlight class="normal"><sp/><sp/>uint16_t<sp/>N,</highlight></codeline>
<codeline lineno="2327"><highlight class="normal"><sp/><sp/>uint16_t<sp/>Nby2,</highlight></codeline>
<codeline lineno="2328"><highlight class="normal"><sp/><sp/>q31_t<sp/>normalize);</highlight></codeline>
<codeline lineno="2329"><highlight class="normal"></highlight></codeline>
<codeline lineno="2330"><highlight class="normal"></highlight></codeline>
<codeline lineno="2337"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1ad04d0baab6ed081d8e8afe02538eb80b" kindref="member">arm_dct4_q31</ref>(</highlight></codeline>
<codeline lineno="2338"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarm__dct4__instance__q31" kindref="compound">arm_dct4_instance_q31</ref><sp/>*<sp/>S,</highlight></codeline>
<codeline lineno="2339"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pState,</highlight></codeline>
<codeline lineno="2340"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pInlineBuffer);</highlight></codeline>
<codeline lineno="2341"><highlight class="normal"></highlight></codeline>
<codeline lineno="2342"><highlight class="normal"></highlight></codeline>
<codeline lineno="2346" refid="structarm__dct4__instance__q15" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2347"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2348" refid="structarm__dct4__instance__q15_1a53d24009bb9b2e93d0aa07db7f1a6c25" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structarm__dct4__instance__q15_1a53d24009bb9b2e93d0aa07db7f1a6c25" kindref="member">N</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2349" refid="structarm__dct4__instance__q15_1af43dcbbc2fc661ffbc525afe3dcbd7da" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structarm__dct4__instance__q15_1af43dcbbc2fc661ffbc525afe3dcbd7da" kindref="member">Nby2</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2350" refid="structarm__dct4__instance__q15_1a197098140d68e89a08f7a249003a0b86" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>q15_t<sp/><ref refid="structarm__dct4__instance__q15_1a197098140d68e89a08f7a249003a0b86" kindref="member">normalize</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2351" refid="structarm__dct4__instance__q15_1abc6c847e9f906781e1d5da40e9aafa76" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="structarm__dct4__instance__q15_1abc6c847e9f906781e1d5da40e9aafa76" kindref="member">pTwiddle</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2352" refid="structarm__dct4__instance__q15_1ac76df681b1bd502fb4874c06f055dded" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="structarm__dct4__instance__q15_1ac76df681b1bd502fb4874c06f055dded" kindref="member">pCosFactor</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2353" refid="structarm__dct4__instance__q15_1a11cf95c1cd9dd2dd5e4b81b8f88dc208" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structarm__rfft__instance__q15" kindref="compound">arm_rfft_instance_q15</ref><sp/>*<ref refid="structarm__dct4__instance__q15_1a11cf95c1cd9dd2dd5e4b81b8f88dc208" kindref="member">pRfft</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2354" refid="structarm__dct4__instance__q15_1a7284932ee8c36107c33815eb62eadffc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structarm__cfft__radix4__instance__q15" kindref="compound">arm_cfft_radix4_instance_q15</ref><sp/>*<ref refid="structarm__dct4__instance__q15_1a7284932ee8c36107c33815eb62eadffc" kindref="member">pCfft</ref>;<sp/></highlight></codeline>
<codeline lineno="2355"><highlight class="normal"><sp/><sp/>}<sp/><ref refid="structarm__dct4__instance__q15" kindref="compound">arm_dct4_instance_q15</ref>;</highlight></codeline>
<codeline lineno="2356"><highlight class="normal"></highlight></codeline>
<codeline lineno="2357"><highlight class="normal"></highlight></codeline>
<codeline lineno="2368"><highlight class="normal"><sp/><sp/><ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6" kindref="member">arm_status</ref><sp/><ref refid="arm__math_8h_1a966fd1b66a80873964533703ab5dc054" kindref="member">arm_dct4_init_q15</ref>(</highlight></codeline>
<codeline lineno="2369"><highlight class="normal"><sp/><sp/><ref refid="structarm__dct4__instance__q15" kindref="compound">arm_dct4_instance_q15</ref><sp/>*<sp/>S,</highlight></codeline>
<codeline lineno="2370"><highlight class="normal"><sp/><sp/><ref refid="structarm__rfft__instance__q15" kindref="compound">arm_rfft_instance_q15</ref><sp/>*<sp/>S_RFFT,</highlight></codeline>
<codeline lineno="2371"><highlight class="normal"><sp/><sp/><ref refid="structarm__cfft__radix4__instance__q15" kindref="compound">arm_cfft_radix4_instance_q15</ref><sp/>*<sp/>S_CFFT,</highlight></codeline>
<codeline lineno="2372"><highlight class="normal"><sp/><sp/>uint16_t<sp/>N,</highlight></codeline>
<codeline lineno="2373"><highlight class="normal"><sp/><sp/>uint16_t<sp/>Nby2,</highlight></codeline>
<codeline lineno="2374"><highlight class="normal"><sp/><sp/>q15_t<sp/>normalize);</highlight></codeline>
<codeline lineno="2375"><highlight class="normal"></highlight></codeline>
<codeline lineno="2376"><highlight class="normal"></highlight></codeline>
<codeline lineno="2383"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a114cb9635059f678df291fcc887aaf2b" kindref="member">arm_dct4_q15</ref>(</highlight></codeline>
<codeline lineno="2384"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarm__dct4__instance__q15" kindref="compound">arm_dct4_instance_q15</ref><sp/>*<sp/>S,</highlight></codeline>
<codeline lineno="2385"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pState,</highlight></codeline>
<codeline lineno="2386"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pInlineBuffer);</highlight></codeline>
<codeline lineno="2387"><highlight class="normal"></highlight></codeline>
<codeline lineno="2388"><highlight class="normal"></highlight></codeline>
<codeline lineno="2396"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a6a904a547413b10565dd1d251c6bafbd" kindref="member">arm_add_f32</ref>(</highlight></codeline>
<codeline lineno="2397"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pSrcA,</highlight></codeline>
<codeline lineno="2398"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pSrcB,</highlight></codeline>
<codeline lineno="2399"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pDst,</highlight></codeline>
<codeline lineno="2400"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize);</highlight></codeline>
<codeline lineno="2401"><highlight class="normal"></highlight></codeline>
<codeline lineno="2402"><highlight class="normal"></highlight></codeline>
<codeline lineno="2410"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1aed633f415a7840a66861debca2dfb96b" kindref="member">arm_add_q7</ref>(</highlight></codeline>
<codeline lineno="2411"><highlight class="normal"><sp/><sp/>q7_t<sp/>*<sp/>pSrcA,</highlight></codeline>
<codeline lineno="2412"><highlight class="normal"><sp/><sp/>q7_t<sp/>*<sp/>pSrcB,</highlight></codeline>
<codeline lineno="2413"><highlight class="normal"><sp/><sp/>q7_t<sp/>*<sp/>pDst,</highlight></codeline>
<codeline lineno="2414"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize);</highlight></codeline>
<codeline lineno="2415"><highlight class="normal"></highlight></codeline>
<codeline lineno="2416"><highlight class="normal"></highlight></codeline>
<codeline lineno="2424"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1abb51285a41f511670bbff62fc0e1bf62" kindref="member">arm_add_q15</ref>(</highlight></codeline>
<codeline lineno="2425"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pSrcA,</highlight></codeline>
<codeline lineno="2426"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pSrcB,</highlight></codeline>
<codeline lineno="2427"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pDst,</highlight></codeline>
<codeline lineno="2428"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize);</highlight></codeline>
<codeline lineno="2429"><highlight class="normal"></highlight></codeline>
<codeline lineno="2430"><highlight class="normal"></highlight></codeline>
<codeline lineno="2438"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a24d6c3f7f8b9fae4847c0c3f26a39a3b" kindref="member">arm_add_q31</ref>(</highlight></codeline>
<codeline lineno="2439"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pSrcA,</highlight></codeline>
<codeline lineno="2440"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pSrcB,</highlight></codeline>
<codeline lineno="2441"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pDst,</highlight></codeline>
<codeline lineno="2442"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize);</highlight></codeline>
<codeline lineno="2443"><highlight class="normal"></highlight></codeline>
<codeline lineno="2444"><highlight class="normal"></highlight></codeline>
<codeline lineno="2452"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a7f975a472de286331134227c08aad826" kindref="member">arm_sub_f32</ref>(</highlight></codeline>
<codeline lineno="2453"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pSrcA,</highlight></codeline>
<codeline lineno="2454"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pSrcB,</highlight></codeline>
<codeline lineno="2455"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pDst,</highlight></codeline>
<codeline lineno="2456"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize);</highlight></codeline>
<codeline lineno="2457"><highlight class="normal"></highlight></codeline>
<codeline lineno="2458"><highlight class="normal"></highlight></codeline>
<codeline lineno="2466"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1ab09941de7dfeb247e5c29b406a435fcc" kindref="member">arm_sub_q7</ref>(</highlight></codeline>
<codeline lineno="2467"><highlight class="normal"><sp/><sp/>q7_t<sp/>*<sp/>pSrcA,</highlight></codeline>
<codeline lineno="2468"><highlight class="normal"><sp/><sp/>q7_t<sp/>*<sp/>pSrcB,</highlight></codeline>
<codeline lineno="2469"><highlight class="normal"><sp/><sp/>q7_t<sp/>*<sp/>pDst,</highlight></codeline>
<codeline lineno="2470"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize);</highlight></codeline>
<codeline lineno="2471"><highlight class="normal"></highlight></codeline>
<codeline lineno="2472"><highlight class="normal"></highlight></codeline>
<codeline lineno="2480"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a997a8ee93088d15bda23c325d455b588" kindref="member">arm_sub_q15</ref>(</highlight></codeline>
<codeline lineno="2481"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pSrcA,</highlight></codeline>
<codeline lineno="2482"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pSrcB,</highlight></codeline>
<codeline lineno="2483"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pDst,</highlight></codeline>
<codeline lineno="2484"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize);</highlight></codeline>
<codeline lineno="2485"><highlight class="normal"></highlight></codeline>
<codeline lineno="2486"><highlight class="normal"></highlight></codeline>
<codeline lineno="2494"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a28aa6908d092752144413e21933dc878" kindref="member">arm_sub_q31</ref>(</highlight></codeline>
<codeline lineno="2495"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pSrcA,</highlight></codeline>
<codeline lineno="2496"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pSrcB,</highlight></codeline>
<codeline lineno="2497"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pDst,</highlight></codeline>
<codeline lineno="2498"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize);</highlight></codeline>
<codeline lineno="2499"><highlight class="normal"></highlight></codeline>
<codeline lineno="2500"><highlight class="normal"></highlight></codeline>
<codeline lineno="2508"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a3487af88b112f682ee90589cd419e123" kindref="member">arm_scale_f32</ref>(</highlight></codeline>
<codeline lineno="2509"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="2510"><highlight class="normal"><sp/><sp/>float32_t<sp/>scale,</highlight></codeline>
<codeline lineno="2511"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pDst,</highlight></codeline>
<codeline lineno="2512"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize);</highlight></codeline>
<codeline lineno="2513"><highlight class="normal"></highlight></codeline>
<codeline lineno="2514"><highlight class="normal"></highlight></codeline>
<codeline lineno="2523"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1abc9fd3d37904c58df56492b351d21fb0" kindref="member">arm_scale_q7</ref>(</highlight></codeline>
<codeline lineno="2524"><highlight class="normal"><sp/><sp/>q7_t<sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="2525"><highlight class="normal"><sp/><sp/>q7_t<sp/>scaleFract,</highlight></codeline>
<codeline lineno="2526"><highlight class="normal"><sp/><sp/>int8_t<sp/>shift,</highlight></codeline>
<codeline lineno="2527"><highlight class="normal"><sp/><sp/>q7_t<sp/>*<sp/>pDst,</highlight></codeline>
<codeline lineno="2528"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize);</highlight></codeline>
<codeline lineno="2529"><highlight class="normal"></highlight></codeline>
<codeline lineno="2530"><highlight class="normal"></highlight></codeline>
<codeline lineno="2539"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1afaac0e1927daffeb68a42719b53ea780" kindref="member">arm_scale_q15</ref>(</highlight></codeline>
<codeline lineno="2540"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="2541"><highlight class="normal"><sp/><sp/>q15_t<sp/>scaleFract,</highlight></codeline>
<codeline lineno="2542"><highlight class="normal"><sp/><sp/>int8_t<sp/>shift,</highlight></codeline>
<codeline lineno="2543"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pDst,</highlight></codeline>
<codeline lineno="2544"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize);</highlight></codeline>
<codeline lineno="2545"><highlight class="normal"></highlight></codeline>
<codeline lineno="2546"><highlight class="normal"></highlight></codeline>
<codeline lineno="2555"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a83e36cd82bf51ce35406a199e477d47c" kindref="member">arm_scale_q31</ref>(</highlight></codeline>
<codeline lineno="2556"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="2557"><highlight class="normal"><sp/><sp/>q31_t<sp/>scaleFract,</highlight></codeline>
<codeline lineno="2558"><highlight class="normal"><sp/><sp/>int8_t<sp/>shift,</highlight></codeline>
<codeline lineno="2559"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pDst,</highlight></codeline>
<codeline lineno="2560"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize);</highlight></codeline>
<codeline lineno="2561"><highlight class="normal"></highlight></codeline>
<codeline lineno="2562"><highlight class="normal"></highlight></codeline>
<codeline lineno="2569"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1adc30985e33fbf96802a5a7954dece3b1" kindref="member">arm_abs_q7</ref>(</highlight></codeline>
<codeline lineno="2570"><highlight class="normal"><sp/><sp/>q7_t<sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="2571"><highlight class="normal"><sp/><sp/>q7_t<sp/>*<sp/>pDst,</highlight></codeline>
<codeline lineno="2572"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize);</highlight></codeline>
<codeline lineno="2573"><highlight class="normal"></highlight></codeline>
<codeline lineno="2574"><highlight class="normal"></highlight></codeline>
<codeline lineno="2581"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a421b6275f9d35f50286c0ff3beceff02" kindref="member">arm_abs_f32</ref>(</highlight></codeline>
<codeline lineno="2582"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="2583"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pDst,</highlight></codeline>
<codeline lineno="2584"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize);</highlight></codeline>
<codeline lineno="2585"><highlight class="normal"></highlight></codeline>
<codeline lineno="2586"><highlight class="normal"></highlight></codeline>
<codeline lineno="2593"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a39f92964c9b649ba252e26ebe7b95594" kindref="member">arm_abs_q15</ref>(</highlight></codeline>
<codeline lineno="2594"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="2595"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pDst,</highlight></codeline>
<codeline lineno="2596"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize);</highlight></codeline>
<codeline lineno="2597"><highlight class="normal"></highlight></codeline>
<codeline lineno="2598"><highlight class="normal"></highlight></codeline>
<codeline lineno="2605"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a59eafcdcdb52da60d37f20aec6ff4577" kindref="member">arm_abs_q31</ref>(</highlight></codeline>
<codeline lineno="2606"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="2607"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pDst,</highlight></codeline>
<codeline lineno="2608"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize);</highlight></codeline>
<codeline lineno="2609"><highlight class="normal"></highlight></codeline>
<codeline lineno="2610"><highlight class="normal"></highlight></codeline>
<codeline lineno="2618"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a55418d4362f6ba84c327f9b4f089a8c3" kindref="member">arm_dot_prod_f32</ref>(</highlight></codeline>
<codeline lineno="2619"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pSrcA,</highlight></codeline>
<codeline lineno="2620"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pSrcB,</highlight></codeline>
<codeline lineno="2621"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize,</highlight></codeline>
<codeline lineno="2622"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>result);</highlight></codeline>
<codeline lineno="2623"><highlight class="normal"></highlight></codeline>
<codeline lineno="2624"><highlight class="normal"></highlight></codeline>
<codeline lineno="2632"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a9c3293a50ac7ec8ba928bf8e3aaea6c1" kindref="member">arm_dot_prod_q7</ref>(</highlight></codeline>
<codeline lineno="2633"><highlight class="normal"><sp/><sp/>q7_t<sp/>*<sp/>pSrcA,</highlight></codeline>
<codeline lineno="2634"><highlight class="normal"><sp/><sp/>q7_t<sp/>*<sp/>pSrcB,</highlight></codeline>
<codeline lineno="2635"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize,</highlight></codeline>
<codeline lineno="2636"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>result);</highlight></codeline>
<codeline lineno="2637"><highlight class="normal"></highlight></codeline>
<codeline lineno="2638"><highlight class="normal"></highlight></codeline>
<codeline lineno="2646"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a436d5bed28a4b73b24acbde436a3044b" kindref="member">arm_dot_prod_q15</ref>(</highlight></codeline>
<codeline lineno="2647"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pSrcA,</highlight></codeline>
<codeline lineno="2648"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pSrcB,</highlight></codeline>
<codeline lineno="2649"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize,</highlight></codeline>
<codeline lineno="2650"><highlight class="normal"><sp/><sp/>q63_t<sp/>*<sp/>result);</highlight></codeline>
<codeline lineno="2651"><highlight class="normal"></highlight></codeline>
<codeline lineno="2652"><highlight class="normal"></highlight></codeline>
<codeline lineno="2660"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1ab15d8fa060fc85b4d948d091b7deaa11" kindref="member">arm_dot_prod_q31</ref>(</highlight></codeline>
<codeline lineno="2661"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pSrcA,</highlight></codeline>
<codeline lineno="2662"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pSrcB,</highlight></codeline>
<codeline lineno="2663"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize,</highlight></codeline>
<codeline lineno="2664"><highlight class="normal"><sp/><sp/>q63_t<sp/>*<sp/>result);</highlight></codeline>
<codeline lineno="2665"><highlight class="normal"></highlight></codeline>
<codeline lineno="2666"><highlight class="normal"></highlight></codeline>
<codeline lineno="2674"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a47295d08a685f7de700a48dafb4db6fb" kindref="member">arm_shift_q7</ref>(</highlight></codeline>
<codeline lineno="2675"><highlight class="normal"><sp/><sp/>q7_t<sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="2676"><highlight class="normal"><sp/><sp/>int8_t<sp/>shiftBits,</highlight></codeline>
<codeline lineno="2677"><highlight class="normal"><sp/><sp/>q7_t<sp/>*<sp/>pDst,</highlight></codeline>
<codeline lineno="2678"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize);</highlight></codeline>
<codeline lineno="2679"><highlight class="normal"></highlight></codeline>
<codeline lineno="2680"><highlight class="normal"></highlight></codeline>
<codeline lineno="2688"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1aa1757e53279780107acc92cf100adb61" kindref="member">arm_shift_q15</ref>(</highlight></codeline>
<codeline lineno="2689"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="2690"><highlight class="normal"><sp/><sp/>int8_t<sp/>shiftBits,</highlight></codeline>
<codeline lineno="2691"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pDst,</highlight></codeline>
<codeline lineno="2692"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize);</highlight></codeline>
<codeline lineno="2693"><highlight class="normal"></highlight></codeline>
<codeline lineno="2694"><highlight class="normal"></highlight></codeline>
<codeline lineno="2702"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a387dd8b7b87377378280978f16cdb13d" kindref="member">arm_shift_q31</ref>(</highlight></codeline>
<codeline lineno="2703"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="2704"><highlight class="normal"><sp/><sp/>int8_t<sp/>shiftBits,</highlight></codeline>
<codeline lineno="2705"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pDst,</highlight></codeline>
<codeline lineno="2706"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize);</highlight></codeline>
<codeline lineno="2707"><highlight class="normal"></highlight></codeline>
<codeline lineno="2708"><highlight class="normal"></highlight></codeline>
<codeline lineno="2716"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a989dfae15235799d82f62ef9d356abb4" kindref="member">arm_offset_f32</ref>(</highlight></codeline>
<codeline lineno="2717"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="2718"><highlight class="normal"><sp/><sp/>float32_t<sp/>offset,</highlight></codeline>
<codeline lineno="2719"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pDst,</highlight></codeline>
<codeline lineno="2720"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize);</highlight></codeline>
<codeline lineno="2721"><highlight class="normal"></highlight></codeline>
<codeline lineno="2722"><highlight class="normal"></highlight></codeline>
<codeline lineno="2730"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a00bd9cc17c5bf905e76c91ad50886393" kindref="member">arm_offset_q7</ref>(</highlight></codeline>
<codeline lineno="2731"><highlight class="normal"><sp/><sp/>q7_t<sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="2732"><highlight class="normal"><sp/><sp/>q7_t<sp/>offset,</highlight></codeline>
<codeline lineno="2733"><highlight class="normal"><sp/><sp/>q7_t<sp/>*<sp/>pDst,</highlight></codeline>
<codeline lineno="2734"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize);</highlight></codeline>
<codeline lineno="2735"><highlight class="normal"></highlight></codeline>
<codeline lineno="2736"><highlight class="normal"></highlight></codeline>
<codeline lineno="2744"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1ab4c1d2391b599549e5a06fdfbc2747bf" kindref="member">arm_offset_q15</ref>(</highlight></codeline>
<codeline lineno="2745"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="2746"><highlight class="normal"><sp/><sp/>q15_t<sp/>offset,</highlight></codeline>
<codeline lineno="2747"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pDst,</highlight></codeline>
<codeline lineno="2748"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize);</highlight></codeline>
<codeline lineno="2749"><highlight class="normal"></highlight></codeline>
<codeline lineno="2750"><highlight class="normal"></highlight></codeline>
<codeline lineno="2758"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1ac84ec42cbbebc5c197a87d0221819acf" kindref="member">arm_offset_q31</ref>(</highlight></codeline>
<codeline lineno="2759"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="2760"><highlight class="normal"><sp/><sp/>q31_t<sp/>offset,</highlight></codeline>
<codeline lineno="2761"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pDst,</highlight></codeline>
<codeline lineno="2762"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize);</highlight></codeline>
<codeline lineno="2763"><highlight class="normal"></highlight></codeline>
<codeline lineno="2764"><highlight class="normal"></highlight></codeline>
<codeline lineno="2771"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a2e169c4de6cc6e3ba4be9473531e6657" kindref="member">arm_negate_f32</ref>(</highlight></codeline>
<codeline lineno="2772"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="2773"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pDst,</highlight></codeline>
<codeline lineno="2774"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize);</highlight></codeline>
<codeline lineno="2775"><highlight class="normal"></highlight></codeline>
<codeline lineno="2776"><highlight class="normal"></highlight></codeline>
<codeline lineno="2783"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1aae78fc079a43bdaa3055f9b32e2a1f4c" kindref="member">arm_negate_q7</ref>(</highlight></codeline>
<codeline lineno="2784"><highlight class="normal"><sp/><sp/>q7_t<sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="2785"><highlight class="normal"><sp/><sp/>q7_t<sp/>*<sp/>pDst,</highlight></codeline>
<codeline lineno="2786"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize);</highlight></codeline>
<codeline lineno="2787"><highlight class="normal"></highlight></codeline>
<codeline lineno="2788"><highlight class="normal"></highlight></codeline>
<codeline lineno="2795"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a0239a833d72cf00290b9723c394e5042" kindref="member">arm_negate_q15</ref>(</highlight></codeline>
<codeline lineno="2796"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="2797"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pDst,</highlight></codeline>
<codeline lineno="2798"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize);</highlight></codeline>
<codeline lineno="2799"><highlight class="normal"></highlight></codeline>
<codeline lineno="2800"><highlight class="normal"></highlight></codeline>
<codeline lineno="2807"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a2784c6887686a73dc7c364e2e41c776c" kindref="member">arm_negate_q31</ref>(</highlight></codeline>
<codeline lineno="2808"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="2809"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pDst,</highlight></codeline>
<codeline lineno="2810"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize);</highlight></codeline>
<codeline lineno="2811"><highlight class="normal"></highlight></codeline>
<codeline lineno="2812"><highlight class="normal"></highlight></codeline>
<codeline lineno="2819"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1add1f737e677e0e6ca31767c7001417b3" kindref="member">arm_copy_f32</ref>(</highlight></codeline>
<codeline lineno="2820"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="2821"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pDst,</highlight></codeline>
<codeline lineno="2822"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize);</highlight></codeline>
<codeline lineno="2823"><highlight class="normal"></highlight></codeline>
<codeline lineno="2824"><highlight class="normal"></highlight></codeline>
<codeline lineno="2831"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a467579beda492aa92797529d794c88fb" kindref="member">arm_copy_q7</ref>(</highlight></codeline>
<codeline lineno="2832"><highlight class="normal"><sp/><sp/>q7_t<sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="2833"><highlight class="normal"><sp/><sp/>q7_t<sp/>*<sp/>pDst,</highlight></codeline>
<codeline lineno="2834"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize);</highlight></codeline>
<codeline lineno="2835"><highlight class="normal"></highlight></codeline>
<codeline lineno="2836"><highlight class="normal"></highlight></codeline>
<codeline lineno="2843"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a872ca4cfc18c680b8991ccd569a5fda0" kindref="member">arm_copy_q15</ref>(</highlight></codeline>
<codeline lineno="2844"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="2845"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pDst,</highlight></codeline>
<codeline lineno="2846"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize);</highlight></codeline>
<codeline lineno="2847"><highlight class="normal"></highlight></codeline>
<codeline lineno="2848"><highlight class="normal"></highlight></codeline>
<codeline lineno="2855"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1addf70be7e3f87e535c324862b501f3f9" kindref="member">arm_copy_q31</ref>(</highlight></codeline>
<codeline lineno="2856"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="2857"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pDst,</highlight></codeline>
<codeline lineno="2858"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize);</highlight></codeline>
<codeline lineno="2859"><highlight class="normal"></highlight></codeline>
<codeline lineno="2860"><highlight class="normal"></highlight></codeline>
<codeline lineno="2867"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a2248e8d3901b4afb7827163132baad94" kindref="member">arm_fill_f32</ref>(</highlight></codeline>
<codeline lineno="2868"><highlight class="normal"><sp/><sp/>float32_t<sp/><ref refid="semihosting_8h_1aacce635d68067370c70caa2381ea1040" kindref="member">value</ref>,</highlight></codeline>
<codeline lineno="2869"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pDst,</highlight></codeline>
<codeline lineno="2870"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize);</highlight></codeline>
<codeline lineno="2871"><highlight class="normal"></highlight></codeline>
<codeline lineno="2872"><highlight class="normal"></highlight></codeline>
<codeline lineno="2879"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a0465cf326ada039ed792f94b033d9ec5" kindref="member">arm_fill_q7</ref>(</highlight></codeline>
<codeline lineno="2880"><highlight class="normal"><sp/><sp/>q7_t<sp/><ref refid="semihosting_8h_1aacce635d68067370c70caa2381ea1040" kindref="member">value</ref>,</highlight></codeline>
<codeline lineno="2881"><highlight class="normal"><sp/><sp/>q7_t<sp/>*<sp/>pDst,</highlight></codeline>
<codeline lineno="2882"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize);</highlight></codeline>
<codeline lineno="2883"><highlight class="normal"></highlight></codeline>
<codeline lineno="2884"><highlight class="normal"></highlight></codeline>
<codeline lineno="2891"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a76b21c32a3783a2b3334d930a646e5d8" kindref="member">arm_fill_q15</ref>(</highlight></codeline>
<codeline lineno="2892"><highlight class="normal"><sp/><sp/>q15_t<sp/><ref refid="semihosting_8h_1aacce635d68067370c70caa2381ea1040" kindref="member">value</ref>,</highlight></codeline>
<codeline lineno="2893"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pDst,</highlight></codeline>
<codeline lineno="2894"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize);</highlight></codeline>
<codeline lineno="2895"><highlight class="normal"></highlight></codeline>
<codeline lineno="2896"><highlight class="normal"></highlight></codeline>
<codeline lineno="2903"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a69cc781cf337bd0a31bb85c772a35f7f" kindref="member">arm_fill_q31</ref>(</highlight></codeline>
<codeline lineno="2904"><highlight class="normal"><sp/><sp/>q31_t<sp/><ref refid="semihosting_8h_1aacce635d68067370c70caa2381ea1040" kindref="member">value</ref>,</highlight></codeline>
<codeline lineno="2905"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pDst,</highlight></codeline>
<codeline lineno="2906"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize);</highlight></codeline>
<codeline lineno="2907"><highlight class="normal"></highlight></codeline>
<codeline lineno="2908"><highlight class="normal"></highlight></codeline>
<codeline lineno="2917"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a3f860dc98c6fc4cafc421e4a2aed3c89" kindref="member">arm_conv_f32</ref>(</highlight></codeline>
<codeline lineno="2918"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pSrcA,</highlight></codeline>
<codeline lineno="2919"><highlight class="normal"><sp/><sp/>uint32_t<sp/>srcALen,</highlight></codeline>
<codeline lineno="2920"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pSrcB,</highlight></codeline>
<codeline lineno="2921"><highlight class="normal"><sp/><sp/>uint32_t<sp/>srcBLen,</highlight></codeline>
<codeline lineno="2922"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pDst);</highlight></codeline>
<codeline lineno="2923"><highlight class="normal"></highlight></codeline>
<codeline lineno="2924"><highlight class="normal"></highlight></codeline>
<codeline lineno="2935"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1ac77dbcaef5c754cac27eab96c4753a3c" kindref="member">arm_conv_opt_q15</ref>(</highlight></codeline>
<codeline lineno="2936"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pSrcA,</highlight></codeline>
<codeline lineno="2937"><highlight class="normal"><sp/><sp/>uint32_t<sp/>srcALen,</highlight></codeline>
<codeline lineno="2938"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pSrcB,</highlight></codeline>
<codeline lineno="2939"><highlight class="normal"><sp/><sp/>uint32_t<sp/>srcBLen,</highlight></codeline>
<codeline lineno="2940"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pDst,</highlight></codeline>
<codeline lineno="2941"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pScratch1,</highlight></codeline>
<codeline lineno="2942"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pScratch2);</highlight></codeline>
<codeline lineno="2943"><highlight class="normal"></highlight></codeline>
<codeline lineno="2944"><highlight class="normal"></highlight></codeline>
<codeline lineno="2953"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1accd6a89b0ff7a94df64610598e6e6893" kindref="member">arm_conv_q15</ref>(</highlight></codeline>
<codeline lineno="2954"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pSrcA,</highlight></codeline>
<codeline lineno="2955"><highlight class="normal"><sp/><sp/>uint32_t<sp/>srcALen,</highlight></codeline>
<codeline lineno="2956"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pSrcB,</highlight></codeline>
<codeline lineno="2957"><highlight class="normal"><sp/><sp/>uint32_t<sp/>srcBLen,</highlight></codeline>
<codeline lineno="2958"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pDst);</highlight></codeline>
<codeline lineno="2959"><highlight class="normal"></highlight></codeline>
<codeline lineno="2960"><highlight class="normal"></highlight></codeline>
<codeline lineno="2969"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1ad75ca978ce906e04abdf86a8d76306d4" kindref="member">arm_conv_fast_q15</ref>(</highlight></codeline>
<codeline lineno="2970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<sp/>pSrcA,</highlight></codeline>
<codeline lineno="2971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>srcALen,</highlight></codeline>
<codeline lineno="2972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<sp/>pSrcB,</highlight></codeline>
<codeline lineno="2973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>srcBLen,</highlight></codeline>
<codeline lineno="2974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<sp/>pDst);</highlight></codeline>
<codeline lineno="2975"><highlight class="normal"></highlight></codeline>
<codeline lineno="2976"><highlight class="normal"></highlight></codeline>
<codeline lineno="2987"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1af16f490d245391ec18a42adc73d6d749" kindref="member">arm_conv_fast_opt_q15</ref>(</highlight></codeline>
<codeline lineno="2988"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pSrcA,</highlight></codeline>
<codeline lineno="2989"><highlight class="normal"><sp/><sp/>uint32_t<sp/>srcALen,</highlight></codeline>
<codeline lineno="2990"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pSrcB,</highlight></codeline>
<codeline lineno="2991"><highlight class="normal"><sp/><sp/>uint32_t<sp/>srcBLen,</highlight></codeline>
<codeline lineno="2992"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pDst,</highlight></codeline>
<codeline lineno="2993"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pScratch1,</highlight></codeline>
<codeline lineno="2994"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pScratch2);</highlight></codeline>
<codeline lineno="2995"><highlight class="normal"></highlight></codeline>
<codeline lineno="2996"><highlight class="normal"></highlight></codeline>
<codeline lineno="3005"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a946b58da734f1e4e78c91fcaab4b12b6" kindref="member">arm_conv_q31</ref>(</highlight></codeline>
<codeline lineno="3006"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pSrcA,</highlight></codeline>
<codeline lineno="3007"><highlight class="normal"><sp/><sp/>uint32_t<sp/>srcALen,</highlight></codeline>
<codeline lineno="3008"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pSrcB,</highlight></codeline>
<codeline lineno="3009"><highlight class="normal"><sp/><sp/>uint32_t<sp/>srcBLen,</highlight></codeline>
<codeline lineno="3010"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pDst);</highlight></codeline>
<codeline lineno="3011"><highlight class="normal"></highlight></codeline>
<codeline lineno="3012"><highlight class="normal"></highlight></codeline>
<codeline lineno="3021"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a51112dcdf9b3624eb05182cdc4da9ec0" kindref="member">arm_conv_fast_q31</ref>(</highlight></codeline>
<codeline lineno="3022"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pSrcA,</highlight></codeline>
<codeline lineno="3023"><highlight class="normal"><sp/><sp/>uint32_t<sp/>srcALen,</highlight></codeline>
<codeline lineno="3024"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pSrcB,</highlight></codeline>
<codeline lineno="3025"><highlight class="normal"><sp/><sp/>uint32_t<sp/>srcBLen,</highlight></codeline>
<codeline lineno="3026"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pDst);</highlight></codeline>
<codeline lineno="3027"><highlight class="normal"></highlight></codeline>
<codeline lineno="3028"><highlight class="normal"></highlight></codeline>
<codeline lineno="3039"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a4c7cf073e89d6d57cc4e711f078c3f68" kindref="member">arm_conv_opt_q7</ref>(</highlight></codeline>
<codeline lineno="3040"><highlight class="normal"><sp/><sp/>q7_t<sp/>*<sp/>pSrcA,</highlight></codeline>
<codeline lineno="3041"><highlight class="normal"><sp/><sp/>uint32_t<sp/>srcALen,</highlight></codeline>
<codeline lineno="3042"><highlight class="normal"><sp/><sp/>q7_t<sp/>*<sp/>pSrcB,</highlight></codeline>
<codeline lineno="3043"><highlight class="normal"><sp/><sp/>uint32_t<sp/>srcBLen,</highlight></codeline>
<codeline lineno="3044"><highlight class="normal"><sp/><sp/>q7_t<sp/>*<sp/>pDst,</highlight></codeline>
<codeline lineno="3045"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pScratch1,</highlight></codeline>
<codeline lineno="3046"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pScratch2);</highlight></codeline>
<codeline lineno="3047"><highlight class="normal"></highlight></codeline>
<codeline lineno="3048"><highlight class="normal"></highlight></codeline>
<codeline lineno="3057"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1ae2070cb792a167e78dbad8d06b97cdab" kindref="member">arm_conv_q7</ref>(</highlight></codeline>
<codeline lineno="3058"><highlight class="normal"><sp/><sp/>q7_t<sp/>*<sp/>pSrcA,</highlight></codeline>
<codeline lineno="3059"><highlight class="normal"><sp/><sp/>uint32_t<sp/>srcALen,</highlight></codeline>
<codeline lineno="3060"><highlight class="normal"><sp/><sp/>q7_t<sp/>*<sp/>pSrcB,</highlight></codeline>
<codeline lineno="3061"><highlight class="normal"><sp/><sp/>uint32_t<sp/>srcBLen,</highlight></codeline>
<codeline lineno="3062"><highlight class="normal"><sp/><sp/>q7_t<sp/>*<sp/>pDst);</highlight></codeline>
<codeline lineno="3063"><highlight class="normal"></highlight></codeline>
<codeline lineno="3064"><highlight class="normal"></highlight></codeline>
<codeline lineno="3076"><highlight class="normal"><sp/><sp/><ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6" kindref="member">arm_status</ref><sp/><ref refid="arm__math_8h_1a16d10f32072cd79fc5fb6e785df45f5e" kindref="member">arm_conv_partial_f32</ref>(</highlight></codeline>
<codeline lineno="3077"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pSrcA,</highlight></codeline>
<codeline lineno="3078"><highlight class="normal"><sp/><sp/>uint32_t<sp/>srcALen,</highlight></codeline>
<codeline lineno="3079"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pSrcB,</highlight></codeline>
<codeline lineno="3080"><highlight class="normal"><sp/><sp/>uint32_t<sp/>srcBLen,</highlight></codeline>
<codeline lineno="3081"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pDst,</highlight></codeline>
<codeline lineno="3082"><highlight class="normal"><sp/><sp/>uint32_t<sp/>firstIndex,</highlight></codeline>
<codeline lineno="3083"><highlight class="normal"><sp/><sp/>uint32_t<sp/>numPoints);</highlight></codeline>
<codeline lineno="3084"><highlight class="normal"></highlight></codeline>
<codeline lineno="3085"><highlight class="normal"></highlight></codeline>
<codeline lineno="3099"><highlight class="normal"><sp/><sp/><ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6" kindref="member">arm_status</ref><sp/><ref refid="arm__math_8h_1a834b23b4ade8682beeb55778399101f8" kindref="member">arm_conv_partial_opt_q15</ref>(</highlight></codeline>
<codeline lineno="3100"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pSrcA,</highlight></codeline>
<codeline lineno="3101"><highlight class="normal"><sp/><sp/>uint32_t<sp/>srcALen,</highlight></codeline>
<codeline lineno="3102"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pSrcB,</highlight></codeline>
<codeline lineno="3103"><highlight class="normal"><sp/><sp/>uint32_t<sp/>srcBLen,</highlight></codeline>
<codeline lineno="3104"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pDst,</highlight></codeline>
<codeline lineno="3105"><highlight class="normal"><sp/><sp/>uint32_t<sp/>firstIndex,</highlight></codeline>
<codeline lineno="3106"><highlight class="normal"><sp/><sp/>uint32_t<sp/>numPoints,</highlight></codeline>
<codeline lineno="3107"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pScratch1,</highlight></codeline>
<codeline lineno="3108"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pScratch2);</highlight></codeline>
<codeline lineno="3109"><highlight class="normal"></highlight></codeline>
<codeline lineno="3110"><highlight class="normal"></highlight></codeline>
<codeline lineno="3122"><highlight class="normal"><sp/><sp/><ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6" kindref="member">arm_status</ref><sp/><ref refid="arm__math_8h_1a209a2a913a0c5e5679c5988da8f46b03" kindref="member">arm_conv_partial_q15</ref>(</highlight></codeline>
<codeline lineno="3123"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pSrcA,</highlight></codeline>
<codeline lineno="3124"><highlight class="normal"><sp/><sp/>uint32_t<sp/>srcALen,</highlight></codeline>
<codeline lineno="3125"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pSrcB,</highlight></codeline>
<codeline lineno="3126"><highlight class="normal"><sp/><sp/>uint32_t<sp/>srcBLen,</highlight></codeline>
<codeline lineno="3127"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pDst,</highlight></codeline>
<codeline lineno="3128"><highlight class="normal"><sp/><sp/>uint32_t<sp/>firstIndex,</highlight></codeline>
<codeline lineno="3129"><highlight class="normal"><sp/><sp/>uint32_t<sp/>numPoints);</highlight></codeline>
<codeline lineno="3130"><highlight class="normal"></highlight></codeline>
<codeline lineno="3131"><highlight class="normal"></highlight></codeline>
<codeline lineno="3143"><highlight class="normal"><sp/><sp/><ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6" kindref="member">arm_status</ref><sp/><ref refid="arm__math_8h_1a1e4d43385cb62262a78c6752fe1fafb2" kindref="member">arm_conv_partial_fast_q15</ref>(</highlight></codeline>
<codeline lineno="3144"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pSrcA,</highlight></codeline>
<codeline lineno="3145"><highlight class="normal"><sp/><sp/>uint32_t<sp/>srcALen,</highlight></codeline>
<codeline lineno="3146"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pSrcB,</highlight></codeline>
<codeline lineno="3147"><highlight class="normal"><sp/><sp/>uint32_t<sp/>srcBLen,</highlight></codeline>
<codeline lineno="3148"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pDst,</highlight></codeline>
<codeline lineno="3149"><highlight class="normal"><sp/><sp/>uint32_t<sp/>firstIndex,</highlight></codeline>
<codeline lineno="3150"><highlight class="normal"><sp/><sp/>uint32_t<sp/>numPoints);</highlight></codeline>
<codeline lineno="3151"><highlight class="normal"></highlight></codeline>
<codeline lineno="3152"><highlight class="normal"></highlight></codeline>
<codeline lineno="3166"><highlight class="normal"><sp/><sp/><ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6" kindref="member">arm_status</ref><sp/><ref refid="arm__math_8h_1a3de9c4ddcc7886de25b70d875099a8d9" kindref="member">arm_conv_partial_fast_opt_q15</ref>(</highlight></codeline>
<codeline lineno="3167"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pSrcA,</highlight></codeline>
<codeline lineno="3168"><highlight class="normal"><sp/><sp/>uint32_t<sp/>srcALen,</highlight></codeline>
<codeline lineno="3169"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pSrcB,</highlight></codeline>
<codeline lineno="3170"><highlight class="normal"><sp/><sp/>uint32_t<sp/>srcBLen,</highlight></codeline>
<codeline lineno="3171"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pDst,</highlight></codeline>
<codeline lineno="3172"><highlight class="normal"><sp/><sp/>uint32_t<sp/>firstIndex,</highlight></codeline>
<codeline lineno="3173"><highlight class="normal"><sp/><sp/>uint32_t<sp/>numPoints,</highlight></codeline>
<codeline lineno="3174"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pScratch1,</highlight></codeline>
<codeline lineno="3175"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pScratch2);</highlight></codeline>
<codeline lineno="3176"><highlight class="normal"></highlight></codeline>
<codeline lineno="3177"><highlight class="normal"></highlight></codeline>
<codeline lineno="3189"><highlight class="normal"><sp/><sp/><ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6" kindref="member">arm_status</ref><sp/><ref refid="arm__math_8h_1a78e73a5f02d103168a09821fb461e77a" kindref="member">arm_conv_partial_q31</ref>(</highlight></codeline>
<codeline lineno="3190"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pSrcA,</highlight></codeline>
<codeline lineno="3191"><highlight class="normal"><sp/><sp/>uint32_t<sp/>srcALen,</highlight></codeline>
<codeline lineno="3192"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pSrcB,</highlight></codeline>
<codeline lineno="3193"><highlight class="normal"><sp/><sp/>uint32_t<sp/>srcBLen,</highlight></codeline>
<codeline lineno="3194"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pDst,</highlight></codeline>
<codeline lineno="3195"><highlight class="normal"><sp/><sp/>uint32_t<sp/>firstIndex,</highlight></codeline>
<codeline lineno="3196"><highlight class="normal"><sp/><sp/>uint32_t<sp/>numPoints);</highlight></codeline>
<codeline lineno="3197"><highlight class="normal"></highlight></codeline>
<codeline lineno="3198"><highlight class="normal"></highlight></codeline>
<codeline lineno="3210"><highlight class="normal"><sp/><sp/><ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6" kindref="member">arm_status</ref><sp/><ref refid="arm__math_8h_1a10c5294cda8c4985386f4e3944be7650" kindref="member">arm_conv_partial_fast_q31</ref>(</highlight></codeline>
<codeline lineno="3211"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pSrcA,</highlight></codeline>
<codeline lineno="3212"><highlight class="normal"><sp/><sp/>uint32_t<sp/>srcALen,</highlight></codeline>
<codeline lineno="3213"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pSrcB,</highlight></codeline>
<codeline lineno="3214"><highlight class="normal"><sp/><sp/>uint32_t<sp/>srcBLen,</highlight></codeline>
<codeline lineno="3215"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pDst,</highlight></codeline>
<codeline lineno="3216"><highlight class="normal"><sp/><sp/>uint32_t<sp/>firstIndex,</highlight></codeline>
<codeline lineno="3217"><highlight class="normal"><sp/><sp/>uint32_t<sp/>numPoints);</highlight></codeline>
<codeline lineno="3218"><highlight class="normal"></highlight></codeline>
<codeline lineno="3219"><highlight class="normal"></highlight></codeline>
<codeline lineno="3233"><highlight class="normal"><sp/><sp/><ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6" kindref="member">arm_status</ref><sp/><ref refid="arm__math_8h_1a3707e16af1435b215840006a7ab0c98f" kindref="member">arm_conv_partial_opt_q7</ref>(</highlight></codeline>
<codeline lineno="3234"><highlight class="normal"><sp/><sp/>q7_t<sp/>*<sp/>pSrcA,</highlight></codeline>
<codeline lineno="3235"><highlight class="normal"><sp/><sp/>uint32_t<sp/>srcALen,</highlight></codeline>
<codeline lineno="3236"><highlight class="normal"><sp/><sp/>q7_t<sp/>*<sp/>pSrcB,</highlight></codeline>
<codeline lineno="3237"><highlight class="normal"><sp/><sp/>uint32_t<sp/>srcBLen,</highlight></codeline>
<codeline lineno="3238"><highlight class="normal"><sp/><sp/>q7_t<sp/>*<sp/>pDst,</highlight></codeline>
<codeline lineno="3239"><highlight class="normal"><sp/><sp/>uint32_t<sp/>firstIndex,</highlight></codeline>
<codeline lineno="3240"><highlight class="normal"><sp/><sp/>uint32_t<sp/>numPoints,</highlight></codeline>
<codeline lineno="3241"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pScratch1,</highlight></codeline>
<codeline lineno="3242"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pScratch2);</highlight></codeline>
<codeline lineno="3243"><highlight class="normal"></highlight></codeline>
<codeline lineno="3244"><highlight class="normal"></highlight></codeline>
<codeline lineno="3256"><highlight class="normal"><sp/><sp/><ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6" kindref="member">arm_status</ref><sp/><ref refid="arm__math_8h_1a8567259fe18396dd972242c41741ebf4" kindref="member">arm_conv_partial_q7</ref>(</highlight></codeline>
<codeline lineno="3257"><highlight class="normal"><sp/><sp/>q7_t<sp/>*<sp/>pSrcA,</highlight></codeline>
<codeline lineno="3258"><highlight class="normal"><sp/><sp/>uint32_t<sp/>srcALen,</highlight></codeline>
<codeline lineno="3259"><highlight class="normal"><sp/><sp/>q7_t<sp/>*<sp/>pSrcB,</highlight></codeline>
<codeline lineno="3260"><highlight class="normal"><sp/><sp/>uint32_t<sp/>srcBLen,</highlight></codeline>
<codeline lineno="3261"><highlight class="normal"><sp/><sp/>q7_t<sp/>*<sp/>pDst,</highlight></codeline>
<codeline lineno="3262"><highlight class="normal"><sp/><sp/>uint32_t<sp/>firstIndex,</highlight></codeline>
<codeline lineno="3263"><highlight class="normal"><sp/><sp/>uint32_t<sp/>numPoints);</highlight></codeline>
<codeline lineno="3264"><highlight class="normal"></highlight></codeline>
<codeline lineno="3265"><highlight class="normal"></highlight></codeline>
<codeline lineno="3269" refid="structarm__fir__decimate__instance__q15" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3270"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3271" refid="structarm__fir__decimate__instance__q15_1aad9320284218b3aa378527ea518cf093" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structarm__fir__decimate__instance__q15_1aad9320284218b3aa378527ea518cf093" kindref="member">M</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3272" refid="structarm__fir__decimate__instance__q15_1ac1e9844488ec717da334fbd4c4f41990" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structarm__fir__decimate__instance__q15_1ac1e9844488ec717da334fbd4c4f41990" kindref="member">numTaps</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3273" refid="structarm__fir__decimate__instance__q15_1a01cacab67e73945e8289075598ede14d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="structarm__fir__decimate__instance__q15_1a01cacab67e73945e8289075598ede14d" kindref="member">pCoeffs</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3274" refid="structarm__fir__decimate__instance__q15_1a3f7b5184bb28853ef401b001df121047" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="structarm__fir__decimate__instance__q15_1a3f7b5184bb28853ef401b001df121047" kindref="member">pState</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3275"><highlight class="normal"><sp/><sp/>}<sp/><ref refid="structarm__fir__decimate__instance__q15" kindref="compound">arm_fir_decimate_instance_q15</ref>;</highlight></codeline>
<codeline lineno="3276"><highlight class="normal"></highlight></codeline>
<codeline lineno="3280" refid="structarm__fir__decimate__instance__q31" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3281"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3282" refid="structarm__fir__decimate__instance__q31_1ad3d6936c36303b30dd38f1eddf248ae5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structarm__fir__decimate__instance__q31_1ad3d6936c36303b30dd38f1eddf248ae5" kindref="member">M</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3283" refid="structarm__fir__decimate__instance__q31_1a37915d42b0dc5e3057ebe83110798482" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structarm__fir__decimate__instance__q31_1a37915d42b0dc5e3057ebe83110798482" kindref="member">numTaps</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3284" refid="structarm__fir__decimate__instance__q31_1a030d0391538c2481c5b348fd09a952ff" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>q31_t<sp/>*<ref refid="structarm__fir__decimate__instance__q31_1a030d0391538c2481c5b348fd09a952ff" kindref="member">pCoeffs</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3285" refid="structarm__fir__decimate__instance__q31_1a0ef0ef9e265f7ab873cfc6daa7593fdb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>q31_t<sp/>*<ref refid="structarm__fir__decimate__instance__q31_1a0ef0ef9e265f7ab873cfc6daa7593fdb" kindref="member">pState</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3286"><highlight class="normal"><sp/><sp/>}<sp/><ref refid="structarm__fir__decimate__instance__q31" kindref="compound">arm_fir_decimate_instance_q31</ref>;</highlight></codeline>
<codeline lineno="3287"><highlight class="normal"></highlight></codeline>
<codeline lineno="3291" refid="structarm__fir__decimate__instance__f32" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3292"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3293" refid="structarm__fir__decimate__instance__f32_1a76a8b2161731638eb3d67f277919f95d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structarm__fir__decimate__instance__f32_1a76a8b2161731638eb3d67f277919f95d" kindref="member">M</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3294" refid="structarm__fir__decimate__instance__f32_1a2aa2986129db8affef03ede88dd45a03" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structarm__fir__decimate__instance__f32_1a2aa2986129db8affef03ede88dd45a03" kindref="member">numTaps</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3295" refid="structarm__fir__decimate__instance__f32_1a268a8b0e80a3d9764baf33e4bc10dde2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>float32_t<sp/>*<ref refid="structarm__fir__decimate__instance__f32_1a268a8b0e80a3d9764baf33e4bc10dde2" kindref="member">pCoeffs</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3296" refid="structarm__fir__decimate__instance__f32_1a5bddf29aaaf2011d2e3bcec59a83f633" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>float32_t<sp/>*<ref refid="structarm__fir__decimate__instance__f32_1a5bddf29aaaf2011d2e3bcec59a83f633" kindref="member">pState</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3297"><highlight class="normal"><sp/><sp/>}<sp/><ref refid="structarm__fir__decimate__instance__f32" kindref="compound">arm_fir_decimate_instance_f32</ref>;</highlight></codeline>
<codeline lineno="3298"><highlight class="normal"></highlight></codeline>
<codeline lineno="3299"><highlight class="normal"></highlight></codeline>
<codeline lineno="3307"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a25aa3d58a90bf91b6a82272a0bc518f7" kindref="member">arm_fir_decimate_f32</ref>(</highlight></codeline>
<codeline lineno="3308"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarm__fir__decimate__instance__f32" kindref="compound">arm_fir_decimate_instance_f32</ref><sp/>*<sp/>S,</highlight></codeline>
<codeline lineno="3309"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="3310"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pDst,</highlight></codeline>
<codeline lineno="3311"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize);</highlight></codeline>
<codeline lineno="3312"><highlight class="normal"></highlight></codeline>
<codeline lineno="3313"><highlight class="normal"></highlight></codeline>
<codeline lineno="3325"><highlight class="normal"><sp/><sp/><ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6" kindref="member">arm_status</ref><sp/><ref refid="arm__math_8h_1aaa2524b08220fd6c3f753e692ffc7d3b" kindref="member">arm_fir_decimate_init_f32</ref>(</highlight></codeline>
<codeline lineno="3326"><highlight class="normal"><sp/><sp/><ref refid="structarm__fir__decimate__instance__f32" kindref="compound">arm_fir_decimate_instance_f32</ref><sp/>*<sp/>S,</highlight></codeline>
<codeline lineno="3327"><highlight class="normal"><sp/><sp/>uint16_t<sp/>numTaps,</highlight></codeline>
<codeline lineno="3328"><highlight class="normal"><sp/><sp/>uint8_t<sp/>M,</highlight></codeline>
<codeline lineno="3329"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pCoeffs,</highlight></codeline>
<codeline lineno="3330"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pState,</highlight></codeline>
<codeline lineno="3331"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize);</highlight></codeline>
<codeline lineno="3332"><highlight class="normal"></highlight></codeline>
<codeline lineno="3333"><highlight class="normal"></highlight></codeline>
<codeline lineno="3341"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1ab8bef6d0f6a26fdbfce9485727713ce5" kindref="member">arm_fir_decimate_q15</ref>(</highlight></codeline>
<codeline lineno="3342"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarm__fir__decimate__instance__q15" kindref="compound">arm_fir_decimate_instance_q15</ref><sp/>*<sp/>S,</highlight></codeline>
<codeline lineno="3343"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="3344"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pDst,</highlight></codeline>
<codeline lineno="3345"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize);</highlight></codeline>
<codeline lineno="3346"><highlight class="normal"></highlight></codeline>
<codeline lineno="3347"><highlight class="normal"></highlight></codeline>
<codeline lineno="3355"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a3f434c9a5d3b4e68061feac0714ea2ac" kindref="member">arm_fir_decimate_fast_q15</ref>(</highlight></codeline>
<codeline lineno="3356"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarm__fir__decimate__instance__q15" kindref="compound">arm_fir_decimate_instance_q15</ref><sp/>*<sp/>S,</highlight></codeline>
<codeline lineno="3357"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="3358"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pDst,</highlight></codeline>
<codeline lineno="3359"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize);</highlight></codeline>
<codeline lineno="3360"><highlight class="normal"></highlight></codeline>
<codeline lineno="3361"><highlight class="normal"></highlight></codeline>
<codeline lineno="3373"><highlight class="normal"><sp/><sp/><ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6" kindref="member">arm_status</ref><sp/><ref refid="arm__math_8h_1ada660e54b93d5d32178c6f5e1c6f368d" kindref="member">arm_fir_decimate_init_q15</ref>(</highlight></codeline>
<codeline lineno="3374"><highlight class="normal"><sp/><sp/><ref refid="structarm__fir__decimate__instance__q15" kindref="compound">arm_fir_decimate_instance_q15</ref><sp/>*<sp/>S,</highlight></codeline>
<codeline lineno="3375"><highlight class="normal"><sp/><sp/>uint16_t<sp/>numTaps,</highlight></codeline>
<codeline lineno="3376"><highlight class="normal"><sp/><sp/>uint8_t<sp/>M,</highlight></codeline>
<codeline lineno="3377"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pCoeffs,</highlight></codeline>
<codeline lineno="3378"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pState,</highlight></codeline>
<codeline lineno="3379"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize);</highlight></codeline>
<codeline lineno="3380"><highlight class="normal"></highlight></codeline>
<codeline lineno="3381"><highlight class="normal"></highlight></codeline>
<codeline lineno="3389"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1aef8e86add28f15fdc5ecc484e9dd7a4e" kindref="member">arm_fir_decimate_q31</ref>(</highlight></codeline>
<codeline lineno="3390"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarm__fir__decimate__instance__q31" kindref="compound">arm_fir_decimate_instance_q31</ref><sp/>*<sp/>S,</highlight></codeline>
<codeline lineno="3391"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="3392"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pDst,</highlight></codeline>
<codeline lineno="3393"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize);</highlight></codeline>
<codeline lineno="3394"><highlight class="normal"></highlight></codeline>
<codeline lineno="3402"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a3c18cc3d0548a410c577f1bead9582b7" kindref="member">arm_fir_decimate_fast_q31</ref>(</highlight></codeline>
<codeline lineno="3403"><highlight class="normal"><sp/><sp/><ref refid="structarm__fir__decimate__instance__q31" kindref="compound">arm_fir_decimate_instance_q31</ref><sp/>*<sp/>S,</highlight></codeline>
<codeline lineno="3404"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="3405"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pDst,</highlight></codeline>
<codeline lineno="3406"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize);</highlight></codeline>
<codeline lineno="3407"><highlight class="normal"></highlight></codeline>
<codeline lineno="3408"><highlight class="normal"></highlight></codeline>
<codeline lineno="3420"><highlight class="normal"><sp/><sp/><ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6" kindref="member">arm_status</ref><sp/><ref refid="arm__math_8h_1a9ed47c4e0f58affa935d84e0508a7f39" kindref="member">arm_fir_decimate_init_q31</ref>(</highlight></codeline>
<codeline lineno="3421"><highlight class="normal"><sp/><sp/><ref refid="structarm__fir__decimate__instance__q31" kindref="compound">arm_fir_decimate_instance_q31</ref><sp/>*<sp/>S,</highlight></codeline>
<codeline lineno="3422"><highlight class="normal"><sp/><sp/>uint16_t<sp/>numTaps,</highlight></codeline>
<codeline lineno="3423"><highlight class="normal"><sp/><sp/>uint8_t<sp/>M,</highlight></codeline>
<codeline lineno="3424"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pCoeffs,</highlight></codeline>
<codeline lineno="3425"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pState,</highlight></codeline>
<codeline lineno="3426"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize);</highlight></codeline>
<codeline lineno="3427"><highlight class="normal"></highlight></codeline>
<codeline lineno="3428"><highlight class="normal"></highlight></codeline>
<codeline lineno="3432" refid="structarm__fir__interpolate__instance__q15" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3433"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3434" refid="structarm__fir__interpolate__instance__q15_1a5431bdc079e72a973b51d359f7f13603" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structarm__fir__interpolate__instance__q15_1a5431bdc079e72a973b51d359f7f13603" kindref="member">L</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3435" refid="structarm__fir__interpolate__instance__q15_1ad5178a02a697a77e0d0e60705d9f0a19" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structarm__fir__interpolate__instance__q15_1ad5178a02a697a77e0d0e60705d9f0a19" kindref="member">phaseLength</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3436" refid="structarm__fir__interpolate__instance__q15_1a767d91d61d4c0beeddd4325d28d28e24" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="structarm__fir__interpolate__instance__q15_1a767d91d61d4c0beeddd4325d28d28e24" kindref="member">pCoeffs</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3437" refid="structarm__fir__interpolate__instance__q15_1a26b864363fa47954248f2590e3a82a3c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="structarm__fir__interpolate__instance__q15_1a26b864363fa47954248f2590e3a82a3c" kindref="member">pState</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3438"><highlight class="normal"><sp/><sp/>}<sp/><ref refid="structarm__fir__interpolate__instance__q15" kindref="compound">arm_fir_interpolate_instance_q15</ref>;</highlight></codeline>
<codeline lineno="3439"><highlight class="normal"></highlight></codeline>
<codeline lineno="3443" refid="structarm__fir__interpolate__instance__q31" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3444"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3445" refid="structarm__fir__interpolate__instance__q31_1a5cdf0a631cb74e0e9588c388abe5235c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structarm__fir__interpolate__instance__q31_1a5cdf0a631cb74e0e9588c388abe5235c" kindref="member">L</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3446" refid="structarm__fir__interpolate__instance__q31_1a5d243796584afc7cd6c557f00b7acca5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structarm__fir__interpolate__instance__q31_1a5d243796584afc7cd6c557f00b7acca5" kindref="member">phaseLength</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3447" refid="structarm__fir__interpolate__instance__q31_1afa719433687e1936ec3403d0d32f06e6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>q31_t<sp/>*<ref refid="structarm__fir__interpolate__instance__q31_1afa719433687e1936ec3403d0d32f06e6" kindref="member">pCoeffs</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3448" refid="structarm__fir__interpolate__instance__q31_1addde04514b6e6ac72be3d609f0398b1a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>q31_t<sp/>*<ref refid="structarm__fir__interpolate__instance__q31_1addde04514b6e6ac72be3d609f0398b1a" kindref="member">pState</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3449"><highlight class="normal"><sp/><sp/>}<sp/><ref refid="structarm__fir__interpolate__instance__q31" kindref="compound">arm_fir_interpolate_instance_q31</ref>;</highlight></codeline>
<codeline lineno="3450"><highlight class="normal"></highlight></codeline>
<codeline lineno="3454" refid="structarm__fir__interpolate__instance__f32" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3455"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3456" refid="structarm__fir__interpolate__instance__f32_1ae6f94dcc0ccd8aa4bc699b20985d9df5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structarm__fir__interpolate__instance__f32_1ae6f94dcc0ccd8aa4bc699b20985d9df5" kindref="member">L</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3457" refid="structarm__fir__interpolate__instance__f32_1a389e669e13ec56292a70db8e92194b12" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structarm__fir__interpolate__instance__f32_1a389e669e13ec56292a70db8e92194b12" kindref="member">phaseLength</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3458" refid="structarm__fir__interpolate__instance__f32_1a86053b715980a93c9df630d6de5bb63c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>float32_t<sp/>*<ref refid="structarm__fir__interpolate__instance__f32_1a86053b715980a93c9df630d6de5bb63c" kindref="member">pCoeffs</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3459" refid="structarm__fir__interpolate__instance__f32_1a42a8ba1bda85fa86d7b6c84d3da4c75b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>float32_t<sp/>*<ref refid="structarm__fir__interpolate__instance__f32_1a42a8ba1bda85fa86d7b6c84d3da4c75b" kindref="member">pState</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3460"><highlight class="normal"><sp/><sp/>}<sp/><ref refid="structarm__fir__interpolate__instance__f32" kindref="compound">arm_fir_interpolate_instance_f32</ref>;</highlight></codeline>
<codeline lineno="3461"><highlight class="normal"></highlight></codeline>
<codeline lineno="3462"><highlight class="normal"></highlight></codeline>
<codeline lineno="3470"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a7962b5f9636e54899f75d0c5936800b5" kindref="member">arm_fir_interpolate_q15</ref>(</highlight></codeline>
<codeline lineno="3471"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarm__fir__interpolate__instance__q15" kindref="compound">arm_fir_interpolate_instance_q15</ref><sp/>*<sp/>S,</highlight></codeline>
<codeline lineno="3472"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="3473"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pDst,</highlight></codeline>
<codeline lineno="3474"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize);</highlight></codeline>
<codeline lineno="3475"><highlight class="normal"></highlight></codeline>
<codeline lineno="3476"><highlight class="normal"></highlight></codeline>
<codeline lineno="3488"><highlight class="normal"><sp/><sp/><ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6" kindref="member">arm_status</ref><sp/><ref refid="arm__math_8h_1a18e8c4a74ff1d0f88876cc63f675288f" kindref="member">arm_fir_interpolate_init_q15</ref>(</highlight></codeline>
<codeline lineno="3489"><highlight class="normal"><sp/><sp/><ref refid="structarm__fir__interpolate__instance__q15" kindref="compound">arm_fir_interpolate_instance_q15</ref><sp/>*<sp/>S,</highlight></codeline>
<codeline lineno="3490"><highlight class="normal"><sp/><sp/>uint8_t<sp/>L,</highlight></codeline>
<codeline lineno="3491"><highlight class="normal"><sp/><sp/>uint16_t<sp/>numTaps,</highlight></codeline>
<codeline lineno="3492"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pCoeffs,</highlight></codeline>
<codeline lineno="3493"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pState,</highlight></codeline>
<codeline lineno="3494"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize);</highlight></codeline>
<codeline lineno="3495"><highlight class="normal"></highlight></codeline>
<codeline lineno="3496"><highlight class="normal"></highlight></codeline>
<codeline lineno="3504"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1aac9c0f01ed91c53f7083995d7411f5ee" kindref="member">arm_fir_interpolate_q31</ref>(</highlight></codeline>
<codeline lineno="3505"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarm__fir__interpolate__instance__q31" kindref="compound">arm_fir_interpolate_instance_q31</ref><sp/>*<sp/>S,</highlight></codeline>
<codeline lineno="3506"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="3507"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pDst,</highlight></codeline>
<codeline lineno="3508"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize);</highlight></codeline>
<codeline lineno="3509"><highlight class="normal"></highlight></codeline>
<codeline lineno="3510"><highlight class="normal"></highlight></codeline>
<codeline lineno="3522"><highlight class="normal"><sp/><sp/><ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6" kindref="member">arm_status</ref><sp/><ref refid="arm__math_8h_1a9d0ba38ce9f12a850dd242731d307476" kindref="member">arm_fir_interpolate_init_q31</ref>(</highlight></codeline>
<codeline lineno="3523"><highlight class="normal"><sp/><sp/><ref refid="structarm__fir__interpolate__instance__q31" kindref="compound">arm_fir_interpolate_instance_q31</ref><sp/>*<sp/>S,</highlight></codeline>
<codeline lineno="3524"><highlight class="normal"><sp/><sp/>uint8_t<sp/>L,</highlight></codeline>
<codeline lineno="3525"><highlight class="normal"><sp/><sp/>uint16_t<sp/>numTaps,</highlight></codeline>
<codeline lineno="3526"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pCoeffs,</highlight></codeline>
<codeline lineno="3527"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pState,</highlight></codeline>
<codeline lineno="3528"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize);</highlight></codeline>
<codeline lineno="3529"><highlight class="normal"></highlight></codeline>
<codeline lineno="3530"><highlight class="normal"></highlight></codeline>
<codeline lineno="3538"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a9cae104c5cf60b4e7671c82264a8c12e" kindref="member">arm_fir_interpolate_f32</ref>(</highlight></codeline>
<codeline lineno="3539"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarm__fir__interpolate__instance__f32" kindref="compound">arm_fir_interpolate_instance_f32</ref><sp/>*<sp/>S,</highlight></codeline>
<codeline lineno="3540"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="3541"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pDst,</highlight></codeline>
<codeline lineno="3542"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize);</highlight></codeline>
<codeline lineno="3543"><highlight class="normal"></highlight></codeline>
<codeline lineno="3544"><highlight class="normal"></highlight></codeline>
<codeline lineno="3556"><highlight class="normal"><sp/><sp/><ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6" kindref="member">arm_status</ref><sp/><ref refid="arm__math_8h_1a0f857457a815946f7e4dca989ebf6ff6" kindref="member">arm_fir_interpolate_init_f32</ref>(</highlight></codeline>
<codeline lineno="3557"><highlight class="normal"><sp/><sp/><ref refid="structarm__fir__interpolate__instance__f32" kindref="compound">arm_fir_interpolate_instance_f32</ref><sp/>*<sp/>S,</highlight></codeline>
<codeline lineno="3558"><highlight class="normal"><sp/><sp/>uint8_t<sp/>L,</highlight></codeline>
<codeline lineno="3559"><highlight class="normal"><sp/><sp/>uint16_t<sp/>numTaps,</highlight></codeline>
<codeline lineno="3560"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pCoeffs,</highlight></codeline>
<codeline lineno="3561"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pState,</highlight></codeline>
<codeline lineno="3562"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize);</highlight></codeline>
<codeline lineno="3563"><highlight class="normal"></highlight></codeline>
<codeline lineno="3564"><highlight class="normal"></highlight></codeline>
<codeline lineno="3568" refid="structarm__biquad__cas__df1__32x64__ins__q31" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3569"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3570" refid="structarm__biquad__cas__df1__32x64__ins__q31_1ad7cb9a9f5df8f4fcfc7a0b633672e574" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structarm__biquad__cas__df1__32x64__ins__q31_1ad7cb9a9f5df8f4fcfc7a0b633672e574" kindref="member">numStages</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3571" refid="structarm__biquad__cas__df1__32x64__ins__q31_1a4c899cdfaf2bb955323e93637bd662e0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>q63_t<sp/>*<ref refid="structarm__biquad__cas__df1__32x64__ins__q31_1a4c899cdfaf2bb955323e93637bd662e0" kindref="member">pState</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3572" refid="structarm__biquad__cas__df1__32x64__ins__q31_1a490462d6ebe0fecfb6acbf51bed22ecf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>q31_t<sp/>*<ref refid="structarm__biquad__cas__df1__32x64__ins__q31_1a490462d6ebe0fecfb6acbf51bed22ecf" kindref="member">pCoeffs</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3573" refid="structarm__biquad__cas__df1__32x64__ins__q31_1a8e9d58e8dba5aa3b2fc4f36d2ed07996" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structarm__biquad__cas__df1__32x64__ins__q31_1a8e9d58e8dba5aa3b2fc4f36d2ed07996" kindref="member">postShift</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3574"><highlight class="normal"><sp/><sp/>}<sp/><ref refid="structarm__biquad__cas__df1__32x64__ins__q31" kindref="compound">arm_biquad_cas_df1_32x64_ins_q31</ref>;</highlight></codeline>
<codeline lineno="3575"><highlight class="normal"></highlight></codeline>
<codeline lineno="3576"><highlight class="normal"></highlight></codeline>
<codeline lineno="3583"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a953a83e69685de6575cff37feb358a93" kindref="member">arm_biquad_cas_df1_32x64_q31</ref>(</highlight></codeline>
<codeline lineno="3584"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarm__biquad__cas__df1__32x64__ins__q31" kindref="compound">arm_biquad_cas_df1_32x64_ins_q31</ref><sp/>*<sp/>S,</highlight></codeline>
<codeline lineno="3585"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="3586"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pDst,</highlight></codeline>
<codeline lineno="3587"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize);</highlight></codeline>
<codeline lineno="3588"><highlight class="normal"></highlight></codeline>
<codeline lineno="3589"><highlight class="normal"></highlight></codeline>
<codeline lineno="3597"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a44900cecb8083afcaabf905ffcd656bb" kindref="member">arm_biquad_cas_df1_32x64_init_q31</ref>(</highlight></codeline>
<codeline lineno="3598"><highlight class="normal"><sp/><sp/><ref refid="structarm__biquad__cas__df1__32x64__ins__q31" kindref="compound">arm_biquad_cas_df1_32x64_ins_q31</ref><sp/>*<sp/>S,</highlight></codeline>
<codeline lineno="3599"><highlight class="normal"><sp/><sp/>uint8_t<sp/>numStages,</highlight></codeline>
<codeline lineno="3600"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pCoeffs,</highlight></codeline>
<codeline lineno="3601"><highlight class="normal"><sp/><sp/>q63_t<sp/>*<sp/>pState,</highlight></codeline>
<codeline lineno="3602"><highlight class="normal"><sp/><sp/>uint8_t<sp/>postShift);</highlight></codeline>
<codeline lineno="3603"><highlight class="normal"></highlight></codeline>
<codeline lineno="3604"><highlight class="normal"></highlight></codeline>
<codeline lineno="3608" refid="structarm__biquad__cascade__df2_t__instance__f32" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3609"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3610" refid="structarm__biquad__cascade__df2_t__instance__f32_1a4d17958c33c3d0a905f974bac50f033f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structarm__biquad__cascade__df2_t__instance__f32_1a4d17958c33c3d0a905f974bac50f033f" kindref="member">numStages</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3611" refid="structarm__biquad__cascade__df2_t__instance__f32_1a24d223addfd926a7177088cf2efe76b1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>float32_t<sp/>*<ref refid="structarm__biquad__cascade__df2_t__instance__f32_1a24d223addfd926a7177088cf2efe76b1" kindref="member">pState</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3612" refid="structarm__biquad__cascade__df2_t__instance__f32_1a49a24fe1b6ad3b0b26779c32d8d80b2e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>float32_t<sp/>*<ref refid="structarm__biquad__cascade__df2_t__instance__f32_1a49a24fe1b6ad3b0b26779c32d8d80b2e" kindref="member">pCoeffs</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3613"><highlight class="normal"><sp/><sp/>}<sp/><ref refid="structarm__biquad__cascade__df2_t__instance__f32" kindref="compound">arm_biquad_cascade_df2T_instance_f32</ref>;</highlight></codeline>
<codeline lineno="3614"><highlight class="normal"></highlight></codeline>
<codeline lineno="3618" refid="structarm__biquad__cascade__stereo__df2_t__instance__f32" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3619"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3620" refid="structarm__biquad__cascade__stereo__df2_t__instance__f32_1a5655328252da5c2c2425ceed253bc4f1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structarm__biquad__cascade__stereo__df2_t__instance__f32_1a5655328252da5c2c2425ceed253bc4f1" kindref="member">numStages</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3621" refid="structarm__biquad__cascade__stereo__df2_t__instance__f32_1a2cb00048bb1fe957a03c1ff56dfaf8f0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>float32_t<sp/>*<ref refid="structarm__biquad__cascade__stereo__df2_t__instance__f32_1a2cb00048bb1fe957a03c1ff56dfaf8f0" kindref="member">pState</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3622" refid="structarm__biquad__cascade__stereo__df2_t__instance__f32_1a58b15644de62a632c5e9d4a563569dc6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>float32_t<sp/>*<ref refid="structarm__biquad__cascade__stereo__df2_t__instance__f32_1a58b15644de62a632c5e9d4a563569dc6" kindref="member">pCoeffs</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3623"><highlight class="normal"><sp/><sp/>}<sp/><ref refid="structarm__biquad__cascade__stereo__df2_t__instance__f32" kindref="compound">arm_biquad_cascade_stereo_df2T_instance_f32</ref>;</highlight></codeline>
<codeline lineno="3624"><highlight class="normal"></highlight></codeline>
<codeline lineno="3628" refid="structarm__biquad__cascade__df2_t__instance__f64" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3629"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3630" refid="structarm__biquad__cascade__df2_t__instance__f64_1ad55380ff835b533aa5168f836db8a4de" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structarm__biquad__cascade__df2_t__instance__f64_1ad55380ff835b533aa5168f836db8a4de" kindref="member">numStages</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3631" refid="structarm__biquad__cascade__df2_t__instance__f64_1a0bde57b618e3f9059b23b0de64e12ce3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>float64_t<sp/>*<ref refid="structarm__biquad__cascade__df2_t__instance__f64_1a0bde57b618e3f9059b23b0de64e12ce3" kindref="member">pState</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3632" refid="structarm__biquad__cascade__df2_t__instance__f64_1ae2f0180f9038c0393e1d6921bb3b878b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>float64_t<sp/>*<ref refid="structarm__biquad__cascade__df2_t__instance__f64_1ae2f0180f9038c0393e1d6921bb3b878b" kindref="member">pCoeffs</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3633"><highlight class="normal"><sp/><sp/>}<sp/><ref refid="structarm__biquad__cascade__df2_t__instance__f64" kindref="compound">arm_biquad_cascade_df2T_instance_f64</ref>;</highlight></codeline>
<codeline lineno="3634"><highlight class="normal"></highlight></codeline>
<codeline lineno="3635"><highlight class="normal"></highlight></codeline>
<codeline lineno="3643"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a646c25998bf35991c60299b1431460f7" kindref="member">arm_biquad_cascade_df2T_f32</ref>(</highlight></codeline>
<codeline lineno="3644"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarm__biquad__cascade__df2_t__instance__f32" kindref="compound">arm_biquad_cascade_df2T_instance_f32</ref><sp/>*<sp/>S,</highlight></codeline>
<codeline lineno="3645"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="3646"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pDst,</highlight></codeline>
<codeline lineno="3647"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize);</highlight></codeline>
<codeline lineno="3648"><highlight class="normal"></highlight></codeline>
<codeline lineno="3649"><highlight class="normal"></highlight></codeline>
<codeline lineno="3657"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1aeff8ab405c3db567ae26344ec7539911" kindref="member">arm_biquad_cascade_stereo_df2T_f32</ref>(</highlight></codeline>
<codeline lineno="3658"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarm__biquad__cascade__stereo__df2_t__instance__f32" kindref="compound">arm_biquad_cascade_stereo_df2T_instance_f32</ref><sp/>*<sp/>S,</highlight></codeline>
<codeline lineno="3659"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="3660"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pDst,</highlight></codeline>
<codeline lineno="3661"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize);</highlight></codeline>
<codeline lineno="3662"><highlight class="normal"></highlight></codeline>
<codeline lineno="3663"><highlight class="normal"></highlight></codeline>
<codeline lineno="3671"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1ad146359b7ab526d6ebc81d8aca530f78" kindref="member">arm_biquad_cascade_df2T_f64</ref>(</highlight></codeline>
<codeline lineno="3672"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarm__biquad__cascade__df2_t__instance__f64" kindref="compound">arm_biquad_cascade_df2T_instance_f64</ref><sp/>*<sp/>S,</highlight></codeline>
<codeline lineno="3673"><highlight class="normal"><sp/><sp/>float64_t<sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="3674"><highlight class="normal"><sp/><sp/>float64_t<sp/>*<sp/>pDst,</highlight></codeline>
<codeline lineno="3675"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize);</highlight></codeline>
<codeline lineno="3676"><highlight class="normal"></highlight></codeline>
<codeline lineno="3677"><highlight class="normal"></highlight></codeline>
<codeline lineno="3685"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a70eaddf317a4a8bde6bd6a97df67fedd" kindref="member">arm_biquad_cascade_df2T_init_f32</ref>(</highlight></codeline>
<codeline lineno="3686"><highlight class="normal"><sp/><sp/><ref refid="structarm__biquad__cascade__df2_t__instance__f32" kindref="compound">arm_biquad_cascade_df2T_instance_f32</ref><sp/>*<sp/>S,</highlight></codeline>
<codeline lineno="3687"><highlight class="normal"><sp/><sp/>uint8_t<sp/>numStages,</highlight></codeline>
<codeline lineno="3688"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pCoeffs,</highlight></codeline>
<codeline lineno="3689"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pState);</highlight></codeline>
<codeline lineno="3690"><highlight class="normal"></highlight></codeline>
<codeline lineno="3691"><highlight class="normal"></highlight></codeline>
<codeline lineno="3699"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a405197c89fe4d34003efd23786296425" kindref="member">arm_biquad_cascade_stereo_df2T_init_f32</ref>(</highlight></codeline>
<codeline lineno="3700"><highlight class="normal"><sp/><sp/><ref refid="structarm__biquad__cascade__stereo__df2_t__instance__f32" kindref="compound">arm_biquad_cascade_stereo_df2T_instance_f32</ref><sp/>*<sp/>S,</highlight></codeline>
<codeline lineno="3701"><highlight class="normal"><sp/><sp/>uint8_t<sp/>numStages,</highlight></codeline>
<codeline lineno="3702"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pCoeffs,</highlight></codeline>
<codeline lineno="3703"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pState);</highlight></codeline>
<codeline lineno="3704"><highlight class="normal"></highlight></codeline>
<codeline lineno="3705"><highlight class="normal"></highlight></codeline>
<codeline lineno="3713"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a12dc5d8e8892806ad70e79ca2ff9f86e" kindref="member">arm_biquad_cascade_df2T_init_f64</ref>(</highlight></codeline>
<codeline lineno="3714"><highlight class="normal"><sp/><sp/><ref refid="structarm__biquad__cascade__df2_t__instance__f64" kindref="compound">arm_biquad_cascade_df2T_instance_f64</ref><sp/>*<sp/>S,</highlight></codeline>
<codeline lineno="3715"><highlight class="normal"><sp/><sp/>uint8_t<sp/>numStages,</highlight></codeline>
<codeline lineno="3716"><highlight class="normal"><sp/><sp/>float64_t<sp/>*<sp/>pCoeffs,</highlight></codeline>
<codeline lineno="3717"><highlight class="normal"><sp/><sp/>float64_t<sp/>*<sp/>pState);</highlight></codeline>
<codeline lineno="3718"><highlight class="normal"></highlight></codeline>
<codeline lineno="3719"><highlight class="normal"></highlight></codeline>
<codeline lineno="3723" refid="structarm__fir__lattice__instance__q15" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3724"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3725" refid="structarm__fir__lattice__instance__q15_1a38b179138d6a6c9cac4f8f79b6fd5357" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structarm__fir__lattice__instance__q15_1a38b179138d6a6c9cac4f8f79b6fd5357" kindref="member">numStages</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3726" refid="structarm__fir__lattice__instance__q15_1a37b90dea2bc3ee7c9951a9fe74db0cbb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="structarm__fir__lattice__instance__q15_1a37b90dea2bc3ee7c9951a9fe74db0cbb" kindref="member">pState</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3727" refid="structarm__fir__lattice__instance__q15_1a78f872826140069cf67836fff87360bc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="structarm__fir__lattice__instance__q15_1a78f872826140069cf67836fff87360bc" kindref="member">pCoeffs</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3728"><highlight class="normal"><sp/><sp/>}<sp/><ref refid="structarm__fir__lattice__instance__q15" kindref="compound">arm_fir_lattice_instance_q15</ref>;</highlight></codeline>
<codeline lineno="3729"><highlight class="normal"></highlight></codeline>
<codeline lineno="3733" refid="structarm__fir__lattice__instance__q31" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3734"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3735" refid="structarm__fir__lattice__instance__q31_1a9f3773bbb76bc5a8a5ee9d37786bf478" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structarm__fir__lattice__instance__q31_1a9f3773bbb76bc5a8a5ee9d37786bf478" kindref="member">numStages</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3736" refid="structarm__fir__lattice__instance__q31_1a08fe9494ab7cd336b791e9657adadcf6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>q31_t<sp/>*<ref refid="structarm__fir__lattice__instance__q31_1a08fe9494ab7cd336b791e9657adadcf6" kindref="member">pState</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3737" refid="structarm__fir__lattice__instance__q31_1a66c3364bf5863cd45e05f1652c3dc522" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>q31_t<sp/>*<ref refid="structarm__fir__lattice__instance__q31_1a66c3364bf5863cd45e05f1652c3dc522" kindref="member">pCoeffs</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3738"><highlight class="normal"><sp/><sp/>}<sp/><ref refid="structarm__fir__lattice__instance__q31" kindref="compound">arm_fir_lattice_instance_q31</ref>;</highlight></codeline>
<codeline lineno="3739"><highlight class="normal"></highlight></codeline>
<codeline lineno="3743" refid="structarm__fir__lattice__instance__f32" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3744"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3745" refid="structarm__fir__lattice__instance__f32_1ad369bd9997a250f195254df37408a38f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structarm__fir__lattice__instance__f32_1ad369bd9997a250f195254df37408a38f" kindref="member">numStages</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3746" refid="structarm__fir__lattice__instance__f32_1ae348884a1ba9b83fadccd5da640cbcaf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>float32_t<sp/>*<ref refid="structarm__fir__lattice__instance__f32_1ae348884a1ba9b83fadccd5da640cbcaf" kindref="member">pState</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3747" refid="structarm__fir__lattice__instance__f32_1a33bf5948c947f9ef80a99717cb0a0a43" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>float32_t<sp/>*<ref refid="structarm__fir__lattice__instance__f32_1a33bf5948c947f9ef80a99717cb0a0a43" kindref="member">pCoeffs</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3748"><highlight class="normal"><sp/><sp/>}<sp/><ref refid="structarm__fir__lattice__instance__f32" kindref="compound">arm_fir_lattice_instance_f32</ref>;</highlight></codeline>
<codeline lineno="3749"><highlight class="normal"></highlight></codeline>
<codeline lineno="3750"><highlight class="normal"></highlight></codeline>
<codeline lineno="3758"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a1b22f30ce1cc19bf5a5d7c9fca154d72" kindref="member">arm_fir_lattice_init_q15</ref>(</highlight></codeline>
<codeline lineno="3759"><highlight class="normal"><sp/><sp/><ref refid="structarm__fir__lattice__instance__q15" kindref="compound">arm_fir_lattice_instance_q15</ref><sp/>*<sp/>S,</highlight></codeline>
<codeline lineno="3760"><highlight class="normal"><sp/><sp/>uint16_t<sp/>numStages,</highlight></codeline>
<codeline lineno="3761"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pCoeffs,</highlight></codeline>
<codeline lineno="3762"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pState);</highlight></codeline>
<codeline lineno="3763"><highlight class="normal"></highlight></codeline>
<codeline lineno="3764"><highlight class="normal"></highlight></codeline>
<codeline lineno="3772"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1abb0ab07fd313b4d863070c3ddca51542" kindref="member">arm_fir_lattice_q15</ref>(</highlight></codeline>
<codeline lineno="3773"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarm__fir__lattice__instance__q15" kindref="compound">arm_fir_lattice_instance_q15</ref><sp/>*<sp/>S,</highlight></codeline>
<codeline lineno="3774"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="3775"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pDst,</highlight></codeline>
<codeline lineno="3776"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize);</highlight></codeline>
<codeline lineno="3777"><highlight class="normal"></highlight></codeline>
<codeline lineno="3778"><highlight class="normal"></highlight></codeline>
<codeline lineno="3786"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1ac05a17a0188bb851b58d19e572870a54" kindref="member">arm_fir_lattice_init_q31</ref>(</highlight></codeline>
<codeline lineno="3787"><highlight class="normal"><sp/><sp/><ref refid="structarm__fir__lattice__instance__q31" kindref="compound">arm_fir_lattice_instance_q31</ref><sp/>*<sp/>S,</highlight></codeline>
<codeline lineno="3788"><highlight class="normal"><sp/><sp/>uint16_t<sp/>numStages,</highlight></codeline>
<codeline lineno="3789"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pCoeffs,</highlight></codeline>
<codeline lineno="3790"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pState);</highlight></codeline>
<codeline lineno="3791"><highlight class="normal"></highlight></codeline>
<codeline lineno="3792"><highlight class="normal"></highlight></codeline>
<codeline lineno="3800"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a2e36fd210e4a1a5dd333ce80dd6d9a88" kindref="member">arm_fir_lattice_q31</ref>(</highlight></codeline>
<codeline lineno="3801"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarm__fir__lattice__instance__q31" kindref="compound">arm_fir_lattice_instance_q31</ref><sp/>*<sp/>S,</highlight></codeline>
<codeline lineno="3802"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="3803"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pDst,</highlight></codeline>
<codeline lineno="3804"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize);</highlight></codeline>
<codeline lineno="3805"><highlight class="normal"></highlight></codeline>
<codeline lineno="3806"><highlight class="normal"></highlight></codeline>
<codeline lineno="3814"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a86199a1590af2b8941c6532ee9d03229" kindref="member">arm_fir_lattice_init_f32</ref>(</highlight></codeline>
<codeline lineno="3815"><highlight class="normal"><sp/><sp/><ref refid="structarm__fir__lattice__instance__f32" kindref="compound">arm_fir_lattice_instance_f32</ref><sp/>*<sp/>S,</highlight></codeline>
<codeline lineno="3816"><highlight class="normal"><sp/><sp/>uint16_t<sp/>numStages,</highlight></codeline>
<codeline lineno="3817"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pCoeffs,</highlight></codeline>
<codeline lineno="3818"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pState);</highlight></codeline>
<codeline lineno="3819"><highlight class="normal"></highlight></codeline>
<codeline lineno="3820"><highlight class="normal"></highlight></codeline>
<codeline lineno="3828"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1ae63a45a63a11a65f2eae8b8b1fe370a8" kindref="member">arm_fir_lattice_f32</ref>(</highlight></codeline>
<codeline lineno="3829"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarm__fir__lattice__instance__f32" kindref="compound">arm_fir_lattice_instance_f32</ref><sp/>*<sp/>S,</highlight></codeline>
<codeline lineno="3830"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="3831"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pDst,</highlight></codeline>
<codeline lineno="3832"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize);</highlight></codeline>
<codeline lineno="3833"><highlight class="normal"></highlight></codeline>
<codeline lineno="3834"><highlight class="normal"></highlight></codeline>
<codeline lineno="3838" refid="structarm__iir__lattice__instance__q15" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3839"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3840" refid="structarm__iir__lattice__instance__q15_1a96fbed313bef01070409fa182d26ba3f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structarm__iir__lattice__instance__q15_1a96fbed313bef01070409fa182d26ba3f" kindref="member">numStages</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3841" refid="structarm__iir__lattice__instance__q15_1afd0136ab917b529554d93f41a5e04618" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="structarm__iir__lattice__instance__q15_1afd0136ab917b529554d93f41a5e04618" kindref="member">pState</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3842" refid="structarm__iir__lattice__instance__q15_1a41c214a1ec38d4a82fae8899d715dd29" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="structarm__iir__lattice__instance__q15_1a41c214a1ec38d4a82fae8899d715dd29" kindref="member">pkCoeffs</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3843" refid="structarm__iir__lattice__instance__q15_1a4c4f57f45b223abbe2a9fb727bd2cad9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="structarm__iir__lattice__instance__q15_1a4c4f57f45b223abbe2a9fb727bd2cad9" kindref="member">pvCoeffs</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3844"><highlight class="normal"><sp/><sp/>}<sp/><ref refid="structarm__iir__lattice__instance__q15" kindref="compound">arm_iir_lattice_instance_q15</ref>;</highlight></codeline>
<codeline lineno="3845"><highlight class="normal"></highlight></codeline>
<codeline lineno="3849" refid="structarm__iir__lattice__instance__q31" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3850"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3851" refid="structarm__iir__lattice__instance__q31_1a9df4570ed28c50fd9193ab654ff236ad" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structarm__iir__lattice__instance__q31_1a9df4570ed28c50fd9193ab654ff236ad" kindref="member">numStages</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3852" refid="structarm__iir__lattice__instance__q31_1a941282745effd26a889fbfadf4b95e6a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>q31_t<sp/>*<ref refid="structarm__iir__lattice__instance__q31_1a941282745effd26a889fbfadf4b95e6a" kindref="member">pState</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3853" refid="structarm__iir__lattice__instance__q31_1a1d30aa16aac7722936ea9dee59211863" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>q31_t<sp/>*<ref refid="structarm__iir__lattice__instance__q31_1a1d30aa16aac7722936ea9dee59211863" kindref="member">pkCoeffs</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3854" refid="structarm__iir__lattice__instance__q31_1a04507e2b982b1dfa97b7b55752dea6b9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>q31_t<sp/>*<ref refid="structarm__iir__lattice__instance__q31_1a04507e2b982b1dfa97b7b55752dea6b9" kindref="member">pvCoeffs</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3855"><highlight class="normal"><sp/><sp/>}<sp/><ref refid="structarm__iir__lattice__instance__q31" kindref="compound">arm_iir_lattice_instance_q31</ref>;</highlight></codeline>
<codeline lineno="3856"><highlight class="normal"></highlight></codeline>
<codeline lineno="3860" refid="structarm__iir__lattice__instance__f32" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3861"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3862" refid="structarm__iir__lattice__instance__f32_1af8de449af5efe1f30be82f9ba35587ee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structarm__iir__lattice__instance__f32_1af8de449af5efe1f30be82f9ba35587ee" kindref="member">numStages</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3863" refid="structarm__iir__lattice__instance__f32_1a30babe7815510219e6e3d28e6e4a5969" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>float32_t<sp/>*<ref refid="structarm__iir__lattice__instance__f32_1a30babe7815510219e6e3d28e6e4a5969" kindref="member">pState</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3864" refid="structarm__iir__lattice__instance__f32_1aa69fcdd3775e828d450ce1bbd978fa31" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>float32_t<sp/>*<ref refid="structarm__iir__lattice__instance__f32_1aa69fcdd3775e828d450ce1bbd978fa31" kindref="member">pkCoeffs</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3865" refid="structarm__iir__lattice__instance__f32_1afc7c8f577e6f27d097fe55f57e707f72" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>float32_t<sp/>*<ref refid="structarm__iir__lattice__instance__f32_1afc7c8f577e6f27d097fe55f57e707f72" kindref="member">pvCoeffs</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3866"><highlight class="normal"><sp/><sp/>}<sp/><ref refid="structarm__iir__lattice__instance__f32" kindref="compound">arm_iir_lattice_instance_f32</ref>;</highlight></codeline>
<codeline lineno="3867"><highlight class="normal"></highlight></codeline>
<codeline lineno="3868"><highlight class="normal"></highlight></codeline>
<codeline lineno="3876"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a56164a0fe48619b8ceec160347bdd2ff" kindref="member">arm_iir_lattice_f32</ref>(</highlight></codeline>
<codeline lineno="3877"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarm__iir__lattice__instance__f32" kindref="compound">arm_iir_lattice_instance_f32</ref><sp/>*<sp/>S,</highlight></codeline>
<codeline lineno="3878"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="3879"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pDst,</highlight></codeline>
<codeline lineno="3880"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize);</highlight></codeline>
<codeline lineno="3881"><highlight class="normal"></highlight></codeline>
<codeline lineno="3882"><highlight class="normal"></highlight></codeline>
<codeline lineno="3892"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1aed3b0230bb77439dc902daa625985e04" kindref="member">arm_iir_lattice_init_f32</ref>(</highlight></codeline>
<codeline lineno="3893"><highlight class="normal"><sp/><sp/><ref refid="structarm__iir__lattice__instance__f32" kindref="compound">arm_iir_lattice_instance_f32</ref><sp/>*<sp/>S,</highlight></codeline>
<codeline lineno="3894"><highlight class="normal"><sp/><sp/>uint16_t<sp/>numStages,</highlight></codeline>
<codeline lineno="3895"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pkCoeffs,</highlight></codeline>
<codeline lineno="3896"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pvCoeffs,</highlight></codeline>
<codeline lineno="3897"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pState,</highlight></codeline>
<codeline lineno="3898"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize);</highlight></codeline>
<codeline lineno="3899"><highlight class="normal"></highlight></codeline>
<codeline lineno="3900"><highlight class="normal"></highlight></codeline>
<codeline lineno="3908"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a123b26fa9156cd8d3622dd85931741ed" kindref="member">arm_iir_lattice_q31</ref>(</highlight></codeline>
<codeline lineno="3909"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarm__iir__lattice__instance__q31" kindref="compound">arm_iir_lattice_instance_q31</ref><sp/>*<sp/>S,</highlight></codeline>
<codeline lineno="3910"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="3911"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pDst,</highlight></codeline>
<codeline lineno="3912"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize);</highlight></codeline>
<codeline lineno="3913"><highlight class="normal"></highlight></codeline>
<codeline lineno="3914"><highlight class="normal"></highlight></codeline>
<codeline lineno="3924"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1ab686c14175581797d9c3ad7bf1d5cc1e" kindref="member">arm_iir_lattice_init_q31</ref>(</highlight></codeline>
<codeline lineno="3925"><highlight class="normal"><sp/><sp/><ref refid="structarm__iir__lattice__instance__q31" kindref="compound">arm_iir_lattice_instance_q31</ref><sp/>*<sp/>S,</highlight></codeline>
<codeline lineno="3926"><highlight class="normal"><sp/><sp/>uint16_t<sp/>numStages,</highlight></codeline>
<codeline lineno="3927"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pkCoeffs,</highlight></codeline>
<codeline lineno="3928"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pvCoeffs,</highlight></codeline>
<codeline lineno="3929"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pState,</highlight></codeline>
<codeline lineno="3930"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize);</highlight></codeline>
<codeline lineno="3931"><highlight class="normal"></highlight></codeline>
<codeline lineno="3932"><highlight class="normal"></highlight></codeline>
<codeline lineno="3940"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1aeb9e9599a288832ed123183eaa8b294a" kindref="member">arm_iir_lattice_q15</ref>(</highlight></codeline>
<codeline lineno="3941"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarm__iir__lattice__instance__q15" kindref="compound">arm_iir_lattice_instance_q15</ref><sp/>*<sp/>S,</highlight></codeline>
<codeline lineno="3942"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="3943"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pDst,</highlight></codeline>
<codeline lineno="3944"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize);</highlight></codeline>
<codeline lineno="3945"><highlight class="normal"></highlight></codeline>
<codeline lineno="3946"><highlight class="normal"></highlight></codeline>
<codeline lineno="3956"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a1f4bc2dd3d5641e96815d3a5aad58998" kindref="member">arm_iir_lattice_init_q15</ref>(</highlight></codeline>
<codeline lineno="3957"><highlight class="normal"><sp/><sp/><ref refid="structarm__iir__lattice__instance__q15" kindref="compound">arm_iir_lattice_instance_q15</ref><sp/>*<sp/>S,</highlight></codeline>
<codeline lineno="3958"><highlight class="normal"><sp/><sp/>uint16_t<sp/>numStages,</highlight></codeline>
<codeline lineno="3959"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pkCoeffs,</highlight></codeline>
<codeline lineno="3960"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pvCoeffs,</highlight></codeline>
<codeline lineno="3961"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pState,</highlight></codeline>
<codeline lineno="3962"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize);</highlight></codeline>
<codeline lineno="3963"><highlight class="normal"></highlight></codeline>
<codeline lineno="3964"><highlight class="normal"></highlight></codeline>
<codeline lineno="3968" refid="structarm__lms__instance__f32" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3969"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3970" refid="structarm__lms__instance__f32_1af73880d9009982f5d14529869494ec3d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structarm__lms__instance__f32_1af73880d9009982f5d14529869494ec3d" kindref="member">numTaps</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3971" refid="structarm__lms__instance__f32_1aaf94285be2f99b5b9af40bea8dcb14b9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>float32_t<sp/>*<ref refid="structarm__lms__instance__f32_1aaf94285be2f99b5b9af40bea8dcb14b9" kindref="member">pState</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3972" refid="structarm__lms__instance__f32_1a4795c6f7d3f17cec15c2fd09f66edd1a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>float32_t<sp/>*<ref refid="structarm__lms__instance__f32_1a4795c6f7d3f17cec15c2fd09f66edd1a" kindref="member">pCoeffs</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="3973" refid="structarm__lms__instance__f32_1ae2af43d74c93dba16b876e10c97a5b99" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>float32_t<sp/><ref refid="structarm__lms__instance__f32_1ae2af43d74c93dba16b876e10c97a5b99" kindref="member">mu</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3974"><highlight class="normal"><sp/><sp/>}<sp/><ref refid="structarm__lms__instance__f32" kindref="compound">arm_lms_instance_f32</ref>;</highlight></codeline>
<codeline lineno="3975"><highlight class="normal"></highlight></codeline>
<codeline lineno="3976"><highlight class="normal"></highlight></codeline>
<codeline lineno="3986"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1ae266d009e682180421601627c79a3843" kindref="member">arm_lms_f32</ref>(</highlight></codeline>
<codeline lineno="3987"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarm__lms__instance__f32" kindref="compound">arm_lms_instance_f32</ref><sp/>*<sp/>S,</highlight></codeline>
<codeline lineno="3988"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="3989"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pRef,</highlight></codeline>
<codeline lineno="3990"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pOut,</highlight></codeline>
<codeline lineno="3991"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pErr,</highlight></codeline>
<codeline lineno="3992"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize);</highlight></codeline>
<codeline lineno="3993"><highlight class="normal"></highlight></codeline>
<codeline lineno="3994"><highlight class="normal"></highlight></codeline>
<codeline lineno="4004"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a9fc7adca0966ff2cec1746fca8364cee" kindref="member">arm_lms_init_f32</ref>(</highlight></codeline>
<codeline lineno="4005"><highlight class="normal"><sp/><sp/><ref refid="structarm__lms__instance__f32" kindref="compound">arm_lms_instance_f32</ref><sp/>*<sp/>S,</highlight></codeline>
<codeline lineno="4006"><highlight class="normal"><sp/><sp/>uint16_t<sp/>numTaps,</highlight></codeline>
<codeline lineno="4007"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pCoeffs,</highlight></codeline>
<codeline lineno="4008"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pState,</highlight></codeline>
<codeline lineno="4009"><highlight class="normal"><sp/><sp/>float32_t<sp/>mu,</highlight></codeline>
<codeline lineno="4010"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize);</highlight></codeline>
<codeline lineno="4011"><highlight class="normal"></highlight></codeline>
<codeline lineno="4012"><highlight class="normal"></highlight></codeline>
<codeline lineno="4016" refid="structarm__lms__instance__q15" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4017"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4018" refid="structarm__lms__instance__q15_1a0078e894f805af1b360369e619fb57b3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structarm__lms__instance__q15_1a0078e894f805af1b360369e619fb57b3" kindref="member">numTaps</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4019" refid="structarm__lms__instance__q15_1a9a575ff82c1e68cbb583083439260d08" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="structarm__lms__instance__q15_1a9a575ff82c1e68cbb583083439260d08" kindref="member">pState</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4020" refid="structarm__lms__instance__q15_1a42f95368b94898eb82608e1113d18cab" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="structarm__lms__instance__q15_1a42f95368b94898eb82608e1113d18cab" kindref="member">pCoeffs</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4021" refid="structarm__lms__instance__q15_1aae46129d7cfd7f1c162cc502ed0a9d49" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>q15_t<sp/><ref refid="structarm__lms__instance__q15_1aae46129d7cfd7f1c162cc502ed0a9d49" kindref="member">mu</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4022" refid="structarm__lms__instance__q15_1acca5fbaef4a52ae411de24c9a0b929cf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structarm__lms__instance__q15_1acca5fbaef4a52ae411de24c9a0b929cf" kindref="member">postShift</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="4023"><highlight class="normal"><sp/><sp/>}<sp/><ref refid="structarm__lms__instance__q15" kindref="compound">arm_lms_instance_q15</ref>;</highlight></codeline>
<codeline lineno="4024"><highlight class="normal"></highlight></codeline>
<codeline lineno="4025"><highlight class="normal"></highlight></codeline>
<codeline lineno="4036"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a9544cc26f18cd4465cfbed371be822b3" kindref="member">arm_lms_init_q15</ref>(</highlight></codeline>
<codeline lineno="4037"><highlight class="normal"><sp/><sp/><ref refid="structarm__lms__instance__q15" kindref="compound">arm_lms_instance_q15</ref><sp/>*<sp/>S,</highlight></codeline>
<codeline lineno="4038"><highlight class="normal"><sp/><sp/>uint16_t<sp/>numTaps,</highlight></codeline>
<codeline lineno="4039"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pCoeffs,</highlight></codeline>
<codeline lineno="4040"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pState,</highlight></codeline>
<codeline lineno="4041"><highlight class="normal"><sp/><sp/>q15_t<sp/>mu,</highlight></codeline>
<codeline lineno="4042"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize,</highlight></codeline>
<codeline lineno="4043"><highlight class="normal"><sp/><sp/>uint32_t<sp/>postShift);</highlight></codeline>
<codeline lineno="4044"><highlight class="normal"></highlight></codeline>
<codeline lineno="4045"><highlight class="normal"></highlight></codeline>
<codeline lineno="4055"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1acde16c17eb75979f81b34e2e2a58c7ac" kindref="member">arm_lms_q15</ref>(</highlight></codeline>
<codeline lineno="4056"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarm__lms__instance__q15" kindref="compound">arm_lms_instance_q15</ref><sp/>*<sp/>S,</highlight></codeline>
<codeline lineno="4057"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="4058"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pRef,</highlight></codeline>
<codeline lineno="4059"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pOut,</highlight></codeline>
<codeline lineno="4060"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pErr,</highlight></codeline>
<codeline lineno="4061"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize);</highlight></codeline>
<codeline lineno="4062"><highlight class="normal"></highlight></codeline>
<codeline lineno="4063"><highlight class="normal"></highlight></codeline>
<codeline lineno="4067" refid="structarm__lms__instance__q31" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4068"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4069" refid="structarm__lms__instance__q31_1ac0d84f7d054555931ef8a62511fbcb8a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structarm__lms__instance__q31_1ac0d84f7d054555931ef8a62511fbcb8a" kindref="member">numTaps</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4070" refid="structarm__lms__instance__q31_1a206d47b49de6f357f933ebe61520753c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>q31_t<sp/>*<ref refid="structarm__lms__instance__q31_1a206d47b49de6f357f933ebe61520753c" kindref="member">pState</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4071" refid="structarm__lms__instance__q31_1a4afe56e991a5416adfd462aa88bda500" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>q31_t<sp/>*<ref refid="structarm__lms__instance__q31_1a4afe56e991a5416adfd462aa88bda500" kindref="member">pCoeffs</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4072" refid="structarm__lms__instance__q31_1acb6ca9996b3c5f740d5d6c8e9f4f1d46" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>q31_t<sp/><ref refid="structarm__lms__instance__q31_1acb6ca9996b3c5f740d5d6c8e9f4f1d46" kindref="member">mu</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4073" refid="structarm__lms__instance__q31_1a4705a8f0011bb9166e09bf5bd51e595e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structarm__lms__instance__q31_1a4705a8f0011bb9166e09bf5bd51e595e" kindref="member">postShift</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="4074"><highlight class="normal"><sp/><sp/>}<sp/><ref refid="structarm__lms__instance__q31" kindref="compound">arm_lms_instance_q31</ref>;</highlight></codeline>
<codeline lineno="4075"><highlight class="normal"></highlight></codeline>
<codeline lineno="4076"><highlight class="normal"></highlight></codeline>
<codeline lineno="4086"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a6a0abfe6041253a6f91c63b383a64257" kindref="member">arm_lms_q31</ref>(</highlight></codeline>
<codeline lineno="4087"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarm__lms__instance__q31" kindref="compound">arm_lms_instance_q31</ref><sp/>*<sp/>S,</highlight></codeline>
<codeline lineno="4088"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="4089"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pRef,</highlight></codeline>
<codeline lineno="4090"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pOut,</highlight></codeline>
<codeline lineno="4091"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pErr,</highlight></codeline>
<codeline lineno="4092"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize);</highlight></codeline>
<codeline lineno="4093"><highlight class="normal"></highlight></codeline>
<codeline lineno="4094"><highlight class="normal"></highlight></codeline>
<codeline lineno="4105"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a8d4bc251169f4b102355097a9f7530d6" kindref="member">arm_lms_init_q31</ref>(</highlight></codeline>
<codeline lineno="4106"><highlight class="normal"><sp/><sp/><ref refid="structarm__lms__instance__q31" kindref="compound">arm_lms_instance_q31</ref><sp/>*<sp/>S,</highlight></codeline>
<codeline lineno="4107"><highlight class="normal"><sp/><sp/>uint16_t<sp/>numTaps,</highlight></codeline>
<codeline lineno="4108"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pCoeffs,</highlight></codeline>
<codeline lineno="4109"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pState,</highlight></codeline>
<codeline lineno="4110"><highlight class="normal"><sp/><sp/>q31_t<sp/>mu,</highlight></codeline>
<codeline lineno="4111"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize,</highlight></codeline>
<codeline lineno="4112"><highlight class="normal"><sp/><sp/>uint32_t<sp/>postShift);</highlight></codeline>
<codeline lineno="4113"><highlight class="normal"></highlight></codeline>
<codeline lineno="4114"><highlight class="normal"></highlight></codeline>
<codeline lineno="4118" refid="structarm__lms__norm__instance__f32" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4119"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4120" refid="structarm__lms__norm__instance__f32_1ac95f8ca3d816524c2070643852fac5e8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structarm__lms__norm__instance__f32_1ac95f8ca3d816524c2070643852fac5e8" kindref="member">numTaps</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4121" refid="structarm__lms__norm__instance__f32_1a0bc03338687002ed5f2e4a363eb095ec" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>float32_t<sp/>*<ref refid="structarm__lms__norm__instance__f32_1a0bc03338687002ed5f2e4a363eb095ec" kindref="member">pState</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4122" refid="structarm__lms__norm__instance__f32_1a1ba688d90aba7de003ed4ad8e2e7ddda" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>float32_t<sp/>*<ref refid="structarm__lms__norm__instance__f32_1a1ba688d90aba7de003ed4ad8e2e7ddda" kindref="member">pCoeffs</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4123" refid="structarm__lms__norm__instance__f32_1a84401d3cfc6c40f69c08223cf341b886" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>float32_t<sp/><ref refid="structarm__lms__norm__instance__f32_1a84401d3cfc6c40f69c08223cf341b886" kindref="member">mu</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4124" refid="structarm__lms__norm__instance__f32_1a6a4119e4f39447bbee31b066deafa16f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>float32_t<sp/><ref refid="structarm__lms__norm__instance__f32_1a6a4119e4f39447bbee31b066deafa16f" kindref="member">energy</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4125" refid="structarm__lms__norm__instance__f32_1aec958fe89b164a30f38bcca9f5d96218" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>float32_t<sp/><ref refid="structarm__lms__norm__instance__f32_1aec958fe89b164a30f38bcca9f5d96218" kindref="member">x0</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4126"><highlight class="normal"><sp/><sp/>}<sp/><ref refid="structarm__lms__norm__instance__f32" kindref="compound">arm_lms_norm_instance_f32</ref>;</highlight></codeline>
<codeline lineno="4127"><highlight class="normal"></highlight></codeline>
<codeline lineno="4128"><highlight class="normal"></highlight></codeline>
<codeline lineno="4138"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a2418c929087c6eba719758eaae3f3300" kindref="member">arm_lms_norm_f32</ref>(</highlight></codeline>
<codeline lineno="4139"><highlight class="normal"><sp/><sp/><ref refid="structarm__lms__norm__instance__f32" kindref="compound">arm_lms_norm_instance_f32</ref><sp/>*<sp/>S,</highlight></codeline>
<codeline lineno="4140"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="4141"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pRef,</highlight></codeline>
<codeline lineno="4142"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pOut,</highlight></codeline>
<codeline lineno="4143"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pErr,</highlight></codeline>
<codeline lineno="4144"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize);</highlight></codeline>
<codeline lineno="4145"><highlight class="normal"></highlight></codeline>
<codeline lineno="4146"><highlight class="normal"></highlight></codeline>
<codeline lineno="4156"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1ac7ccbaea863882056eee815456464670" kindref="member">arm_lms_norm_init_f32</ref>(</highlight></codeline>
<codeline lineno="4157"><highlight class="normal"><sp/><sp/><ref refid="structarm__lms__norm__instance__f32" kindref="compound">arm_lms_norm_instance_f32</ref><sp/>*<sp/>S,</highlight></codeline>
<codeline lineno="4158"><highlight class="normal"><sp/><sp/>uint16_t<sp/>numTaps,</highlight></codeline>
<codeline lineno="4159"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pCoeffs,</highlight></codeline>
<codeline lineno="4160"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pState,</highlight></codeline>
<codeline lineno="4161"><highlight class="normal"><sp/><sp/>float32_t<sp/>mu,</highlight></codeline>
<codeline lineno="4162"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize);</highlight></codeline>
<codeline lineno="4163"><highlight class="normal"></highlight></codeline>
<codeline lineno="4164"><highlight class="normal"></highlight></codeline>
<codeline lineno="4168" refid="structarm__lms__norm__instance__q31" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4169"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4170" refid="structarm__lms__norm__instance__q31_1a28e4c085af69c9c3e2e95dacf8004c3e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structarm__lms__norm__instance__q31_1a28e4c085af69c9c3e2e95dacf8004c3e" kindref="member">numTaps</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4171" refid="structarm__lms__norm__instance__q31_1a6b25c96cf048b77078d62f4252a01ec4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>q31_t<sp/>*<ref refid="structarm__lms__norm__instance__q31_1a6b25c96cf048b77078d62f4252a01ec4" kindref="member">pState</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4172" refid="structarm__lms__norm__instance__q31_1a57a64c1ff102d033c1bd05043f1d9955" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>q31_t<sp/>*<ref refid="structarm__lms__norm__instance__q31_1a57a64c1ff102d033c1bd05043f1d9955" kindref="member">pCoeffs</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4173" refid="structarm__lms__norm__instance__q31_1ad3dd2a2406e02fdaa7782ba6c3940a64" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>q31_t<sp/><ref refid="structarm__lms__norm__instance__q31_1ad3dd2a2406e02fdaa7782ba6c3940a64" kindref="member">mu</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4174" refid="structarm__lms__norm__instance__q31_1a28d7b9e437817f83397e081967e90f3c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structarm__lms__norm__instance__q31_1a28d7b9e437817f83397e081967e90f3c" kindref="member">postShift</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4175" refid="structarm__lms__norm__instance__q31_1a85836d0907077b9ac660f7bbbaa9d694" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>q31_t<sp/>*<ref refid="structarm__lms__norm__instance__q31_1a85836d0907077b9ac660f7bbbaa9d694" kindref="member">recipTable</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4176" refid="structarm__lms__norm__instance__q31_1a3c0ae42869afec8555dc8e3a7ef9b386" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>q31_t<sp/><ref refid="structarm__lms__norm__instance__q31_1a3c0ae42869afec8555dc8e3a7ef9b386" kindref="member">energy</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4177" refid="structarm__lms__norm__instance__q31_1a47c4466d644e0d8ba407995adfa9b917" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>q31_t<sp/><ref refid="structarm__lms__norm__instance__q31_1a47c4466d644e0d8ba407995adfa9b917" kindref="member">x0</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4178"><highlight class="normal"><sp/><sp/>}<sp/><ref refid="structarm__lms__norm__instance__q31" kindref="compound">arm_lms_norm_instance_q31</ref>;</highlight></codeline>
<codeline lineno="4179"><highlight class="normal"></highlight></codeline>
<codeline lineno="4180"><highlight class="normal"></highlight></codeline>
<codeline lineno="4190"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a7128775e99817c183a7d7ad34e8b6e05" kindref="member">arm_lms_norm_q31</ref>(</highlight></codeline>
<codeline lineno="4191"><highlight class="normal"><sp/><sp/><ref refid="structarm__lms__norm__instance__q31" kindref="compound">arm_lms_norm_instance_q31</ref><sp/>*<sp/>S,</highlight></codeline>
<codeline lineno="4192"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="4193"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pRef,</highlight></codeline>
<codeline lineno="4194"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pOut,</highlight></codeline>
<codeline lineno="4195"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pErr,</highlight></codeline>
<codeline lineno="4196"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize);</highlight></codeline>
<codeline lineno="4197"><highlight class="normal"></highlight></codeline>
<codeline lineno="4198"><highlight class="normal"></highlight></codeline>
<codeline lineno="4209"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a1d9659dbbea4c89a7a9d14d5fc0dd490" kindref="member">arm_lms_norm_init_q31</ref>(</highlight></codeline>
<codeline lineno="4210"><highlight class="normal"><sp/><sp/><ref refid="structarm__lms__norm__instance__q31" kindref="compound">arm_lms_norm_instance_q31</ref><sp/>*<sp/>S,</highlight></codeline>
<codeline lineno="4211"><highlight class="normal"><sp/><sp/>uint16_t<sp/>numTaps,</highlight></codeline>
<codeline lineno="4212"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pCoeffs,</highlight></codeline>
<codeline lineno="4213"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pState,</highlight></codeline>
<codeline lineno="4214"><highlight class="normal"><sp/><sp/>q31_t<sp/>mu,</highlight></codeline>
<codeline lineno="4215"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize,</highlight></codeline>
<codeline lineno="4216"><highlight class="normal"><sp/><sp/>uint8_t<sp/>postShift);</highlight></codeline>
<codeline lineno="4217"><highlight class="normal"></highlight></codeline>
<codeline lineno="4218"><highlight class="normal"></highlight></codeline>
<codeline lineno="4222" refid="structarm__lms__norm__instance__q15" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4223"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4224" refid="structarm__lms__norm__instance__q15_1a9ee7a45f4f315d7996a969e25fdc7146" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structarm__lms__norm__instance__q15_1a9ee7a45f4f315d7996a969e25fdc7146" kindref="member">numTaps</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4225" refid="structarm__lms__norm__instance__q15_1aa4de490b3bdbd03561b76ee07901c8e3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="structarm__lms__norm__instance__q15_1aa4de490b3bdbd03561b76ee07901c8e3" kindref="member">pState</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4226" refid="structarm__lms__norm__instance__q15_1ae7bca648c75a2ffa02d87852bb78bc8a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="structarm__lms__norm__instance__q15_1ae7bca648c75a2ffa02d87852bb78bc8a" kindref="member">pCoeffs</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4227" refid="structarm__lms__norm__instance__q15_1a7ce00f21d11cfda6d963240641deea8c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>q15_t<sp/><ref refid="structarm__lms__norm__instance__q15_1a7ce00f21d11cfda6d963240641deea8c" kindref="member">mu</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4228" refid="structarm__lms__norm__instance__q15_1aa0d435fbcf7dedb7179d4467e9b79e9f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structarm__lms__norm__instance__q15_1aa0d435fbcf7dedb7179d4467e9b79e9f" kindref="member">postShift</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4229" refid="structarm__lms__norm__instance__q15_1a9aabb0e4c79f3db807e7a441fa36f5f8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="structarm__lms__norm__instance__q15_1a9aabb0e4c79f3db807e7a441fa36f5f8" kindref="member">recipTable</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4230" refid="structarm__lms__norm__instance__q15_1a1c81ded399919d8181026bc1c8602e7b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>q15_t<sp/><ref refid="structarm__lms__norm__instance__q15_1a1c81ded399919d8181026bc1c8602e7b" kindref="member">energy</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4231" refid="structarm__lms__norm__instance__q15_1a3fc1d6f97d2c6d5324871de6895cb7e9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>q15_t<sp/><ref refid="structarm__lms__norm__instance__q15_1a3fc1d6f97d2c6d5324871de6895cb7e9" kindref="member">x0</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4232"><highlight class="normal"><sp/><sp/>}<sp/><ref refid="structarm__lms__norm__instance__q15" kindref="compound">arm_lms_norm_instance_q15</ref>;</highlight></codeline>
<codeline lineno="4233"><highlight class="normal"></highlight></codeline>
<codeline lineno="4234"><highlight class="normal"></highlight></codeline>
<codeline lineno="4244"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1ad47486a399dedb0bc85a5990ec5cf981" kindref="member">arm_lms_norm_q15</ref>(</highlight></codeline>
<codeline lineno="4245"><highlight class="normal"><sp/><sp/><ref refid="structarm__lms__norm__instance__q15" kindref="compound">arm_lms_norm_instance_q15</ref><sp/>*<sp/>S,</highlight></codeline>
<codeline lineno="4246"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="4247"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pRef,</highlight></codeline>
<codeline lineno="4248"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pOut,</highlight></codeline>
<codeline lineno="4249"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pErr,</highlight></codeline>
<codeline lineno="4250"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize);</highlight></codeline>
<codeline lineno="4251"><highlight class="normal"></highlight></codeline>
<codeline lineno="4252"><highlight class="normal"></highlight></codeline>
<codeline lineno="4263"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a213ab1ee2e154cc2fa30d667b1994b89" kindref="member">arm_lms_norm_init_q15</ref>(</highlight></codeline>
<codeline lineno="4264"><highlight class="normal"><sp/><sp/><ref refid="structarm__lms__norm__instance__q15" kindref="compound">arm_lms_norm_instance_q15</ref><sp/>*<sp/>S,</highlight></codeline>
<codeline lineno="4265"><highlight class="normal"><sp/><sp/>uint16_t<sp/>numTaps,</highlight></codeline>
<codeline lineno="4266"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pCoeffs,</highlight></codeline>
<codeline lineno="4267"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pState,</highlight></codeline>
<codeline lineno="4268"><highlight class="normal"><sp/><sp/>q15_t<sp/>mu,</highlight></codeline>
<codeline lineno="4269"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize,</highlight></codeline>
<codeline lineno="4270"><highlight class="normal"><sp/><sp/>uint8_t<sp/>postShift);</highlight></codeline>
<codeline lineno="4271"><highlight class="normal"></highlight></codeline>
<codeline lineno="4272"><highlight class="normal"></highlight></codeline>
<codeline lineno="4281"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a22021e4222773f01e9960358a531cfb8" kindref="member">arm_correlate_f32</ref>(</highlight></codeline>
<codeline lineno="4282"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pSrcA,</highlight></codeline>
<codeline lineno="4283"><highlight class="normal"><sp/><sp/>uint32_t<sp/>srcALen,</highlight></codeline>
<codeline lineno="4284"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pSrcB,</highlight></codeline>
<codeline lineno="4285"><highlight class="normal"><sp/><sp/>uint32_t<sp/>srcBLen,</highlight></codeline>
<codeline lineno="4286"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pDst);</highlight></codeline>
<codeline lineno="4287"><highlight class="normal"></highlight></codeline>
<codeline lineno="4288"><highlight class="normal"></highlight></codeline>
<codeline lineno="4298"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1ad71c0ec70ec69edbc48563d9a5f68451" kindref="member">arm_correlate_opt_q15</ref>(</highlight></codeline>
<codeline lineno="4299"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pSrcA,</highlight></codeline>
<codeline lineno="4300"><highlight class="normal"><sp/><sp/>uint32_t<sp/>srcALen,</highlight></codeline>
<codeline lineno="4301"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pSrcB,</highlight></codeline>
<codeline lineno="4302"><highlight class="normal"><sp/><sp/>uint32_t<sp/>srcBLen,</highlight></codeline>
<codeline lineno="4303"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pDst,</highlight></codeline>
<codeline lineno="4304"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pScratch);</highlight></codeline>
<codeline lineno="4305"><highlight class="normal"></highlight></codeline>
<codeline lineno="4306"><highlight class="normal"></highlight></codeline>
<codeline lineno="4316"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a5ec96b8e420d68b0e626df0812274d46" kindref="member">arm_correlate_q15</ref>(</highlight></codeline>
<codeline lineno="4317"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pSrcA,</highlight></codeline>
<codeline lineno="4318"><highlight class="normal"><sp/><sp/>uint32_t<sp/>srcALen,</highlight></codeline>
<codeline lineno="4319"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pSrcB,</highlight></codeline>
<codeline lineno="4320"><highlight class="normal"><sp/><sp/>uint32_t<sp/>srcBLen,</highlight></codeline>
<codeline lineno="4321"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pDst);</highlight></codeline>
<codeline lineno="4322"><highlight class="normal"></highlight></codeline>
<codeline lineno="4323"><highlight class="normal"></highlight></codeline>
<codeline lineno="4333"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1ac8de3da44f58e86c2c86156276ca154f" kindref="member">arm_correlate_fast_q15</ref>(</highlight></codeline>
<codeline lineno="4334"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pSrcA,</highlight></codeline>
<codeline lineno="4335"><highlight class="normal"><sp/><sp/>uint32_t<sp/>srcALen,</highlight></codeline>
<codeline lineno="4336"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pSrcB,</highlight></codeline>
<codeline lineno="4337"><highlight class="normal"><sp/><sp/>uint32_t<sp/>srcBLen,</highlight></codeline>
<codeline lineno="4338"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pDst);</highlight></codeline>
<codeline lineno="4339"><highlight class="normal"></highlight></codeline>
<codeline lineno="4340"><highlight class="normal"></highlight></codeline>
<codeline lineno="4350"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a40a0236b17220e8e22a22b5bc1c53c6b" kindref="member">arm_correlate_fast_opt_q15</ref>(</highlight></codeline>
<codeline lineno="4351"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pSrcA,</highlight></codeline>
<codeline lineno="4352"><highlight class="normal"><sp/><sp/>uint32_t<sp/>srcALen,</highlight></codeline>
<codeline lineno="4353"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pSrcB,</highlight></codeline>
<codeline lineno="4354"><highlight class="normal"><sp/><sp/>uint32_t<sp/>srcBLen,</highlight></codeline>
<codeline lineno="4355"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pDst,</highlight></codeline>
<codeline lineno="4356"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pScratch);</highlight></codeline>
<codeline lineno="4357"><highlight class="normal"></highlight></codeline>
<codeline lineno="4358"><highlight class="normal"></highlight></codeline>
<codeline lineno="4367"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a1367dc6c80476406c951e68d7fac4e8c" kindref="member">arm_correlate_q31</ref>(</highlight></codeline>
<codeline lineno="4368"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pSrcA,</highlight></codeline>
<codeline lineno="4369"><highlight class="normal"><sp/><sp/>uint32_t<sp/>srcALen,</highlight></codeline>
<codeline lineno="4370"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pSrcB,</highlight></codeline>
<codeline lineno="4371"><highlight class="normal"><sp/><sp/>uint32_t<sp/>srcBLen,</highlight></codeline>
<codeline lineno="4372"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pDst);</highlight></codeline>
<codeline lineno="4373"><highlight class="normal"></highlight></codeline>
<codeline lineno="4374"><highlight class="normal"></highlight></codeline>
<codeline lineno="4383"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1abecd3d7b077dbbef43f93e9e037815ed" kindref="member">arm_correlate_fast_q31</ref>(</highlight></codeline>
<codeline lineno="4384"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pSrcA,</highlight></codeline>
<codeline lineno="4385"><highlight class="normal"><sp/><sp/>uint32_t<sp/>srcALen,</highlight></codeline>
<codeline lineno="4386"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pSrcB,</highlight></codeline>
<codeline lineno="4387"><highlight class="normal"><sp/><sp/>uint32_t<sp/>srcBLen,</highlight></codeline>
<codeline lineno="4388"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pDst);</highlight></codeline>
<codeline lineno="4389"><highlight class="normal"></highlight></codeline>
<codeline lineno="4390"><highlight class="normal"></highlight></codeline>
<codeline lineno="4401"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a746e8857cafe33ec5d6780729c18c311" kindref="member">arm_correlate_opt_q7</ref>(</highlight></codeline>
<codeline lineno="4402"><highlight class="normal"><sp/><sp/>q7_t<sp/>*<sp/>pSrcA,</highlight></codeline>
<codeline lineno="4403"><highlight class="normal"><sp/><sp/>uint32_t<sp/>srcALen,</highlight></codeline>
<codeline lineno="4404"><highlight class="normal"><sp/><sp/>q7_t<sp/>*<sp/>pSrcB,</highlight></codeline>
<codeline lineno="4405"><highlight class="normal"><sp/><sp/>uint32_t<sp/>srcBLen,</highlight></codeline>
<codeline lineno="4406"><highlight class="normal"><sp/><sp/>q7_t<sp/>*<sp/>pDst,</highlight></codeline>
<codeline lineno="4407"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pScratch1,</highlight></codeline>
<codeline lineno="4408"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pScratch2);</highlight></codeline>
<codeline lineno="4409"><highlight class="normal"></highlight></codeline>
<codeline lineno="4410"><highlight class="normal"></highlight></codeline>
<codeline lineno="4419"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a284ddcc49e4ac532d52a70d0383c5992" kindref="member">arm_correlate_q7</ref>(</highlight></codeline>
<codeline lineno="4420"><highlight class="normal"><sp/><sp/>q7_t<sp/>*<sp/>pSrcA,</highlight></codeline>
<codeline lineno="4421"><highlight class="normal"><sp/><sp/>uint32_t<sp/>srcALen,</highlight></codeline>
<codeline lineno="4422"><highlight class="normal"><sp/><sp/>q7_t<sp/>*<sp/>pSrcB,</highlight></codeline>
<codeline lineno="4423"><highlight class="normal"><sp/><sp/>uint32_t<sp/>srcBLen,</highlight></codeline>
<codeline lineno="4424"><highlight class="normal"><sp/><sp/>q7_t<sp/>*<sp/>pDst);</highlight></codeline>
<codeline lineno="4425"><highlight class="normal"></highlight></codeline>
<codeline lineno="4426"><highlight class="normal"></highlight></codeline>
<codeline lineno="4430" refid="structarm__fir__sparse__instance__f32" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4431"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4432" refid="structarm__fir__sparse__instance__f32_1a5e19e7f234ac30a3db843352bf2a8515" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structarm__fir__sparse__instance__f32_1a5e19e7f234ac30a3db843352bf2a8515" kindref="member">numTaps</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4433" refid="structarm__fir__sparse__instance__f32_1a57585aeca9dc8686e08df2865375a86d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structarm__fir__sparse__instance__f32_1a57585aeca9dc8686e08df2865375a86d" kindref="member">stateIndex</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4434" refid="structarm__fir__sparse__instance__f32_1a794af0916666d11cc564d6df08553555" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>float32_t<sp/>*<ref refid="structarm__fir__sparse__instance__f32_1a794af0916666d11cc564d6df08553555" kindref="member">pState</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4435" refid="structarm__fir__sparse__instance__f32_1a04af7c738dfb0882ad102fcad501d94a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>float32_t<sp/>*<ref refid="structarm__fir__sparse__instance__f32_1a04af7c738dfb0882ad102fcad501d94a" kindref="member">pCoeffs</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4436" refid="structarm__fir__sparse__instance__f32_1af8b8c775f4084c36774f06c082b4c078" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structarm__fir__sparse__instance__f32_1af8b8c775f4084c36774f06c082b4c078" kindref="member">maxDelay</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4437" refid="structarm__fir__sparse__instance__f32_1aaa54ae67e5d10c6dd0d697945c638d31" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>*<ref refid="structarm__fir__sparse__instance__f32_1aaa54ae67e5d10c6dd0d697945c638d31" kindref="member">pTapDelay</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4438"><highlight class="normal"><sp/><sp/>}<sp/><ref refid="structarm__fir__sparse__instance__f32" kindref="compound">arm_fir_sparse_instance_f32</ref>;</highlight></codeline>
<codeline lineno="4439"><highlight class="normal"></highlight></codeline>
<codeline lineno="4443" refid="structarm__fir__sparse__instance__q31" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4444"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4445" refid="structarm__fir__sparse__instance__q31_1a07b6c01e58ec6dde384719130d36b0dc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structarm__fir__sparse__instance__q31_1a07b6c01e58ec6dde384719130d36b0dc" kindref="member">numTaps</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4446" refid="structarm__fir__sparse__instance__q31_1a557ed9d477e76e4ad2019344f19f568a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structarm__fir__sparse__instance__q31_1a557ed9d477e76e4ad2019344f19f568a" kindref="member">stateIndex</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4447" refid="structarm__fir__sparse__instance__q31_1a830be89daa5a393b225048889aa045d1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>q31_t<sp/>*<ref refid="structarm__fir__sparse__instance__q31_1a830be89daa5a393b225048889aa045d1" kindref="member">pState</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4448" refid="structarm__fir__sparse__instance__q31_1a093d6227f0d1597982cd083fb126f4e0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>q31_t<sp/>*<ref refid="structarm__fir__sparse__instance__q31_1a093d6227f0d1597982cd083fb126f4e0" kindref="member">pCoeffs</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4449" refid="structarm__fir__sparse__instance__q31_1afdd3a1dc72132c854dc379154b68b674" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structarm__fir__sparse__instance__q31_1afdd3a1dc72132c854dc379154b68b674" kindref="member">maxDelay</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4450" refid="structarm__fir__sparse__instance__q31_1ab87ae457adec8f727afefaa2599fc983" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>*<ref refid="structarm__fir__sparse__instance__q31_1ab87ae457adec8f727afefaa2599fc983" kindref="member">pTapDelay</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4451"><highlight class="normal"><sp/><sp/>}<sp/><ref refid="structarm__fir__sparse__instance__q31" kindref="compound">arm_fir_sparse_instance_q31</ref>;</highlight></codeline>
<codeline lineno="4452"><highlight class="normal"></highlight></codeline>
<codeline lineno="4456" refid="structarm__fir__sparse__instance__q15" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4457"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4458" refid="structarm__fir__sparse__instance__q15_1a0f66b126dd8b85f7467cfb01b7bc4d77" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structarm__fir__sparse__instance__q15_1a0f66b126dd8b85f7467cfb01b7bc4d77" kindref="member">numTaps</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4459" refid="structarm__fir__sparse__instance__q15_1a89487f28cab52637426024005e478985" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structarm__fir__sparse__instance__q15_1a89487f28cab52637426024005e478985" kindref="member">stateIndex</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4460" refid="structarm__fir__sparse__instance__q15_1a98b92b0f5208110129b9a67b1db90408" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="structarm__fir__sparse__instance__q15_1a98b92b0f5208110129b9a67b1db90408" kindref="member">pState</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4461" refid="structarm__fir__sparse__instance__q15_1a78a6565473b5f0b8c77c3f0f58a76069" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="structarm__fir__sparse__instance__q15_1a78a6565473b5f0b8c77c3f0f58a76069" kindref="member">pCoeffs</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4462" refid="structarm__fir__sparse__instance__q15_1ad14cc1070eecf7e1926d8f67a8273182" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structarm__fir__sparse__instance__q15_1ad14cc1070eecf7e1926d8f67a8273182" kindref="member">maxDelay</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4463" refid="structarm__fir__sparse__instance__q15_1aeab2855176c6efdb231a73a3672837d5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>*<ref refid="structarm__fir__sparse__instance__q15_1aeab2855176c6efdb231a73a3672837d5" kindref="member">pTapDelay</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4464"><highlight class="normal"><sp/><sp/>}<sp/><ref refid="structarm__fir__sparse__instance__q15" kindref="compound">arm_fir_sparse_instance_q15</ref>;</highlight></codeline>
<codeline lineno="4465"><highlight class="normal"></highlight></codeline>
<codeline lineno="4469" refid="structarm__fir__sparse__instance__q7" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4470"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4471" refid="structarm__fir__sparse__instance__q7_1a54cdd27ca1c672b126c38763ce678b1c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structarm__fir__sparse__instance__q7_1a54cdd27ca1c672b126c38763ce678b1c" kindref="member">numTaps</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4472" refid="structarm__fir__sparse__instance__q7_1a2d2e65473fe3a3f2b953b4e0b60824df" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structarm__fir__sparse__instance__q7_1a2d2e65473fe3a3f2b953b4e0b60824df" kindref="member">stateIndex</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4473" refid="structarm__fir__sparse__instance__q7_1a18072cf3ef3666d588f0d49512f2b28f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>q7_t<sp/>*<ref refid="structarm__fir__sparse__instance__q7_1a18072cf3ef3666d588f0d49512f2b28f" kindref="member">pState</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4474" refid="structarm__fir__sparse__instance__q7_1a3dac86f15e33553e8f3e19e0d712bae5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>q7_t<sp/>*<ref refid="structarm__fir__sparse__instance__q7_1a3dac86f15e33553e8f3e19e0d712bae5" kindref="member">pCoeffs</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4475" refid="structarm__fir__sparse__instance__q7_1af74dacc1d34c078283e50f2530eb91df" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structarm__fir__sparse__instance__q7_1af74dacc1d34c078283e50f2530eb91df" kindref="member">maxDelay</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4476" refid="structarm__fir__sparse__instance__q7_1ac625393c84bc0342ffdf26fc4eba1ac1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>*<ref refid="structarm__fir__sparse__instance__q7_1ac625393c84bc0342ffdf26fc4eba1ac1" kindref="member">pTapDelay</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4477"><highlight class="normal"><sp/><sp/>}<sp/><ref refid="structarm__fir__sparse__instance__q7" kindref="compound">arm_fir_sparse_instance_q7</ref>;</highlight></codeline>
<codeline lineno="4478"><highlight class="normal"></highlight></codeline>
<codeline lineno="4479"><highlight class="normal"></highlight></codeline>
<codeline lineno="4488"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a23a9284de5ee39406713b91d18ac8838" kindref="member">arm_fir_sparse_f32</ref>(</highlight></codeline>
<codeline lineno="4489"><highlight class="normal"><sp/><sp/><ref refid="structarm__fir__sparse__instance__f32" kindref="compound">arm_fir_sparse_instance_f32</ref><sp/>*<sp/>S,</highlight></codeline>
<codeline lineno="4490"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="4491"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pDst,</highlight></codeline>
<codeline lineno="4492"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pScratchIn,</highlight></codeline>
<codeline lineno="4493"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize);</highlight></codeline>
<codeline lineno="4494"><highlight class="normal"></highlight></codeline>
<codeline lineno="4495"><highlight class="normal"></highlight></codeline>
<codeline lineno="4506"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a86378a08a9d9e1e0e5de77843b34d396" kindref="member">arm_fir_sparse_init_f32</ref>(</highlight></codeline>
<codeline lineno="4507"><highlight class="normal"><sp/><sp/><ref refid="structarm__fir__sparse__instance__f32" kindref="compound">arm_fir_sparse_instance_f32</ref><sp/>*<sp/>S,</highlight></codeline>
<codeline lineno="4508"><highlight class="normal"><sp/><sp/>uint16_t<sp/>numTaps,</highlight></codeline>
<codeline lineno="4509"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pCoeffs,</highlight></codeline>
<codeline lineno="4510"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pState,</highlight></codeline>
<codeline lineno="4511"><highlight class="normal"><sp/><sp/>int32_t<sp/>*<sp/>pTapDelay,</highlight></codeline>
<codeline lineno="4512"><highlight class="normal"><sp/><sp/>uint16_t<sp/>maxDelay,</highlight></codeline>
<codeline lineno="4513"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize);</highlight></codeline>
<codeline lineno="4514"><highlight class="normal"></highlight></codeline>
<codeline lineno="4515"><highlight class="normal"></highlight></codeline>
<codeline lineno="4524"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a03e9c2f0f35ad67d20bac66be9f920ec" kindref="member">arm_fir_sparse_q31</ref>(</highlight></codeline>
<codeline lineno="4525"><highlight class="normal"><sp/><sp/><ref refid="structarm__fir__sparse__instance__q31" kindref="compound">arm_fir_sparse_instance_q31</ref><sp/>*<sp/>S,</highlight></codeline>
<codeline lineno="4526"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="4527"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pDst,</highlight></codeline>
<codeline lineno="4528"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pScratchIn,</highlight></codeline>
<codeline lineno="4529"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize);</highlight></codeline>
<codeline lineno="4530"><highlight class="normal"></highlight></codeline>
<codeline lineno="4531"><highlight class="normal"></highlight></codeline>
<codeline lineno="4542"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a9a0bb2134bc85d3e55c6be6d946ee634" kindref="member">arm_fir_sparse_init_q31</ref>(</highlight></codeline>
<codeline lineno="4543"><highlight class="normal"><sp/><sp/><ref refid="structarm__fir__sparse__instance__q31" kindref="compound">arm_fir_sparse_instance_q31</ref><sp/>*<sp/>S,</highlight></codeline>
<codeline lineno="4544"><highlight class="normal"><sp/><sp/>uint16_t<sp/>numTaps,</highlight></codeline>
<codeline lineno="4545"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pCoeffs,</highlight></codeline>
<codeline lineno="4546"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pState,</highlight></codeline>
<codeline lineno="4547"><highlight class="normal"><sp/><sp/>int32_t<sp/>*<sp/>pTapDelay,</highlight></codeline>
<codeline lineno="4548"><highlight class="normal"><sp/><sp/>uint16_t<sp/>maxDelay,</highlight></codeline>
<codeline lineno="4549"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize);</highlight></codeline>
<codeline lineno="4550"><highlight class="normal"></highlight></codeline>
<codeline lineno="4551"><highlight class="normal"></highlight></codeline>
<codeline lineno="4561"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a2bffda2e156e72427e19276cd9c3d3cc" kindref="member">arm_fir_sparse_q15</ref>(</highlight></codeline>
<codeline lineno="4562"><highlight class="normal"><sp/><sp/><ref refid="structarm__fir__sparse__instance__q15" kindref="compound">arm_fir_sparse_instance_q15</ref><sp/>*<sp/>S,</highlight></codeline>
<codeline lineno="4563"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="4564"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pDst,</highlight></codeline>
<codeline lineno="4565"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pScratchIn,</highlight></codeline>
<codeline lineno="4566"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pScratchOut,</highlight></codeline>
<codeline lineno="4567"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize);</highlight></codeline>
<codeline lineno="4568"><highlight class="normal"></highlight></codeline>
<codeline lineno="4569"><highlight class="normal"></highlight></codeline>
<codeline lineno="4580"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a5eaa80bf72bcccef5a2c5fc6648d1baa" kindref="member">arm_fir_sparse_init_q15</ref>(</highlight></codeline>
<codeline lineno="4581"><highlight class="normal"><sp/><sp/><ref refid="structarm__fir__sparse__instance__q15" kindref="compound">arm_fir_sparse_instance_q15</ref><sp/>*<sp/>S,</highlight></codeline>
<codeline lineno="4582"><highlight class="normal"><sp/><sp/>uint16_t<sp/>numTaps,</highlight></codeline>
<codeline lineno="4583"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pCoeffs,</highlight></codeline>
<codeline lineno="4584"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pState,</highlight></codeline>
<codeline lineno="4585"><highlight class="normal"><sp/><sp/>int32_t<sp/>*<sp/>pTapDelay,</highlight></codeline>
<codeline lineno="4586"><highlight class="normal"><sp/><sp/>uint16_t<sp/>maxDelay,</highlight></codeline>
<codeline lineno="4587"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize);</highlight></codeline>
<codeline lineno="4588"><highlight class="normal"></highlight></codeline>
<codeline lineno="4589"><highlight class="normal"></highlight></codeline>
<codeline lineno="4599"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1ae86c145efc2d9ec32dc6d8c1ad2ccb3c" kindref="member">arm_fir_sparse_q7</ref>(</highlight></codeline>
<codeline lineno="4600"><highlight class="normal"><sp/><sp/><ref refid="structarm__fir__sparse__instance__q7" kindref="compound">arm_fir_sparse_instance_q7</ref><sp/>*<sp/>S,</highlight></codeline>
<codeline lineno="4601"><highlight class="normal"><sp/><sp/>q7_t<sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="4602"><highlight class="normal"><sp/><sp/>q7_t<sp/>*<sp/>pDst,</highlight></codeline>
<codeline lineno="4603"><highlight class="normal"><sp/><sp/>q7_t<sp/>*<sp/>pScratchIn,</highlight></codeline>
<codeline lineno="4604"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pScratchOut,</highlight></codeline>
<codeline lineno="4605"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize);</highlight></codeline>
<codeline lineno="4606"><highlight class="normal"></highlight></codeline>
<codeline lineno="4607"><highlight class="normal"></highlight></codeline>
<codeline lineno="4618"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a98f5c1a097d4572ce4ff3b0c58ebcdbd" kindref="member">arm_fir_sparse_init_q7</ref>(</highlight></codeline>
<codeline lineno="4619"><highlight class="normal"><sp/><sp/><ref refid="structarm__fir__sparse__instance__q7" kindref="compound">arm_fir_sparse_instance_q7</ref><sp/>*<sp/>S,</highlight></codeline>
<codeline lineno="4620"><highlight class="normal"><sp/><sp/>uint16_t<sp/>numTaps,</highlight></codeline>
<codeline lineno="4621"><highlight class="normal"><sp/><sp/>q7_t<sp/>*<sp/>pCoeffs,</highlight></codeline>
<codeline lineno="4622"><highlight class="normal"><sp/><sp/>q7_t<sp/>*<sp/>pState,</highlight></codeline>
<codeline lineno="4623"><highlight class="normal"><sp/><sp/>int32_t<sp/>*<sp/>pTapDelay,</highlight></codeline>
<codeline lineno="4624"><highlight class="normal"><sp/><sp/>uint16_t<sp/>maxDelay,</highlight></codeline>
<codeline lineno="4625"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize);</highlight></codeline>
<codeline lineno="4626"><highlight class="normal"></highlight></codeline>
<codeline lineno="4627"><highlight class="normal"></highlight></codeline>
<codeline lineno="4634"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a4420d45c37d58c310ef9ae1b5fe58020" kindref="member">arm_sin_cos_f32</ref>(</highlight></codeline>
<codeline lineno="4635"><highlight class="normal"><sp/><sp/>float32_t<sp/>theta,</highlight></codeline>
<codeline lineno="4636"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pSinVal,</highlight></codeline>
<codeline lineno="4637"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pCosVal);</highlight></codeline>
<codeline lineno="4638"><highlight class="normal"></highlight></codeline>
<codeline lineno="4639"><highlight class="normal"></highlight></codeline>
<codeline lineno="4646"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1ae9e4ddebff9d4eb5d0a093e28e0bc504" kindref="member">arm_sin_cos_q31</ref>(</highlight></codeline>
<codeline lineno="4647"><highlight class="normal"><sp/><sp/>q31_t<sp/>theta,</highlight></codeline>
<codeline lineno="4648"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pSinVal,</highlight></codeline>
<codeline lineno="4649"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pCosVal);</highlight></codeline>
<codeline lineno="4650"><highlight class="normal"></highlight></codeline>
<codeline lineno="4651"><highlight class="normal"></highlight></codeline>
<codeline lineno="4658"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a3a102aead6460ad9fcb0626f6b226ffb" kindref="member">arm_cmplx_conj_f32</ref>(</highlight></codeline>
<codeline lineno="4659"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="4660"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pDst,</highlight></codeline>
<codeline lineno="4661"><highlight class="normal"><sp/><sp/>uint32_t<sp/>numSamples);</highlight></codeline>
<codeline lineno="4662"><highlight class="normal"></highlight></codeline>
<codeline lineno="4669"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1afecc94879a383c5208ec3ef99485e4b5" kindref="member">arm_cmplx_conj_q31</ref>(</highlight></codeline>
<codeline lineno="4670"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="4671"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pDst,</highlight></codeline>
<codeline lineno="4672"><highlight class="normal"><sp/><sp/>uint32_t<sp/>numSamples);</highlight></codeline>
<codeline lineno="4673"><highlight class="normal"></highlight></codeline>
<codeline lineno="4674"><highlight class="normal"></highlight></codeline>
<codeline lineno="4681"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1af47689ae07962acaecb8ddde556df4a4" kindref="member">arm_cmplx_conj_q15</ref>(</highlight></codeline>
<codeline lineno="4682"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="4683"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pDst,</highlight></codeline>
<codeline lineno="4684"><highlight class="normal"><sp/><sp/>uint32_t<sp/>numSamples);</highlight></codeline>
<codeline lineno="4685"><highlight class="normal"></highlight></codeline>
<codeline lineno="4686"><highlight class="normal"></highlight></codeline>
<codeline lineno="4693"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1aa7faccc0d96b061d8b7d0d7d82045074" kindref="member">arm_cmplx_mag_squared_f32</ref>(</highlight></codeline>
<codeline lineno="4694"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="4695"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pDst,</highlight></codeline>
<codeline lineno="4696"><highlight class="normal"><sp/><sp/>uint32_t<sp/>numSamples);</highlight></codeline>
<codeline lineno="4697"><highlight class="normal"></highlight></codeline>
<codeline lineno="4698"><highlight class="normal"></highlight></codeline>
<codeline lineno="4705"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a384b0538101e8c03fa4fa14271e63b04" kindref="member">arm_cmplx_mag_squared_q31</ref>(</highlight></codeline>
<codeline lineno="4706"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="4707"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pDst,</highlight></codeline>
<codeline lineno="4708"><highlight class="normal"><sp/><sp/>uint32_t<sp/>numSamples);</highlight></codeline>
<codeline lineno="4709"><highlight class="normal"></highlight></codeline>
<codeline lineno="4710"><highlight class="normal"></highlight></codeline>
<codeline lineno="4717"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a45537f576102d960d467eb722b8431f2" kindref="member">arm_cmplx_mag_squared_q15</ref>(</highlight></codeline>
<codeline lineno="4718"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="4719"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pDst,</highlight></codeline>
<codeline lineno="4720"><highlight class="normal"><sp/><sp/>uint32_t<sp/>numSamples);</highlight></codeline>
<codeline lineno="4721"><highlight class="normal"></highlight></codeline>
<codeline lineno="4722"><highlight class="normal"></highlight></codeline>
<codeline lineno="4795"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>__INLINE<sp/>float32_t<sp/>arm_pid_f32(</highlight></codeline>
<codeline lineno="4796"><highlight class="normal"><sp/><sp/><ref refid="structarm__pid__instance__f32" kindref="compound">arm_pid_instance_f32</ref><sp/>*<sp/>S,</highlight></codeline>
<codeline lineno="4797"><highlight class="normal"><sp/><sp/>float32_t<sp/>in)</highlight></codeline>
<codeline lineno="4798"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4799"><highlight class="normal"><sp/><sp/><sp/><sp/>float32_t<sp/>out;</highlight></codeline>
<codeline lineno="4800"><highlight class="normal"></highlight></codeline>
<codeline lineno="4801"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>y[n]<sp/>=<sp/>y[n-1]<sp/>+<sp/>A0<sp/>*<sp/>x[n]<sp/>+<sp/>A1<sp/>*<sp/>x[n-1]<sp/>+<sp/>A2<sp/>*<sp/>x[n-2]<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4802"><highlight class="normal"><sp/><sp/><sp/><sp/>out<sp/>=<sp/>(S-&gt;<ref refid="structarm__pid__instance__f32_1ad7b0bed64915d0a25a3409fa2dc45556" kindref="member">A0</ref><sp/>*<sp/>in)<sp/>+</highlight></codeline>
<codeline lineno="4803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(S-&gt;<ref refid="structarm__pid__instance__f32_1a7def89571c50f7137a213326a396e560" kindref="member">A1</ref><sp/>*<sp/>S-&gt;<ref refid="structarm__pid__instance__f32_1afd394e1e52fb1d526aa472c83b8f2464" kindref="member">state</ref>[0])<sp/>+<sp/>(S-&gt;<ref refid="structarm__pid__instance__f32_1a155acf642ba2f521869f19d694cd7fa0" kindref="member">A2</ref><sp/>*<sp/>S-&gt;<ref refid="structarm__pid__instance__f32_1afd394e1e52fb1d526aa472c83b8f2464" kindref="member">state</ref>[1])<sp/>+<sp/>(S-&gt;<ref refid="structarm__pid__instance__f32_1afd394e1e52fb1d526aa472c83b8f2464" kindref="member">state</ref>[2]);</highlight></codeline>
<codeline lineno="4804"><highlight class="normal"></highlight></codeline>
<codeline lineno="4805"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Update<sp/>state<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4806"><highlight class="normal"><sp/><sp/><sp/><sp/>S-&gt;<ref refid="structarm__pid__instance__f32_1afd394e1e52fb1d526aa472c83b8f2464" kindref="member">state</ref>[1]<sp/>=<sp/>S-&gt;<ref refid="structarm__pid__instance__f32_1afd394e1e52fb1d526aa472c83b8f2464" kindref="member">state</ref>[0];</highlight></codeline>
<codeline lineno="4807"><highlight class="normal"><sp/><sp/><sp/><sp/>S-&gt;<ref refid="structarm__pid__instance__f32_1afd394e1e52fb1d526aa472c83b8f2464" kindref="member">state</ref>[0]<sp/>=<sp/>in;</highlight></codeline>
<codeline lineno="4808"><highlight class="normal"><sp/><sp/><sp/><sp/>S-&gt;<ref refid="structarm__pid__instance__f32_1afd394e1e52fb1d526aa472c83b8f2464" kindref="member">state</ref>[2]<sp/>=<sp/>out;</highlight></codeline>
<codeline lineno="4809"><highlight class="normal"></highlight></codeline>
<codeline lineno="4810"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>return<sp/>to<sp/>application<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4811"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(out);</highlight></codeline>
<codeline lineno="4812"><highlight class="normal"></highlight></codeline>
<codeline lineno="4813"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4814"><highlight class="normal"></highlight></codeline>
<codeline lineno="4829"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>__INLINE<sp/>q31_t<sp/>arm_pid_q31(</highlight></codeline>
<codeline lineno="4830"><highlight class="normal"><sp/><sp/><ref refid="structarm__pid__instance__q31" kindref="compound">arm_pid_instance_q31</ref><sp/>*<sp/>S,</highlight></codeline>
<codeline lineno="4831"><highlight class="normal"><sp/><sp/>q31_t<sp/>in)</highlight></codeline>
<codeline lineno="4832"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4833"><highlight class="normal"><sp/><sp/><sp/><sp/>q63_t<sp/>acc;</highlight></codeline>
<codeline lineno="4834"><highlight class="normal"><sp/><sp/><sp/><sp/>q31_t<sp/>out;</highlight></codeline>
<codeline lineno="4835"><highlight class="normal"></highlight></codeline>
<codeline lineno="4836"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>acc<sp/>=<sp/>A0<sp/>*<sp/>x[n]<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4837"><highlight class="normal"><sp/><sp/><sp/><sp/>acc<sp/>=<sp/>(<ref refid="arm__math_8h_1a5aea1cb12fc02d9d44c8abf217eaa5c6" kindref="member">q63_t</ref>)<sp/>S-&gt;<ref refid="structarm__pid__instance__q31_1aa5332635ce9c7078cdb4c1ecf442eadd" kindref="member">A0</ref><sp/>*<sp/>in;</highlight></codeline>
<codeline lineno="4838"><highlight class="normal"></highlight></codeline>
<codeline lineno="4839"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>acc<sp/>+=<sp/>A1<sp/>*<sp/>x[n-1]<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4840"><highlight class="normal"><sp/><sp/><sp/><sp/>acc<sp/>+=<sp/>(q63_t)<sp/>S-&gt;<ref refid="structarm__pid__instance__q31_1a2f7492bd6fb92fae5e2de7fbbec39b0e" kindref="member">A1</ref><sp/>*<sp/>S-&gt;<ref refid="structarm__pid__instance__q31_1a228e4a64da6014844a0a671a1fa391d4" kindref="member">state</ref>[0];</highlight></codeline>
<codeline lineno="4841"><highlight class="normal"></highlight></codeline>
<codeline lineno="4842"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>acc<sp/>+=<sp/>A2<sp/>*<sp/>x[n-2]<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4843"><highlight class="normal"><sp/><sp/><sp/><sp/>acc<sp/>+=<sp/>(<ref refid="arm__math_8h_1a5aea1cb12fc02d9d44c8abf217eaa5c6" kindref="member">q63_t</ref>)<sp/>S-&gt;<ref refid="structarm__pid__instance__q31_1a3e34537c53af4f9ad7bfffa4dff27c82" kindref="member">A2</ref><sp/>*<sp/>S-&gt;<ref refid="structarm__pid__instance__q31_1a228e4a64da6014844a0a671a1fa391d4" kindref="member">state</ref>[1];</highlight></codeline>
<codeline lineno="4844"><highlight class="normal"></highlight></codeline>
<codeline lineno="4845"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>convert<sp/>output<sp/>to<sp/>1.31<sp/>format<sp/>to<sp/>add<sp/>y[n-1]<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4846"><highlight class="normal"><sp/><sp/><sp/><sp/>out<sp/>=<sp/>(q31_t)<sp/>(acc<sp/>&gt;&gt;<sp/>31u);</highlight></codeline>
<codeline lineno="4847"><highlight class="normal"></highlight></codeline>
<codeline lineno="4848"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>out<sp/>+=<sp/>y[n-1]<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4849"><highlight class="normal"><sp/><sp/><sp/><sp/>out<sp/>+=<sp/>S-&gt;<ref refid="structarm__pid__instance__q31_1a228e4a64da6014844a0a671a1fa391d4" kindref="member">state</ref>[2];</highlight></codeline>
<codeline lineno="4850"><highlight class="normal"></highlight></codeline>
<codeline lineno="4851"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Update<sp/>state<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4852"><highlight class="normal"><sp/><sp/><sp/><sp/>S-&gt;<ref refid="structarm__pid__instance__q31_1a228e4a64da6014844a0a671a1fa391d4" kindref="member">state</ref>[1]<sp/>=<sp/>S-&gt;<ref refid="structarm__pid__instance__q31_1a228e4a64da6014844a0a671a1fa391d4" kindref="member">state</ref>[0];</highlight></codeline>
<codeline lineno="4853"><highlight class="normal"><sp/><sp/><sp/><sp/>S-&gt;<ref refid="structarm__pid__instance__q31_1a228e4a64da6014844a0a671a1fa391d4" kindref="member">state</ref>[0]<sp/>=<sp/>in;</highlight></codeline>
<codeline lineno="4854"><highlight class="normal"><sp/><sp/><sp/><sp/>S-&gt;<ref refid="structarm__pid__instance__q31_1a228e4a64da6014844a0a671a1fa391d4" kindref="member">state</ref>[2]<sp/>=<sp/>out;</highlight></codeline>
<codeline lineno="4855"><highlight class="normal"></highlight></codeline>
<codeline lineno="4856"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>return<sp/>to<sp/>application<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4857"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(out);</highlight></codeline>
<codeline lineno="4858"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4859"><highlight class="normal"></highlight></codeline>
<codeline lineno="4860"><highlight class="normal"></highlight></codeline>
<codeline lineno="4876"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>__INLINE<sp/>q15_t<sp/>arm_pid_q15(</highlight></codeline>
<codeline lineno="4877"><highlight class="normal"><sp/><sp/><ref refid="structarm__pid__instance__q15" kindref="compound">arm_pid_instance_q15</ref><sp/>*<sp/>S,</highlight></codeline>
<codeline lineno="4878"><highlight class="normal"><sp/><sp/>q15_t<sp/>in)</highlight></codeline>
<codeline lineno="4879"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4880"><highlight class="normal"><sp/><sp/><sp/><sp/>q63_t<sp/>acc;</highlight></codeline>
<codeline lineno="4881"><highlight class="normal"><sp/><sp/><sp/><sp/>q15_t<sp/>out;</highlight></codeline>
<codeline lineno="4882"><highlight class="normal"></highlight></codeline>
<codeline lineno="4883"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ARM_MATH_CM0_FAMILY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4884"><highlight class="normal"><sp/><sp/><sp/><sp/>__SIMD32_TYPE<sp/>*vstate;</highlight></codeline>
<codeline lineno="4885"><highlight class="normal"></highlight></codeline>
<codeline lineno="4886"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Implementation<sp/>of<sp/>PID<sp/>controller<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4887"><highlight class="normal"></highlight></codeline>
<codeline lineno="4888"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>acc<sp/>=<sp/>A0<sp/>*<sp/>x[n]<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4889"><highlight class="normal"><sp/><sp/><sp/><sp/>acc<sp/>=<sp/>(<ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref>)<sp/>__SMUAD((uint32_t)S-&gt;<ref refid="structarm__pid__instance__q15_1ad77f3a2823c7f96de42c92a3fbf3246b" kindref="member">A0</ref>,<sp/>(uint32_t)in);</highlight></codeline>
<codeline lineno="4890"><highlight class="normal"></highlight></codeline>
<codeline lineno="4891"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>acc<sp/>+=<sp/>A1<sp/>*<sp/>x[n-1]<sp/>+<sp/>A2<sp/>*<sp/>x[n-2]<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4892"><highlight class="normal"><sp/><sp/><sp/><sp/>vstate<sp/>=<sp/><ref refid="arm__math_8h_1a1185d670d798aaf52eec13f0403f3407" kindref="member">__SIMD32_CONST</ref>(S-&gt;<ref refid="structarm__pid__instance__q15_1a4a3f0a878b5b6b055e3478a2f244cd30" kindref="member">state</ref>);</highlight></codeline>
<codeline lineno="4893"><highlight class="normal"><sp/><sp/><sp/><sp/>acc<sp/>=<sp/>(<ref refid="arm__math_8h_1a5aea1cb12fc02d9d44c8abf217eaa5c6" kindref="member">q63_t</ref>)__SMLALD((uint32_t)S-&gt;<ref refid="structarm__pid__instance__q15_1a1b8412c517071962a9acfdc6778906ec" kindref="member">A1</ref>,<sp/>(uint32_t)*vstate,<sp/>(uint64_t)acc);</highlight></codeline>
<codeline lineno="4894"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4895"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>acc<sp/>=<sp/>A0<sp/>*<sp/>x[n]<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4896"><highlight class="normal"><sp/><sp/><sp/><sp/>acc<sp/>=<sp/>((<ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref>)<sp/>S-&gt;<ref refid="structarm__pid__instance__q15_1ad77f3a2823c7f96de42c92a3fbf3246b" kindref="member">A0</ref>)<sp/>*<sp/>in;</highlight></codeline>
<codeline lineno="4897"><highlight class="normal"></highlight></codeline>
<codeline lineno="4898"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>acc<sp/>+=<sp/>A1<sp/>*<sp/>x[n-1]<sp/>+<sp/>A2<sp/>*<sp/>x[n-2]<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4899"><highlight class="normal"><sp/><sp/><sp/><sp/>acc<sp/>+=<sp/>(<ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref>)<sp/>S-&gt;<ref refid="structarm__pid__instance__q15_1a1b8412c517071962a9acfdc6778906ec" kindref="member">A1</ref><sp/>*<sp/>S-&gt;<ref refid="structarm__pid__instance__q15_1a4a3f0a878b5b6b055e3478a2f244cd30" kindref="member">state</ref>[0];</highlight></codeline>
<codeline lineno="4900"><highlight class="normal"><sp/><sp/><sp/><sp/>acc<sp/>+=<sp/>(q31_t)<sp/>S-&gt;A2<sp/>*<sp/>S-&gt;<ref refid="structarm__pid__instance__q15_1a4a3f0a878b5b6b055e3478a2f244cd30" kindref="member">state</ref>[1];</highlight></codeline>
<codeline lineno="4901"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4902"><highlight class="normal"></highlight></codeline>
<codeline lineno="4903"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>acc<sp/>+=<sp/>y[n-1]<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4904"><highlight class="normal"><sp/><sp/><sp/><sp/>acc<sp/>+=<sp/>(<ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref>)<sp/>S-&gt;<ref refid="structarm__pid__instance__q15_1a4a3f0a878b5b6b055e3478a2f244cd30" kindref="member">state</ref>[2]<sp/>&lt;&lt;<sp/>15;</highlight></codeline>
<codeline lineno="4905"><highlight class="normal"></highlight></codeline>
<codeline lineno="4906"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>saturate<sp/>the<sp/>output<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4907"><highlight class="normal"><sp/><sp/><sp/><sp/>out<sp/>=<sp/>(q15_t)<sp/>(__SSAT((acc<sp/>&gt;&gt;<sp/>15),<sp/>16));</highlight></codeline>
<codeline lineno="4908"><highlight class="normal"></highlight></codeline>
<codeline lineno="4909"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Update<sp/>state<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4910"><highlight class="normal"><sp/><sp/><sp/><sp/>S-&gt;<ref refid="structarm__pid__instance__q15_1a4a3f0a878b5b6b055e3478a2f244cd30" kindref="member">state</ref>[1]<sp/>=<sp/>S-&gt;<ref refid="structarm__pid__instance__q15_1a4a3f0a878b5b6b055e3478a2f244cd30" kindref="member">state</ref>[0];</highlight></codeline>
<codeline lineno="4911"><highlight class="normal"><sp/><sp/><sp/><sp/>S-&gt;<ref refid="structarm__pid__instance__q15_1a4a3f0a878b5b6b055e3478a2f244cd30" kindref="member">state</ref>[0]<sp/>=<sp/>in;</highlight></codeline>
<codeline lineno="4912"><highlight class="normal"><sp/><sp/><sp/><sp/>S-&gt;<ref refid="structarm__pid__instance__q15_1a4a3f0a878b5b6b055e3478a2f244cd30" kindref="member">state</ref>[2]<sp/>=<sp/>out;</highlight></codeline>
<codeline lineno="4913"><highlight class="normal"></highlight></codeline>
<codeline lineno="4914"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>return<sp/>to<sp/>application<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4915"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(out);</highlight></codeline>
<codeline lineno="4916"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4917"><highlight class="normal"></highlight></codeline>
<codeline lineno="4930"><highlight class="normal"><sp/><sp/><ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6" kindref="member">arm_status</ref><sp/><ref refid="arm__math_8h_1ab1283b23c96da04362a0efcdc7f23901" kindref="member">arm_mat_inverse_f32</ref>(</highlight></codeline>
<codeline lineno="4931"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarm__matrix__instance__f32" kindref="compound">arm_matrix_instance_f32</ref><sp/>*<sp/>src,</highlight></codeline>
<codeline lineno="4932"><highlight class="normal"><sp/><sp/><ref refid="structarm__matrix__instance__f32" kindref="compound">arm_matrix_instance_f32</ref><sp/>*<sp/>dst);</highlight></codeline>
<codeline lineno="4933"><highlight class="normal"></highlight></codeline>
<codeline lineno="4934"><highlight class="normal"></highlight></codeline>
<codeline lineno="4942"><highlight class="normal"><sp/><sp/><ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6" kindref="member">arm_status</ref><sp/><ref refid="arm__math_8h_1a3dd167a2b71330f9f7b606374e9ec063" kindref="member">arm_mat_inverse_f64</ref>(</highlight></codeline>
<codeline lineno="4943"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarm__matrix__instance__f64" kindref="compound">arm_matrix_instance_f64</ref><sp/>*<sp/>src,</highlight></codeline>
<codeline lineno="4944"><highlight class="normal"><sp/><sp/><ref refid="structarm__matrix__instance__f64" kindref="compound">arm_matrix_instance_f64</ref><sp/>*<sp/>dst);</highlight></codeline>
<codeline lineno="4945"><highlight class="normal"></highlight></codeline>
<codeline lineno="4946"><highlight class="normal"></highlight></codeline>
<codeline lineno="4947"><highlight class="normal"></highlight></codeline>
<codeline lineno="4987"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>__INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>arm_clarke_f32(</highlight></codeline>
<codeline lineno="4988"><highlight class="normal"><sp/><sp/>float32_t<sp/>Ia,</highlight></codeline>
<codeline lineno="4989"><highlight class="normal"><sp/><sp/>float32_t<sp/>Ib,</highlight></codeline>
<codeline lineno="4990"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pIalpha,</highlight></codeline>
<codeline lineno="4991"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pIbeta)</highlight></codeline>
<codeline lineno="4992"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4993"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Calculate<sp/>pIalpha<sp/>using<sp/>the<sp/>equation,<sp/>pIalpha<sp/>=<sp/>Ia<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4994"><highlight class="normal"><sp/><sp/><sp/><sp/>*pIalpha<sp/>=<sp/>Ia;</highlight></codeline>
<codeline lineno="4995"><highlight class="normal"></highlight></codeline>
<codeline lineno="4996"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Calculate<sp/>pIbeta<sp/>using<sp/>the<sp/>equation,<sp/>pIbeta<sp/>=<sp/>(1/sqrt(3))<sp/>*<sp/>Ia<sp/>+<sp/>(2/sqrt(3))<sp/>*<sp/>Ib<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4997"><highlight class="normal"><sp/><sp/><sp/><sp/>*pIbeta<sp/>=<sp/>((<ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref>)<sp/>0.57735026919<sp/>*<sp/>Ia<sp/>+<sp/>(float32_t)<sp/>1.15470053838<sp/>*<sp/>Ib);</highlight></codeline>
<codeline lineno="4998"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4999"><highlight class="normal"></highlight></codeline>
<codeline lineno="5000"><highlight class="normal"></highlight></codeline>
<codeline lineno="5014"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>__INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>arm_clarke_q31(</highlight></codeline>
<codeline lineno="5015"><highlight class="normal"><sp/><sp/>q31_t<sp/>Ia,</highlight></codeline>
<codeline lineno="5016"><highlight class="normal"><sp/><sp/>q31_t<sp/>Ib,</highlight></codeline>
<codeline lineno="5017"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pIalpha,</highlight></codeline>
<codeline lineno="5018"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pIbeta)</highlight></codeline>
<codeline lineno="5019"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="5020"><highlight class="normal"><sp/><sp/><sp/><sp/>q31_t<sp/>product1,<sp/>product2;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Temporary<sp/>variables<sp/>used<sp/>to<sp/>store<sp/>intermediate<sp/>results<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5021"><highlight class="normal"></highlight></codeline>
<codeline lineno="5022"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Calculating<sp/>pIalpha<sp/>from<sp/>Ia<sp/>by<sp/>equation<sp/>pIalpha<sp/>=<sp/>Ia<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5023"><highlight class="normal"><sp/><sp/><sp/><sp/>*pIalpha<sp/>=<sp/>Ia;</highlight></codeline>
<codeline lineno="5024"><highlight class="normal"></highlight></codeline>
<codeline lineno="5025"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Intermediate<sp/>product<sp/>is<sp/>calculated<sp/>by<sp/>(1/(sqrt(3))<sp/>*<sp/>Ia)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5026"><highlight class="normal"><sp/><sp/><sp/><sp/>product1<sp/>=<sp/>(<ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref>)<sp/>(((q63_t)<sp/>Ia<sp/>*<sp/>0x24F34E8B)<sp/>&gt;&gt;<sp/>30);</highlight></codeline>
<codeline lineno="5027"><highlight class="normal"></highlight></codeline>
<codeline lineno="5028"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Intermediate<sp/>product<sp/>is<sp/>calculated<sp/>by<sp/>(2/sqrt(3)<sp/>*<sp/>Ib)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5029"><highlight class="normal"><sp/><sp/><sp/><sp/>product2<sp/>=<sp/>(<ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref>)<sp/>(((q63_t)<sp/>Ib<sp/>*<sp/>0x49E69D16)<sp/>&gt;&gt;<sp/>30);</highlight></codeline>
<codeline lineno="5030"><highlight class="normal"></highlight></codeline>
<codeline lineno="5031"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>pIbeta<sp/>is<sp/>calculated<sp/>by<sp/>adding<sp/>the<sp/>intermediate<sp/>products<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5032"><highlight class="normal"><sp/><sp/><sp/><sp/>*pIbeta<sp/>=<sp/>__QADD(product1,<sp/>product2);</highlight></codeline>
<codeline lineno="5033"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5034"><highlight class="normal"></highlight></codeline>
<codeline lineno="5045"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1ad8958cd3cb7f521466168b46a25b7908" kindref="member">arm_q7_to_q31</ref>(</highlight></codeline>
<codeline lineno="5046"><highlight class="normal"><sp/><sp/>q7_t<sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="5047"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pDst,</highlight></codeline>
<codeline lineno="5048"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize);</highlight></codeline>
<codeline lineno="5049"><highlight class="normal"></highlight></codeline>
<codeline lineno="5050"><highlight class="normal"></highlight></codeline>
<codeline lineno="5051"><highlight class="normal"></highlight></codeline>
<codeline lineno="5084"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>__INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>arm_inv_clarke_f32(</highlight></codeline>
<codeline lineno="5085"><highlight class="normal"><sp/><sp/>float32_t<sp/>Ialpha,</highlight></codeline>
<codeline lineno="5086"><highlight class="normal"><sp/><sp/>float32_t<sp/>Ibeta,</highlight></codeline>
<codeline lineno="5087"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pIa,</highlight></codeline>
<codeline lineno="5088"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pIb)</highlight></codeline>
<codeline lineno="5089"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="5090"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Calculating<sp/>pIa<sp/>from<sp/>Ialpha<sp/>by<sp/>equation<sp/>pIa<sp/>=<sp/>Ialpha<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5091"><highlight class="normal"><sp/><sp/><sp/><sp/>*pIa<sp/>=<sp/>Ialpha;</highlight></codeline>
<codeline lineno="5092"><highlight class="normal"></highlight></codeline>
<codeline lineno="5093"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Calculating<sp/>pIb<sp/>from<sp/>Ialpha<sp/>and<sp/>Ibeta<sp/>by<sp/>equation<sp/>pIb<sp/>=<sp/>-(1/2)<sp/>*<sp/>Ialpha<sp/>+<sp/>(sqrt(3)/2)<sp/>*<sp/>Ibeta<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5094"><highlight class="normal"><sp/><sp/><sp/><sp/>*pIb<sp/>=<sp/>-0.5f<sp/>*<sp/>Ialpha<sp/>+<sp/>0.8660254039f<sp/>*<sp/>Ibeta;</highlight></codeline>
<codeline lineno="5095"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5096"><highlight class="normal"></highlight></codeline>
<codeline lineno="5097"><highlight class="normal"></highlight></codeline>
<codeline lineno="5111"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>__INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>arm_inv_clarke_q31(</highlight></codeline>
<codeline lineno="5112"><highlight class="normal"><sp/><sp/>q31_t<sp/>Ialpha,</highlight></codeline>
<codeline lineno="5113"><highlight class="normal"><sp/><sp/>q31_t<sp/>Ibeta,</highlight></codeline>
<codeline lineno="5114"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pIa,</highlight></codeline>
<codeline lineno="5115"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pIb)</highlight></codeline>
<codeline lineno="5116"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="5117"><highlight class="normal"><sp/><sp/><sp/><sp/>q31_t<sp/>product1,<sp/>product2;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Temporary<sp/>variables<sp/>used<sp/>to<sp/>store<sp/>intermediate<sp/>results<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5118"><highlight class="normal"></highlight></codeline>
<codeline lineno="5119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Calculating<sp/>pIa<sp/>from<sp/>Ialpha<sp/>by<sp/>equation<sp/>pIa<sp/>=<sp/>Ialpha<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5120"><highlight class="normal"><sp/><sp/><sp/><sp/>*pIa<sp/>=<sp/>Ialpha;</highlight></codeline>
<codeline lineno="5121"><highlight class="normal"></highlight></codeline>
<codeline lineno="5122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Intermediate<sp/>product<sp/>is<sp/>calculated<sp/>by<sp/>(1/(2*sqrt(3))<sp/>*<sp/>Ia)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5123"><highlight class="normal"><sp/><sp/><sp/><sp/>product1<sp/>=<sp/>(<ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref>)<sp/>(((q63_t)<sp/>(Ialpha)<sp/>*<sp/>(0x40000000))<sp/>&gt;&gt;<sp/>31);</highlight></codeline>
<codeline lineno="5124"><highlight class="normal"></highlight></codeline>
<codeline lineno="5125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Intermediate<sp/>product<sp/>is<sp/>calculated<sp/>by<sp/>(1/sqrt(3)<sp/>*<sp/>pIb)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5126"><highlight class="normal"><sp/><sp/><sp/><sp/>product2<sp/>=<sp/>(<ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref>)<sp/>(((q63_t)<sp/>(Ibeta)<sp/>*<sp/>(0x6ED9EBA1))<sp/>&gt;&gt;<sp/>31);</highlight></codeline>
<codeline lineno="5127"><highlight class="normal"></highlight></codeline>
<codeline lineno="5128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>pIb<sp/>is<sp/>calculated<sp/>by<sp/>subtracting<sp/>the<sp/>products<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5129"><highlight class="normal"><sp/><sp/><sp/><sp/>*pIb<sp/>=<sp/>__QSUB(product2,<sp/>product1);</highlight></codeline>
<codeline lineno="5130"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5131"><highlight class="normal"></highlight></codeline>
<codeline lineno="5142"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1abc02597fc3f01033daf43ec0547a2f78" kindref="member">arm_q7_to_q15</ref>(</highlight></codeline>
<codeline lineno="5143"><highlight class="normal"><sp/><sp/>q7_t<sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="5144"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pDst,</highlight></codeline>
<codeline lineno="5145"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize);</highlight></codeline>
<codeline lineno="5146"><highlight class="normal"></highlight></codeline>
<codeline lineno="5147"><highlight class="normal"></highlight></codeline>
<codeline lineno="5148"><highlight class="normal"></highlight></codeline>
<codeline lineno="5194"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>__INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>arm_park_f32(</highlight></codeline>
<codeline lineno="5195"><highlight class="normal"><sp/><sp/>float32_t<sp/>Ialpha,</highlight></codeline>
<codeline lineno="5196"><highlight class="normal"><sp/><sp/>float32_t<sp/>Ibeta,</highlight></codeline>
<codeline lineno="5197"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pId,</highlight></codeline>
<codeline lineno="5198"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pIq,</highlight></codeline>
<codeline lineno="5199"><highlight class="normal"><sp/><sp/>float32_t<sp/>sinVal,</highlight></codeline>
<codeline lineno="5200"><highlight class="normal"><sp/><sp/>float32_t<sp/>cosVal)</highlight></codeline>
<codeline lineno="5201"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="5202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Calculate<sp/>pId<sp/>using<sp/>the<sp/>equation,<sp/>pId<sp/>=<sp/>Ialpha<sp/>*<sp/>cosVal<sp/>+<sp/>Ibeta<sp/>*<sp/>sinVal<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5203"><highlight class="normal"><sp/><sp/><sp/><sp/>*pId<sp/>=<sp/>Ialpha<sp/>*<sp/>cosVal<sp/>+<sp/>Ibeta<sp/>*<sp/>sinVal;</highlight></codeline>
<codeline lineno="5204"><highlight class="normal"></highlight></codeline>
<codeline lineno="5205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Calculate<sp/>pIq<sp/>using<sp/>the<sp/>equation,<sp/>pIq<sp/>=<sp/>-<sp/>Ialpha<sp/>*<sp/>sinVal<sp/>+<sp/>Ibeta<sp/>*<sp/>cosVal<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5206"><highlight class="normal"><sp/><sp/><sp/><sp/>*pIq<sp/>=<sp/>-Ialpha<sp/>*<sp/>sinVal<sp/>+<sp/>Ibeta<sp/>*<sp/>cosVal;</highlight></codeline>
<codeline lineno="5207"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5208"><highlight class="normal"></highlight></codeline>
<codeline lineno="5209"><highlight class="normal"></highlight></codeline>
<codeline lineno="5225"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>__INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>arm_park_q31(</highlight></codeline>
<codeline lineno="5226"><highlight class="normal"><sp/><sp/>q31_t<sp/>Ialpha,</highlight></codeline>
<codeline lineno="5227"><highlight class="normal"><sp/><sp/>q31_t<sp/>Ibeta,</highlight></codeline>
<codeline lineno="5228"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pId,</highlight></codeline>
<codeline lineno="5229"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pIq,</highlight></codeline>
<codeline lineno="5230"><highlight class="normal"><sp/><sp/>q31_t<sp/>sinVal,</highlight></codeline>
<codeline lineno="5231"><highlight class="normal"><sp/><sp/>q31_t<sp/>cosVal)</highlight></codeline>
<codeline lineno="5232"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="5233"><highlight class="normal"><sp/><sp/><sp/><sp/>q31_t<sp/>product1,<sp/>product2;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Temporary<sp/>variables<sp/>used<sp/>to<sp/>store<sp/>intermediate<sp/>results<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5234"><highlight class="normal"><sp/><sp/><sp/><sp/>q31_t<sp/>product3,<sp/>product4;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Temporary<sp/>variables<sp/>used<sp/>to<sp/>store<sp/>intermediate<sp/>results<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5235"><highlight class="normal"></highlight></codeline>
<codeline lineno="5236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Intermediate<sp/>product<sp/>is<sp/>calculated<sp/>by<sp/>(Ialpha<sp/>*<sp/>cosVal)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5237"><highlight class="normal"><sp/><sp/><sp/><sp/>product1<sp/>=<sp/>(<ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref>)<sp/>(((q63_t)<sp/>(Ialpha)<sp/>*<sp/>(cosVal))<sp/>&gt;&gt;<sp/>31);</highlight></codeline>
<codeline lineno="5238"><highlight class="normal"></highlight></codeline>
<codeline lineno="5239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Intermediate<sp/>product<sp/>is<sp/>calculated<sp/>by<sp/>(Ibeta<sp/>*<sp/>sinVal)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5240"><highlight class="normal"><sp/><sp/><sp/><sp/>product2<sp/>=<sp/>(<ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref>)<sp/>(((q63_t)<sp/>(Ibeta)<sp/>*<sp/>(sinVal))<sp/>&gt;&gt;<sp/>31);</highlight></codeline>
<codeline lineno="5241"><highlight class="normal"></highlight></codeline>
<codeline lineno="5242"><highlight class="normal"></highlight></codeline>
<codeline lineno="5243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Intermediate<sp/>product<sp/>is<sp/>calculated<sp/>by<sp/>(Ialpha<sp/>*<sp/>sinVal)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5244"><highlight class="normal"><sp/><sp/><sp/><sp/>product3<sp/>=<sp/>(<ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref>)<sp/>(((q63_t)<sp/>(Ialpha)<sp/>*<sp/>(sinVal))<sp/>&gt;&gt;<sp/>31);</highlight></codeline>
<codeline lineno="5245"><highlight class="normal"></highlight></codeline>
<codeline lineno="5246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Intermediate<sp/>product<sp/>is<sp/>calculated<sp/>by<sp/>(Ibeta<sp/>*<sp/>cosVal)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5247"><highlight class="normal"><sp/><sp/><sp/><sp/>product4<sp/>=<sp/>(<ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref>)<sp/>(((q63_t)<sp/>(Ibeta)<sp/>*<sp/>(cosVal))<sp/>&gt;&gt;<sp/>31);</highlight></codeline>
<codeline lineno="5248"><highlight class="normal"></highlight></codeline>
<codeline lineno="5249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Calculate<sp/>pId<sp/>by<sp/>adding<sp/>the<sp/>two<sp/>intermediate<sp/>products<sp/>1<sp/>and<sp/>2<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5250"><highlight class="normal"><sp/><sp/><sp/><sp/>*pId<sp/>=<sp/>__QADD(product1,<sp/>product2);</highlight></codeline>
<codeline lineno="5251"><highlight class="normal"></highlight></codeline>
<codeline lineno="5252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Calculate<sp/>pIq<sp/>by<sp/>subtracting<sp/>the<sp/>two<sp/>intermediate<sp/>products<sp/>3<sp/>from<sp/>4<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5253"><highlight class="normal"><sp/><sp/><sp/><sp/>*pIq<sp/>=<sp/>__QSUB(product4,<sp/>product3);</highlight></codeline>
<codeline lineno="5254"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5255"><highlight class="normal"></highlight></codeline>
<codeline lineno="5266"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a656620f957b65512ed83db03fd455ec5" kindref="member">arm_q7_to_float</ref>(</highlight></codeline>
<codeline lineno="5267"><highlight class="normal"><sp/><sp/>q7_t<sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="5268"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pDst,</highlight></codeline>
<codeline lineno="5269"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize);</highlight></codeline>
<codeline lineno="5270"><highlight class="normal"></highlight></codeline>
<codeline lineno="5271"><highlight class="normal"></highlight></codeline>
<codeline lineno="5307"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>__INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>arm_inv_park_f32(</highlight></codeline>
<codeline lineno="5308"><highlight class="normal"><sp/><sp/>float32_t<sp/>Id,</highlight></codeline>
<codeline lineno="5309"><highlight class="normal"><sp/><sp/>float32_t<sp/>Iq,</highlight></codeline>
<codeline lineno="5310"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pIalpha,</highlight></codeline>
<codeline lineno="5311"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pIbeta,</highlight></codeline>
<codeline lineno="5312"><highlight class="normal"><sp/><sp/>float32_t<sp/>sinVal,</highlight></codeline>
<codeline lineno="5313"><highlight class="normal"><sp/><sp/>float32_t<sp/>cosVal)</highlight></codeline>
<codeline lineno="5314"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="5315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Calculate<sp/>pIalpha<sp/>using<sp/>the<sp/>equation,<sp/>pIalpha<sp/>=<sp/>Id<sp/>*<sp/>cosVal<sp/>-<sp/>Iq<sp/>*<sp/>sinVal<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5316"><highlight class="normal"><sp/><sp/><sp/><sp/>*pIalpha<sp/>=<sp/>Id<sp/>*<sp/>cosVal<sp/>-<sp/>Iq<sp/>*<sp/>sinVal;</highlight></codeline>
<codeline lineno="5317"><highlight class="normal"></highlight></codeline>
<codeline lineno="5318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Calculate<sp/>pIbeta<sp/>using<sp/>the<sp/>equation,<sp/>pIbeta<sp/>=<sp/>Id<sp/>*<sp/>sinVal<sp/>+<sp/>Iq<sp/>*<sp/>cosVal<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5319"><highlight class="normal"><sp/><sp/><sp/><sp/>*pIbeta<sp/>=<sp/>Id<sp/>*<sp/>sinVal<sp/>+<sp/>Iq<sp/>*<sp/>cosVal;</highlight></codeline>
<codeline lineno="5320"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5321"><highlight class="normal"></highlight></codeline>
<codeline lineno="5322"><highlight class="normal"></highlight></codeline>
<codeline lineno="5338"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>__INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>arm_inv_park_q31(</highlight></codeline>
<codeline lineno="5339"><highlight class="normal"><sp/><sp/>q31_t<sp/>Id,</highlight></codeline>
<codeline lineno="5340"><highlight class="normal"><sp/><sp/>q31_t<sp/>Iq,</highlight></codeline>
<codeline lineno="5341"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pIalpha,</highlight></codeline>
<codeline lineno="5342"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pIbeta,</highlight></codeline>
<codeline lineno="5343"><highlight class="normal"><sp/><sp/>q31_t<sp/>sinVal,</highlight></codeline>
<codeline lineno="5344"><highlight class="normal"><sp/><sp/>q31_t<sp/>cosVal)</highlight></codeline>
<codeline lineno="5345"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="5346"><highlight class="normal"><sp/><sp/><sp/><sp/>q31_t<sp/>product1,<sp/>product2;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Temporary<sp/>variables<sp/>used<sp/>to<sp/>store<sp/>intermediate<sp/>results<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5347"><highlight class="normal"><sp/><sp/><sp/><sp/>q31_t<sp/>product3,<sp/>product4;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Temporary<sp/>variables<sp/>used<sp/>to<sp/>store<sp/>intermediate<sp/>results<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5348"><highlight class="normal"></highlight></codeline>
<codeline lineno="5349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Intermediate<sp/>product<sp/>is<sp/>calculated<sp/>by<sp/>(Id<sp/>*<sp/>cosVal)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5350"><highlight class="normal"><sp/><sp/><sp/><sp/>product1<sp/>=<sp/>(<ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref>)<sp/>(((q63_t)<sp/>(Id)<sp/>*<sp/>(cosVal))<sp/>&gt;&gt;<sp/>31);</highlight></codeline>
<codeline lineno="5351"><highlight class="normal"></highlight></codeline>
<codeline lineno="5352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Intermediate<sp/>product<sp/>is<sp/>calculated<sp/>by<sp/>(Iq<sp/>*<sp/>sinVal)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5353"><highlight class="normal"><sp/><sp/><sp/><sp/>product2<sp/>=<sp/>(<ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref>)<sp/>(((q63_t)<sp/>(Iq)<sp/>*<sp/>(sinVal))<sp/>&gt;&gt;<sp/>31);</highlight></codeline>
<codeline lineno="5354"><highlight class="normal"></highlight></codeline>
<codeline lineno="5355"><highlight class="normal"></highlight></codeline>
<codeline lineno="5356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Intermediate<sp/>product<sp/>is<sp/>calculated<sp/>by<sp/>(Id<sp/>*<sp/>sinVal)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5357"><highlight class="normal"><sp/><sp/><sp/><sp/>product3<sp/>=<sp/>(<ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref>)<sp/>(((q63_t)<sp/>(Id)<sp/>*<sp/>(sinVal))<sp/>&gt;&gt;<sp/>31);</highlight></codeline>
<codeline lineno="5358"><highlight class="normal"></highlight></codeline>
<codeline lineno="5359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Intermediate<sp/>product<sp/>is<sp/>calculated<sp/>by<sp/>(Iq<sp/>*<sp/>cosVal)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5360"><highlight class="normal"><sp/><sp/><sp/><sp/>product4<sp/>=<sp/>(<ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref>)<sp/>(((q63_t)<sp/>(Iq)<sp/>*<sp/>(cosVal))<sp/>&gt;&gt;<sp/>31);</highlight></codeline>
<codeline lineno="5361"><highlight class="normal"></highlight></codeline>
<codeline lineno="5362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Calculate<sp/>pIalpha<sp/>by<sp/>using<sp/>the<sp/>two<sp/>intermediate<sp/>products<sp/>1<sp/>and<sp/>2<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5363"><highlight class="normal"><sp/><sp/><sp/><sp/>*pIalpha<sp/>=<sp/>__QSUB(product1,<sp/>product2);</highlight></codeline>
<codeline lineno="5364"><highlight class="normal"></highlight></codeline>
<codeline lineno="5365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Calculate<sp/>pIbeta<sp/>by<sp/>using<sp/>the<sp/>two<sp/>intermediate<sp/>products<sp/>3<sp/>and<sp/>4<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5366"><highlight class="normal"><sp/><sp/><sp/><sp/>*pIbeta<sp/>=<sp/>__QADD(product4,<sp/>product3);</highlight></codeline>
<codeline lineno="5367"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5368"><highlight class="normal"></highlight></codeline>
<codeline lineno="5380"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1acf407b007a37da18e99dabd9023c56b4" kindref="member">arm_q31_to_float</ref>(</highlight></codeline>
<codeline lineno="5381"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="5382"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pDst,</highlight></codeline>
<codeline lineno="5383"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize);</highlight></codeline>
<codeline lineno="5384"><highlight class="normal"></highlight></codeline>
<codeline lineno="5433"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>__INLINE<sp/>float32_t<sp/>arm_linear_interp_f32(</highlight></codeline>
<codeline lineno="5434"><highlight class="normal"><sp/><sp/><ref refid="structarm__linear__interp__instance__f32" kindref="compound">arm_linear_interp_instance_f32</ref><sp/>*<sp/>S,</highlight></codeline>
<codeline lineno="5435"><highlight class="normal"><sp/><sp/>float32_t<sp/>x)</highlight></codeline>
<codeline lineno="5436"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="5437"><highlight class="normal"><sp/><sp/><sp/><sp/>float32_t<sp/>y;</highlight></codeline>
<codeline lineno="5438"><highlight class="normal"><sp/><sp/><sp/><sp/>float32_t<sp/>x0,<sp/>x1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Nearest<sp/>input<sp/>values<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5439"><highlight class="normal"><sp/><sp/><sp/><sp/>float32_t<sp/>y0,<sp/>y1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Nearest<sp/>output<sp/>values<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5440"><highlight class="normal"><sp/><sp/><sp/><sp/>float32_t<sp/>xSpacing<sp/>=<sp/>S-&gt;<ref refid="structarm__linear__interp__instance__f32_1aa8e2d686b5434a406d390b347b183511" kindref="member">xSpacing</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>spacing<sp/>between<sp/>input<sp/>values<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5441"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>i;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Index<sp/>variable<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5442"><highlight class="normal"><sp/><sp/><sp/><sp/>float32_t<sp/>*pYData<sp/>=<sp/>S-&gt;<ref refid="structarm__linear__interp__instance__f32_1ab373001f6afad0850359c344a4d7eee4" kindref="member">pYData</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>pointer<sp/>to<sp/>output<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5443"><highlight class="normal"></highlight></codeline>
<codeline lineno="5444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Calculation<sp/>of<sp/>index<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5445"><highlight class="normal"><sp/><sp/><sp/><sp/>i<sp/>=<sp/>(int32_t)<sp/>((x<sp/>-<sp/>S-&gt;<ref refid="structarm__linear__interp__instance__f32_1a08352dc6ea82fbc0827408e018535481" kindref="member">x1</ref>)<sp/>/<sp/>xSpacing);</highlight></codeline>
<codeline lineno="5446"><highlight class="normal"></highlight></codeline>
<codeline lineno="5447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="5448"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Iniatilize<sp/>output<sp/>for<sp/>below<sp/>specified<sp/>range<sp/>as<sp/>least<sp/>output<sp/>value<sp/>of<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>pYData[0];</highlight></codeline>
<codeline lineno="5451"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5452"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((uint32_t)i<sp/>&gt;=<sp/>S-&gt;<ref refid="structarm__linear__interp__instance__f32_1a95f02a926b16d35359aca5b31e813b11" kindref="member">nValues</ref>)</highlight></codeline>
<codeline lineno="5453"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Iniatilize<sp/>output<sp/>for<sp/>above<sp/>specified<sp/>range<sp/>as<sp/>last<sp/>output<sp/>value<sp/>of<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>pYData[S-&gt;<ref refid="structarm__linear__interp__instance__f32_1a95f02a926b16d35359aca5b31e813b11" kindref="member">nValues</ref><sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="5456"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5458"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Calculation<sp/>of<sp/>nearest<sp/>input<sp/>values<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>x0<sp/>=<sp/>S-&gt;<ref refid="structarm__linear__interp__instance__f32_1a08352dc6ea82fbc0827408e018535481" kindref="member">x1</ref><sp/>+<sp/><sp/>i<sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>xSpacing;</highlight></codeline>
<codeline lineno="5461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>x1<sp/>=<sp/>S-&gt;<ref refid="structarm__linear__interp__instance__f32_1a08352dc6ea82fbc0827408e018535481" kindref="member">x1</ref><sp/>+<sp/>(i<sp/>+<sp/>1)<sp/>*<sp/>xSpacing;</highlight></codeline>
<codeline lineno="5462"><highlight class="normal"></highlight></codeline>
<codeline lineno="5463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Read<sp/>of<sp/>nearest<sp/>output<sp/>values<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>y0<sp/>=<sp/>pYData[i];</highlight></codeline>
<codeline lineno="5465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>y1<sp/>=<sp/>pYData[i<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="5466"><highlight class="normal"></highlight></codeline>
<codeline lineno="5467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Calculation<sp/>of<sp/>output<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>y0<sp/>+<sp/>(x<sp/>-<sp/>x0)<sp/>*<sp/>((y1<sp/>-<sp/>y0)<sp/>/<sp/>(x1<sp/>-<sp/>x0));</highlight></codeline>
<codeline lineno="5469"><highlight class="normal"></highlight></codeline>
<codeline lineno="5470"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5471"><highlight class="normal"></highlight></codeline>
<codeline lineno="5472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>returns<sp/>output<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5473"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(y);</highlight></codeline>
<codeline lineno="5474"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5475"><highlight class="normal"></highlight></codeline>
<codeline lineno="5476"><highlight class="normal"></highlight></codeline>
<codeline lineno="5490"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>__INLINE<sp/>q31_t<sp/>arm_linear_interp_q31(</highlight></codeline>
<codeline lineno="5491"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pYData,</highlight></codeline>
<codeline lineno="5492"><highlight class="normal"><sp/><sp/>q31_t<sp/>x,</highlight></codeline>
<codeline lineno="5493"><highlight class="normal"><sp/><sp/>uint32_t<sp/>nValues)</highlight></codeline>
<codeline lineno="5494"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="5495"><highlight class="normal"><sp/><sp/><sp/><sp/>q31_t<sp/>y;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>output<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5496"><highlight class="normal"><sp/><sp/><sp/><sp/>q31_t<sp/>y0,<sp/>y1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Nearest<sp/>output<sp/>values<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5497"><highlight class="normal"><sp/><sp/><sp/><sp/>q31_t<sp/>fract;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>fractional<sp/>part<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5498"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>index;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Index<sp/>to<sp/>read<sp/>nearest<sp/>output<sp/>values<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5499"><highlight class="normal"></highlight></codeline>
<codeline lineno="5500"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Input<sp/>is<sp/>in<sp/>12.20<sp/>format<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5501"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>12<sp/>bits<sp/>for<sp/>the<sp/>table<sp/>index<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5502"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Index<sp/>value<sp/>calculation<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5503"><highlight class="normal"><sp/><sp/><sp/><sp/>index<sp/>=<sp/>((x<sp/>&amp;<sp/>(<ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref>)0xFFF00000)<sp/>&gt;&gt;<sp/>20);</highlight></codeline>
<codeline lineno="5504"><highlight class="normal"></highlight></codeline>
<codeline lineno="5505"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(index<sp/>&gt;=<sp/>(int32_t)(nValues<sp/>-<sp/>1))</highlight></codeline>
<codeline lineno="5506"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(pYData[nValues<sp/>-<sp/>1]);</highlight></codeline>
<codeline lineno="5508"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5509"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(index<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="5510"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(pYData[0]);</highlight></codeline>
<codeline lineno="5512"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5514"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>20<sp/>bits<sp/>for<sp/>the<sp/>fractional<sp/>part<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>shift<sp/>left<sp/>by<sp/>11<sp/>to<sp/>keep<sp/>fract<sp/>in<sp/>1.31<sp/>format<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fract<sp/>=<sp/>(x<sp/>&amp;<sp/>0x000FFFFF)<sp/>&lt;&lt;<sp/>11;</highlight></codeline>
<codeline lineno="5518"><highlight class="normal"></highlight></codeline>
<codeline lineno="5519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Read<sp/>two<sp/>nearest<sp/>output<sp/>values<sp/>from<sp/>the<sp/>index<sp/>in<sp/>1.31(q31)<sp/>format<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>y0<sp/>=<sp/>pYData[index];</highlight></codeline>
<codeline lineno="5521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>y1<sp/>=<sp/>pYData[index<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="5522"><highlight class="normal"></highlight></codeline>
<codeline lineno="5523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Calculation<sp/>of<sp/>y0<sp/>*<sp/>(1-fract)<sp/>and<sp/>y<sp/>is<sp/>in<sp/>2.30<sp/>format<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>((<ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref>)<sp/>((q63_t)<sp/>y0<sp/>*<sp/>(0x7FFFFFFF<sp/>-<sp/>fract)<sp/>&gt;&gt;<sp/>32));</highlight></codeline>
<codeline lineno="5525"><highlight class="normal"></highlight></codeline>
<codeline lineno="5526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Calculation<sp/>of<sp/>y0<sp/>*<sp/>(1-fract)<sp/>+<sp/>y1<sp/>*fract<sp/>and<sp/>y<sp/>is<sp/>in<sp/>2.30<sp/>format<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>+=<sp/>((<ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref>)<sp/>(((q63_t)<sp/>y1<sp/>*<sp/>fract)<sp/>&gt;&gt;<sp/>32));</highlight></codeline>
<codeline lineno="5528"><highlight class="normal"></highlight></codeline>
<codeline lineno="5529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Convert<sp/>y<sp/>to<sp/>1.31<sp/>format<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(y<sp/>&lt;&lt;<sp/>1u);</highlight></codeline>
<codeline lineno="5531"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5532"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5533"><highlight class="normal"></highlight></codeline>
<codeline lineno="5534"><highlight class="normal"></highlight></codeline>
<codeline lineno="5548"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>__INLINE<sp/>q15_t<sp/>arm_linear_interp_q15(</highlight></codeline>
<codeline lineno="5549"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pYData,</highlight></codeline>
<codeline lineno="5550"><highlight class="normal"><sp/><sp/>q31_t<sp/>x,</highlight></codeline>
<codeline lineno="5551"><highlight class="normal"><sp/><sp/>uint32_t<sp/>nValues)</highlight></codeline>
<codeline lineno="5552"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="5553"><highlight class="normal"><sp/><sp/><sp/><sp/>q63_t<sp/>y;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>output<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5554"><highlight class="normal"><sp/><sp/><sp/><sp/>q15_t<sp/>y0,<sp/>y1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Nearest<sp/>output<sp/>values<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5555"><highlight class="normal"><sp/><sp/><sp/><sp/>q31_t<sp/>fract;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>fractional<sp/>part<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5556"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>index;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Index<sp/>to<sp/>read<sp/>nearest<sp/>output<sp/>values<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5557"><highlight class="normal"></highlight></codeline>
<codeline lineno="5558"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Input<sp/>is<sp/>in<sp/>12.20<sp/>format<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5559"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>12<sp/>bits<sp/>for<sp/>the<sp/>table<sp/>index<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5560"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Index<sp/>value<sp/>calculation<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5561"><highlight class="normal"><sp/><sp/><sp/><sp/>index<sp/>=<sp/>((x<sp/>&amp;<sp/>(int32_t)0xFFF00000)<sp/>&gt;&gt;<sp/>20);</highlight></codeline>
<codeline lineno="5562"><highlight class="normal"></highlight></codeline>
<codeline lineno="5563"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(index<sp/>&gt;=<sp/>(int32_t)(nValues<sp/>-<sp/>1))</highlight></codeline>
<codeline lineno="5564"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(pYData[nValues<sp/>-<sp/>1]);</highlight></codeline>
<codeline lineno="5566"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5567"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(index<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="5568"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(pYData[0]);</highlight></codeline>
<codeline lineno="5570"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5571"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5572"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>20<sp/>bits<sp/>for<sp/>the<sp/>fractional<sp/>part<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>fract<sp/>is<sp/>in<sp/>12.20<sp/>format<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fract<sp/>=<sp/>(x<sp/>&amp;<sp/>0x000FFFFF);</highlight></codeline>
<codeline lineno="5576"><highlight class="normal"></highlight></codeline>
<codeline lineno="5577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Read<sp/>two<sp/>nearest<sp/>output<sp/>values<sp/>from<sp/>the<sp/>index<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>y0<sp/>=<sp/>pYData[index];</highlight></codeline>
<codeline lineno="5579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>y1<sp/>=<sp/>pYData[index<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="5580"><highlight class="normal"></highlight></codeline>
<codeline lineno="5581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Calculation<sp/>of<sp/>y0<sp/>*<sp/>(1-fract)<sp/>and<sp/>y<sp/>is<sp/>in<sp/>13.35<sp/>format<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>((<ref refid="arm__math_8h_1a5aea1cb12fc02d9d44c8abf217eaa5c6" kindref="member">q63_t</ref>)<sp/>y0<sp/>*<sp/>(0xFFFFF<sp/>-<sp/>fract));</highlight></codeline>
<codeline lineno="5583"><highlight class="normal"></highlight></codeline>
<codeline lineno="5584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Calculation<sp/>of<sp/>(y0<sp/>*<sp/>(1-fract)<sp/>+<sp/>y1<sp/>*<sp/>fract)<sp/>and<sp/>y<sp/>is<sp/>in<sp/>13.35<sp/>format<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>+=<sp/>((<ref refid="arm__math_8h_1a5aea1cb12fc02d9d44c8abf217eaa5c6" kindref="member">q63_t</ref>)<sp/>y1<sp/>*<sp/>(fract));</highlight></codeline>
<codeline lineno="5586"><highlight class="normal"></highlight></codeline>
<codeline lineno="5587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>convert<sp/>y<sp/>to<sp/>1.15<sp/>format<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(q15_t)<sp/>(y<sp/>&gt;&gt;<sp/>20);</highlight></codeline>
<codeline lineno="5589"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5590"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5591"><highlight class="normal"></highlight></codeline>
<codeline lineno="5592"><highlight class="normal"></highlight></codeline>
<codeline lineno="5605"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>__INLINE<sp/>q7_t<sp/>arm_linear_interp_q7(</highlight></codeline>
<codeline lineno="5606"><highlight class="normal"><sp/><sp/>q7_t<sp/>*<sp/>pYData,</highlight></codeline>
<codeline lineno="5607"><highlight class="normal"><sp/><sp/>q31_t<sp/>x,</highlight></codeline>
<codeline lineno="5608"><highlight class="normal"><sp/><sp/>uint32_t<sp/>nValues)</highlight></codeline>
<codeline lineno="5609"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="5610"><highlight class="normal"><sp/><sp/><sp/><sp/>q31_t<sp/>y;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>output<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5611"><highlight class="normal"><sp/><sp/><sp/><sp/>q7_t<sp/>y0,<sp/>y1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Nearest<sp/>output<sp/>values<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5612"><highlight class="normal"><sp/><sp/><sp/><sp/>q31_t<sp/>fract;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>fractional<sp/>part<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5613"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>index;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Index<sp/>to<sp/>read<sp/>nearest<sp/>output<sp/>values<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5614"><highlight class="normal"></highlight></codeline>
<codeline lineno="5615"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Input<sp/>is<sp/>in<sp/>12.20<sp/>format<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5616"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>12<sp/>bits<sp/>for<sp/>the<sp/>table<sp/>index<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5617"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Index<sp/>value<sp/>calculation<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5618"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="5619"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(pYData[0]);</highlight></codeline>
<codeline lineno="5621"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5622"><highlight class="normal"><sp/><sp/><sp/><sp/>index<sp/>=<sp/>(x<sp/>&gt;&gt;<sp/>20)<sp/>&amp;<sp/>0xfff;</highlight></codeline>
<codeline lineno="5623"><highlight class="normal"></highlight></codeline>
<codeline lineno="5624"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(index<sp/>&gt;=<sp/>(nValues<sp/>-<sp/>1))</highlight></codeline>
<codeline lineno="5625"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(pYData[nValues<sp/>-<sp/>1]);</highlight></codeline>
<codeline lineno="5627"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5628"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5629"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>20<sp/>bits<sp/>for<sp/>the<sp/>fractional<sp/>part<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>fract<sp/>is<sp/>in<sp/>12.20<sp/>format<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fract<sp/>=<sp/>(x<sp/>&amp;<sp/>0x000FFFFF);</highlight></codeline>
<codeline lineno="5633"><highlight class="normal"></highlight></codeline>
<codeline lineno="5634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Read<sp/>two<sp/>nearest<sp/>output<sp/>values<sp/>from<sp/>the<sp/>index<sp/>and<sp/>are<sp/>in<sp/>1.7(q7)<sp/>format<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>y0<sp/>=<sp/>pYData[index];</highlight></codeline>
<codeline lineno="5636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>y1<sp/>=<sp/>pYData[index<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="5637"><highlight class="normal"></highlight></codeline>
<codeline lineno="5638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Calculation<sp/>of<sp/>y0<sp/>*<sp/>(1-fract<sp/>)<sp/>and<sp/>y<sp/>is<sp/>in<sp/>13.27(q27)<sp/>format<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>((y0<sp/>*<sp/>(0xFFFFF<sp/>-<sp/>fract)));</highlight></codeline>
<codeline lineno="5640"><highlight class="normal"></highlight></codeline>
<codeline lineno="5641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Calculation<sp/>of<sp/>y1<sp/>*<sp/>fract<sp/>+<sp/>y0<sp/>*<sp/>(1-fract)<sp/>and<sp/>y<sp/>is<sp/>in<sp/>13.27(q27)<sp/>format<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>+=<sp/>(y1<sp/>*<sp/>fract);</highlight></codeline>
<codeline lineno="5643"><highlight class="normal"></highlight></codeline>
<codeline lineno="5644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>convert<sp/>y<sp/>to<sp/>1.7(q7)<sp/>format<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(q7_t)<sp/>(y<sp/>&gt;&gt;<sp/>20);</highlight></codeline>
<codeline lineno="5646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5647"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5648"><highlight class="normal"></highlight></codeline>
<codeline lineno="5658"><highlight class="normal"><sp/><sp/>float32_t<sp/><ref refid="arm__math_8h_1ae164899c4a3fc0e946dc5d55555fe541" kindref="member">arm_sin_f32</ref>(</highlight></codeline>
<codeline lineno="5659"><highlight class="normal"><sp/><sp/>float32_t<sp/>x);</highlight></codeline>
<codeline lineno="5660"><highlight class="normal"></highlight></codeline>
<codeline lineno="5661"><highlight class="normal"></highlight></codeline>
<codeline lineno="5667"><highlight class="normal"><sp/><sp/>q31_t<sp/><ref refid="arm__math_8h_1a57aade7d8892585992cdc6375bd82f9c" kindref="member">arm_sin_q31</ref>(</highlight></codeline>
<codeline lineno="5668"><highlight class="normal"><sp/><sp/>q31_t<sp/>x);</highlight></codeline>
<codeline lineno="5669"><highlight class="normal"></highlight></codeline>
<codeline lineno="5670"><highlight class="normal"></highlight></codeline>
<codeline lineno="5676"><highlight class="normal"><sp/><sp/>q15_t<sp/><ref refid="arm__math_8h_1a1fc6d6640be6cfa688a8bea0a48397ee" kindref="member">arm_sin_q15</ref>(</highlight></codeline>
<codeline lineno="5677"><highlight class="normal"><sp/><sp/>q15_t<sp/>x);</highlight></codeline>
<codeline lineno="5678"><highlight class="normal"></highlight></codeline>
<codeline lineno="5679"><highlight class="normal"></highlight></codeline>
<codeline lineno="5685"><highlight class="normal"><sp/><sp/>float32_t<sp/><ref refid="arm__math_8h_1ace15287f9c64b9b4084d1c797d4c49d8" kindref="member">arm_cos_f32</ref>(</highlight></codeline>
<codeline lineno="5686"><highlight class="normal"><sp/><sp/>float32_t<sp/>x);</highlight></codeline>
<codeline lineno="5687"><highlight class="normal"></highlight></codeline>
<codeline lineno="5688"><highlight class="normal"></highlight></codeline>
<codeline lineno="5694"><highlight class="normal"><sp/><sp/>q31_t<sp/><ref refid="arm__math_8h_1ad80f121949ef885a77d83ab36e002567" kindref="member">arm_cos_q31</ref>(</highlight></codeline>
<codeline lineno="5695"><highlight class="normal"><sp/><sp/>q31_t<sp/>x);</highlight></codeline>
<codeline lineno="5696"><highlight class="normal"></highlight></codeline>
<codeline lineno="5697"><highlight class="normal"></highlight></codeline>
<codeline lineno="5703"><highlight class="normal"><sp/><sp/>q15_t<sp/><ref refid="arm__math_8h_1adfd60c24def501638c0d5db20f4c869b" kindref="member">arm_cos_q15</ref>(</highlight></codeline>
<codeline lineno="5704"><highlight class="normal"><sp/><sp/>q15_t<sp/>x);</highlight></codeline>
<codeline lineno="5705"><highlight class="normal"></highlight></codeline>
<codeline lineno="5706"><highlight class="normal"></highlight></codeline>
<codeline lineno="5745"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>__INLINE<sp/><ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6" kindref="member">arm_status</ref><sp/>arm_sqrt_f32(</highlight></codeline>
<codeline lineno="5746"><highlight class="normal"><sp/><sp/>float32_t<sp/>in,</highlight></codeline>
<codeline lineno="5747"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pOut)</highlight></codeline>
<codeline lineno="5748"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="5749"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(in<sp/>&gt;=<sp/>0.0f)</highlight></codeline>
<codeline lineno="5750"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5751"><highlight class="normal"></highlight></codeline>
<codeline lineno="5752"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/><sp/><sp/>(__FPU_USED<sp/>==<sp/>1)<sp/>&amp;&amp;<sp/>defined<sp/>(<sp/>__CC_ARM<sp/><sp/><sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*pOut<sp/>=<sp/>__sqrtf(in);</highlight></codeline>
<codeline lineno="5754"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>(__FPU_USED<sp/>==<sp/>1)<sp/>&amp;&amp;<sp/>(defined(__ARMCC_VERSION)<sp/>&amp;&amp;<sp/>(__ARMCC_VERSION<sp/>&gt;=<sp/>6010050))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*pOut<sp/>=<sp/>__builtin_sqrtf(in);</highlight></codeline>
<codeline lineno="5756"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>(__FPU_USED<sp/>==<sp/>1)<sp/>&amp;&amp;<sp/>defined(__GNUC__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*pOut<sp/>=<sp/>__builtin_sqrtf(in);</highlight></codeline>
<codeline lineno="5758"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>(__FPU_USED<sp/>==<sp/>1)<sp/>&amp;&amp;<sp/>defined<sp/>(<sp/>__ICCARM__<sp/>)<sp/>&amp;&amp;<sp/>(__VER__<sp/>&gt;=<sp/>6040000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__ASM(</highlight><highlight class="stringliteral">&quot;VSQRT.F32<sp/>%0,%1&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;=t&quot;</highlight><highlight class="normal">(*pOut)<sp/>:<sp/></highlight><highlight class="stringliteral">&quot;t&quot;</highlight><highlight class="normal">(in));</highlight></codeline>
<codeline lineno="5760"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*pOut<sp/>=<sp/>sqrtf(in);</highlight></codeline>
<codeline lineno="5762"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5763"><highlight class="normal"></highlight></codeline>
<codeline lineno="5764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6a9f8b2a10bd827fb4600e77d455902eb0" kindref="member">ARM_MATH_SUCCESS</ref>);</highlight></codeline>
<codeline lineno="5765"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5766"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5767"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*pOut<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="5769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6a74897e18d4b8f62b12a7d8a01dd2bb35" kindref="member">ARM_MATH_ARGUMENT_ERROR</ref>);</highlight></codeline>
<codeline lineno="5770"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5771"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5772"><highlight class="normal"></highlight></codeline>
<codeline lineno="5773"><highlight class="normal"></highlight></codeline>
<codeline lineno="5781"><highlight class="normal"><sp/><sp/><ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6" kindref="member">arm_status</ref><sp/><ref refid="group___s_q_r_t_1ga119e25831e141d734d7ef10636670058" kindref="member">arm_sqrt_q31</ref>(</highlight></codeline>
<codeline lineno="5782"><highlight class="normal"><sp/><sp/>q31_t<sp/>in,</highlight></codeline>
<codeline lineno="5783"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pOut);</highlight></codeline>
<codeline lineno="5784"><highlight class="normal"></highlight></codeline>
<codeline lineno="5785"><highlight class="normal"></highlight></codeline>
<codeline lineno="5793"><highlight class="normal"><sp/><sp/><ref refid="arm__math_8h_1a5e459c6409dfcd2927bb8a57491d7cf6" kindref="member">arm_status</ref><sp/><ref refid="group___s_q_r_t_1ga5abe5ca724f3e15849662b03752c1238" kindref="member">arm_sqrt_q15</ref>(</highlight></codeline>
<codeline lineno="5794"><highlight class="normal"><sp/><sp/>q15_t<sp/>in,</highlight></codeline>
<codeline lineno="5795"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pOut);</highlight></codeline>
<codeline lineno="5796"><highlight class="normal"></highlight></codeline>
<codeline lineno="5805"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>__INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>arm_circularWrite_f32(</highlight></codeline>
<codeline lineno="5806"><highlight class="normal"><sp/><sp/>int32_t<sp/>*<sp/>circBuffer,</highlight></codeline>
<codeline lineno="5807"><highlight class="normal"><sp/><sp/>int32_t<sp/>L,</highlight></codeline>
<codeline lineno="5808"><highlight class="normal"><sp/><sp/>uint16_t<sp/>*<sp/>writeOffset,</highlight></codeline>
<codeline lineno="5809"><highlight class="normal"><sp/><sp/>int32_t<sp/>bufferInc,</highlight></codeline>
<codeline lineno="5810"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>*<sp/>src,</highlight></codeline>
<codeline lineno="5811"><highlight class="normal"><sp/><sp/>int32_t<sp/>srcInc,</highlight></codeline>
<codeline lineno="5812"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize)</highlight></codeline>
<codeline lineno="5813"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="5814"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>i<sp/>=<sp/>0u;</highlight></codeline>
<codeline lineno="5815"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>wOffset;</highlight></codeline>
<codeline lineno="5816"><highlight class="normal"></highlight></codeline>
<codeline lineno="5817"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Copy<sp/>the<sp/>value<sp/>of<sp/>Index<sp/>pointer<sp/>that<sp/>points</highlight></codeline>
<codeline lineno="5818"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>to<sp/>the<sp/>current<sp/>location<sp/>where<sp/>the<sp/>input<sp/>samples<sp/>to<sp/>be<sp/>copied<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5819"><highlight class="normal"><sp/><sp/><sp/><sp/>wOffset<sp/>=<sp/>*writeOffset;</highlight></codeline>
<codeline lineno="5820"><highlight class="normal"></highlight></codeline>
<codeline lineno="5821"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Loop<sp/>over<sp/>the<sp/>blockSize<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5822"><highlight class="normal"><sp/><sp/><sp/><sp/>i<sp/>=<sp/>blockSize;</highlight></codeline>
<codeline lineno="5823"><highlight class="normal"></highlight></codeline>
<codeline lineno="5824"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(i<sp/>&gt;<sp/>0u)</highlight></codeline>
<codeline lineno="5825"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>copy<sp/>the<sp/>input<sp/>sample<sp/>to<sp/>the<sp/>circular<sp/>buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>circBuffer[wOffset]<sp/>=<sp/>*src;</highlight></codeline>
<codeline lineno="5828"><highlight class="normal"></highlight></codeline>
<codeline lineno="5829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Update<sp/>the<sp/>input<sp/>pointer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>src<sp/>+=<sp/>srcInc;</highlight></codeline>
<codeline lineno="5831"><highlight class="normal"></highlight></codeline>
<codeline lineno="5832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Circularly<sp/>update<sp/>wOffset.<sp/><sp/>Watch<sp/>out<sp/>for<sp/>positive<sp/>and<sp/>negative<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wOffset<sp/>+=<sp/>bufferInc;</highlight></codeline>
<codeline lineno="5834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(wOffset<sp/>&gt;=<sp/>L)</highlight></codeline>
<codeline lineno="5835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wOffset<sp/>-=<sp/>L;</highlight></codeline>
<codeline lineno="5836"><highlight class="normal"></highlight></codeline>
<codeline lineno="5837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Decrement<sp/>the<sp/>loop<sp/>counter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i--;</highlight></codeline>
<codeline lineno="5839"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5840"><highlight class="normal"></highlight></codeline>
<codeline lineno="5841"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Update<sp/>the<sp/>index<sp/>pointer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5842"><highlight class="normal"><sp/><sp/><sp/><sp/>*writeOffset<sp/>=<sp/>(uint16_t)wOffset;</highlight></codeline>
<codeline lineno="5843"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5844"><highlight class="normal"></highlight></codeline>
<codeline lineno="5845"><highlight class="normal"></highlight></codeline>
<codeline lineno="5846"><highlight class="normal"></highlight></codeline>
<codeline lineno="5850"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>__INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>arm_circularRead_f32(</highlight></codeline>
<codeline lineno="5851"><highlight class="normal"><sp/><sp/>int32_t<sp/>*<sp/>circBuffer,</highlight></codeline>
<codeline lineno="5852"><highlight class="normal"><sp/><sp/>int32_t<sp/>L,</highlight></codeline>
<codeline lineno="5853"><highlight class="normal"><sp/><sp/>int32_t<sp/>*<sp/>readOffset,</highlight></codeline>
<codeline lineno="5854"><highlight class="normal"><sp/><sp/>int32_t<sp/>bufferInc,</highlight></codeline>
<codeline lineno="5855"><highlight class="normal"><sp/><sp/>int32_t<sp/>*<sp/>dst,</highlight></codeline>
<codeline lineno="5856"><highlight class="normal"><sp/><sp/>int32_t<sp/>*<sp/>dst_base,</highlight></codeline>
<codeline lineno="5857"><highlight class="normal"><sp/><sp/>int32_t<sp/>dst_length,</highlight></codeline>
<codeline lineno="5858"><highlight class="normal"><sp/><sp/>int32_t<sp/>dstInc,</highlight></codeline>
<codeline lineno="5859"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize)</highlight></codeline>
<codeline lineno="5860"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="5861"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>i<sp/>=<sp/>0u;</highlight></codeline>
<codeline lineno="5862"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>rOffset,<sp/>dst_end;</highlight></codeline>
<codeline lineno="5863"><highlight class="normal"></highlight></codeline>
<codeline lineno="5864"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Copy<sp/>the<sp/>value<sp/>of<sp/>Index<sp/>pointer<sp/>that<sp/>points</highlight></codeline>
<codeline lineno="5865"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>to<sp/>the<sp/>current<sp/>location<sp/>from<sp/>where<sp/>the<sp/>input<sp/>samples<sp/>to<sp/>be<sp/>read<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5866"><highlight class="normal"><sp/><sp/><sp/><sp/>rOffset<sp/>=<sp/>*readOffset;</highlight></codeline>
<codeline lineno="5867"><highlight class="normal"><sp/><sp/><sp/><sp/>dst_end<sp/>=<sp/>(int32_t)<sp/>(dst_base<sp/>+<sp/>dst_length);</highlight></codeline>
<codeline lineno="5868"><highlight class="normal"></highlight></codeline>
<codeline lineno="5869"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Loop<sp/>over<sp/>the<sp/>blockSize<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5870"><highlight class="normal"><sp/><sp/><sp/><sp/>i<sp/>=<sp/>blockSize;</highlight></codeline>
<codeline lineno="5871"><highlight class="normal"></highlight></codeline>
<codeline lineno="5872"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(i<sp/>&gt;<sp/>0u)</highlight></codeline>
<codeline lineno="5873"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>copy<sp/>the<sp/>sample<sp/>from<sp/>the<sp/>circular<sp/>buffer<sp/>to<sp/>the<sp/>destination<sp/>buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*dst<sp/>=<sp/>circBuffer[rOffset];</highlight></codeline>
<codeline lineno="5876"><highlight class="normal"></highlight></codeline>
<codeline lineno="5877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Update<sp/>the<sp/>input<sp/>pointer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dst<sp/>+=<sp/>dstInc;</highlight></codeline>
<codeline lineno="5879"><highlight class="normal"></highlight></codeline>
<codeline lineno="5880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(dst<sp/>==<sp/>(int32_t<sp/>*)<sp/>dst_end)</highlight></codeline>
<codeline lineno="5881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst<sp/>=<sp/>dst_base;</highlight></codeline>
<codeline lineno="5883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5884"><highlight class="normal"></highlight></codeline>
<codeline lineno="5885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Circularly<sp/>update<sp/>rOffset.<sp/><sp/>Watch<sp/>out<sp/>for<sp/>positive<sp/>and<sp/>negative<sp/>value<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rOffset<sp/>+=<sp/>bufferInc;</highlight></codeline>
<codeline lineno="5887"><highlight class="normal"></highlight></codeline>
<codeline lineno="5888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(rOffset<sp/>&gt;=<sp/>L)</highlight></codeline>
<codeline lineno="5889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rOffset<sp/>-=<sp/>L;</highlight></codeline>
<codeline lineno="5891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5892"><highlight class="normal"></highlight></codeline>
<codeline lineno="5893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Decrement<sp/>the<sp/>loop<sp/>counter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i--;</highlight></codeline>
<codeline lineno="5895"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5896"><highlight class="normal"></highlight></codeline>
<codeline lineno="5897"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Update<sp/>the<sp/>index<sp/>pointer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5898"><highlight class="normal"><sp/><sp/><sp/><sp/>*readOffset<sp/>=<sp/>rOffset;</highlight></codeline>
<codeline lineno="5899"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5900"><highlight class="normal"></highlight></codeline>
<codeline lineno="5901"><highlight class="normal"></highlight></codeline>
<codeline lineno="5905"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>__INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>arm_circularWrite_q15(</highlight></codeline>
<codeline lineno="5906"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>circBuffer,</highlight></codeline>
<codeline lineno="5907"><highlight class="normal"><sp/><sp/>int32_t<sp/>L,</highlight></codeline>
<codeline lineno="5908"><highlight class="normal"><sp/><sp/>uint16_t<sp/>*<sp/>writeOffset,</highlight></codeline>
<codeline lineno="5909"><highlight class="normal"><sp/><sp/>int32_t<sp/>bufferInc,</highlight></codeline>
<codeline lineno="5910"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q15_t<sp/>*<sp/>src,</highlight></codeline>
<codeline lineno="5911"><highlight class="normal"><sp/><sp/>int32_t<sp/>srcInc,</highlight></codeline>
<codeline lineno="5912"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize)</highlight></codeline>
<codeline lineno="5913"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="5914"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>i<sp/>=<sp/>0u;</highlight></codeline>
<codeline lineno="5915"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>wOffset;</highlight></codeline>
<codeline lineno="5916"><highlight class="normal"></highlight></codeline>
<codeline lineno="5917"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Copy<sp/>the<sp/>value<sp/>of<sp/>Index<sp/>pointer<sp/>that<sp/>points</highlight></codeline>
<codeline lineno="5918"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>to<sp/>the<sp/>current<sp/>location<sp/>where<sp/>the<sp/>input<sp/>samples<sp/>to<sp/>be<sp/>copied<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5919"><highlight class="normal"><sp/><sp/><sp/><sp/>wOffset<sp/>=<sp/>*writeOffset;</highlight></codeline>
<codeline lineno="5920"><highlight class="normal"></highlight></codeline>
<codeline lineno="5921"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Loop<sp/>over<sp/>the<sp/>blockSize<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5922"><highlight class="normal"><sp/><sp/><sp/><sp/>i<sp/>=<sp/>blockSize;</highlight></codeline>
<codeline lineno="5923"><highlight class="normal"></highlight></codeline>
<codeline lineno="5924"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(i<sp/>&gt;<sp/>0u)</highlight></codeline>
<codeline lineno="5925"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>copy<sp/>the<sp/>input<sp/>sample<sp/>to<sp/>the<sp/>circular<sp/>buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>circBuffer[wOffset]<sp/>=<sp/>*src;</highlight></codeline>
<codeline lineno="5928"><highlight class="normal"></highlight></codeline>
<codeline lineno="5929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Update<sp/>the<sp/>input<sp/>pointer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>src<sp/>+=<sp/>srcInc;</highlight></codeline>
<codeline lineno="5931"><highlight class="normal"></highlight></codeline>
<codeline lineno="5932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Circularly<sp/>update<sp/>wOffset.<sp/><sp/>Watch<sp/>out<sp/>for<sp/>positive<sp/>and<sp/>negative<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wOffset<sp/>+=<sp/>bufferInc;</highlight></codeline>
<codeline lineno="5934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(wOffset<sp/>&gt;=<sp/>L)</highlight></codeline>
<codeline lineno="5935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wOffset<sp/>-=<sp/>L;</highlight></codeline>
<codeline lineno="5936"><highlight class="normal"></highlight></codeline>
<codeline lineno="5937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Decrement<sp/>the<sp/>loop<sp/>counter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i--;</highlight></codeline>
<codeline lineno="5939"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5940"><highlight class="normal"></highlight></codeline>
<codeline lineno="5941"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Update<sp/>the<sp/>index<sp/>pointer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5942"><highlight class="normal"><sp/><sp/><sp/><sp/>*writeOffset<sp/>=<sp/>(uint16_t)wOffset;</highlight></codeline>
<codeline lineno="5943"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5944"><highlight class="normal"></highlight></codeline>
<codeline lineno="5945"><highlight class="normal"></highlight></codeline>
<codeline lineno="5949"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>__INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>arm_circularRead_q15(</highlight></codeline>
<codeline lineno="5950"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>circBuffer,</highlight></codeline>
<codeline lineno="5951"><highlight class="normal"><sp/><sp/>int32_t<sp/>L,</highlight></codeline>
<codeline lineno="5952"><highlight class="normal"><sp/><sp/>int32_t<sp/>*<sp/>readOffset,</highlight></codeline>
<codeline lineno="5953"><highlight class="normal"><sp/><sp/>int32_t<sp/>bufferInc,</highlight></codeline>
<codeline lineno="5954"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>dst,</highlight></codeline>
<codeline lineno="5955"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>dst_base,</highlight></codeline>
<codeline lineno="5956"><highlight class="normal"><sp/><sp/>int32_t<sp/>dst_length,</highlight></codeline>
<codeline lineno="5957"><highlight class="normal"><sp/><sp/>int32_t<sp/>dstInc,</highlight></codeline>
<codeline lineno="5958"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize)</highlight></codeline>
<codeline lineno="5959"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="5960"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5961"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>rOffset,<sp/>dst_end;</highlight></codeline>
<codeline lineno="5962"><highlight class="normal"></highlight></codeline>
<codeline lineno="5963"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Copy<sp/>the<sp/>value<sp/>of<sp/>Index<sp/>pointer<sp/>that<sp/>points</highlight></codeline>
<codeline lineno="5964"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>to<sp/>the<sp/>current<sp/>location<sp/>from<sp/>where<sp/>the<sp/>input<sp/>samples<sp/>to<sp/>be<sp/>read<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5965"><highlight class="normal"><sp/><sp/><sp/><sp/>rOffset<sp/>=<sp/>*readOffset;</highlight></codeline>
<codeline lineno="5966"><highlight class="normal"></highlight></codeline>
<codeline lineno="5967"><highlight class="normal"><sp/><sp/><sp/><sp/>dst_end<sp/>=<sp/>(int32_t)<sp/>(dst_base<sp/>+<sp/>dst_length);</highlight></codeline>
<codeline lineno="5968"><highlight class="normal"></highlight></codeline>
<codeline lineno="5969"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Loop<sp/>over<sp/>the<sp/>blockSize<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5970"><highlight class="normal"><sp/><sp/><sp/><sp/>i<sp/>=<sp/>blockSize;</highlight></codeline>
<codeline lineno="5971"><highlight class="normal"></highlight></codeline>
<codeline lineno="5972"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(i<sp/>&gt;<sp/>0u)</highlight></codeline>
<codeline lineno="5973"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>copy<sp/>the<sp/>sample<sp/>from<sp/>the<sp/>circular<sp/>buffer<sp/>to<sp/>the<sp/>destination<sp/>buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*dst<sp/>=<sp/>circBuffer[rOffset];</highlight></codeline>
<codeline lineno="5976"><highlight class="normal"></highlight></codeline>
<codeline lineno="5977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Update<sp/>the<sp/>input<sp/>pointer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dst<sp/>+=<sp/>dstInc;</highlight></codeline>
<codeline lineno="5979"><highlight class="normal"></highlight></codeline>
<codeline lineno="5980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(dst<sp/>==<sp/>(q15_t<sp/>*)<sp/>dst_end)</highlight></codeline>
<codeline lineno="5981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst<sp/>=<sp/>dst_base;</highlight></codeline>
<codeline lineno="5983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5984"><highlight class="normal"></highlight></codeline>
<codeline lineno="5985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Circularly<sp/>update<sp/>wOffset.<sp/><sp/>Watch<sp/>out<sp/>for<sp/>positive<sp/>and<sp/>negative<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rOffset<sp/>+=<sp/>bufferInc;</highlight></codeline>
<codeline lineno="5987"><highlight class="normal"></highlight></codeline>
<codeline lineno="5988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(rOffset<sp/>&gt;=<sp/>L)</highlight></codeline>
<codeline lineno="5989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rOffset<sp/>-=<sp/>L;</highlight></codeline>
<codeline lineno="5991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5992"><highlight class="normal"></highlight></codeline>
<codeline lineno="5993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Decrement<sp/>the<sp/>loop<sp/>counter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i--;</highlight></codeline>
<codeline lineno="5995"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5996"><highlight class="normal"></highlight></codeline>
<codeline lineno="5997"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Update<sp/>the<sp/>index<sp/>pointer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5998"><highlight class="normal"><sp/><sp/><sp/><sp/>*readOffset<sp/>=<sp/>rOffset;</highlight></codeline>
<codeline lineno="5999"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6000"><highlight class="normal"></highlight></codeline>
<codeline lineno="6001"><highlight class="normal"></highlight></codeline>
<codeline lineno="6005"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>__INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>arm_circularWrite_q7(</highlight></codeline>
<codeline lineno="6006"><highlight class="normal"><sp/><sp/>q7_t<sp/>*<sp/>circBuffer,</highlight></codeline>
<codeline lineno="6007"><highlight class="normal"><sp/><sp/>int32_t<sp/>L,</highlight></codeline>
<codeline lineno="6008"><highlight class="normal"><sp/><sp/>uint16_t<sp/>*<sp/>writeOffset,</highlight></codeline>
<codeline lineno="6009"><highlight class="normal"><sp/><sp/>int32_t<sp/>bufferInc,</highlight></codeline>
<codeline lineno="6010"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*<sp/>src,</highlight></codeline>
<codeline lineno="6011"><highlight class="normal"><sp/><sp/>int32_t<sp/>srcInc,</highlight></codeline>
<codeline lineno="6012"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize)</highlight></codeline>
<codeline lineno="6013"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="6014"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>i<sp/>=<sp/>0u;</highlight></codeline>
<codeline lineno="6015"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>wOffset;</highlight></codeline>
<codeline lineno="6016"><highlight class="normal"></highlight></codeline>
<codeline lineno="6017"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Copy<sp/>the<sp/>value<sp/>of<sp/>Index<sp/>pointer<sp/>that<sp/>points</highlight></codeline>
<codeline lineno="6018"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>to<sp/>the<sp/>current<sp/>location<sp/>where<sp/>the<sp/>input<sp/>samples<sp/>to<sp/>be<sp/>copied<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6019"><highlight class="normal"><sp/><sp/><sp/><sp/>wOffset<sp/>=<sp/>*writeOffset;</highlight></codeline>
<codeline lineno="6020"><highlight class="normal"></highlight></codeline>
<codeline lineno="6021"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Loop<sp/>over<sp/>the<sp/>blockSize<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6022"><highlight class="normal"><sp/><sp/><sp/><sp/>i<sp/>=<sp/>blockSize;</highlight></codeline>
<codeline lineno="6023"><highlight class="normal"></highlight></codeline>
<codeline lineno="6024"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(i<sp/>&gt;<sp/>0u)</highlight></codeline>
<codeline lineno="6025"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>copy<sp/>the<sp/>input<sp/>sample<sp/>to<sp/>the<sp/>circular<sp/>buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>circBuffer[wOffset]<sp/>=<sp/>*src;</highlight></codeline>
<codeline lineno="6028"><highlight class="normal"></highlight></codeline>
<codeline lineno="6029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Update<sp/>the<sp/>input<sp/>pointer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>src<sp/>+=<sp/>srcInc;</highlight></codeline>
<codeline lineno="6031"><highlight class="normal"></highlight></codeline>
<codeline lineno="6032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Circularly<sp/>update<sp/>wOffset.<sp/><sp/>Watch<sp/>out<sp/>for<sp/>positive<sp/>and<sp/>negative<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wOffset<sp/>+=<sp/>bufferInc;</highlight></codeline>
<codeline lineno="6034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(wOffset<sp/>&gt;=<sp/>L)</highlight></codeline>
<codeline lineno="6035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wOffset<sp/>-=<sp/>L;</highlight></codeline>
<codeline lineno="6036"><highlight class="normal"></highlight></codeline>
<codeline lineno="6037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Decrement<sp/>the<sp/>loop<sp/>counter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i--;</highlight></codeline>
<codeline lineno="6039"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6040"><highlight class="normal"></highlight></codeline>
<codeline lineno="6041"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Update<sp/>the<sp/>index<sp/>pointer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6042"><highlight class="normal"><sp/><sp/><sp/><sp/>*writeOffset<sp/>=<sp/>(uint16_t)wOffset;</highlight></codeline>
<codeline lineno="6043"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6044"><highlight class="normal"></highlight></codeline>
<codeline lineno="6045"><highlight class="normal"></highlight></codeline>
<codeline lineno="6049"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>__INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>arm_circularRead_q7(</highlight></codeline>
<codeline lineno="6050"><highlight class="normal"><sp/><sp/>q7_t<sp/>*<sp/>circBuffer,</highlight></codeline>
<codeline lineno="6051"><highlight class="normal"><sp/><sp/>int32_t<sp/>L,</highlight></codeline>
<codeline lineno="6052"><highlight class="normal"><sp/><sp/>int32_t<sp/>*<sp/>readOffset,</highlight></codeline>
<codeline lineno="6053"><highlight class="normal"><sp/><sp/>int32_t<sp/>bufferInc,</highlight></codeline>
<codeline lineno="6054"><highlight class="normal"><sp/><sp/>q7_t<sp/>*<sp/>dst,</highlight></codeline>
<codeline lineno="6055"><highlight class="normal"><sp/><sp/>q7_t<sp/>*<sp/>dst_base,</highlight></codeline>
<codeline lineno="6056"><highlight class="normal"><sp/><sp/>int32_t<sp/>dst_length,</highlight></codeline>
<codeline lineno="6057"><highlight class="normal"><sp/><sp/>int32_t<sp/>dstInc,</highlight></codeline>
<codeline lineno="6058"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize)</highlight></codeline>
<codeline lineno="6059"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="6060"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6061"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>rOffset,<sp/>dst_end;</highlight></codeline>
<codeline lineno="6062"><highlight class="normal"></highlight></codeline>
<codeline lineno="6063"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Copy<sp/>the<sp/>value<sp/>of<sp/>Index<sp/>pointer<sp/>that<sp/>points</highlight></codeline>
<codeline lineno="6064"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>to<sp/>the<sp/>current<sp/>location<sp/>from<sp/>where<sp/>the<sp/>input<sp/>samples<sp/>to<sp/>be<sp/>read<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6065"><highlight class="normal"><sp/><sp/><sp/><sp/>rOffset<sp/>=<sp/>*readOffset;</highlight></codeline>
<codeline lineno="6066"><highlight class="normal"></highlight></codeline>
<codeline lineno="6067"><highlight class="normal"><sp/><sp/><sp/><sp/>dst_end<sp/>=<sp/>(int32_t)<sp/>(dst_base<sp/>+<sp/>dst_length);</highlight></codeline>
<codeline lineno="6068"><highlight class="normal"></highlight></codeline>
<codeline lineno="6069"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Loop<sp/>over<sp/>the<sp/>blockSize<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6070"><highlight class="normal"><sp/><sp/><sp/><sp/>i<sp/>=<sp/>blockSize;</highlight></codeline>
<codeline lineno="6071"><highlight class="normal"></highlight></codeline>
<codeline lineno="6072"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(i<sp/>&gt;<sp/>0u)</highlight></codeline>
<codeline lineno="6073"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>copy<sp/>the<sp/>sample<sp/>from<sp/>the<sp/>circular<sp/>buffer<sp/>to<sp/>the<sp/>destination<sp/>buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*dst<sp/>=<sp/>circBuffer[rOffset];</highlight></codeline>
<codeline lineno="6076"><highlight class="normal"></highlight></codeline>
<codeline lineno="6077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Update<sp/>the<sp/>input<sp/>pointer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dst<sp/>+=<sp/>dstInc;</highlight></codeline>
<codeline lineno="6079"><highlight class="normal"></highlight></codeline>
<codeline lineno="6080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(dst<sp/>==<sp/>(q7_t<sp/>*)<sp/>dst_end)</highlight></codeline>
<codeline lineno="6081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst<sp/>=<sp/>dst_base;</highlight></codeline>
<codeline lineno="6083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6084"><highlight class="normal"></highlight></codeline>
<codeline lineno="6085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Circularly<sp/>update<sp/>rOffset.<sp/><sp/>Watch<sp/>out<sp/>for<sp/>positive<sp/>and<sp/>negative<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rOffset<sp/>+=<sp/>bufferInc;</highlight></codeline>
<codeline lineno="6087"><highlight class="normal"></highlight></codeline>
<codeline lineno="6088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(rOffset<sp/>&gt;=<sp/>L)</highlight></codeline>
<codeline lineno="6089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rOffset<sp/>-=<sp/>L;</highlight></codeline>
<codeline lineno="6091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6092"><highlight class="normal"></highlight></codeline>
<codeline lineno="6093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Decrement<sp/>the<sp/>loop<sp/>counter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i--;</highlight></codeline>
<codeline lineno="6095"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6096"><highlight class="normal"></highlight></codeline>
<codeline lineno="6097"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Update<sp/>the<sp/>index<sp/>pointer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6098"><highlight class="normal"><sp/><sp/><sp/><sp/>*readOffset<sp/>=<sp/>rOffset;</highlight></codeline>
<codeline lineno="6099"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6100"><highlight class="normal"></highlight></codeline>
<codeline lineno="6101"><highlight class="normal"></highlight></codeline>
<codeline lineno="6108"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a0b93d31bb5b5ed214c2b94d8a7744cd2" kindref="member">arm_power_q31</ref>(</highlight></codeline>
<codeline lineno="6109"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="6110"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize,</highlight></codeline>
<codeline lineno="6111"><highlight class="normal"><sp/><sp/>q63_t<sp/>*<sp/>pResult);</highlight></codeline>
<codeline lineno="6112"><highlight class="normal"></highlight></codeline>
<codeline lineno="6113"><highlight class="normal"></highlight></codeline>
<codeline lineno="6120"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a993c00dd7f661d66bdb6e58426e893aa" kindref="member">arm_power_f32</ref>(</highlight></codeline>
<codeline lineno="6121"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="6122"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize,</highlight></codeline>
<codeline lineno="6123"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pResult);</highlight></codeline>
<codeline lineno="6124"><highlight class="normal"></highlight></codeline>
<codeline lineno="6125"><highlight class="normal"></highlight></codeline>
<codeline lineno="6132"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a7050c04b7515e01a75c38f1abbaf71ba" kindref="member">arm_power_q15</ref>(</highlight></codeline>
<codeline lineno="6133"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="6134"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize,</highlight></codeline>
<codeline lineno="6135"><highlight class="normal"><sp/><sp/>q63_t<sp/>*<sp/>pResult);</highlight></codeline>
<codeline lineno="6136"><highlight class="normal"></highlight></codeline>
<codeline lineno="6137"><highlight class="normal"></highlight></codeline>
<codeline lineno="6144"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1af969c85c5655e3d72d7b99ff188f92c9" kindref="member">arm_power_q7</ref>(</highlight></codeline>
<codeline lineno="6145"><highlight class="normal"><sp/><sp/>q7_t<sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="6146"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize,</highlight></codeline>
<codeline lineno="6147"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pResult);</highlight></codeline>
<codeline lineno="6148"><highlight class="normal"></highlight></codeline>
<codeline lineno="6149"><highlight class="normal"></highlight></codeline>
<codeline lineno="6156"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1aebc707ee539020357c25da4c75b52eb7" kindref="member">arm_mean_q7</ref>(</highlight></codeline>
<codeline lineno="6157"><highlight class="normal"><sp/><sp/>q7_t<sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="6158"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize,</highlight></codeline>
<codeline lineno="6159"><highlight class="normal"><sp/><sp/>q7_t<sp/>*<sp/>pResult);</highlight></codeline>
<codeline lineno="6160"><highlight class="normal"></highlight></codeline>
<codeline lineno="6161"><highlight class="normal"></highlight></codeline>
<codeline lineno="6168"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1ac882495d5f098819fd3939c1ef7795b3" kindref="member">arm_mean_q15</ref>(</highlight></codeline>
<codeline lineno="6169"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="6170"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize,</highlight></codeline>
<codeline lineno="6171"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pResult);</highlight></codeline>
<codeline lineno="6172"><highlight class="normal"></highlight></codeline>
<codeline lineno="6173"><highlight class="normal"></highlight></codeline>
<codeline lineno="6180"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1acf2526d8c2d75e486e8f0b0e31877ad0" kindref="member">arm_mean_q31</ref>(</highlight></codeline>
<codeline lineno="6181"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="6182"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize,</highlight></codeline>
<codeline lineno="6183"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pResult);</highlight></codeline>
<codeline lineno="6184"><highlight class="normal"></highlight></codeline>
<codeline lineno="6185"><highlight class="normal"></highlight></codeline>
<codeline lineno="6192"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a74ce08c49ab61e57bd50c3a0ca1fdb2b" kindref="member">arm_mean_f32</ref>(</highlight></codeline>
<codeline lineno="6193"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="6194"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize,</highlight></codeline>
<codeline lineno="6195"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pResult);</highlight></codeline>
<codeline lineno="6196"><highlight class="normal"></highlight></codeline>
<codeline lineno="6197"><highlight class="normal"></highlight></codeline>
<codeline lineno="6204"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a393f26c5a3bfa05624fb8d32232a6d96" kindref="member">arm_var_f32</ref>(</highlight></codeline>
<codeline lineno="6205"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="6206"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize,</highlight></codeline>
<codeline lineno="6207"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pResult);</highlight></codeline>
<codeline lineno="6208"><highlight class="normal"></highlight></codeline>
<codeline lineno="6209"><highlight class="normal"></highlight></codeline>
<codeline lineno="6216"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1ac02873f1c2cc80adfd799305f0e6465d" kindref="member">arm_var_q31</ref>(</highlight></codeline>
<codeline lineno="6217"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="6218"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize,</highlight></codeline>
<codeline lineno="6219"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pResult);</highlight></codeline>
<codeline lineno="6220"><highlight class="normal"></highlight></codeline>
<codeline lineno="6221"><highlight class="normal"></highlight></codeline>
<codeline lineno="6228"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a79dce009ed2de28a125aeb3f19631654" kindref="member">arm_var_q15</ref>(</highlight></codeline>
<codeline lineno="6229"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="6230"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize,</highlight></codeline>
<codeline lineno="6231"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pResult);</highlight></codeline>
<codeline lineno="6232"><highlight class="normal"></highlight></codeline>
<codeline lineno="6233"><highlight class="normal"></highlight></codeline>
<codeline lineno="6240"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a0e3ab1b57da32d45388d1fa90d7fd88c" kindref="member">arm_rms_f32</ref>(</highlight></codeline>
<codeline lineno="6241"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="6242"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize,</highlight></codeline>
<codeline lineno="6243"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pResult);</highlight></codeline>
<codeline lineno="6244"><highlight class="normal"></highlight></codeline>
<codeline lineno="6245"><highlight class="normal"></highlight></codeline>
<codeline lineno="6252"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1ae33015fda23fc44e7ead5e5ed7e8d314" kindref="member">arm_rms_q31</ref>(</highlight></codeline>
<codeline lineno="6253"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="6254"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize,</highlight></codeline>
<codeline lineno="6255"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pResult);</highlight></codeline>
<codeline lineno="6256"><highlight class="normal"></highlight></codeline>
<codeline lineno="6257"><highlight class="normal"></highlight></codeline>
<codeline lineno="6264"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1af5b836b72dda9e5dfbbd17c7906fd13f" kindref="member">arm_rms_q15</ref>(</highlight></codeline>
<codeline lineno="6265"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="6266"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize,</highlight></codeline>
<codeline lineno="6267"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pResult);</highlight></codeline>
<codeline lineno="6268"><highlight class="normal"></highlight></codeline>
<codeline lineno="6269"><highlight class="normal"></highlight></codeline>
<codeline lineno="6276"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a4969b5b5f3d001377bc401a3ee99dfc2" kindref="member">arm_std_f32</ref>(</highlight></codeline>
<codeline lineno="6277"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="6278"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize,</highlight></codeline>
<codeline lineno="6279"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pResult);</highlight></codeline>
<codeline lineno="6280"><highlight class="normal"></highlight></codeline>
<codeline lineno="6281"><highlight class="normal"></highlight></codeline>
<codeline lineno="6288"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a39495e74f96116178be085c9dc7742f5" kindref="member">arm_std_q31</ref>(</highlight></codeline>
<codeline lineno="6289"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="6290"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize,</highlight></codeline>
<codeline lineno="6291"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pResult);</highlight></codeline>
<codeline lineno="6292"><highlight class="normal"></highlight></codeline>
<codeline lineno="6293"><highlight class="normal"></highlight></codeline>
<codeline lineno="6300"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1af9d27afa9928ff28a63cd98ea9218a72" kindref="member">arm_std_q15</ref>(</highlight></codeline>
<codeline lineno="6301"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="6302"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize,</highlight></codeline>
<codeline lineno="6303"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pResult);</highlight></codeline>
<codeline lineno="6304"><highlight class="normal"></highlight></codeline>
<codeline lineno="6305"><highlight class="normal"></highlight></codeline>
<codeline lineno="6312"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1ae45024c497392cde2ae358a76d435213" kindref="member">arm_cmplx_mag_f32</ref>(</highlight></codeline>
<codeline lineno="6313"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="6314"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pDst,</highlight></codeline>
<codeline lineno="6315"><highlight class="normal"><sp/><sp/>uint32_t<sp/>numSamples);</highlight></codeline>
<codeline lineno="6316"><highlight class="normal"></highlight></codeline>
<codeline lineno="6317"><highlight class="normal"></highlight></codeline>
<codeline lineno="6324"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a14f82f9230e9d96d5b9774e2fefcb7be" kindref="member">arm_cmplx_mag_q31</ref>(</highlight></codeline>
<codeline lineno="6325"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="6326"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pDst,</highlight></codeline>
<codeline lineno="6327"><highlight class="normal"><sp/><sp/>uint32_t<sp/>numSamples);</highlight></codeline>
<codeline lineno="6328"><highlight class="normal"></highlight></codeline>
<codeline lineno="6329"><highlight class="normal"></highlight></codeline>
<codeline lineno="6336"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a0a4a8f77a6a51d9b3f3b9d729f85b7a4" kindref="member">arm_cmplx_mag_q15</ref>(</highlight></codeline>
<codeline lineno="6337"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="6338"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pDst,</highlight></codeline>
<codeline lineno="6339"><highlight class="normal"><sp/><sp/>uint32_t<sp/>numSamples);</highlight></codeline>
<codeline lineno="6340"><highlight class="normal"></highlight></codeline>
<codeline lineno="6341"><highlight class="normal"></highlight></codeline>
<codeline lineno="6350"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a2b08b5e8001d2c15204639d00893fc70" kindref="member">arm_cmplx_dot_prod_q15</ref>(</highlight></codeline>
<codeline lineno="6351"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pSrcA,</highlight></codeline>
<codeline lineno="6352"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pSrcB,</highlight></codeline>
<codeline lineno="6353"><highlight class="normal"><sp/><sp/>uint32_t<sp/>numSamples,</highlight></codeline>
<codeline lineno="6354"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>realResult,</highlight></codeline>
<codeline lineno="6355"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>imagResult);</highlight></codeline>
<codeline lineno="6356"><highlight class="normal"></highlight></codeline>
<codeline lineno="6357"><highlight class="normal"></highlight></codeline>
<codeline lineno="6366"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a5b731a59db062a9ad84562ef68a6c8af" kindref="member">arm_cmplx_dot_prod_q31</ref>(</highlight></codeline>
<codeline lineno="6367"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pSrcA,</highlight></codeline>
<codeline lineno="6368"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pSrcB,</highlight></codeline>
<codeline lineno="6369"><highlight class="normal"><sp/><sp/>uint32_t<sp/>numSamples,</highlight></codeline>
<codeline lineno="6370"><highlight class="normal"><sp/><sp/>q63_t<sp/>*<sp/>realResult,</highlight></codeline>
<codeline lineno="6371"><highlight class="normal"><sp/><sp/>q63_t<sp/>*<sp/>imagResult);</highlight></codeline>
<codeline lineno="6372"><highlight class="normal"></highlight></codeline>
<codeline lineno="6373"><highlight class="normal"></highlight></codeline>
<codeline lineno="6382"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1adcfaf567a25eb641da4043eafb9bb076" kindref="member">arm_cmplx_dot_prod_f32</ref>(</highlight></codeline>
<codeline lineno="6383"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pSrcA,</highlight></codeline>
<codeline lineno="6384"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pSrcB,</highlight></codeline>
<codeline lineno="6385"><highlight class="normal"><sp/><sp/>uint32_t<sp/>numSamples,</highlight></codeline>
<codeline lineno="6386"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>realResult,</highlight></codeline>
<codeline lineno="6387"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>imagResult);</highlight></codeline>
<codeline lineno="6388"><highlight class="normal"></highlight></codeline>
<codeline lineno="6389"><highlight class="normal"></highlight></codeline>
<codeline lineno="6397"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a3bd8889dcb45980e1d3e53344df54e85" kindref="member">arm_cmplx_mult_real_q15</ref>(</highlight></codeline>
<codeline lineno="6398"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pSrcCmplx,</highlight></codeline>
<codeline lineno="6399"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pSrcReal,</highlight></codeline>
<codeline lineno="6400"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pCmplxDst,</highlight></codeline>
<codeline lineno="6401"><highlight class="normal"><sp/><sp/>uint32_t<sp/>numSamples);</highlight></codeline>
<codeline lineno="6402"><highlight class="normal"></highlight></codeline>
<codeline lineno="6403"><highlight class="normal"></highlight></codeline>
<codeline lineno="6411"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a715e4bb8e945b8ca51ec5237611697ce" kindref="member">arm_cmplx_mult_real_q31</ref>(</highlight></codeline>
<codeline lineno="6412"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pSrcCmplx,</highlight></codeline>
<codeline lineno="6413"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pSrcReal,</highlight></codeline>
<codeline lineno="6414"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pCmplxDst,</highlight></codeline>
<codeline lineno="6415"><highlight class="normal"><sp/><sp/>uint32_t<sp/>numSamples);</highlight></codeline>
<codeline lineno="6416"><highlight class="normal"></highlight></codeline>
<codeline lineno="6417"><highlight class="normal"></highlight></codeline>
<codeline lineno="6425"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a9c18616f56cb4d3c0889ce0b339221ca" kindref="member">arm_cmplx_mult_real_f32</ref>(</highlight></codeline>
<codeline lineno="6426"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pSrcCmplx,</highlight></codeline>
<codeline lineno="6427"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pSrcReal,</highlight></codeline>
<codeline lineno="6428"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pCmplxDst,</highlight></codeline>
<codeline lineno="6429"><highlight class="normal"><sp/><sp/>uint32_t<sp/>numSamples);</highlight></codeline>
<codeline lineno="6430"><highlight class="normal"></highlight></codeline>
<codeline lineno="6431"><highlight class="normal"></highlight></codeline>
<codeline lineno="6439"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a1f5f8212a4994882b647f0538a55856c" kindref="member">arm_min_q7</ref>(</highlight></codeline>
<codeline lineno="6440"><highlight class="normal"><sp/><sp/>q7_t<sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="6441"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize,</highlight></codeline>
<codeline lineno="6442"><highlight class="normal"><sp/><sp/>q7_t<sp/>*<sp/>result,</highlight></codeline>
<codeline lineno="6443"><highlight class="normal"><sp/><sp/>uint32_t<sp/>*<sp/>index);</highlight></codeline>
<codeline lineno="6444"><highlight class="normal"></highlight></codeline>
<codeline lineno="6445"><highlight class="normal"></highlight></codeline>
<codeline lineno="6453"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1ad065e37535ebb726750ac1545cb3fa6f" kindref="member">arm_min_q15</ref>(</highlight></codeline>
<codeline lineno="6454"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="6455"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize,</highlight></codeline>
<codeline lineno="6456"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pResult,</highlight></codeline>
<codeline lineno="6457"><highlight class="normal"><sp/><sp/>uint32_t<sp/>*<sp/>pIndex);</highlight></codeline>
<codeline lineno="6458"><highlight class="normal"></highlight></codeline>
<codeline lineno="6459"><highlight class="normal"></highlight></codeline>
<codeline lineno="6467"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1ab20faeceb5ff5d2d9dd628c2ecf41303" kindref="member">arm_min_q31</ref>(</highlight></codeline>
<codeline lineno="6468"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="6469"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize,</highlight></codeline>
<codeline lineno="6470"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pResult,</highlight></codeline>
<codeline lineno="6471"><highlight class="normal"><sp/><sp/>uint32_t<sp/>*<sp/>pIndex);</highlight></codeline>
<codeline lineno="6472"><highlight class="normal"></highlight></codeline>
<codeline lineno="6473"><highlight class="normal"></highlight></codeline>
<codeline lineno="6481"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1af62b1673740fc516ea64daf777b7d74a" kindref="member">arm_min_f32</ref>(</highlight></codeline>
<codeline lineno="6482"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="6483"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize,</highlight></codeline>
<codeline lineno="6484"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pResult,</highlight></codeline>
<codeline lineno="6485"><highlight class="normal"><sp/><sp/>uint32_t<sp/>*<sp/>pIndex);</highlight></codeline>
<codeline lineno="6486"><highlight class="normal"></highlight></codeline>
<codeline lineno="6487"><highlight class="normal"></highlight></codeline>
<codeline lineno="6495"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a6afd64d381b5c232de59163ebfe71e35" kindref="member">arm_max_q7</ref>(</highlight></codeline>
<codeline lineno="6496"><highlight class="normal"><sp/><sp/>q7_t<sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="6497"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize,</highlight></codeline>
<codeline lineno="6498"><highlight class="normal"><sp/><sp/>q7_t<sp/>*<sp/>pResult,</highlight></codeline>
<codeline lineno="6499"><highlight class="normal"><sp/><sp/>uint32_t<sp/>*<sp/>pIndex);</highlight></codeline>
<codeline lineno="6500"><highlight class="normal"></highlight></codeline>
<codeline lineno="6501"><highlight class="normal"></highlight></codeline>
<codeline lineno="6509"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1ac132856c68f4bf2a056eaad5921c7880" kindref="member">arm_max_q15</ref>(</highlight></codeline>
<codeline lineno="6510"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="6511"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize,</highlight></codeline>
<codeline lineno="6512"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pResult,</highlight></codeline>
<codeline lineno="6513"><highlight class="normal"><sp/><sp/>uint32_t<sp/>*<sp/>pIndex);</highlight></codeline>
<codeline lineno="6514"><highlight class="normal"></highlight></codeline>
<codeline lineno="6515"><highlight class="normal"></highlight></codeline>
<codeline lineno="6523"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1aff7cbd4e955382def06724cc4cc85795" kindref="member">arm_max_q31</ref>(</highlight></codeline>
<codeline lineno="6524"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="6525"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize,</highlight></codeline>
<codeline lineno="6526"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pResult,</highlight></codeline>
<codeline lineno="6527"><highlight class="normal"><sp/><sp/>uint32_t<sp/>*<sp/>pIndex);</highlight></codeline>
<codeline lineno="6528"><highlight class="normal"></highlight></codeline>
<codeline lineno="6529"><highlight class="normal"></highlight></codeline>
<codeline lineno="6537"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a5b89d1b04575aeec494f678695fb87d8" kindref="member">arm_max_f32</ref>(</highlight></codeline>
<codeline lineno="6538"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="6539"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize,</highlight></codeline>
<codeline lineno="6540"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pResult,</highlight></codeline>
<codeline lineno="6541"><highlight class="normal"><sp/><sp/>uint32_t<sp/>*<sp/>pIndex);</highlight></codeline>
<codeline lineno="6542"><highlight class="normal"></highlight></codeline>
<codeline lineno="6543"><highlight class="normal"></highlight></codeline>
<codeline lineno="6551"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a67e96abfc9c3e30efb70a2ec9d0fe7e8" kindref="member">arm_cmplx_mult_cmplx_q15</ref>(</highlight></codeline>
<codeline lineno="6552"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pSrcA,</highlight></codeline>
<codeline lineno="6553"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pSrcB,</highlight></codeline>
<codeline lineno="6554"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pDst,</highlight></codeline>
<codeline lineno="6555"><highlight class="normal"><sp/><sp/>uint32_t<sp/>numSamples);</highlight></codeline>
<codeline lineno="6556"><highlight class="normal"></highlight></codeline>
<codeline lineno="6557"><highlight class="normal"></highlight></codeline>
<codeline lineno="6565"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a1829e50993a90742de225a0ce4213838" kindref="member">arm_cmplx_mult_cmplx_q31</ref>(</highlight></codeline>
<codeline lineno="6566"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pSrcA,</highlight></codeline>
<codeline lineno="6567"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pSrcB,</highlight></codeline>
<codeline lineno="6568"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pDst,</highlight></codeline>
<codeline lineno="6569"><highlight class="normal"><sp/><sp/>uint32_t<sp/>numSamples);</highlight></codeline>
<codeline lineno="6570"><highlight class="normal"></highlight></codeline>
<codeline lineno="6571"><highlight class="normal"></highlight></codeline>
<codeline lineno="6579"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a14b47080054a1ba1250a86805be1ff6b" kindref="member">arm_cmplx_mult_cmplx_f32</ref>(</highlight></codeline>
<codeline lineno="6580"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pSrcA,</highlight></codeline>
<codeline lineno="6581"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pSrcB,</highlight></codeline>
<codeline lineno="6582"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pDst,</highlight></codeline>
<codeline lineno="6583"><highlight class="normal"><sp/><sp/>uint32_t<sp/>numSamples);</highlight></codeline>
<codeline lineno="6584"><highlight class="normal"></highlight></codeline>
<codeline lineno="6585"><highlight class="normal"></highlight></codeline>
<codeline lineno="6592"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a177704107f94564e9abe4daaa36f4554" kindref="member">arm_float_to_q31</ref>(</highlight></codeline>
<codeline lineno="6593"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="6594"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pDst,</highlight></codeline>
<codeline lineno="6595"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize);</highlight></codeline>
<codeline lineno="6596"><highlight class="normal"></highlight></codeline>
<codeline lineno="6597"><highlight class="normal"></highlight></codeline>
<codeline lineno="6604"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a215456e35a18db86882e1d3f0d24e1f2" kindref="member">arm_float_to_q15</ref>(</highlight></codeline>
<codeline lineno="6605"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="6606"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pDst,</highlight></codeline>
<codeline lineno="6607"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize);</highlight></codeline>
<codeline lineno="6608"><highlight class="normal"></highlight></codeline>
<codeline lineno="6609"><highlight class="normal"></highlight></codeline>
<codeline lineno="6616"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a44a393818cdee8dce80f2d66add25411" kindref="member">arm_float_to_q7</ref>(</highlight></codeline>
<codeline lineno="6617"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="6618"><highlight class="normal"><sp/><sp/>q7_t<sp/>*<sp/>pDst,</highlight></codeline>
<codeline lineno="6619"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize);</highlight></codeline>
<codeline lineno="6620"><highlight class="normal"></highlight></codeline>
<codeline lineno="6621"><highlight class="normal"></highlight></codeline>
<codeline lineno="6628"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a901dede4661365c9e7c630d3eb31c32c" kindref="member">arm_q31_to_q15</ref>(</highlight></codeline>
<codeline lineno="6629"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="6630"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pDst,</highlight></codeline>
<codeline lineno="6631"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize);</highlight></codeline>
<codeline lineno="6632"><highlight class="normal"></highlight></codeline>
<codeline lineno="6633"><highlight class="normal"></highlight></codeline>
<codeline lineno="6640"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a7f297d1a7d776805395095fdb24a8071" kindref="member">arm_q31_to_q7</ref>(</highlight></codeline>
<codeline lineno="6641"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="6642"><highlight class="normal"><sp/><sp/>q7_t<sp/>*<sp/>pDst,</highlight></codeline>
<codeline lineno="6643"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize);</highlight></codeline>
<codeline lineno="6644"><highlight class="normal"></highlight></codeline>
<codeline lineno="6645"><highlight class="normal"></highlight></codeline>
<codeline lineno="6652"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1af8b0d2324de273fc430b0e61ad4e9eb2" kindref="member">arm_q15_to_float</ref>(</highlight></codeline>
<codeline lineno="6653"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="6654"><highlight class="normal"><sp/><sp/>float32_t<sp/>*<sp/>pDst,</highlight></codeline>
<codeline lineno="6655"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize);</highlight></codeline>
<codeline lineno="6656"><highlight class="normal"></highlight></codeline>
<codeline lineno="6657"><highlight class="normal"></highlight></codeline>
<codeline lineno="6664"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a7ba2d87366990ad5380439e2b4a4c0a5" kindref="member">arm_q15_to_q31</ref>(</highlight></codeline>
<codeline lineno="6665"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="6666"><highlight class="normal"><sp/><sp/>q31_t<sp/>*<sp/>pDst,</highlight></codeline>
<codeline lineno="6667"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize);</highlight></codeline>
<codeline lineno="6668"><highlight class="normal"></highlight></codeline>
<codeline lineno="6669"><highlight class="normal"></highlight></codeline>
<codeline lineno="6676"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__math_8h_1a8fb31855ff8cce09c2ec9308f48ded69" kindref="member">arm_q15_to_q7</ref>(</highlight></codeline>
<codeline lineno="6677"><highlight class="normal"><sp/><sp/>q15_t<sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="6678"><highlight class="normal"><sp/><sp/>q7_t<sp/>*<sp/>pDst,</highlight></codeline>
<codeline lineno="6679"><highlight class="normal"><sp/><sp/>uint32_t<sp/>blockSize);</highlight></codeline>
<codeline lineno="6680"><highlight class="normal"></highlight></codeline>
<codeline lineno="6681"><highlight class="normal"></highlight></codeline>
<codeline lineno="6752"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>__INLINE<sp/>float32_t<sp/>arm_bilinear_interp_f32(</highlight></codeline>
<codeline lineno="6753"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarm__bilinear__interp__instance__f32" kindref="compound">arm_bilinear_interp_instance_f32</ref><sp/>*<sp/>S,</highlight></codeline>
<codeline lineno="6754"><highlight class="normal"><sp/><sp/>float32_t<sp/>X,</highlight></codeline>
<codeline lineno="6755"><highlight class="normal"><sp/><sp/>float32_t<sp/>Y)</highlight></codeline>
<codeline lineno="6756"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="6757"><highlight class="normal"><sp/><sp/><sp/><sp/>float32_t<sp/>out;</highlight></codeline>
<codeline lineno="6758"><highlight class="normal"><sp/><sp/><sp/><sp/>float32_t<sp/>f00,<sp/>f01,<sp/>f10,<sp/>f11;</highlight></codeline>
<codeline lineno="6759"><highlight class="normal"><sp/><sp/><sp/><sp/>float32_t<sp/>*pData<sp/>=<sp/>S-&gt;<ref refid="structarm__bilinear__interp__instance__f32_1afd1e764591c991c212d56c893efb5ea4" kindref="member">pData</ref>;</highlight></codeline>
<codeline lineno="6760"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>xIndex,<sp/>yIndex,<sp/>index;</highlight></codeline>
<codeline lineno="6761"><highlight class="normal"><sp/><sp/><sp/><sp/>float32_t<sp/>xdiff,<sp/>ydiff;</highlight></codeline>
<codeline lineno="6762"><highlight class="normal"><sp/><sp/><sp/><sp/>float32_t<sp/>b1,<sp/>b2,<sp/>b3,<sp/>b4;</highlight></codeline>
<codeline lineno="6763"><highlight class="normal"></highlight></codeline>
<codeline lineno="6764"><highlight class="normal"><sp/><sp/><sp/><sp/>xIndex<sp/>=<sp/>(int32_t)<sp/>X;</highlight></codeline>
<codeline lineno="6765"><highlight class="normal"><sp/><sp/><sp/><sp/>yIndex<sp/>=<sp/>(int32_t)<sp/>Y;</highlight></codeline>
<codeline lineno="6766"><highlight class="normal"></highlight></codeline>
<codeline lineno="6767"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Care<sp/>taken<sp/>for<sp/>table<sp/>outside<sp/>boundary<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6768"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Returns<sp/>zero<sp/>output<sp/>when<sp/>values<sp/>are<sp/>outside<sp/>table<sp/>boundary<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6769"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(xIndex<sp/>&lt;<sp/>0<sp/>||<sp/>xIndex<sp/>&gt;<sp/>(S-&gt;<ref refid="structarm__bilinear__interp__instance__f32_1a34f2b17cc57b95011960df9718af6ed6" kindref="member">numRows</ref><sp/>-<sp/>1)<sp/>||<sp/>yIndex<sp/>&lt;<sp/>0<sp/>||<sp/>yIndex<sp/>&gt;<sp/>(S-&gt;<ref refid="structarm__bilinear__interp__instance__f32_1aede17bebfb1f835b61d71dd813eab3f8" kindref="member">numCols</ref><sp/>-<sp/>1))</highlight></codeline>
<codeline lineno="6770"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(0);</highlight></codeline>
<codeline lineno="6772"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6773"><highlight class="normal"></highlight></codeline>
<codeline lineno="6774"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Calculation<sp/>of<sp/>index<sp/>for<sp/>two<sp/>nearest<sp/>points<sp/>in<sp/>X-direction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6775"><highlight class="normal"><sp/><sp/><sp/><sp/>index<sp/>=<sp/>(xIndex<sp/>-<sp/>1)<sp/>+<sp/>(yIndex<sp/>-<sp/>1)<sp/>*<sp/>S-&gt;<ref refid="structarm__bilinear__interp__instance__f32_1aede17bebfb1f835b61d71dd813eab3f8" kindref="member">numCols</ref>;</highlight></codeline>
<codeline lineno="6776"><highlight class="normal"></highlight></codeline>
<codeline lineno="6777"><highlight class="normal"></highlight></codeline>
<codeline lineno="6778"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Read<sp/>two<sp/>nearest<sp/>points<sp/>in<sp/>X-direction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6779"><highlight class="normal"><sp/><sp/><sp/><sp/>f00<sp/>=<sp/>pData[index];</highlight></codeline>
<codeline lineno="6780"><highlight class="normal"><sp/><sp/><sp/><sp/>f01<sp/>=<sp/>pData[index<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="6781"><highlight class="normal"></highlight></codeline>
<codeline lineno="6782"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Calculation<sp/>of<sp/>index<sp/>for<sp/>two<sp/>nearest<sp/>points<sp/>in<sp/>Y-direction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6783"><highlight class="normal"><sp/><sp/><sp/><sp/>index<sp/>=<sp/>(xIndex<sp/>-<sp/>1)<sp/>+<sp/>(yIndex)<sp/>*<sp/>S-&gt;<ref refid="structarm__bilinear__interp__instance__f32_1aede17bebfb1f835b61d71dd813eab3f8" kindref="member">numCols</ref>;</highlight></codeline>
<codeline lineno="6784"><highlight class="normal"></highlight></codeline>
<codeline lineno="6785"><highlight class="normal"></highlight></codeline>
<codeline lineno="6786"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Read<sp/>two<sp/>nearest<sp/>points<sp/>in<sp/>Y-direction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6787"><highlight class="normal"><sp/><sp/><sp/><sp/>f10<sp/>=<sp/>pData[index];</highlight></codeline>
<codeline lineno="6788"><highlight class="normal"><sp/><sp/><sp/><sp/>f11<sp/>=<sp/>pData[index<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="6789"><highlight class="normal"></highlight></codeline>
<codeline lineno="6790"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Calculation<sp/>of<sp/>intermediate<sp/>values<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6791"><highlight class="normal"><sp/><sp/><sp/><sp/>b1<sp/>=<sp/>f00;</highlight></codeline>
<codeline lineno="6792"><highlight class="normal"><sp/><sp/><sp/><sp/>b2<sp/>=<sp/>f01<sp/>-<sp/>f00;</highlight></codeline>
<codeline lineno="6793"><highlight class="normal"><sp/><sp/><sp/><sp/>b3<sp/>=<sp/>f10<sp/>-<sp/>f00;</highlight></codeline>
<codeline lineno="6794"><highlight class="normal"><sp/><sp/><sp/><sp/>b4<sp/>=<sp/>f00<sp/>-<sp/>f01<sp/>-<sp/>f10<sp/>+<sp/>f11;</highlight></codeline>
<codeline lineno="6795"><highlight class="normal"></highlight></codeline>
<codeline lineno="6796"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Calculation<sp/>of<sp/>fractional<sp/>part<sp/>in<sp/>X<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6797"><highlight class="normal"><sp/><sp/><sp/><sp/>xdiff<sp/>=<sp/>X<sp/>-<sp/>xIndex;</highlight></codeline>
<codeline lineno="6798"><highlight class="normal"></highlight></codeline>
<codeline lineno="6799"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Calculation<sp/>of<sp/>fractional<sp/>part<sp/>in<sp/>Y<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6800"><highlight class="normal"><sp/><sp/><sp/><sp/>ydiff<sp/>=<sp/>Y<sp/>-<sp/>yIndex;</highlight></codeline>
<codeline lineno="6801"><highlight class="normal"></highlight></codeline>
<codeline lineno="6802"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Calculation<sp/>of<sp/>bi-linear<sp/>interpolated<sp/>output<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6803"><highlight class="normal"><sp/><sp/><sp/><sp/>out<sp/>=<sp/>b1<sp/>+<sp/>b2<sp/>*<sp/>xdiff<sp/>+<sp/>b3<sp/>*<sp/>ydiff<sp/>+<sp/>b4<sp/>*<sp/>xdiff<sp/>*<sp/>ydiff;</highlight></codeline>
<codeline lineno="6804"><highlight class="normal"></highlight></codeline>
<codeline lineno="6805"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>return<sp/>to<sp/>application<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6806"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(out);</highlight></codeline>
<codeline lineno="6807"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6808"><highlight class="normal"></highlight></codeline>
<codeline lineno="6809"><highlight class="normal"></highlight></codeline>
<codeline lineno="6818"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>__INLINE<sp/>q31_t<sp/>arm_bilinear_interp_q31(</highlight></codeline>
<codeline lineno="6819"><highlight class="normal"><sp/><sp/><ref refid="structarm__bilinear__interp__instance__q31" kindref="compound">arm_bilinear_interp_instance_q31</ref><sp/>*<sp/>S,</highlight></codeline>
<codeline lineno="6820"><highlight class="normal"><sp/><sp/>q31_t<sp/>X,</highlight></codeline>
<codeline lineno="6821"><highlight class="normal"><sp/><sp/>q31_t<sp/>Y)</highlight></codeline>
<codeline lineno="6822"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="6823"><highlight class="normal"><sp/><sp/><sp/><sp/>q31_t<sp/>out;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Temporary<sp/>output<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6824"><highlight class="normal"><sp/><sp/><sp/><sp/>q31_t<sp/>acc<sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>output<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6825"><highlight class="normal"><sp/><sp/><sp/><sp/>q31_t<sp/>xfract,<sp/>yfract;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>X,<sp/>Y<sp/>fractional<sp/>parts<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6826"><highlight class="normal"><sp/><sp/><sp/><sp/>q31_t<sp/>x1,<sp/>x2,<sp/>y1,<sp/>y2;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Nearest<sp/>output<sp/>values<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6827"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>rI,<sp/>cI;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Row<sp/>and<sp/>column<sp/>indices<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6828"><highlight class="normal"><sp/><sp/><sp/><sp/>q31_t<sp/>*pYData<sp/>=<sp/>S-&gt;<ref refid="structarm__bilinear__interp__instance__q31_1a843eae0c9db5f815e77e1aaf9afea358" kindref="member">pData</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>pointer<sp/>to<sp/>output<sp/>table<sp/>values<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6829"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>nCols<sp/>=<sp/>S-&gt;<ref refid="structarm__bilinear__interp__instance__q31_1a6c3eff4eb17ff1d43f170efb84713a2d" kindref="member">numCols</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>num<sp/>of<sp/>rows<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6830"><highlight class="normal"></highlight></codeline>
<codeline lineno="6831"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Input<sp/>is<sp/>in<sp/>12.20<sp/>format<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6832"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>12<sp/>bits<sp/>for<sp/>the<sp/>table<sp/>index<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6833"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Index<sp/>value<sp/>calculation<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6834"><highlight class="normal"><sp/><sp/><sp/><sp/>rI<sp/>=<sp/>((X<sp/>&amp;<sp/>(<ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref>)0xFFF00000)<sp/>&gt;&gt;<sp/>20);</highlight></codeline>
<codeline lineno="6835"><highlight class="normal"></highlight></codeline>
<codeline lineno="6836"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Input<sp/>is<sp/>in<sp/>12.20<sp/>format<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6837"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>12<sp/>bits<sp/>for<sp/>the<sp/>table<sp/>index<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6838"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Index<sp/>value<sp/>calculation<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6839"><highlight class="normal"><sp/><sp/><sp/><sp/>cI<sp/>=<sp/>((Y<sp/>&amp;<sp/>(<ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref>)0xFFF00000)<sp/>&gt;&gt;<sp/>20);</highlight></codeline>
<codeline lineno="6840"><highlight class="normal"></highlight></codeline>
<codeline lineno="6841"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Care<sp/>taken<sp/>for<sp/>table<sp/>outside<sp/>boundary<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6842"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Returns<sp/>zero<sp/>output<sp/>when<sp/>values<sp/>are<sp/>outside<sp/>table<sp/>boundary<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6843"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(rI<sp/>&lt;<sp/>0<sp/>||<sp/>rI<sp/>&gt;<sp/>(S-&gt;<ref refid="structarm__bilinear__interp__instance__q31_1a2082e3eac56354d75291f03e96ce4aa5" kindref="member">numRows</ref><sp/>-<sp/>1)<sp/>||<sp/>cI<sp/>&lt;<sp/>0<sp/>||<sp/>cI<sp/>&gt;<sp/>(S-&gt;<ref refid="structarm__bilinear__interp__instance__q31_1a6c3eff4eb17ff1d43f170efb84713a2d" kindref="member">numCols</ref><sp/>-<sp/>1))</highlight></codeline>
<codeline lineno="6844"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(0);</highlight></codeline>
<codeline lineno="6846"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6847"><highlight class="normal"></highlight></codeline>
<codeline lineno="6848"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>20<sp/>bits<sp/>for<sp/>the<sp/>fractional<sp/>part<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6849"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>shift<sp/>left<sp/>xfract<sp/>by<sp/>11<sp/>to<sp/>keep<sp/>1.31<sp/>format<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6850"><highlight class="normal"><sp/><sp/><sp/><sp/>xfract<sp/>=<sp/>(X<sp/>&amp;<sp/>0x000FFFFF)<sp/>&lt;&lt;<sp/>11u;</highlight></codeline>
<codeline lineno="6851"><highlight class="normal"></highlight></codeline>
<codeline lineno="6852"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Read<sp/>two<sp/>nearest<sp/>output<sp/>values<sp/>from<sp/>the<sp/>index<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6853"><highlight class="normal"><sp/><sp/><sp/><sp/>x1<sp/>=<sp/>pYData[(rI)<sp/>+<sp/>(int32_t)nCols<sp/>*<sp/>(cI)<sp/><sp/><sp/><sp/>];</highlight></codeline>
<codeline lineno="6854"><highlight class="normal"><sp/><sp/><sp/><sp/>x2<sp/>=<sp/>pYData[(rI)<sp/>+<sp/>(int32_t)nCols<sp/>*<sp/>(cI)<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="6855"><highlight class="normal"></highlight></codeline>
<codeline lineno="6856"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>20<sp/>bits<sp/>for<sp/>the<sp/>fractional<sp/>part<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6857"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>shift<sp/>left<sp/>yfract<sp/>by<sp/>11<sp/>to<sp/>keep<sp/>1.31<sp/>format<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6858"><highlight class="normal"><sp/><sp/><sp/><sp/>yfract<sp/>=<sp/>(Y<sp/>&amp;<sp/>0x000FFFFF)<sp/>&lt;&lt;<sp/>11u;</highlight></codeline>
<codeline lineno="6859"><highlight class="normal"></highlight></codeline>
<codeline lineno="6860"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Read<sp/>two<sp/>nearest<sp/>output<sp/>values<sp/>from<sp/>the<sp/>index<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6861"><highlight class="normal"><sp/><sp/><sp/><sp/>y1<sp/>=<sp/>pYData[(rI)<sp/>+<sp/>(int32_t)nCols<sp/>*<sp/>(cI<sp/>+<sp/>1)<sp/><sp/><sp/><sp/>];</highlight></codeline>
<codeline lineno="6862"><highlight class="normal"><sp/><sp/><sp/><sp/>y2<sp/>=<sp/>pYData[(rI)<sp/>+<sp/>(int32_t)nCols<sp/>*<sp/>(cI<sp/>+<sp/>1)<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="6863"><highlight class="normal"></highlight></codeline>
<codeline lineno="6864"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Calculation<sp/>of<sp/>x1<sp/>*<sp/>(1-xfract<sp/>)<sp/>*<sp/>(1-yfract)<sp/>and<sp/>acc<sp/>is<sp/>in<sp/>3.29(q29)<sp/>format<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6865"><highlight class="normal"><sp/><sp/><sp/><sp/>out<sp/>=<sp/>((<ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref>)<sp/>(((q63_t)<sp/>x1<sp/><sp/>*<sp/>(0x7FFFFFFF<sp/>-<sp/>xfract))<sp/>&gt;&gt;<sp/>32));</highlight></codeline>
<codeline lineno="6866"><highlight class="normal"><sp/><sp/><sp/><sp/>acc<sp/>=<sp/>((<ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref>)<sp/>(((q63_t)<sp/>out<sp/>*<sp/>(0x7FFFFFFF<sp/>-<sp/>yfract))<sp/>&gt;&gt;<sp/>32));</highlight></codeline>
<codeline lineno="6867"><highlight class="normal"></highlight></codeline>
<codeline lineno="6868"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>x2<sp/>*<sp/>(xfract)<sp/>*<sp/>(1-yfract)<sp/><sp/>in<sp/>3.29(q29)<sp/>and<sp/>adding<sp/>to<sp/>acc<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6869"><highlight class="normal"><sp/><sp/><sp/><sp/>out<sp/>=<sp/>((<ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref>)<sp/>((q63_t)<sp/>x2<sp/>*<sp/>(0x7FFFFFFF<sp/>-<sp/>yfract)<sp/>&gt;&gt;<sp/>32));</highlight></codeline>
<codeline lineno="6870"><highlight class="normal"><sp/><sp/><sp/><sp/>acc<sp/>+=<sp/>((<ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref>)<sp/>((q63_t)<sp/>out<sp/>*<sp/>(xfract)<sp/>&gt;&gt;<sp/>32));</highlight></codeline>
<codeline lineno="6871"><highlight class="normal"></highlight></codeline>
<codeline lineno="6872"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>y1<sp/>*<sp/>(1<sp/>-<sp/>xfract)<sp/>*<sp/>(yfract)<sp/><sp/>in<sp/>3.29(q29)<sp/>and<sp/>adding<sp/>to<sp/>acc<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6873"><highlight class="normal"><sp/><sp/><sp/><sp/>out<sp/>=<sp/>((<ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref>)<sp/>((q63_t)<sp/>y1<sp/>*<sp/>(0x7FFFFFFF<sp/>-<sp/>xfract)<sp/>&gt;&gt;<sp/>32));</highlight></codeline>
<codeline lineno="6874"><highlight class="normal"><sp/><sp/><sp/><sp/>acc<sp/>+=<sp/>((<ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref>)<sp/>((q63_t)<sp/>out<sp/>*<sp/>(yfract)<sp/>&gt;&gt;<sp/>32));</highlight></codeline>
<codeline lineno="6875"><highlight class="normal"></highlight></codeline>
<codeline lineno="6876"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>y2<sp/>*<sp/>(xfract)<sp/>*<sp/>(yfract)<sp/><sp/>in<sp/>3.29(q29)<sp/>and<sp/>adding<sp/>to<sp/>acc<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6877"><highlight class="normal"><sp/><sp/><sp/><sp/>out<sp/>=<sp/>((<ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref>)<sp/>((q63_t)<sp/>y2<sp/>*<sp/>(xfract)<sp/>&gt;&gt;<sp/>32));</highlight></codeline>
<codeline lineno="6878"><highlight class="normal"><sp/><sp/><sp/><sp/>acc<sp/>+=<sp/>((<ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref>)<sp/>((q63_t)<sp/>out<sp/>*<sp/>(yfract)<sp/>&gt;&gt;<sp/>32));</highlight></codeline>
<codeline lineno="6879"><highlight class="normal"></highlight></codeline>
<codeline lineno="6880"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Convert<sp/>acc<sp/>to<sp/>1.31(q31)<sp/>format<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6881"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((q31_t)(acc<sp/>&lt;&lt;<sp/>2));</highlight></codeline>
<codeline lineno="6882"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6883"><highlight class="normal"></highlight></codeline>
<codeline lineno="6884"><highlight class="normal"></highlight></codeline>
<codeline lineno="6892"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>__INLINE<sp/>q15_t<sp/>arm_bilinear_interp_q15(</highlight></codeline>
<codeline lineno="6893"><highlight class="normal"><sp/><sp/><ref refid="structarm__bilinear__interp__instance__q15" kindref="compound">arm_bilinear_interp_instance_q15</ref><sp/>*<sp/>S,</highlight></codeline>
<codeline lineno="6894"><highlight class="normal"><sp/><sp/>q31_t<sp/>X,</highlight></codeline>
<codeline lineno="6895"><highlight class="normal"><sp/><sp/>q31_t<sp/>Y)</highlight></codeline>
<codeline lineno="6896"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="6897"><highlight class="normal"><sp/><sp/><sp/><sp/>q63_t<sp/>acc<sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>output<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6898"><highlight class="normal"><sp/><sp/><sp/><sp/>q31_t<sp/>out;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Temporary<sp/>output<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6899"><highlight class="normal"><sp/><sp/><sp/><sp/>q15_t<sp/>x1,<sp/>x2,<sp/>y1,<sp/>y2;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Nearest<sp/>output<sp/>values<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6900"><highlight class="normal"><sp/><sp/><sp/><sp/>q31_t<sp/>xfract,<sp/>yfract;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>X,<sp/>Y<sp/>fractional<sp/>parts<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6901"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>rI,<sp/>cI;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Row<sp/>and<sp/>column<sp/>indices<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6902"><highlight class="normal"><sp/><sp/><sp/><sp/>q15_t<sp/>*pYData<sp/>=<sp/>S-&gt;<ref refid="structarm__bilinear__interp__instance__q15_1a50d75b1316cee3e0dfad6dcc4c9a2954" kindref="member">pData</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>pointer<sp/>to<sp/>output<sp/>table<sp/>values<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6903"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>nCols<sp/>=<sp/>S-&gt;<ref refid="structarm__bilinear__interp__instance__q15_1a7fa8772d01583374ff8ac18205a26a37" kindref="member">numCols</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>num<sp/>of<sp/>rows<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6904"><highlight class="normal"></highlight></codeline>
<codeline lineno="6905"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Input<sp/>is<sp/>in<sp/>12.20<sp/>format<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6906"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>12<sp/>bits<sp/>for<sp/>the<sp/>table<sp/>index<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6907"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Index<sp/>value<sp/>calculation<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6908"><highlight class="normal"><sp/><sp/><sp/><sp/>rI<sp/>=<sp/>((X<sp/>&amp;<sp/>(<ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref>)0xFFF00000)<sp/>&gt;&gt;<sp/>20);</highlight></codeline>
<codeline lineno="6909"><highlight class="normal"></highlight></codeline>
<codeline lineno="6910"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Input<sp/>is<sp/>in<sp/>12.20<sp/>format<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6911"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>12<sp/>bits<sp/>for<sp/>the<sp/>table<sp/>index<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6912"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Index<sp/>value<sp/>calculation<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6913"><highlight class="normal"><sp/><sp/><sp/><sp/>cI<sp/>=<sp/>((Y<sp/>&amp;<sp/>(<ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref>)0xFFF00000)<sp/>&gt;&gt;<sp/>20);</highlight></codeline>
<codeline lineno="6914"><highlight class="normal"></highlight></codeline>
<codeline lineno="6915"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Care<sp/>taken<sp/>for<sp/>table<sp/>outside<sp/>boundary<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6916"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Returns<sp/>zero<sp/>output<sp/>when<sp/>values<sp/>are<sp/>outside<sp/>table<sp/>boundary<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6917"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(rI<sp/>&lt;<sp/>0<sp/>||<sp/>rI<sp/>&gt;<sp/>(S-&gt;<ref refid="structarm__bilinear__interp__instance__q15_1a2130ae30a804995a9f5d0e2189e08565" kindref="member">numRows</ref><sp/>-<sp/>1)<sp/>||<sp/>cI<sp/>&lt;<sp/>0<sp/>||<sp/>cI<sp/>&gt;<sp/>(S-&gt;<ref refid="structarm__bilinear__interp__instance__q15_1a7fa8772d01583374ff8ac18205a26a37" kindref="member">numCols</ref><sp/>-<sp/>1))</highlight></codeline>
<codeline lineno="6918"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(0);</highlight></codeline>
<codeline lineno="6920"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6921"><highlight class="normal"></highlight></codeline>
<codeline lineno="6922"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>20<sp/>bits<sp/>for<sp/>the<sp/>fractional<sp/>part<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6923"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>xfract<sp/>should<sp/>be<sp/>in<sp/>12.20<sp/>format<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6924"><highlight class="normal"><sp/><sp/><sp/><sp/>xfract<sp/>=<sp/>(X<sp/>&amp;<sp/>0x000FFFFF);</highlight></codeline>
<codeline lineno="6925"><highlight class="normal"></highlight></codeline>
<codeline lineno="6926"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Read<sp/>two<sp/>nearest<sp/>output<sp/>values<sp/>from<sp/>the<sp/>index<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6927"><highlight class="normal"><sp/><sp/><sp/><sp/>x1<sp/>=<sp/>pYData[((uint32_t)rI)<sp/>+<sp/>nCols<sp/>*<sp/>((uint32_t)cI)<sp/><sp/><sp/><sp/>];</highlight></codeline>
<codeline lineno="6928"><highlight class="normal"><sp/><sp/><sp/><sp/>x2<sp/>=<sp/>pYData[((uint32_t)rI)<sp/>+<sp/>nCols<sp/>*<sp/>((uint32_t)cI)<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="6929"><highlight class="normal"></highlight></codeline>
<codeline lineno="6930"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>20<sp/>bits<sp/>for<sp/>the<sp/>fractional<sp/>part<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6931"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>yfract<sp/>should<sp/>be<sp/>in<sp/>12.20<sp/>format<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6932"><highlight class="normal"><sp/><sp/><sp/><sp/>yfract<sp/>=<sp/>(Y<sp/>&amp;<sp/>0x000FFFFF);</highlight></codeline>
<codeline lineno="6933"><highlight class="normal"></highlight></codeline>
<codeline lineno="6934"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Read<sp/>two<sp/>nearest<sp/>output<sp/>values<sp/>from<sp/>the<sp/>index<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6935"><highlight class="normal"><sp/><sp/><sp/><sp/>y1<sp/>=<sp/>pYData[((uint32_t)rI)<sp/>+<sp/>nCols<sp/>*<sp/>((uint32_t)cI<sp/>+<sp/>1)<sp/><sp/><sp/><sp/>];</highlight></codeline>
<codeline lineno="6936"><highlight class="normal"><sp/><sp/><sp/><sp/>y2<sp/>=<sp/>pYData[((uint32_t)rI)<sp/>+<sp/>nCols<sp/>*<sp/>((uint32_t)cI<sp/>+<sp/>1)<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="6937"><highlight class="normal"></highlight></codeline>
<codeline lineno="6938"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Calculation<sp/>of<sp/>x1<sp/>*<sp/>(1-xfract<sp/>)<sp/>*<sp/>(1-yfract)<sp/>and<sp/>acc<sp/>is<sp/>in<sp/>13.51<sp/>format<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6939"><highlight class="normal"></highlight></codeline>
<codeline lineno="6940"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>x1<sp/>is<sp/>in<sp/>1.15(q15),<sp/>xfract<sp/>in<sp/>12.20<sp/>format<sp/>and<sp/>out<sp/>is<sp/>in<sp/>13.35<sp/>format<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6941"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>convert<sp/>13.35<sp/>to<sp/>13.31<sp/>by<sp/>right<sp/>shifting<sp/><sp/>and<sp/>out<sp/>is<sp/>in<sp/>1.31<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6942"><highlight class="normal"><sp/><sp/><sp/><sp/>out<sp/>=<sp/>(<ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref>)<sp/>(((q63_t)<sp/>x1<sp/>*<sp/>(0xFFFFF<sp/>-<sp/>xfract))<sp/>&gt;&gt;<sp/>4u);</highlight></codeline>
<codeline lineno="6943"><highlight class="normal"><sp/><sp/><sp/><sp/>acc<sp/>=<sp/>((<ref refid="arm__math_8h_1a5aea1cb12fc02d9d44c8abf217eaa5c6" kindref="member">q63_t</ref>)<sp/>out<sp/>*<sp/>(0xFFFFF<sp/>-<sp/>yfract));</highlight></codeline>
<codeline lineno="6944"><highlight class="normal"></highlight></codeline>
<codeline lineno="6945"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>x2<sp/>*<sp/>(xfract)<sp/>*<sp/>(1-yfract)<sp/><sp/>in<sp/>1.51<sp/>and<sp/>adding<sp/>to<sp/>acc<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6946"><highlight class="normal"><sp/><sp/><sp/><sp/>out<sp/>=<sp/>(<ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref>)<sp/>(((q63_t)<sp/>x2<sp/>*<sp/>(0xFFFFF<sp/>-<sp/>yfract))<sp/>&gt;&gt;<sp/>4u);</highlight></codeline>
<codeline lineno="6947"><highlight class="normal"><sp/><sp/><sp/><sp/>acc<sp/>+=<sp/>((<ref refid="arm__math_8h_1a5aea1cb12fc02d9d44c8abf217eaa5c6" kindref="member">q63_t</ref>)<sp/>out<sp/>*<sp/>(xfract));</highlight></codeline>
<codeline lineno="6948"><highlight class="normal"></highlight></codeline>
<codeline lineno="6949"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>y1<sp/>*<sp/>(1<sp/>-<sp/>xfract)<sp/>*<sp/>(yfract)<sp/><sp/>in<sp/>1.51<sp/>and<sp/>adding<sp/>to<sp/>acc<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6950"><highlight class="normal"><sp/><sp/><sp/><sp/>out<sp/>=<sp/>(<ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref>)<sp/>(((q63_t)<sp/>y1<sp/>*<sp/>(0xFFFFF<sp/>-<sp/>xfract))<sp/>&gt;&gt;<sp/>4u);</highlight></codeline>
<codeline lineno="6951"><highlight class="normal"><sp/><sp/><sp/><sp/>acc<sp/>+=<sp/>((<ref refid="arm__math_8h_1a5aea1cb12fc02d9d44c8abf217eaa5c6" kindref="member">q63_t</ref>)<sp/>out<sp/>*<sp/>(yfract));</highlight></codeline>
<codeline lineno="6952"><highlight class="normal"></highlight></codeline>
<codeline lineno="6953"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>y2<sp/>*<sp/>(xfract)<sp/>*<sp/>(yfract)<sp/><sp/>in<sp/>1.51<sp/>and<sp/>adding<sp/>to<sp/>acc<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6954"><highlight class="normal"><sp/><sp/><sp/><sp/>out<sp/>=<sp/>(<ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref>)<sp/>(((q63_t)<sp/>y2<sp/>*<sp/>(xfract))<sp/>&gt;&gt;<sp/>4u);</highlight></codeline>
<codeline lineno="6955"><highlight class="normal"><sp/><sp/><sp/><sp/>acc<sp/>+=<sp/>((<ref refid="arm__math_8h_1a5aea1cb12fc02d9d44c8abf217eaa5c6" kindref="member">q63_t</ref>)<sp/>out<sp/>*<sp/>(yfract));</highlight></codeline>
<codeline lineno="6956"><highlight class="normal"></highlight></codeline>
<codeline lineno="6957"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>acc<sp/>is<sp/>in<sp/>13.51<sp/>format<sp/>and<sp/>down<sp/>shift<sp/>acc<sp/>by<sp/>36<sp/>times<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6958"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Convert<sp/>out<sp/>to<sp/>1.15<sp/>format<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6959"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((q15_t)(acc<sp/>&gt;&gt;<sp/>36));</highlight></codeline>
<codeline lineno="6960"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6961"><highlight class="normal"></highlight></codeline>
<codeline lineno="6962"><highlight class="normal"></highlight></codeline>
<codeline lineno="6970"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>__INLINE<sp/>q7_t<sp/>arm_bilinear_interp_q7(</highlight></codeline>
<codeline lineno="6971"><highlight class="normal"><sp/><sp/><ref refid="structarm__bilinear__interp__instance__q7" kindref="compound">arm_bilinear_interp_instance_q7</ref><sp/>*<sp/>S,</highlight></codeline>
<codeline lineno="6972"><highlight class="normal"><sp/><sp/>q31_t<sp/>X,</highlight></codeline>
<codeline lineno="6973"><highlight class="normal"><sp/><sp/>q31_t<sp/>Y)</highlight></codeline>
<codeline lineno="6974"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="6975"><highlight class="normal"><sp/><sp/><sp/><sp/>q63_t<sp/>acc<sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>output<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6976"><highlight class="normal"><sp/><sp/><sp/><sp/>q31_t<sp/>out;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Temporary<sp/>output<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6977"><highlight class="normal"><sp/><sp/><sp/><sp/>q31_t<sp/>xfract,<sp/>yfract;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>X,<sp/>Y<sp/>fractional<sp/>parts<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6978"><highlight class="normal"><sp/><sp/><sp/><sp/>q7_t<sp/>x1,<sp/>x2,<sp/>y1,<sp/>y2;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Nearest<sp/>output<sp/>values<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6979"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>rI,<sp/>cI;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Row<sp/>and<sp/>column<sp/>indices<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6980"><highlight class="normal"><sp/><sp/><sp/><sp/>q7_t<sp/>*pYData<sp/>=<sp/>S-&gt;<ref refid="structarm__bilinear__interp__instance__q7_1af05194d691bbefb02c34bafb22ca9ef0" kindref="member">pData</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>pointer<sp/>to<sp/>output<sp/>table<sp/>values<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6981"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>nCols<sp/>=<sp/>S-&gt;<ref refid="structarm__bilinear__interp__instance__q7_1a860dd0d24380ea06cfbb348fb3b12c9a" kindref="member">numCols</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>num<sp/>of<sp/>rows<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6982"><highlight class="normal"></highlight></codeline>
<codeline lineno="6983"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Input<sp/>is<sp/>in<sp/>12.20<sp/>format<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6984"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>12<sp/>bits<sp/>for<sp/>the<sp/>table<sp/>index<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6985"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Index<sp/>value<sp/>calculation<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6986"><highlight class="normal"><sp/><sp/><sp/><sp/>rI<sp/>=<sp/>((X<sp/>&amp;<sp/>(<ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref>)0xFFF00000)<sp/>&gt;&gt;<sp/>20);</highlight></codeline>
<codeline lineno="6987"><highlight class="normal"></highlight></codeline>
<codeline lineno="6988"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Input<sp/>is<sp/>in<sp/>12.20<sp/>format<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6989"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>12<sp/>bits<sp/>for<sp/>the<sp/>table<sp/>index<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6990"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Index<sp/>value<sp/>calculation<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6991"><highlight class="normal"><sp/><sp/><sp/><sp/>cI<sp/>=<sp/>((Y<sp/>&amp;<sp/>(<ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref>)0xFFF00000)<sp/>&gt;&gt;<sp/>20);</highlight></codeline>
<codeline lineno="6992"><highlight class="normal"></highlight></codeline>
<codeline lineno="6993"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Care<sp/>taken<sp/>for<sp/>table<sp/>outside<sp/>boundary<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6994"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Returns<sp/>zero<sp/>output<sp/>when<sp/>values<sp/>are<sp/>outside<sp/>table<sp/>boundary<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6995"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(rI<sp/>&lt;<sp/>0<sp/>||<sp/>rI<sp/>&gt;<sp/>(S-&gt;<ref refid="structarm__bilinear__interp__instance__q7_1ad5a8067cab5f9ea4688b11a623e16607" kindref="member">numRows</ref><sp/>-<sp/>1)<sp/>||<sp/>cI<sp/>&lt;<sp/>0<sp/>||<sp/>cI<sp/>&gt;<sp/>(S-&gt;<ref refid="structarm__bilinear__interp__instance__q7_1a860dd0d24380ea06cfbb348fb3b12c9a" kindref="member">numCols</ref><sp/>-<sp/>1))</highlight></codeline>
<codeline lineno="6996"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(0);</highlight></codeline>
<codeline lineno="6998"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6999"><highlight class="normal"></highlight></codeline>
<codeline lineno="7000"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>20<sp/>bits<sp/>for<sp/>the<sp/>fractional<sp/>part<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7001"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>xfract<sp/>should<sp/>be<sp/>in<sp/>12.20<sp/>format<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7002"><highlight class="normal"><sp/><sp/><sp/><sp/>xfract<sp/>=<sp/>(X<sp/>&amp;<sp/>(<ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref>)0x000FFFFF);</highlight></codeline>
<codeline lineno="7003"><highlight class="normal"></highlight></codeline>
<codeline lineno="7004"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Read<sp/>two<sp/>nearest<sp/>output<sp/>values<sp/>from<sp/>the<sp/>index<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7005"><highlight class="normal"><sp/><sp/><sp/><sp/>x1<sp/>=<sp/>pYData[((uint32_t)rI)<sp/>+<sp/>nCols<sp/>*<sp/>((uint32_t)cI)<sp/><sp/><sp/><sp/>];</highlight></codeline>
<codeline lineno="7006"><highlight class="normal"><sp/><sp/><sp/><sp/>x2<sp/>=<sp/>pYData[((uint32_t)rI)<sp/>+<sp/>nCols<sp/>*<sp/>((uint32_t)cI)<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="7007"><highlight class="normal"></highlight></codeline>
<codeline lineno="7008"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>20<sp/>bits<sp/>for<sp/>the<sp/>fractional<sp/>part<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7009"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>yfract<sp/>should<sp/>be<sp/>in<sp/>12.20<sp/>format<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7010"><highlight class="normal"><sp/><sp/><sp/><sp/>yfract<sp/>=<sp/>(Y<sp/>&amp;<sp/>(<ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref>)0x000FFFFF);</highlight></codeline>
<codeline lineno="7011"><highlight class="normal"></highlight></codeline>
<codeline lineno="7012"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Read<sp/>two<sp/>nearest<sp/>output<sp/>values<sp/>from<sp/>the<sp/>index<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7013"><highlight class="normal"><sp/><sp/><sp/><sp/>y1<sp/>=<sp/>pYData[((uint32_t)rI)<sp/>+<sp/>nCols<sp/>*<sp/>((uint32_t)cI<sp/>+<sp/>1)<sp/><sp/><sp/><sp/>];</highlight></codeline>
<codeline lineno="7014"><highlight class="normal"><sp/><sp/><sp/><sp/>y2<sp/>=<sp/>pYData[((uint32_t)rI)<sp/>+<sp/>nCols<sp/>*<sp/>((uint32_t)cI<sp/>+<sp/>1)<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="7015"><highlight class="normal"></highlight></codeline>
<codeline lineno="7016"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Calculation<sp/>of<sp/>x1<sp/>*<sp/>(1-xfract<sp/>)<sp/>*<sp/>(1-yfract)<sp/>and<sp/>acc<sp/>is<sp/>in<sp/>16.47<sp/>format<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7017"><highlight class="normal"><sp/><sp/><sp/><sp/>out<sp/>=<sp/>((x1<sp/>*<sp/>(0xFFFFF<sp/>-<sp/>xfract)));</highlight></codeline>
<codeline lineno="7018"><highlight class="normal"><sp/><sp/><sp/><sp/>acc<sp/>=<sp/>(((<ref refid="arm__math_8h_1a5aea1cb12fc02d9d44c8abf217eaa5c6" kindref="member">q63_t</ref>)<sp/>out<sp/>*<sp/>(0xFFFFF<sp/>-<sp/>yfract)));</highlight></codeline>
<codeline lineno="7019"><highlight class="normal"></highlight></codeline>
<codeline lineno="7020"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>x2<sp/>*<sp/>(xfract)<sp/>*<sp/>(1-yfract)<sp/><sp/>in<sp/>2.22<sp/>and<sp/>adding<sp/>to<sp/>acc<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7021"><highlight class="normal"><sp/><sp/><sp/><sp/>out<sp/>=<sp/>((x2<sp/>*<sp/>(0xFFFFF<sp/>-<sp/>yfract)));</highlight></codeline>
<codeline lineno="7022"><highlight class="normal"><sp/><sp/><sp/><sp/>acc<sp/>+=<sp/>(((<ref refid="arm__math_8h_1a5aea1cb12fc02d9d44c8abf217eaa5c6" kindref="member">q63_t</ref>)<sp/>out<sp/>*<sp/>(xfract)));</highlight></codeline>
<codeline lineno="7023"><highlight class="normal"></highlight></codeline>
<codeline lineno="7024"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>y1<sp/>*<sp/>(1<sp/>-<sp/>xfract)<sp/>*<sp/>(yfract)<sp/><sp/>in<sp/>2.22<sp/>and<sp/>adding<sp/>to<sp/>acc<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7025"><highlight class="normal"><sp/><sp/><sp/><sp/>out<sp/>=<sp/>((y1<sp/>*<sp/>(0xFFFFF<sp/>-<sp/>xfract)));</highlight></codeline>
<codeline lineno="7026"><highlight class="normal"><sp/><sp/><sp/><sp/>acc<sp/>+=<sp/>(((<ref refid="arm__math_8h_1a5aea1cb12fc02d9d44c8abf217eaa5c6" kindref="member">q63_t</ref>)<sp/>out<sp/>*<sp/>(yfract)));</highlight></codeline>
<codeline lineno="7027"><highlight class="normal"></highlight></codeline>
<codeline lineno="7028"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>y2<sp/>*<sp/>(xfract)<sp/>*<sp/>(yfract)<sp/><sp/>in<sp/>2.22<sp/>and<sp/>adding<sp/>to<sp/>acc<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7029"><highlight class="normal"><sp/><sp/><sp/><sp/>out<sp/>=<sp/>((y2<sp/>*<sp/>(yfract)));</highlight></codeline>
<codeline lineno="7030"><highlight class="normal"><sp/><sp/><sp/><sp/>acc<sp/>+=<sp/>(((<ref refid="arm__math_8h_1a5aea1cb12fc02d9d44c8abf217eaa5c6" kindref="member">q63_t</ref>)<sp/>out<sp/>*<sp/>(xfract)));</highlight></codeline>
<codeline lineno="7031"><highlight class="normal"></highlight></codeline>
<codeline lineno="7032"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>acc<sp/>in<sp/>16.47<sp/>format<sp/>and<sp/>down<sp/>shift<sp/>by<sp/>40<sp/>to<sp/>convert<sp/>to<sp/>1.7<sp/>format<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7033"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((q7_t)(acc<sp/>&gt;&gt;<sp/>40));</highlight></codeline>
<codeline lineno="7034"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="7035"><highlight class="normal"></highlight></codeline>
<codeline lineno="7041"><highlight class="comment">/*<sp/>SMMLAR<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7042" refid="arm__math_8h_1aba3e538352fc7f9d6d15f9a18d469399" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>multAcc_32x32_keep32_R(a,<sp/>x,<sp/>y)<sp/>\</highlight></codeline>
<codeline lineno="7043"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>a<sp/>=<sp/>(q31_t)<sp/>(((((q63_t)<sp/>a)<sp/>&lt;&lt;<sp/>32)<sp/>+<sp/>((q63_t)<sp/>x<sp/>*<sp/>y)<sp/>+<sp/>0x80000000LL<sp/>)<sp/>&gt;&gt;<sp/>32)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7044"><highlight class="normal"></highlight></codeline>
<codeline lineno="7045"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>SMMLSR<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7046" refid="arm__math_8h_1a668fbf1cd1c3bc8faf1b1c83964ade23" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>multSub_32x32_keep32_R(a,<sp/>x,<sp/>y)<sp/>\</highlight></codeline>
<codeline lineno="7047"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>a<sp/>=<sp/>(q31_t)<sp/>(((((q63_t)<sp/>a)<sp/>&lt;&lt;<sp/>32)<sp/>-<sp/>((q63_t)<sp/>x<sp/>*<sp/>y)<sp/>+<sp/>0x80000000LL<sp/>)<sp/>&gt;&gt;<sp/>32)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7048"><highlight class="normal"></highlight></codeline>
<codeline lineno="7049"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>SMMULR<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7050" refid="arm__math_8h_1a960f210642058d2b3d5368729a6e8375" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>mult_32x32_keep32_R(a,<sp/>x,<sp/>y)<sp/>\</highlight></codeline>
<codeline lineno="7051"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>a<sp/>=<sp/>(q31_t)<sp/>(((q63_t)<sp/>x<sp/>*<sp/>y<sp/>+<sp/>0x80000000LL<sp/>)<sp/>&gt;&gt;<sp/>32)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7052"><highlight class="normal"></highlight></codeline>
<codeline lineno="7053"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>SMMLA<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7054" refid="arm__math_8h_1a58454519e12e8157f0a1c36071333655" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>multAcc_32x32_keep32(a,<sp/>x,<sp/>y)<sp/>\</highlight></codeline>
<codeline lineno="7055"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>a<sp/>+=<sp/>(q31_t)<sp/>(((q63_t)<sp/>x<sp/>*<sp/>y)<sp/>&gt;&gt;<sp/>32)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7056"><highlight class="normal"></highlight></codeline>
<codeline lineno="7057"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>SMMLS<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7058" refid="arm__math_8h_1a9ec66f3082a4c65c78075638255f42ab" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>multSub_32x32_keep32(a,<sp/>x,<sp/>y)<sp/>\</highlight></codeline>
<codeline lineno="7059"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>a<sp/>-=<sp/>(q31_t)<sp/>(((q63_t)<sp/>x<sp/>*<sp/>y)<sp/>&gt;&gt;<sp/>32)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7060"><highlight class="normal"></highlight></codeline>
<codeline lineno="7061"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>SMMUL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7062" refid="arm__math_8h_1abb4baa0192bbb6fabc9251af4b4cb322" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>mult_32x32_keep32(a,<sp/>x,<sp/>y)<sp/>\</highlight></codeline>
<codeline lineno="7063"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>a<sp/>=<sp/>(q31_t)<sp/>(((q63_t)<sp/>x<sp/>*<sp/>y<sp/>)<sp/>&gt;&gt;<sp/>32)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7064"><highlight class="normal"></highlight></codeline>
<codeline lineno="7065"><highlight class="normal"></highlight></codeline>
<codeline lineno="7066"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>(<sp/>__CC_ARM<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7067"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Enter<sp/>low<sp/>optimization<sp/>region<sp/>-<sp/>place<sp/>directly<sp/>above<sp/>function<sp/>definition<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7068"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>defined(<sp/>ARM_MATH_CM4<sp/>)<sp/>||<sp/>defined(<sp/>ARM_MATH_CM7)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7069"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LOW_OPTIMIZATION_ENTER<sp/>\</highlight></codeline>
<codeline lineno="7070"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_Pragma<sp/>(&quot;push&quot;)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="7071"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_Pragma<sp/>(&quot;O1&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7072"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7073"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LOW_OPTIMIZATION_ENTER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7074"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7075"><highlight class="normal"></highlight></codeline>
<codeline lineno="7076"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Exit<sp/>low<sp/>optimization<sp/>region<sp/>-<sp/>place<sp/>directly<sp/>after<sp/>end<sp/>of<sp/>function<sp/>definition<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7077"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>defined(<sp/>ARM_MATH_CM4<sp/>)<sp/>||<sp/>defined(<sp/>ARM_MATH_CM7)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7078"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LOW_OPTIMIZATION_EXIT<sp/>\</highlight></codeline>
<codeline lineno="7079"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_Pragma<sp/>(&quot;pop&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7080"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7081"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LOW_OPTIMIZATION_EXIT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7082"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7083"><highlight class="normal"></highlight></codeline>
<codeline lineno="7084"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Enter<sp/>low<sp/>optimization<sp/>region<sp/>-<sp/>place<sp/>directly<sp/>above<sp/>function<sp/>definition<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7085"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>IAR_ONLY_LOW_OPTIMIZATION_ENTER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7086"><highlight class="normal"></highlight></codeline>
<codeline lineno="7087"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Exit<sp/>low<sp/>optimization<sp/>region<sp/>-<sp/>place<sp/>directly<sp/>after<sp/>end<sp/>of<sp/>function<sp/>definition<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7088"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>IAR_ONLY_LOW_OPTIMIZATION_EXIT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7089"><highlight class="normal"></highlight></codeline>
<codeline lineno="7090"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(__ARMCC_VERSION)<sp/>&amp;&amp;<sp/>(__ARMCC_VERSION<sp/>&gt;=<sp/>6010050)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7091"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>LOW_OPTIMIZATION_ENTER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7092"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>LOW_OPTIMIZATION_EXIT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7093"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>IAR_ONLY_LOW_OPTIMIZATION_ENTER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7094"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>IAR_ONLY_LOW_OPTIMIZATION_EXIT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7095"><highlight class="normal"></highlight></codeline>
<codeline lineno="7096"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(__GNUC__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7097"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>LOW_OPTIMIZATION_ENTER<sp/>__attribute__((<sp/>optimize(&quot;-O1&quot;)<sp/>))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7098"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>LOW_OPTIMIZATION_EXIT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7099"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>IAR_ONLY_LOW_OPTIMIZATION_ENTER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7100"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>IAR_ONLY_LOW_OPTIMIZATION_EXIT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7101"><highlight class="normal"></highlight></codeline>
<codeline lineno="7102"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(__ICCARM__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7103"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Enter<sp/>low<sp/>optimization<sp/>region<sp/>-<sp/>place<sp/>directly<sp/>above<sp/>function<sp/>definition<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7104"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>defined(<sp/>ARM_MATH_CM4<sp/>)<sp/>||<sp/>defined(<sp/>ARM_MATH_CM7)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7105"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LOW_OPTIMIZATION_ENTER<sp/>\</highlight></codeline>
<codeline lineno="7106"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_Pragma<sp/>(&quot;optimize=low&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7107"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7108"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LOW_OPTIMIZATION_ENTER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7109"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7110"><highlight class="normal"></highlight></codeline>
<codeline lineno="7111"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Exit<sp/>low<sp/>optimization<sp/>region<sp/>-<sp/>place<sp/>directly<sp/>after<sp/>end<sp/>of<sp/>function<sp/>definition<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7112"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>LOW_OPTIMIZATION_EXIT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7113"><highlight class="normal"></highlight></codeline>
<codeline lineno="7114"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Enter<sp/>low<sp/>optimization<sp/>region<sp/>-<sp/>place<sp/>directly<sp/>above<sp/>function<sp/>definition<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7115"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>defined(<sp/>ARM_MATH_CM4<sp/>)<sp/>||<sp/>defined(<sp/>ARM_MATH_CM7)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7116"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>IAR_ONLY_LOW_OPTIMIZATION_ENTER<sp/>\</highlight></codeline>
<codeline lineno="7117"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_Pragma<sp/>(&quot;optimize=low&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7118"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7119"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>IAR_ONLY_LOW_OPTIMIZATION_ENTER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7120"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7121"><highlight class="normal"></highlight></codeline>
<codeline lineno="7122"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Exit<sp/>low<sp/>optimization<sp/>region<sp/>-<sp/>place<sp/>directly<sp/>after<sp/>end<sp/>of<sp/>function<sp/>definition<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7123"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>IAR_ONLY_LOW_OPTIMIZATION_EXIT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7124"><highlight class="normal"></highlight></codeline>
<codeline lineno="7125"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(__CSMC__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7126"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>LOW_OPTIMIZATION_ENTER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7127"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>LOW_OPTIMIZATION_EXIT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7128"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>IAR_ONLY_LOW_OPTIMIZATION_ENTER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7129"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>IAR_ONLY_LOW_OPTIMIZATION_EXIT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7130"><highlight class="normal"></highlight></codeline>
<codeline lineno="7131"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(__TASKING__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7132"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>LOW_OPTIMIZATION_ENTER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7133"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>LOW_OPTIMIZATION_EXIT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7134"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>IAR_ONLY_LOW_OPTIMIZATION_ENTER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7135"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>IAR_ONLY_LOW_OPTIMIZATION_EXIT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7136"><highlight class="normal"></highlight></codeline>
<codeline lineno="7137"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7138"><highlight class="normal"></highlight></codeline>
<codeline lineno="7139"><highlight class="normal"></highlight></codeline>
<codeline lineno="7140"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/><sp/><sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7141"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7142"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7143"><highlight class="normal"></highlight></codeline>
<codeline lineno="7144"><highlight class="normal"></highlight></codeline>
<codeline lineno="7145"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>(<sp/>__GNUC__<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7146"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>GCC<sp/>diagnostic<sp/>pop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7147"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7148"><highlight class="normal"></highlight></codeline>
<codeline lineno="7149"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>_ARM_MATH_H<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7150"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h"/>
  </compounddef>
</doxygen>
