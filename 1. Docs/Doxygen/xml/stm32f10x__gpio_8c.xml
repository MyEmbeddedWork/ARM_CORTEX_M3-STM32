<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="stm32f10x__gpio_8c" kind="file" language="C++">
    <compoundname>stm32f10x_gpio.c</compoundname>
    <includes refid="stm32f10x__gpio_8h" local="yes">stm32f10x_gpio.h</includes>
    <includes refid="stm32f10x__rcc_8h" local="yes">stm32f10x_rcc.h</includes>
    <incdepgraph>
      <node id="952">
        <label>system_stm32f10x.h</label>
        <link refid="system__stm32f10x_8h"/>
      </node>
      <node id="945">
        <label>C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_gpio.c</label>
        <link refid="stm32f10x__gpio_8c"/>
        <childnode refid="946" relation="include">
        </childnode>
        <childnode refid="953" relation="include">
        </childnode>
      </node>
      <node id="949">
        <label>stdint.h</label>
      </node>
      <node id="946">
        <label>stm32f10x_gpio.h</label>
        <link refid="stm32f10x__gpio_8h"/>
        <childnode refid="947" relation="include">
        </childnode>
      </node>
      <node id="948">
        <label>core_cm3.h</label>
        <link refid="core__cm3_8h"/>
        <childnode refid="949" relation="include">
        </childnode>
        <childnode refid="950" relation="include">
        </childnode>
        <childnode refid="951" relation="include">
        </childnode>
      </node>
      <node id="951">
        <label>core_cmFunc.h</label>
        <link refid="core__cm_func_8h"/>
      </node>
      <node id="953">
        <label>stm32f10x_rcc.h</label>
        <link refid="stm32f10x__rcc_8h"/>
        <childnode refid="947" relation="include">
        </childnode>
      </node>
      <node id="950">
        <label>core_cmInstr.h</label>
        <link refid="core__cm_instr_8h"/>
      </node>
      <node id="947">
        <label>stm32f10x.h</label>
        <link refid="stm32f10x_8h"/>
        <childnode refid="948" relation="include">
        </childnode>
        <childnode refid="952" relation="include">
        </childnode>
        <childnode refid="949" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="group___g_p_i_o___private___defines_1ga0ecdd0dd5180e1ee385c22f66a2cd660" prot="public" static="no">
        <name>AFIO_OFFSET</name>
        <initializer>(<ref refid="group___peripheral__memory__map_1ga5f7e3eacfcf4c313c25012795148a680" kindref="member">AFIO_BASE</ref> - <ref refid="group___peripheral__memory__map_1ga9171f49478fa86d932f89e78e73b88b0" kindref="member">PERIPH_BASE</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_gpio.c" line="48" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_gpio.c" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___g_p_i_o___private___defines_1gaf8c24f39392c89142f1b97a418669d5d" prot="public" static="no">
        <name>EVCR_OFFSET</name>
        <initializer>(<ref refid="group___g_p_i_o___private___defines_1ga0ecdd0dd5180e1ee385c22f66a2cd660" kindref="member">AFIO_OFFSET</ref> + 0x00)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_gpio.c" line="53" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_gpio.c" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___g_p_i_o___private___defines_1ga8e4fdee57fe3447cdbc5d00ccab60c18" prot="public" static="no">
        <name>EVOE_BitNumber</name>
        <initializer>((uint8_t)0x07)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_gpio.c" line="54" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_gpio.c" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___g_p_i_o___private___defines_1ga6e4f8c4e3def38811ac6c03b4f64240b" prot="public" static="no">
        <name>EVCR_EVOE_BB</name>
        <initializer>(<ref refid="group___peripheral__memory__map_1gaed7efc100877000845c236ccdc9e144a" kindref="member">PERIPH_BB_BASE</ref> + (<ref refid="group___g_p_i_o___private___defines_1gaf8c24f39392c89142f1b97a418669d5d" kindref="member">EVCR_OFFSET</ref> * 32) + (<ref refid="group___g_p_i_o___private___defines_1ga8e4fdee57fe3447cdbc5d00ccab60c18" kindref="member">EVOE_BitNumber</ref> * 4))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_gpio.c" line="55" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_gpio.c" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___g_p_i_o___private___defines_1ga472f80f63d09e365d283675f3466c8a1" prot="public" static="no">
        <name>MAPR_OFFSET</name>
        <initializer>(<ref refid="group___g_p_i_o___private___defines_1ga0ecdd0dd5180e1ee385c22f66a2cd660" kindref="member">AFIO_OFFSET</ref> + 0x04)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_gpio.c" line="60" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_gpio.c" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___g_p_i_o___private___defines_1gad4a9bbd669109039291f942d923ff8ae" prot="public" static="no">
        <name>MII_RMII_SEL_BitNumber</name>
        <initializer>((<ref refid="group___exported__types_1ga92c50087ca0e64fa93fc59402c55f8ca" kindref="member">u8</ref>)0x17)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_gpio.c" line="61" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_gpio.c" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___g_p_i_o___private___defines_1ga00e75433e8a45d7a55c021397cb85aa9" prot="public" static="no">
        <name>MAPR_MII_RMII_SEL_BB</name>
        <initializer>(<ref refid="group___peripheral__memory__map_1gaed7efc100877000845c236ccdc9e144a" kindref="member">PERIPH_BB_BASE</ref> + (<ref refid="group___g_p_i_o___private___defines_1ga472f80f63d09e365d283675f3466c8a1" kindref="member">MAPR_OFFSET</ref> * 32) + (<ref refid="group___g_p_i_o___private___defines_1gad4a9bbd669109039291f942d923ff8ae" kindref="member">MII_RMII_SEL_BitNumber</ref> * 4))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_gpio.c" line="62" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_gpio.c" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___g_p_i_o___private___defines_1ga97d20e77a588a767e1a775dd4299d1c5" prot="public" static="no">
        <name>EVCR_PORTPINCONFIG_MASK</name>
        <initializer>((uint16_t)0xFF80)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_gpio.c" line="65" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_gpio.c" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___g_p_i_o___private___defines_1ga338d54179ac0da2af2363e3a930bf374" prot="public" static="no">
        <name>LSB_MASK</name>
        <initializer>((uint16_t)0xFFFF)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_gpio.c" line="66" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_gpio.c" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___g_p_i_o___private___defines_1gafa4eba58b1839413acb4591da00e7559" prot="public" static="no">
        <name>DBGAFR_POSITION_MASK</name>
        <initializer>((uint32_t)0x000F0000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_gpio.c" line="67" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_gpio.c" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___g_p_i_o___private___defines_1ga47a1cd3c0505a7be3e161671237d8460" prot="public" static="no">
        <name>DBGAFR_SWJCFG_MASK</name>
        <initializer>((uint32_t)0xF0FFFFFF)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_gpio.c" line="68" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_gpio.c" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___g_p_i_o___private___defines_1gaab83406f875057e96458940ca9519b7d" prot="public" static="no">
        <name>DBGAFR_LOCATION_MASK</name>
        <initializer>((uint32_t)0x00200000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_gpio.c" line="69" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_gpio.c" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___g_p_i_o___private___defines_1gaea2fa480dea4d6e061eaa1417a9196dc" prot="public" static="no">
        <name>DBGAFR_NUMBITS_MASK</name>
        <initializer>((uint32_t)0x00100000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_gpio.c" line="70" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_gpio.c" bodystart="70" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group___g_p_i_o___private___functions_1gaa60bdf3182c44b5fa818f237042f52ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GPIO_DeInit</definition>
        <argsstring>(GPIO_TypeDef *GPIOx)</argsstring>
        <name>GPIO_DeInit</name>
        <param>
          <type><ref refid="struct_g_p_i_o___type_def" kindref="compound">GPIO_TypeDef</ref> *</type>
          <declname>GPIOx</declname>
        </param>
        <briefdescription>
<para>Deinitializes the GPIOx peripheral registers to their default reset values. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>GPIOx</parametername>
</parameternamelist>
<parameterdescription>
<para>where x can be (A..G) to select the GPIO peripheral. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_gpio.c" line="108" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_gpio.c" bodystart="108" bodyend="151"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___g_p_i_o___exported___types_1ga68b2a1f0b05c13978217db5439c7f790" compoundref="stm32f10x__gpio_8h" startline="46">IS_GPIO_ALL_PERIPH</references>
        <references refid="group___peripheral__declaration_1gac485358099728ddae050db37924dd6b7" compoundref="stm32f10x_8h" startline="1408">GPIOA</references>
        <references refid="group___r_c_c___exported___functions_1gad94553850ac07106a27ee85fec37efdf" compoundref="stm32f10x__rcc_8c" startline="1185" endline="1198">RCC_APB2PeriphResetCmd</references>
        <references refid="group___a_p_b2__peripheral_1ga44b92fbf2e288796b1acbce2708f3636" compoundref="stm32f10x__rcc_8h" startline="498">RCC_APB2Periph_GPIOA</references>
        <references refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1a7d46875fa3ebd2c34d2756950eda83bf" compoundref="stm32f10x_8h" startline="521">ENABLE</references>
        <references refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1ad3a9df141be0ccf10389b640f492b26d" compoundref="stm32f10x_8h" startline="521">DISABLE</references>
        <references refid="group___peripheral__declaration_1ga68b66ac73be4c836db878a42e1fea3cd" compoundref="stm32f10x_8h" startline="1409">GPIOB</references>
        <references refid="group___a_p_b2__peripheral_1ga8c8909c3640508e9ce31dff80010a6dd" compoundref="stm32f10x__rcc_8h" startline="499">RCC_APB2Periph_GPIOB</references>
        <references refid="group___peripheral__declaration_1ga2dca03332d620196ba943bc2346eaa08" compoundref="stm32f10x_8h" startline="1410">GPIOC</references>
        <references refid="group___a_p_b2__peripheral_1gaf1f4b467becee1ff31ba2c54328a0115" compoundref="stm32f10x__rcc_8h" startline="500">RCC_APB2Periph_GPIOC</references>
        <references refid="group___peripheral__declaration_1ga7580b1a929ea9df59725ba9c18eba6ac" compoundref="stm32f10x_8h" startline="1411">GPIOD</references>
        <references refid="group___a_p_b2__peripheral_1ga177200a365084af306e98389edeba42b" compoundref="stm32f10x__rcc_8h" startline="501">RCC_APB2Periph_GPIOD</references>
        <references refid="group___peripheral__declaration_1gae04bdb5e8acc47cab1d0532e6b0d0763" compoundref="stm32f10x_8h" startline="1412">GPIOE</references>
        <references refid="group___a_p_b2__peripheral_1gabc736c9892278ccd15848c6137d991fc" compoundref="stm32f10x__rcc_8h" startline="502">RCC_APB2Periph_GPIOE</references>
        <references refid="group___peripheral__declaration_1ga43c3022dede7c9db7a58d3c3409dbc8d" compoundref="stm32f10x_8h" startline="1413">GPIOF</references>
        <references refid="group___a_p_b2__peripheral_1ga2dbb1e1116b57621c585e1b52c894bda" compoundref="stm32f10x__rcc_8h" startline="503">RCC_APB2Periph_GPIOF</references>
        <references refid="group___peripheral__declaration_1ga02a2a23a32f9b02166a8c64012842414" compoundref="stm32f10x_8h" startline="1414">GPIOG</references>
        <references refid="group___a_p_b2__peripheral_1gaba82756d2060b97c62eb555242361b2e" compoundref="stm32f10x__rcc_8h" startline="504">RCC_APB2Periph_GPIOG</references>
      </memberdef>
      <memberdef kind="function" id="group___g_p_i_o___private___functions_1ga7f645e6b6146818c3d6c19021e70170c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GPIO_AFIODeInit</definition>
        <argsstring>(void)</argsstring>
        <name>GPIO_AFIODeInit</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Deinitializes the Alternate Functions (remap, event control and EXTI configuration) registers to their default reset values. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_gpio.c" line="159" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_gpio.c" bodystart="159" bodyend="163"/>
        <references refid="group___r_c_c___exported___functions_1gad94553850ac07106a27ee85fec37efdf" compoundref="stm32f10x__rcc_8c" startline="1185" endline="1198">RCC_APB2PeriphResetCmd</references>
        <references refid="group___a_p_b2__peripheral_1ga5aa9469879ffa019d4836b0d297104c5" compoundref="stm32f10x__rcc_8h" startline="497">RCC_APB2Periph_AFIO</references>
        <references refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1a7d46875fa3ebd2c34d2756950eda83bf" compoundref="stm32f10x_8h" startline="521">ENABLE</references>
        <references refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1ad3a9df141be0ccf10389b640f492b26d" compoundref="stm32f10x_8h" startline="521">DISABLE</references>
      </memberdef>
      <memberdef kind="function" id="group___g_p_i_o___private___functions_1ga71abf9404261370d03cca449b88d3a65" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GPIO_Init</definition>
        <argsstring>(GPIO_TypeDef *GPIOx, GPIO_InitTypeDef *GPIO_InitStruct)</argsstring>
        <name>GPIO_Init</name>
        <param>
          <type><ref refid="struct_g_p_i_o___type_def" kindref="compound">GPIO_TypeDef</ref> *</type>
          <declname>GPIOx</declname>
        </param>
        <param>
          <type><ref refid="struct_g_p_i_o___init_type_def" kindref="compound">GPIO_InitTypeDef</ref> *</type>
          <declname>GPIO_InitStruct</declname>
        </param>
        <briefdescription>
<para>Initializes the GPIOx peripheral according to the specified parameters in the GPIO_InitStruct. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>GPIOx</parametername>
</parameternamelist>
<parameterdescription>
<para>where x can be (A..G) to select the GPIO peripheral. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>GPIO_InitStruct</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a <ref refid="struct_g_p_i_o___init_type_def" kindref="compound">GPIO_InitTypeDef</ref> structure that contains the configuration information for the specified GPIO peripheral. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_gpio.c" line="173" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_gpio.c" bodystart="173" bodyend="258"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___g_p_i_o___exported___types_1ga68b2a1f0b05c13978217db5439c7f790" compoundref="stm32f10x__gpio_8h" startline="46">IS_GPIO_ALL_PERIPH</references>
        <references refid="group___g_p_i_o___exported___types_1gacc5fde3eef57ec3c558c11d0011d900c" compoundref="stm32f10x__gpio_8h" startline="82">IS_GPIO_MODE</references>
        <references refid="struct_g_p_i_o___init_type_def_1a55bd77e335c2bfeec9caa5dc922b791b" compoundref="stm32f10x__gpio_8h" startline="99">GPIO_InitTypeDef::GPIO_Mode</references>
        <references refid="group___g_p_i_o__pins__define_1gad6ec74e33360395535ad5d91ba6d4781" compoundref="stm32f10x__gpio_8h" startline="145">IS_GPIO_PIN</references>
        <references refid="struct_g_p_i_o___init_type_def_1a35fc26fc58226126c5b99478a472e5e9" compoundref="stm32f10x__gpio_8h" startline="93">GPIO_InitTypeDef::GPIO_Pin</references>
        <references refid="group___g_p_i_o___exported___types_1ga888e1f951df2fe9dbf827528051a3a56" compoundref="stm32f10x__gpio_8h" startline="64">IS_GPIO_SPEED</references>
        <references refid="struct_g_p_i_o___init_type_def_1ac05832cacebc861a9acf5294d702c16b" compoundref="stm32f10x__gpio_8h" startline="96">GPIO_InitTypeDef::GPIO_Speed</references>
        <references refid="struct_g_p_i_o___type_def_1a218d21e9ca712cec4ca8f00406b2ec29" compoundref="stm32f10x_8h" startline="1003">GPIO_TypeDef::CRL</references>
        <references refid="group___g_p_i_o___exported___types_1gga1347339e1c84a196fabbb31205eec5d4ad5b7c382c280d0b14786aa7e0af783dc" compoundref="stm32f10x__gpio_8h" startline="74">GPIO_Mode_IPD</references>
        <references refid="struct_g_p_i_o___type_def_1aab918bfbfae459789db1fd0b220c7f21" compoundref="stm32f10x_8h" startline="1008">GPIO_TypeDef::BRR</references>
        <references refid="group___g_p_i_o___exported___types_1gga1347339e1c84a196fabbb31205eec5d4adc5187fa416ea708ee4cb445ef2c59e7" compoundref="stm32f10x__gpio_8h" startline="75">GPIO_Mode_IPU</references>
        <references refid="struct_g_p_i_o___type_def_1acd6f21e08912b484c030ca8b18e11cd6" compoundref="stm32f10x_8h" startline="1007">GPIO_TypeDef::BSRR</references>
        <references refid="struct_g_p_i_o___type_def_1afe53502a3dbf9e7dcf9ac83f67ac481d" compoundref="stm32f10x_8h" startline="1004">GPIO_TypeDef::CRH</references>
        <referencedby refid="class_blink_led_1a38fcbc34c6ff8a1083b64bbbb309a54c" compoundref="_blink_led_8cpp" startline="11" endline="26">BlinkLed::powerUp</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___g_p_i_o___private___functions_1gab28de41278e7f8c63d0851e2733b10df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GPIO_StructInit</definition>
        <argsstring>(GPIO_InitTypeDef *GPIO_InitStruct)</argsstring>
        <name>GPIO_StructInit</name>
        <param>
          <type><ref refid="struct_g_p_i_o___init_type_def" kindref="compound">GPIO_InitTypeDef</ref> *</type>
          <declname>GPIO_InitStruct</declname>
        </param>
        <briefdescription>
<para>Fills each GPIO_InitStruct member with its default value. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>GPIO_InitStruct</parametername>
</parameternamelist>
<parameterdescription>
<para>: pointer to a <ref refid="struct_g_p_i_o___init_type_def" kindref="compound">GPIO_InitTypeDef</ref> structure which will be initialized. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_gpio.c" line="266" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_gpio.c" bodystart="266" bodyend="272"/>
        <references refid="struct_g_p_i_o___init_type_def_1a35fc26fc58226126c5b99478a472e5e9" compoundref="stm32f10x__gpio_8h" startline="93">GPIO_InitTypeDef::GPIO_Pin</references>
        <references refid="group___g_p_i_o__pins__define_1gaba3e915ddca17a1211edc07b7fd97e8b" compoundref="stm32f10x__gpio_8h" startline="143">GPIO_Pin_All</references>
        <references refid="struct_g_p_i_o___init_type_def_1ac05832cacebc861a9acf5294d702c16b" compoundref="stm32f10x__gpio_8h" startline="96">GPIO_InitTypeDef::GPIO_Speed</references>
        <references refid="group___g_p_i_o___exported___types_1gga062ad92b67b4a1f301c161022cf3ba8ea9bff9e174639332007c914483361be18" compoundref="stm32f10x__gpio_8h" startline="61">GPIO_Speed_2MHz</references>
        <references refid="struct_g_p_i_o___init_type_def_1a55bd77e335c2bfeec9caa5dc922b791b" compoundref="stm32f10x__gpio_8h" startline="99">GPIO_InitTypeDef::GPIO_Mode</references>
        <references refid="group___g_p_i_o___exported___types_1gga1347339e1c84a196fabbb31205eec5d4a0e3d2ce89b42f093d327a5e42e4d7cc2" compoundref="stm32f10x__gpio_8h" startline="73">GPIO_Mode_IN_FLOATING</references>
      </memberdef>
      <memberdef kind="function" id="group___g_p_i_o___private___functions_1ga98772ef6b639b3fa06c8ae5ba28d3aaa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t GPIO_ReadInputDataBit</definition>
        <argsstring>(GPIO_TypeDef *GPIOx, uint16_t GPIO_Pin)</argsstring>
        <name>GPIO_ReadInputDataBit</name>
        <param>
          <type><ref refid="struct_g_p_i_o___type_def" kindref="compound">GPIO_TypeDef</ref> *</type>
          <declname>GPIOx</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>GPIO_Pin</declname>
        </param>
        <briefdescription>
<para>Reads the specified input port pin. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>GPIOx</parametername>
</parameternamelist>
<parameterdescription>
<para>where x can be (A..G) to select the GPIO peripheral. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>GPIO_Pin</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the port bit to read. This parameter can be GPIO_Pin_x where x can be (0..15). </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>input port pin value. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_gpio.c" line="281" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_gpio.c" bodystart="281" bodyend="298"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___g_p_i_o___exported___types_1ga68b2a1f0b05c13978217db5439c7f790" compoundref="stm32f10x__gpio_8h" startline="46">IS_GPIO_ALL_PERIPH</references>
        <references refid="group___g_p_i_o__pins__define_1gaddf7154b7f30b7c0a70f3aeaff5ddffc" compoundref="stm32f10x__gpio_8h" startline="147">IS_GET_GPIO_PIN</references>
        <references refid="struct_g_p_i_o___type_def_1acf11156409414ad8841bb0b62959ee96" compoundref="stm32f10x_8h" startline="1005">GPIO_TypeDef::IDR</references>
        <references refid="group___g_p_i_o___exported___types_1gga176130b21c0e719121470a6042d4cf19ae2c026f2b44a949f82a65f3385edef09" compoundref="stm32f10x__gpio_8h" startline="109">Bit_RESET</references>
        <references refid="group___g_p_i_o___exported___types_1gga176130b21c0e719121470a6042d4cf19a3c477841a6ceec13fe47ef322432b992" compoundref="stm32f10x__gpio_8h" startline="110">Bit_SET</references>
      </memberdef>
      <memberdef kind="function" id="group___g_p_i_o___private___functions_1ga139a33adc8409288e9f193bbebb5a0f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t GPIO_ReadInputData</definition>
        <argsstring>(GPIO_TypeDef *GPIOx)</argsstring>
        <name>GPIO_ReadInputData</name>
        <param>
          <type><ref refid="struct_g_p_i_o___type_def" kindref="compound">GPIO_TypeDef</ref> *</type>
          <declname>GPIOx</declname>
        </param>
        <briefdescription>
<para>Reads the specified GPIO input data port. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>GPIOx</parametername>
</parameternamelist>
<parameterdescription>
<para>where x can be (A..G) to select the GPIO peripheral. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>GPIO</parametername>
</parameternamelist>
<parameterdescription>
<para>input data port value. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_gpio.c" line="305" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_gpio.c" bodystart="305" bodyend="311"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___g_p_i_o___exported___types_1ga68b2a1f0b05c13978217db5439c7f790" compoundref="stm32f10x__gpio_8h" startline="46">IS_GPIO_ALL_PERIPH</references>
        <references refid="struct_g_p_i_o___type_def_1acf11156409414ad8841bb0b62959ee96" compoundref="stm32f10x_8h" startline="1005">GPIO_TypeDef::IDR</references>
      </memberdef>
      <memberdef kind="function" id="group___g_p_i_o___private___functions_1ga138270f8695b105b7c6ed405792919c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t GPIO_ReadOutputDataBit</definition>
        <argsstring>(GPIO_TypeDef *GPIOx, uint16_t GPIO_Pin)</argsstring>
        <name>GPIO_ReadOutputDataBit</name>
        <param>
          <type><ref refid="struct_g_p_i_o___type_def" kindref="compound">GPIO_TypeDef</ref> *</type>
          <declname>GPIOx</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>GPIO_Pin</declname>
        </param>
        <briefdescription>
<para>Reads the specified output data port bit. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>GPIOx</parametername>
</parameternamelist>
<parameterdescription>
<para>where x can be (A..G) to select the GPIO peripheral. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>GPIO_Pin</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the port bit to read. This parameter can be GPIO_Pin_x where x can be (0..15). </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>output port pin value. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_gpio.c" line="320" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_gpio.c" bodystart="320" bodyend="336"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___g_p_i_o___exported___types_1ga68b2a1f0b05c13978217db5439c7f790" compoundref="stm32f10x__gpio_8h" startline="46">IS_GPIO_ALL_PERIPH</references>
        <references refid="group___g_p_i_o__pins__define_1gaddf7154b7f30b7c0a70f3aeaff5ddffc" compoundref="stm32f10x__gpio_8h" startline="147">IS_GET_GPIO_PIN</references>
        <references refid="struct_g_p_i_o___type_def_1a6fb78f4a978a36032cdeac93ac3c9c8b" compoundref="stm32f10x_8h" startline="1006">GPIO_TypeDef::ODR</references>
        <references refid="group___g_p_i_o___exported___types_1gga176130b21c0e719121470a6042d4cf19ae2c026f2b44a949f82a65f3385edef09" compoundref="stm32f10x__gpio_8h" startline="109">Bit_RESET</references>
        <references refid="group___g_p_i_o___exported___types_1gga176130b21c0e719121470a6042d4cf19a3c477841a6ceec13fe47ef322432b992" compoundref="stm32f10x__gpio_8h" startline="110">Bit_SET</references>
      </memberdef>
      <memberdef kind="function" id="group___g_p_i_o___private___functions_1gaf8938a34280b7dc3e39872a7c17bb323" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t GPIO_ReadOutputData</definition>
        <argsstring>(GPIO_TypeDef *GPIOx)</argsstring>
        <name>GPIO_ReadOutputData</name>
        <param>
          <type><ref refid="struct_g_p_i_o___type_def" kindref="compound">GPIO_TypeDef</ref> *</type>
          <declname>GPIOx</declname>
        </param>
        <briefdescription>
<para>Reads the specified GPIO output data port. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>GPIOx</parametername>
</parameternamelist>
<parameterdescription>
<para>where x can be (A..G) to select the GPIO peripheral. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>GPIO</parametername>
</parameternamelist>
<parameterdescription>
<para>output data port value. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_gpio.c" line="343" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_gpio.c" bodystart="343" bodyend="349"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___g_p_i_o___exported___types_1ga68b2a1f0b05c13978217db5439c7f790" compoundref="stm32f10x__gpio_8h" startline="46">IS_GPIO_ALL_PERIPH</references>
        <references refid="struct_g_p_i_o___type_def_1a6fb78f4a978a36032cdeac93ac3c9c8b" compoundref="stm32f10x_8h" startline="1006">GPIO_TypeDef::ODR</references>
      </memberdef>
      <memberdef kind="function" id="group___g_p_i_o___private___functions_1ga9e1352eed7c6620e18af2d86f6b6ff8e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GPIO_SetBits</definition>
        <argsstring>(GPIO_TypeDef *GPIOx, uint16_t GPIO_Pin)</argsstring>
        <name>GPIO_SetBits</name>
        <param>
          <type><ref refid="struct_g_p_i_o___type_def" kindref="compound">GPIO_TypeDef</ref> *</type>
          <declname>GPIOx</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>GPIO_Pin</declname>
        </param>
        <briefdescription>
<para>Sets the selected data port bits. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>GPIOx</parametername>
</parameternamelist>
<parameterdescription>
<para>where x can be (A..G) to select the GPIO peripheral. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>GPIO_Pin</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the port bits to be written. This parameter can be any combination of GPIO_Pin_x where x can be (0..15). </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_gpio.c" line="358" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_gpio.c" bodystart="358" bodyend="365"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___g_p_i_o___exported___types_1ga68b2a1f0b05c13978217db5439c7f790" compoundref="stm32f10x__gpio_8h" startline="46">IS_GPIO_ALL_PERIPH</references>
        <references refid="group___g_p_i_o__pins__define_1gad6ec74e33360395535ad5d91ba6d4781" compoundref="stm32f10x__gpio_8h" startline="145">IS_GPIO_PIN</references>
        <references refid="struct_g_p_i_o___type_def_1acd6f21e08912b484c030ca8b18e11cd6" compoundref="stm32f10x_8h" startline="1007">GPIO_TypeDef::BSRR</references>
        <referencedby refid="class_blink_led_1ae5768d48c161e9150c97e19c369b64de" compoundref="_blink_led_8h" startline="37" endline="47">BlinkLed::__attribute__</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___g_p_i_o___private___functions_1ga6fcd35b207a66608dd2c9d7de9247dc8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GPIO_ResetBits</definition>
        <argsstring>(GPIO_TypeDef *GPIOx, uint16_t GPIO_Pin)</argsstring>
        <name>GPIO_ResetBits</name>
        <param>
          <type><ref refid="struct_g_p_i_o___type_def" kindref="compound">GPIO_TypeDef</ref> *</type>
          <declname>GPIOx</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>GPIO_Pin</declname>
        </param>
        <briefdescription>
<para>Clears the selected data port bits. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>GPIOx</parametername>
</parameternamelist>
<parameterdescription>
<para>where x can be (A..G) to select the GPIO peripheral. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>GPIO_Pin</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the port bits to be written. This parameter can be any combination of GPIO_Pin_x where x can be (0..15). </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_gpio.c" line="374" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_gpio.c" bodystart="374" bodyend="381"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___g_p_i_o___exported___types_1ga68b2a1f0b05c13978217db5439c7f790" compoundref="stm32f10x__gpio_8h" startline="46">IS_GPIO_ALL_PERIPH</references>
        <references refid="group___g_p_i_o__pins__define_1gad6ec74e33360395535ad5d91ba6d4781" compoundref="stm32f10x__gpio_8h" startline="145">IS_GPIO_PIN</references>
        <references refid="struct_g_p_i_o___type_def_1aab918bfbfae459789db1fd0b220c7f21" compoundref="stm32f10x_8h" startline="1008">GPIO_TypeDef::BRR</references>
        <referencedby refid="class_blink_led_1ae5768d48c161e9150c97e19c369b64de" compoundref="_blink_led_8h" startline="37" endline="47">BlinkLed::__attribute__</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___g_p_i_o___private___functions_1ga8f7b237fd744d9f7456fbe0da47a9b80" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GPIO_WriteBit</definition>
        <argsstring>(GPIO_TypeDef *GPIOx, uint16_t GPIO_Pin, BitAction BitVal)</argsstring>
        <name>GPIO_WriteBit</name>
        <param>
          <type><ref refid="struct_g_p_i_o___type_def" kindref="compound">GPIO_TypeDef</ref> *</type>
          <declname>GPIOx</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>GPIO_Pin</declname>
        </param>
        <param>
          <type><ref refid="group___g_p_i_o___exported___types_1ga176130b21c0e719121470a6042d4cf19" kindref="member">BitAction</ref></type>
          <declname>BitVal</declname>
        </param>
        <briefdescription>
<para>Sets or clears the selected data port bit. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>GPIOx</parametername>
</parameternamelist>
<parameterdescription>
<para>where x can be (A..G) to select the GPIO peripheral. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>GPIO_Pin</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the port bit to be written. This parameter can be one of GPIO_Pin_x where x can be (0..15). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>BitVal</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the value to be written to the selected bit. This parameter can be one of the BitAction enum values: <itemizedlist>
<listitem><para>Bit_RESET: to clear the port pin </para></listitem>
<listitem><para>Bit_SET: to set the port pin </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_gpio.c" line="394" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_gpio.c" bodystart="394" bodyend="409"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___g_p_i_o___exported___types_1ga68b2a1f0b05c13978217db5439c7f790" compoundref="stm32f10x__gpio_8h" startline="46">IS_GPIO_ALL_PERIPH</references>
        <references refid="group___g_p_i_o__pins__define_1gaddf7154b7f30b7c0a70f3aeaff5ddffc" compoundref="stm32f10x__gpio_8h" startline="147">IS_GET_GPIO_PIN</references>
        <references refid="group___g_p_i_o___exported___types_1ga6b882caa8ed9857c5c7267959a7818c5" compoundref="stm32f10x__gpio_8h" startline="113">IS_GPIO_BIT_ACTION</references>
        <references refid="group___g_p_i_o___exported___types_1gga176130b21c0e719121470a6042d4cf19ae2c026f2b44a949f82a65f3385edef09" compoundref="stm32f10x__gpio_8h" startline="109">Bit_RESET</references>
        <references refid="struct_g_p_i_o___type_def_1acd6f21e08912b484c030ca8b18e11cd6" compoundref="stm32f10x_8h" startline="1007">GPIO_TypeDef::BSRR</references>
        <references refid="struct_g_p_i_o___type_def_1aab918bfbfae459789db1fd0b220c7f21" compoundref="stm32f10x_8h" startline="1008">GPIO_TypeDef::BRR</references>
      </memberdef>
      <memberdef kind="function" id="group___g_p_i_o___private___functions_1gaa925f19c8547a00c7a0c269a84873bf9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GPIO_Write</definition>
        <argsstring>(GPIO_TypeDef *GPIOx, uint16_t PortVal)</argsstring>
        <name>GPIO_Write</name>
        <param>
          <type><ref refid="struct_g_p_i_o___type_def" kindref="compound">GPIO_TypeDef</ref> *</type>
          <declname>GPIOx</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>PortVal</declname>
        </param>
        <briefdescription>
<para>Writes data to the specified GPIO data port. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>GPIOx</parametername>
</parameternamelist>
<parameterdescription>
<para>where x can be (A..G) to select the GPIO peripheral. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>PortVal</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the value to be written to the port output data register. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_gpio.c" line="417" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_gpio.c" bodystart="417" bodyend="423"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___g_p_i_o___exported___types_1ga68b2a1f0b05c13978217db5439c7f790" compoundref="stm32f10x__gpio_8h" startline="46">IS_GPIO_ALL_PERIPH</references>
        <references refid="struct_g_p_i_o___type_def_1a6fb78f4a978a36032cdeac93ac3c9c8b" compoundref="stm32f10x_8h" startline="1006">GPIO_TypeDef::ODR</references>
      </memberdef>
      <memberdef kind="function" id="group___g_p_i_o___private___functions_1gad2f2e615928c69fd0d8c641a7cedaafc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GPIO_PinLockConfig</definition>
        <argsstring>(GPIO_TypeDef *GPIOx, uint16_t GPIO_Pin)</argsstring>
        <name>GPIO_PinLockConfig</name>
        <param>
          <type><ref refid="struct_g_p_i_o___type_def" kindref="compound">GPIO_TypeDef</ref> *</type>
          <declname>GPIOx</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>GPIO_Pin</declname>
        </param>
        <briefdescription>
<para>Locks GPIO Pins configuration registers. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>GPIOx</parametername>
</parameternamelist>
<parameterdescription>
<para>where x can be (A..G) to select the GPIO peripheral. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>GPIO_Pin</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the port bit to be written. This parameter can be any combination of GPIO_Pin_x where x can be (0..15). </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_gpio.c" line="432" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_gpio.c" bodystart="432" bodyend="451"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___g_p_i_o___exported___types_1ga68b2a1f0b05c13978217db5439c7f790" compoundref="stm32f10x__gpio_8h" startline="46">IS_GPIO_ALL_PERIPH</references>
        <references refid="group___g_p_i_o__pins__define_1gad6ec74e33360395535ad5d91ba6d4781" compoundref="stm32f10x__gpio_8h" startline="145">IS_GPIO_PIN</references>
        <references refid="struct_g_p_i_o___type_def_1a95a59d4b1d52be521f3246028be32f3e" compoundref="stm32f10x_8h" startline="1009">GPIO_TypeDef::LCKR</references>
      </memberdef>
      <memberdef kind="function" id="group___g_p_i_o___private___functions_1ga935f31ed7a86c6cb594cf34313b4b7af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GPIO_EventOutputConfig</definition>
        <argsstring>(uint8_t GPIO_PortSource, uint8_t GPIO_PinSource)</argsstring>
        <name>GPIO_EventOutputConfig</name>
        <param>
          <type>uint8_t</type>
          <declname>GPIO_PortSource</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>GPIO_PinSource</declname>
        </param>
        <briefdescription>
<para>Selects the GPIO pin used as Event output. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>GPIO_PortSource</parametername>
</parameternamelist>
<parameterdescription>
<para>selects the GPIO port to be used as source for Event output. This parameter can be GPIO_PortSourceGPIOx where x can be (A..E). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>GPIO_PinSource</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the pin for the Event output. This parameter can be GPIO_PinSourcex where x can be (0..15). </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_gpio.c" line="462" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_gpio.c" bodystart="462" bodyend="475"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___g_p_i_o___port___sources_1ga40d86e5f9f013777038932f57bc6bbef" compoundref="stm32f10x__gpio_8h" startline="264">IS_GPIO_EVENTOUT_PORT_SOURCE</references>
        <references refid="group___g_p_i_o___pin__sources_1ga689e4e72591136b6a8d4df9d895181f7" compoundref="stm32f10x__gpio_8h" startline="303">IS_GPIO_PIN_SOURCE</references>
        <references refid="group___peripheral__declaration_1ga582e09473429414015b1de90cf767fa8" compoundref="stm32f10x_8h" startline="1406">AFIO</references>
        <references refid="group___g_p_i_o___private___defines_1ga97d20e77a588a767e1a775dd4299d1c5" compoundref="stm32f10x__gpio_8c" startline="65">EVCR_PORTPINCONFIG_MASK</references>
      </memberdef>
      <memberdef kind="function" id="group___g_p_i_o___private___functions_1gaf13ab3d59e467df44b492f1cdfe2f588" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GPIO_EventOutputCmd</definition>
        <argsstring>(FunctionalState NewState)</argsstring>
        <name>GPIO_EventOutputCmd</name>
        <param>
          <type><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref></type>
          <declname>NewState</declname>
        </param>
        <briefdescription>
<para>Enables or disables the Event Output. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>NewState</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of the Event output. This parameter can be: ENABLE or DISABLE. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_gpio.c" line="483" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_gpio.c" bodystart="483" bodyend="489"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" compoundref="stm32f10x_8h" startline="522">IS_FUNCTIONAL_STATE</references>
        <references refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" compoundref="core__cm0_8h" startline="221">__IO</references>
        <references refid="group___g_p_i_o___private___defines_1ga6e4f8c4e3def38811ac6c03b4f64240b" compoundref="stm32f10x__gpio_8c" startline="55">EVCR_EVOE_BB</references>
      </memberdef>
      <memberdef kind="function" id="group___g_p_i_o___private___functions_1ga64eb76f6211b840daf9829289df4208b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GPIO_PinRemapConfig</definition>
        <argsstring>(uint32_t GPIO_Remap, FunctionalState NewState)</argsstring>
        <name>GPIO_PinRemapConfig</name>
        <param>
          <type>uint32_t</type>
          <declname>GPIO_Remap</declname>
        </param>
        <param>
          <type><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref></type>
          <declname>NewState</declname>
        </param>
        <briefdescription>
<para>Changes the mapping of the specified pin. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>GPIO_Remap</parametername>
</parameternamelist>
<parameterdescription>
<para>selects the pin to remap. This parameter can be one of the following values: <itemizedlist>
<listitem><para>GPIO_Remap_SPI1 : SPI1 Alternate Function mapping </para></listitem>
<listitem><para>GPIO_Remap_I2C1 : I2C1 Alternate Function mapping </para></listitem>
<listitem><para>GPIO_Remap_USART1 : USART1 Alternate Function mapping </para></listitem>
<listitem><para>GPIO_Remap_USART2 : USART2 Alternate Function mapping </para></listitem>
<listitem><para>GPIO_PartialRemap_USART3 : USART3 Partial Alternate Function mapping </para></listitem>
<listitem><para>GPIO_FullRemap_USART3 : USART3 Full Alternate Function mapping </para></listitem>
<listitem><para>GPIO_PartialRemap_TIM1 : TIM1 Partial Alternate Function mapping </para></listitem>
<listitem><para>GPIO_FullRemap_TIM1 : TIM1 Full Alternate Function mapping </para></listitem>
<listitem><para>GPIO_PartialRemap1_TIM2 : TIM2 Partial1 Alternate Function mapping </para></listitem>
<listitem><para>GPIO_PartialRemap2_TIM2 : TIM2 Partial2 Alternate Function mapping </para></listitem>
<listitem><para>GPIO_FullRemap_TIM2 : TIM2 Full Alternate Function mapping </para></listitem>
<listitem><para>GPIO_PartialRemap_TIM3 : TIM3 Partial Alternate Function mapping </para></listitem>
<listitem><para>GPIO_FullRemap_TIM3 : TIM3 Full Alternate Function mapping </para></listitem>
<listitem><para>GPIO_Remap_TIM4 : TIM4 Alternate Function mapping </para></listitem>
<listitem><para>GPIO_Remap1_CAN1 : CAN1 Alternate Function mapping </para></listitem>
<listitem><para>GPIO_Remap2_CAN1 : CAN1 Alternate Function mapping </para></listitem>
<listitem><para>GPIO_Remap_PD01 : PD01 Alternate Function mapping </para></listitem>
<listitem><para>GPIO_Remap_TIM5CH4_LSI : LSI connected to TIM5 Channel4 input capture for calibration </para></listitem>
<listitem><para>GPIO_Remap_ADC1_ETRGINJ : ADC1 External Trigger Injected Conversion remapping </para></listitem>
<listitem><para>GPIO_Remap_ADC1_ETRGREG : ADC1 External Trigger Regular Conversion remapping </para></listitem>
<listitem><para>GPIO_Remap_ADC2_ETRGINJ : ADC2 External Trigger Injected Conversion remapping </para></listitem>
<listitem><para>GPIO_Remap_ADC2_ETRGREG : ADC2 External Trigger Regular Conversion remapping </para></listitem>
<listitem><para>GPIO_Remap_ETH : Ethernet remapping (only for Connectivity line devices) </para></listitem>
<listitem><para>GPIO_Remap_CAN2 : CAN2 remapping (only for Connectivity line devices) </para></listitem>
<listitem><para>GPIO_Remap_SWJ_NoJTRST : Full SWJ Enabled (JTAG-DP + SW-DP) but without JTRST </para></listitem>
<listitem><para>GPIO_Remap_SWJ_JTAGDisable : JTAG-DP Disabled and SW-DP Enabled </para></listitem>
<listitem><para>GPIO_Remap_SWJ_Disable : Full SWJ Disabled (JTAG-DP + SW-DP) </para></listitem>
<listitem><para>GPIO_Remap_SPI3 : SPI3/I2S3 Alternate Function mapping (only for Connectivity line devices) When the SPI3/I2S3 is remapped using this function, the SWJ is configured to Full SWJ Enabled (JTAG-DP + SW-DP) but without JTRST. </para></listitem>
<listitem><para>GPIO_Remap_TIM2ITR1_PTP_SOF : Ethernet PTP output or USB OTG SOF (Start of Frame) connected to TIM2 Internal Trigger 1 for calibration (only for Connectivity line devices) If the GPIO_Remap_TIM2ITR1_PTP_SOF is enabled the TIM2 ITR1 is connected to Ethernet PTP output. When Reset TIM2 ITR1 is connected to USB OTG SOF output. </para></listitem>
<listitem><para>GPIO_Remap_PTP_PPS : Ethernet MAC PPS_PTS output on PB05 (only for Connectivity line devices) </para></listitem>
<listitem><para>GPIO_Remap_TIM15 : TIM15 Alternate Function mapping (only for Value line devices) </para></listitem>
<listitem><para>GPIO_Remap_TIM16 : TIM16 Alternate Function mapping (only for Value line devices) </para></listitem>
<listitem><para>GPIO_Remap_TIM17 : TIM17 Alternate Function mapping (only for Value line devices) </para></listitem>
<listitem><para>GPIO_Remap_CEC : CEC Alternate Function mapping (only for Value line devices) </para></listitem>
<listitem><para>GPIO_Remap_TIM1_DMA : TIM1 DMA requests mapping (only for Value line devices) </para></listitem>
<listitem><para>GPIO_Remap_TIM9 : TIM9 Alternate Function mapping (only for XL-density devices) </para></listitem>
<listitem><para>GPIO_Remap_TIM10 : TIM10 Alternate Function mapping (only for XL-density devices) </para></listitem>
<listitem><para>GPIO_Remap_TIM11 : TIM11 Alternate Function mapping (only for XL-density devices) </para></listitem>
<listitem><para>GPIO_Remap_TIM13 : TIM13 Alternate Function mapping (only for High density Value line and XL-density devices) </para></listitem>
<listitem><para>GPIO_Remap_TIM14 : TIM14 Alternate Function mapping (only for High density Value line and XL-density devices) </para></listitem>
<listitem><para>GPIO_Remap_FSMC_NADV : FSMC_NADV Alternate Function mapping (only for High density Value line and XL-density devices) </para></listitem>
<listitem><para>GPIO_Remap_TIM67_DAC_DMA : TIM6/TIM7 and DAC DMA requests remapping (only for High density Value line devices) </para></listitem>
<listitem><para>GPIO_Remap_TIM12 : TIM12 Alternate Function mapping (only for High density Value line devices) </para></listitem>
<listitem><para>GPIO_Remap_MISC : Miscellaneous Remap (DMA2 Channel5 Position and DAC Trigger remapping, only for High density Value line devices) </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NewState</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of the port pin remapping. This parameter can be: ENABLE or DISABLE. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_gpio.c" line="549" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_gpio.c" bodystart="549" bodyend="599"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___g_p_i_o___remap__define_1gaccf4664689f281fd4ee91ef16c9dc985" compoundref="stm32f10x__gpio_8h" startline="226">IS_GPIO_REMAP</references>
        <references refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" compoundref="stm32f10x_8h" startline="522">IS_FUNCTIONAL_STATE</references>
        <references refid="group___peripheral__declaration_1ga582e09473429414015b1de90cf767fa8" compoundref="stm32f10x_8h" startline="1406">AFIO</references>
        <references refid="group___g_p_i_o___private___defines_1gafa4eba58b1839413acb4591da00e7559" compoundref="stm32f10x__gpio_8c" startline="67">DBGAFR_POSITION_MASK</references>
        <references refid="group___g_p_i_o___private___defines_1ga338d54179ac0da2af2363e3a930bf374" compoundref="stm32f10x__gpio_8c" startline="66">LSB_MASK</references>
        <references refid="group___g_p_i_o___private___defines_1gaab83406f875057e96458940ca9519b7d" compoundref="stm32f10x__gpio_8c" startline="69">DBGAFR_LOCATION_MASK</references>
        <references refid="group___g_p_i_o___private___defines_1gaea2fa480dea4d6e061eaa1417a9196dc" compoundref="stm32f10x__gpio_8c" startline="70">DBGAFR_NUMBITS_MASK</references>
        <references refid="group___g_p_i_o___private___defines_1ga47a1cd3c0505a7be3e161671237d8460" compoundref="stm32f10x__gpio_8c" startline="68">DBGAFR_SWJCFG_MASK</references>
        <references refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1ad3a9df141be0ccf10389b640f492b26d" compoundref="stm32f10x_8h" startline="521">DISABLE</references>
      </memberdef>
      <memberdef kind="function" id="group___g_p_i_o___private___functions_1ga8c1f13646d7418827378032a584da653" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GPIO_EXTILineConfig</definition>
        <argsstring>(uint8_t GPIO_PortSource, uint8_t GPIO_PinSource)</argsstring>
        <name>GPIO_EXTILineConfig</name>
        <param>
          <type>uint8_t</type>
          <declname>GPIO_PortSource</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>GPIO_PinSource</declname>
        </param>
        <briefdescription>
<para>Selects the GPIO pin used as EXTI Line. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>GPIO_PortSource</parametername>
</parameternamelist>
<parameterdescription>
<para>selects the GPIO port to be used as source for EXTI lines. This parameter can be GPIO_PortSourceGPIOx where x can be (A..G). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>GPIO_PinSource</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the EXTI line to be configured. This parameter can be GPIO_PinSourcex where x can be (0..15). </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_gpio.c" line="609" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_gpio.c" bodystart="609" bodyend="619"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___g_p_i_o___port___sources_1ga53c3a469f6b286da38bc198acf25e8f1" compoundref="stm32f10x__gpio_8h" startline="270">IS_GPIO_EXTI_PORT_SOURCE</references>
        <references refid="group___g_p_i_o___pin__sources_1ga689e4e72591136b6a8d4df9d895181f7" compoundref="stm32f10x__gpio_8h" startline="303">IS_GPIO_PIN_SOURCE</references>
        <references refid="group___peripheral__declaration_1ga582e09473429414015b1de90cf767fa8" compoundref="stm32f10x_8h" startline="1406">AFIO</references>
      </memberdef>
      <memberdef kind="function" id="group___g_p_i_o___private___functions_1gacbfad958f684347be0f2c762dc85c3c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GPIO_ETH_MediaInterfaceConfig</definition>
        <argsstring>(uint32_t GPIO_ETH_MediaInterface)</argsstring>
        <name>GPIO_ETH_MediaInterfaceConfig</name>
        <param>
          <type>uint32_t</type>
          <declname>GPIO_ETH_MediaInterface</declname>
        </param>
        <briefdescription>
<para>Selects the Ethernet media interface. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This function applies only to STM32 Connectivity line devices. </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>GPIO_ETH_MediaInterface</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the Media Interface mode. This parameter can be one of the following values: <itemizedlist>
<listitem><para>GPIO_ETH_MediaInterface_MII: MII mode </para></listitem>
<listitem><para>GPIO_ETH_MediaInterface_RMII: RMII mode </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_gpio.c" line="630" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_gpio.c" bodystart="630" bodyend="636"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___ethernet___media___interface_1gaaba662c046aed61cb28aa10918bfd4c4" compoundref="stm32f10x__gpio_8h" startline="330">IS_GPIO_ETH_MEDIA_INTERFACE</references>
        <references refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" compoundref="core__cm0_8h" startline="221">__IO</references>
        <references refid="group___g_p_i_o___private___defines_1ga00e75433e8a45d7a55c021397cb85aa9" compoundref="stm32f10x__gpio_8c" startline="62">MAPR_MII_RMII_SEL_BB</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This file provides all the GPIO firmware functions. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>MCD Application Team </para></simplesect>
<simplesect kind="version"><para>V3.5.0 </para></simplesect>
<simplesect kind="date"><para>11-March-2011 </para></simplesect>
<simplesect kind="attention"><para></para></simplesect>
THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.</para><para><heading level="2"><center><copy/> COPYRIGHT 2011 STMicroelectronics</center></heading>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="22"><highlight class="comment">/*<sp/>Includes<sp/>------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="stm32f10x__gpio_8h" kindref="compound">stm32f10x_gpio.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="stm32f10x__rcc_8h" kindref="compound">stm32f10x_rcc.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="comment">/*<sp/>------------<sp/>RCC<sp/>registers<sp/>bit<sp/>address<sp/>in<sp/>the<sp/>alias<sp/>region<sp/>----------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="group___g_p_i_o___private___defines_1ga0ecdd0dd5180e1ee385c22f66a2cd660" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AFIO_OFFSET<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(AFIO_BASE<sp/>-<sp/>PERIPH_BASE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>---<sp/>EVENTCR<sp/>Register<sp/>-----*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Alias<sp/>word<sp/>address<sp/>of<sp/>EVOE<sp/>bit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="group___g_p_i_o___private___defines_1gaf8c24f39392c89142f1b97a418669d5d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EVCR_OFFSET<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(AFIO_OFFSET<sp/>+<sp/>0x00)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="group___g_p_i_o___private___defines_1ga8e4fdee57fe3447cdbc5d00ccab60c18" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EVOE_BitNumber<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)0x07)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="group___g_p_i_o___private___defines_1ga6e4f8c4e3def38811ac6c03b4f64240b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EVCR_EVOE_BB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(PERIPH_BB_BASE<sp/>+<sp/>(EVCR_OFFSET<sp/>*<sp/>32)<sp/>+<sp/>(EVOE_BitNumber<sp/>*<sp/>4))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>---<sp/><sp/>MAPR<sp/>Register<sp/>---*/</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Alias<sp/>word<sp/>address<sp/>of<sp/>MII_RMII_SEL<sp/>bit<sp/>*/</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="60" refid="group___g_p_i_o___private___defines_1ga472f80f63d09e365d283675f3466c8a1" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAPR_OFFSET<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(AFIO_OFFSET<sp/>+<sp/>0x04)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="group___g_p_i_o___private___defines_1gad4a9bbd669109039291f942d923ff8ae" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MII_RMII_SEL_BitNumber<sp/><sp/><sp/><sp/><sp/><sp/>((u8)0x17)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="group___g_p_i_o___private___defines_1ga00e75433e8a45d7a55c021397cb85aa9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAPR_MII_RMII_SEL_BB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(PERIPH_BB_BASE<sp/>+<sp/>(MAPR_OFFSET<sp/>*<sp/>32)<sp/>+<sp/>(MII_RMII_SEL_BitNumber<sp/>*<sp/>4))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="group___g_p_i_o___private___defines_1ga97d20e77a588a767e1a775dd4299d1c5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EVCR_PORTPINCONFIG_MASK<sp/><sp/><sp/><sp/><sp/>((uint16_t)0xFF80)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="group___g_p_i_o___private___defines_1ga338d54179ac0da2af2363e3a930bf374" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LSB_MASK<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint16_t)0xFFFF)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="group___g_p_i_o___private___defines_1gafa4eba58b1839413acb4591da00e7559" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DBGAFR_POSITION_MASK<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x000F0000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="group___g_p_i_o___private___defines_1ga47a1cd3c0505a7be3e161671237d8460" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DBGAFR_SWJCFG_MASK<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0xF0FFFFFF)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="group___g_p_i_o___private___defines_1gaab83406f875057e96458940ca9519b7d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DBGAFR_LOCATION_MASK<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00200000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="group___g_p_i_o___private___defines_1gaea2fa480dea4d6e061eaa1417a9196dc" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DBGAFR_NUMBITS_MASK<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00100000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="108" refid="group___g_p_i_o___private___functions_1gaa60bdf3182c44b5fa818f237042f52ee" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___g_p_i_o___private___functions_1gaa60bdf3182c44b5fa818f237042f52ee" kindref="member">GPIO_DeInit</ref>(<ref refid="struct_g_p_i_o___type_def" kindref="compound">GPIO_TypeDef</ref>*<sp/>GPIOx)</highlight></codeline>
<codeline lineno="109"><highlight class="normal">{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___g_p_i_o___exported___types_1ga68b2a1f0b05c13978217db5439c7f790" kindref="member">IS_GPIO_ALL_PERIPH</ref>(GPIOx));</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(GPIOx<sp/>==<sp/><ref refid="group___peripheral__declaration_1gac485358099728ddae050db37924dd6b7" kindref="member">GPIOA</ref>)</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___r_c_c___exported___functions_1gad94553850ac07106a27ee85fec37efdf" kindref="member">RCC_APB2PeriphResetCmd</ref>(<ref refid="group___a_p_b2__peripheral_1ga44b92fbf2e288796b1acbce2708f3636" kindref="member">RCC_APB2Periph_GPIOA</ref>,<sp/><ref refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1a7d46875fa3ebd2c34d2756950eda83bf" kindref="member">ENABLE</ref>);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___r_c_c___exported___functions_1gad94553850ac07106a27ee85fec37efdf" kindref="member">RCC_APB2PeriphResetCmd</ref>(<ref refid="group___a_p_b2__peripheral_1ga44b92fbf2e288796b1acbce2708f3636" kindref="member">RCC_APB2Periph_GPIOA</ref>,<sp/><ref refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1ad3a9df141be0ccf10389b640f492b26d" kindref="member">DISABLE</ref>);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(GPIOx<sp/>==<sp/><ref refid="group___peripheral__declaration_1ga68b66ac73be4c836db878a42e1fea3cd" kindref="member">GPIOB</ref>)</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___r_c_c___exported___functions_1gad94553850ac07106a27ee85fec37efdf" kindref="member">RCC_APB2PeriphResetCmd</ref>(<ref refid="group___a_p_b2__peripheral_1ga8c8909c3640508e9ce31dff80010a6dd" kindref="member">RCC_APB2Periph_GPIOB</ref>,<sp/><ref refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1a7d46875fa3ebd2c34d2756950eda83bf" kindref="member">ENABLE</ref>);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___r_c_c___exported___functions_1gad94553850ac07106a27ee85fec37efdf" kindref="member">RCC_APB2PeriphResetCmd</ref>(<ref refid="group___a_p_b2__peripheral_1ga8c8909c3640508e9ce31dff80010a6dd" kindref="member">RCC_APB2Periph_GPIOB</ref>,<sp/><ref refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1ad3a9df141be0ccf10389b640f492b26d" kindref="member">DISABLE</ref>);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(GPIOx<sp/>==<sp/><ref refid="group___peripheral__declaration_1ga2dca03332d620196ba943bc2346eaa08" kindref="member">GPIOC</ref>)</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___r_c_c___exported___functions_1gad94553850ac07106a27ee85fec37efdf" kindref="member">RCC_APB2PeriphResetCmd</ref>(<ref refid="group___a_p_b2__peripheral_1gaf1f4b467becee1ff31ba2c54328a0115" kindref="member">RCC_APB2Periph_GPIOC</ref>,<sp/><ref refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1a7d46875fa3ebd2c34d2756950eda83bf" kindref="member">ENABLE</ref>);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___r_c_c___exported___functions_1gad94553850ac07106a27ee85fec37efdf" kindref="member">RCC_APB2PeriphResetCmd</ref>(<ref refid="group___a_p_b2__peripheral_1gaf1f4b467becee1ff31ba2c54328a0115" kindref="member">RCC_APB2Periph_GPIOC</ref>,<sp/><ref refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1ad3a9df141be0ccf10389b640f492b26d" kindref="member">DISABLE</ref>);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(GPIOx<sp/>==<sp/><ref refid="group___peripheral__declaration_1ga7580b1a929ea9df59725ba9c18eba6ac" kindref="member">GPIOD</ref>)</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___r_c_c___exported___functions_1gad94553850ac07106a27ee85fec37efdf" kindref="member">RCC_APB2PeriphResetCmd</ref>(<ref refid="group___a_p_b2__peripheral_1ga177200a365084af306e98389edeba42b" kindref="member">RCC_APB2Periph_GPIOD</ref>,<sp/><ref refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1a7d46875fa3ebd2c34d2756950eda83bf" kindref="member">ENABLE</ref>);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___r_c_c___exported___functions_1gad94553850ac07106a27ee85fec37efdf" kindref="member">RCC_APB2PeriphResetCmd</ref>(<ref refid="group___a_p_b2__peripheral_1ga177200a365084af306e98389edeba42b" kindref="member">RCC_APB2Periph_GPIOD</ref>,<sp/><ref refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1ad3a9df141be0ccf10389b640f492b26d" kindref="member">DISABLE</ref>);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/>}<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(GPIOx<sp/>==<sp/><ref refid="group___peripheral__declaration_1gae04bdb5e8acc47cab1d0532e6b0d0763" kindref="member">GPIOE</ref>)</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___r_c_c___exported___functions_1gad94553850ac07106a27ee85fec37efdf" kindref="member">RCC_APB2PeriphResetCmd</ref>(<ref refid="group___a_p_b2__peripheral_1gabc736c9892278ccd15848c6137d991fc" kindref="member">RCC_APB2Periph_GPIOE</ref>,<sp/><ref refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1a7d46875fa3ebd2c34d2756950eda83bf" kindref="member">ENABLE</ref>);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___r_c_c___exported___functions_1gad94553850ac07106a27ee85fec37efdf" kindref="member">RCC_APB2PeriphResetCmd</ref>(<ref refid="group___a_p_b2__peripheral_1gabc736c9892278ccd15848c6137d991fc" kindref="member">RCC_APB2Periph_GPIOE</ref>,<sp/><ref refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1ad3a9df141be0ccf10389b640f492b26d" kindref="member">DISABLE</ref>);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(GPIOx<sp/>==<sp/><ref refid="group___peripheral__declaration_1ga43c3022dede7c9db7a58d3c3409dbc8d" kindref="member">GPIOF</ref>)</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___r_c_c___exported___functions_1gad94553850ac07106a27ee85fec37efdf" kindref="member">RCC_APB2PeriphResetCmd</ref>(<ref refid="group___a_p_b2__peripheral_1ga2dbb1e1116b57621c585e1b52c894bda" kindref="member">RCC_APB2Periph_GPIOF</ref>,<sp/><ref refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1a7d46875fa3ebd2c34d2756950eda83bf" kindref="member">ENABLE</ref>);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___r_c_c___exported___functions_1gad94553850ac07106a27ee85fec37efdf" kindref="member">RCC_APB2PeriphResetCmd</ref>(<ref refid="group___a_p_b2__peripheral_1ga2dbb1e1116b57621c585e1b52c894bda" kindref="member">RCC_APB2Periph_GPIOF</ref>,<sp/><ref refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1ad3a9df141be0ccf10389b640f492b26d" kindref="member">DISABLE</ref>);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(GPIOx<sp/>==<sp/><ref refid="group___peripheral__declaration_1ga02a2a23a32f9b02166a8c64012842414" kindref="member">GPIOG</ref>)</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_c_c___exported___functions_1gad94553850ac07106a27ee85fec37efdf" kindref="member">RCC_APB2PeriphResetCmd</ref>(<ref refid="group___a_p_b2__peripheral_1gaba82756d2060b97c62eb555242361b2e" kindref="member">RCC_APB2Periph_GPIOG</ref>,<sp/><ref refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1a7d46875fa3ebd2c34d2756950eda83bf" kindref="member">ENABLE</ref>);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_c_c___exported___functions_1gad94553850ac07106a27ee85fec37efdf" kindref="member">RCC_APB2PeriphResetCmd</ref>(<ref refid="group___a_p_b2__peripheral_1gaba82756d2060b97c62eb555242361b2e" kindref="member">RCC_APB2Periph_GPIOG</ref>,<sp/><ref refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1ad3a9df141be0ccf10389b640f492b26d" kindref="member">DISABLE</ref>);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal">}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="159" refid="group___g_p_i_o___private___functions_1ga7f645e6b6146818c3d6c19021e70170c" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___g_p_i_o___private___functions_1ga7f645e6b6146818c3d6c19021e70170c" kindref="member">GPIO_AFIODeInit</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="160"><highlight class="normal">{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><ref refid="group___r_c_c___exported___functions_1gad94553850ac07106a27ee85fec37efdf" kindref="member">RCC_APB2PeriphResetCmd</ref>(<ref refid="group___a_p_b2__peripheral_1ga5aa9469879ffa019d4836b0d297104c5" kindref="member">RCC_APB2Periph_AFIO</ref>,<sp/><ref refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1a7d46875fa3ebd2c34d2756950eda83bf" kindref="member">ENABLE</ref>);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><ref refid="group___r_c_c___exported___functions_1gad94553850ac07106a27ee85fec37efdf" kindref="member">RCC_APB2PeriphResetCmd</ref>(<ref refid="group___a_p_b2__peripheral_1ga5aa9469879ffa019d4836b0d297104c5" kindref="member">RCC_APB2Periph_AFIO</ref>,<sp/><ref refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1ad3a9df141be0ccf10389b640f492b26d" kindref="member">DISABLE</ref>);</highlight></codeline>
<codeline lineno="163"><highlight class="normal">}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="173" refid="group___g_p_i_o___private___functions_1ga71abf9404261370d03cca449b88d3a65" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___g_p_i_o___private___functions_1ga71abf9404261370d03cca449b88d3a65" kindref="member">GPIO_Init</ref>(<ref refid="struct_g_p_i_o___type_def" kindref="compound">GPIO_TypeDef</ref>*<sp/>GPIOx,<sp/><ref refid="struct_g_p_i_o___init_type_def" kindref="compound">GPIO_InitTypeDef</ref>*<sp/>GPIO_InitStruct)</highlight></codeline>
<codeline lineno="174"><highlight class="normal">{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/>uint32_t<sp/>currentmode<sp/>=<sp/>0x00,<sp/>currentpin<sp/>=<sp/>0x00,<sp/>pinpos<sp/>=<sp/>0x00,<sp/>pos<sp/>=<sp/>0x00;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/>uint32_t<sp/>tmpreg<sp/>=<sp/>0x00,<sp/>pinmask<sp/>=<sp/>0x00;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___g_p_i_o___exported___types_1ga68b2a1f0b05c13978217db5439c7f790" kindref="member">IS_GPIO_ALL_PERIPH</ref>(GPIOx));</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___g_p_i_o___exported___types_1gacc5fde3eef57ec3c558c11d0011d900c" kindref="member">IS_GPIO_MODE</ref>(GPIO_InitStruct-&gt;<ref refid="struct_g_p_i_o___init_type_def_1a55bd77e335c2bfeec9caa5dc922b791b" kindref="member">GPIO_Mode</ref>));</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___g_p_i_o__pins__define_1gad6ec74e33360395535ad5d91ba6d4781" kindref="member">IS_GPIO_PIN</ref>(GPIO_InitStruct-&gt;<ref refid="struct_g_p_i_o___init_type_def_1a35fc26fc58226126c5b99478a472e5e9" kindref="member">GPIO_Pin</ref>));<sp/><sp/></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="comment">/*----------------------------<sp/>GPIO<sp/>Mode<sp/>Configuration<sp/>-----------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/>currentmode<sp/>=<sp/>((uint32_t)GPIO_InitStruct-&gt;<ref refid="struct_g_p_i_o___init_type_def_1a55bd77e335c2bfeec9caa5dc922b791b" kindref="member">GPIO_Mode</ref>)<sp/>&amp;<sp/>((uint32_t)0x0F);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((((uint32_t)GPIO_InitStruct-&gt;<ref refid="struct_g_p_i_o___init_type_def_1a55bd77e335c2bfeec9caa5dc922b791b" kindref="member">GPIO_Mode</ref>)<sp/>&amp;<sp/>((uint32_t)0x10))<sp/>!=<sp/>0x00)</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/>{<sp/></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___g_p_i_o___exported___types_1ga888e1f951df2fe9dbf827528051a3a56" kindref="member">IS_GPIO_SPEED</ref>(GPIO_InitStruct-&gt;<ref refid="struct_g_p_i_o___init_type_def_1ac05832cacebc861a9acf5294d702c16b" kindref="member">GPIO_Speed</ref>));</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Output<sp/>mode<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>currentmode<sp/>|=<sp/>(uint32_t)GPIO_InitStruct-&gt;<ref refid="struct_g_p_i_o___init_type_def_1ac05832cacebc861a9acf5294d702c16b" kindref="member">GPIO_Speed</ref>;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="comment">/*----------------------------<sp/>GPIO<sp/>CRL<sp/>Configuration<sp/>------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Configure<sp/>the<sp/>eight<sp/>low<sp/>port<sp/>pins<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((uint32_t)GPIO_InitStruct-&gt;<ref refid="struct_g_p_i_o___init_type_def_1a35fc26fc58226126c5b99478a472e5e9" kindref="member">GPIO_Pin</ref><sp/>&amp;<sp/>((uint32_t)0x00FF))<sp/>!=<sp/>0x00)</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>tmpreg<sp/>=<sp/>GPIOx-&gt;<ref refid="struct_g_p_i_o___type_def_1a218d21e9ca712cec4ca8f00406b2ec29" kindref="member">CRL</ref>;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(pinpos<sp/>=<sp/>0x00;<sp/>pinpos<sp/>&lt;<sp/>0x08;<sp/>pinpos++)</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/>=<sp/>((uint32_t)0x01)<sp/>&lt;&lt;<sp/>pinpos;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>the<sp/>port<sp/>pins<sp/>position<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>currentpin<sp/>=<sp/>(GPIO_InitStruct-&gt;<ref refid="struct_g_p_i_o___init_type_def_1a35fc26fc58226126c5b99478a472e5e9" kindref="member">GPIO_Pin</ref>)<sp/>&amp;<sp/>pos;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(currentpin<sp/>==<sp/>pos)</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/>=<sp/>pinpos<sp/>&lt;&lt;<sp/>2;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Clear<sp/>the<sp/>corresponding<sp/>low<sp/>control<sp/>register<sp/>bits<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pinmask<sp/>=<sp/>((uint32_t)0x0F)<sp/>&lt;&lt;<sp/>pos;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpreg<sp/>&amp;=<sp/>~pinmask;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Write<sp/>the<sp/>mode<sp/>configuration<sp/>in<sp/>the<sp/>corresponding<sp/>bits<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpreg<sp/>|=<sp/>(currentmode<sp/>&lt;&lt;<sp/>pos);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>the<sp/>corresponding<sp/>ODR<sp/>bit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(GPIO_InitStruct-&gt;<ref refid="struct_g_p_i_o___init_type_def_1a55bd77e335c2bfeec9caa5dc922b791b" kindref="member">GPIO_Mode</ref><sp/>==<sp/><ref refid="group___g_p_i_o___exported___types_1gga1347339e1c84a196fabbb31205eec5d4ad5b7c382c280d0b14786aa7e0af783dc" kindref="member">GPIO_Mode_IPD</ref>)</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GPIOx-&gt;<ref refid="struct_g_p_i_o___type_def_1aab918bfbfae459789db1fd0b220c7f21" kindref="member">BRR</ref><sp/>=<sp/>(((uint32_t)0x01)<sp/>&lt;&lt;<sp/>pinpos);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>the<sp/>corresponding<sp/>ODR<sp/>bit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(GPIO_InitStruct-&gt;<ref refid="struct_g_p_i_o___init_type_def_1a55bd77e335c2bfeec9caa5dc922b791b" kindref="member">GPIO_Mode</ref><sp/>==<sp/><ref refid="group___g_p_i_o___exported___types_1gga1347339e1c84a196fabbb31205eec5d4adc5187fa416ea708ee4cb445ef2c59e7" kindref="member">GPIO_Mode_IPU</ref>)</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GPIOx-&gt;<ref refid="struct_g_p_i_o___type_def_1acd6f21e08912b484c030ca8b18e11cd6" kindref="member">BSRR</ref><sp/>=<sp/>(((uint32_t)0x01)<sp/>&lt;&lt;<sp/>pinpos);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>GPIOx-&gt;<ref refid="struct_g_p_i_o___type_def_1a218d21e9ca712cec4ca8f00406b2ec29" kindref="member">CRL</ref><sp/>=<sp/>tmpreg;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="comment">/*----------------------------<sp/>GPIO<sp/>CRH<sp/>Configuration<sp/>------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Configure<sp/>the<sp/>eight<sp/>high<sp/>port<sp/>pins<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(GPIO_InitStruct-&gt;<ref refid="struct_g_p_i_o___init_type_def_1a35fc26fc58226126c5b99478a472e5e9" kindref="member">GPIO_Pin</ref><sp/>&gt;<sp/>0x00FF)</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>tmpreg<sp/>=<sp/>GPIOx-&gt;<ref refid="struct_g_p_i_o___type_def_1afe53502a3dbf9e7dcf9ac83f67ac481d" kindref="member">CRH</ref>;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(pinpos<sp/>=<sp/>0x00;<sp/>pinpos<sp/>&lt;<sp/>0x08;<sp/>pinpos++)</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/>=<sp/>(((uint32_t)0x01)<sp/>&lt;&lt;<sp/>(pinpos<sp/>+<sp/>0x08));</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>the<sp/>port<sp/>pins<sp/>position<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>currentpin<sp/>=<sp/>((GPIO_InitStruct-&gt;<ref refid="struct_g_p_i_o___init_type_def_1a35fc26fc58226126c5b99478a472e5e9" kindref="member">GPIO_Pin</ref>)<sp/>&amp;<sp/>pos);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(currentpin<sp/>==<sp/>pos)</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/>=<sp/>pinpos<sp/>&lt;&lt;<sp/>2;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Clear<sp/>the<sp/>corresponding<sp/>high<sp/>control<sp/>register<sp/>bits<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pinmask<sp/>=<sp/>((uint32_t)0x0F)<sp/>&lt;&lt;<sp/>pos;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpreg<sp/>&amp;=<sp/>~pinmask;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Write<sp/>the<sp/>mode<sp/>configuration<sp/>in<sp/>the<sp/>corresponding<sp/>bits<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpreg<sp/>|=<sp/>(currentmode<sp/>&lt;&lt;<sp/>pos);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>the<sp/>corresponding<sp/>ODR<sp/>bit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(GPIO_InitStruct-&gt;<ref refid="struct_g_p_i_o___init_type_def_1a55bd77e335c2bfeec9caa5dc922b791b" kindref="member">GPIO_Mode</ref><sp/>==<sp/><ref refid="group___g_p_i_o___exported___types_1gga1347339e1c84a196fabbb31205eec5d4ad5b7c382c280d0b14786aa7e0af783dc" kindref="member">GPIO_Mode_IPD</ref>)</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GPIOx-&gt;<ref refid="struct_g_p_i_o___type_def_1aab918bfbfae459789db1fd0b220c7f21" kindref="member">BRR</ref><sp/>=<sp/>(((uint32_t)0x01)<sp/>&lt;&lt;<sp/>(pinpos<sp/>+<sp/>0x08));</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>the<sp/>corresponding<sp/>ODR<sp/>bit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(GPIO_InitStruct-&gt;<ref refid="struct_g_p_i_o___init_type_def_1a55bd77e335c2bfeec9caa5dc922b791b" kindref="member">GPIO_Mode</ref><sp/>==<sp/><ref refid="group___g_p_i_o___exported___types_1gga1347339e1c84a196fabbb31205eec5d4adc5187fa416ea708ee4cb445ef2c59e7" kindref="member">GPIO_Mode_IPU</ref>)</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GPIOx-&gt;<ref refid="struct_g_p_i_o___type_def_1acd6f21e08912b484c030ca8b18e11cd6" kindref="member">BSRR</ref><sp/>=<sp/>(((uint32_t)0x01)<sp/>&lt;&lt;<sp/>(pinpos<sp/>+<sp/>0x08));</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>GPIOx-&gt;<ref refid="struct_g_p_i_o___type_def_1afe53502a3dbf9e7dcf9ac83f67ac481d" kindref="member">CRH</ref><sp/>=<sp/>tmpreg;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="258"><highlight class="normal">}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="266" refid="group___g_p_i_o___private___functions_1gab28de41278e7f8c63d0851e2733b10df" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___g_p_i_o___private___functions_1gab28de41278e7f8c63d0851e2733b10df" kindref="member">GPIO_StructInit</ref>(<ref refid="struct_g_p_i_o___init_type_def" kindref="compound">GPIO_InitTypeDef</ref>*<sp/>GPIO_InitStruct)</highlight></codeline>
<codeline lineno="267"><highlight class="normal">{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>GPIO<sp/>init<sp/>structure<sp/>parameters<sp/>values<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/>GPIO_InitStruct-&gt;<ref refid="struct_g_p_i_o___init_type_def_1a35fc26fc58226126c5b99478a472e5e9" kindref="member">GPIO_Pin</ref><sp/><sp/>=<sp/><ref refid="group___g_p_i_o__pins__define_1gaba3e915ddca17a1211edc07b7fd97e8b" kindref="member">GPIO_Pin_All</ref>;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/>GPIO_InitStruct-&gt;<ref refid="struct_g_p_i_o___init_type_def_1ac05832cacebc861a9acf5294d702c16b" kindref="member">GPIO_Speed</ref><sp/>=<sp/><ref refid="group___g_p_i_o___exported___types_1gga062ad92b67b4a1f301c161022cf3ba8ea9bff9e174639332007c914483361be18" kindref="member">GPIO_Speed_2MHz</ref>;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/>GPIO_InitStruct-&gt;<ref refid="struct_g_p_i_o___init_type_def_1a55bd77e335c2bfeec9caa5dc922b791b" kindref="member">GPIO_Mode</ref><sp/>=<sp/><ref refid="group___g_p_i_o___exported___types_1gga1347339e1c84a196fabbb31205eec5d4a0e3d2ce89b42f093d327a5e42e4d7cc2" kindref="member">GPIO_Mode_IN_FLOATING</ref>;</highlight></codeline>
<codeline lineno="272"><highlight class="normal">}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="281" refid="group___g_p_i_o___private___functions_1ga98772ef6b639b3fa06c8ae5ba28d3aaa" refkind="member"><highlight class="normal">uint8_t<sp/><ref refid="group___g_p_i_o___private___functions_1ga98772ef6b639b3fa06c8ae5ba28d3aaa" kindref="member">GPIO_ReadInputDataBit</ref>(<ref refid="struct_g_p_i_o___type_def" kindref="compound">GPIO_TypeDef</ref>*<sp/>GPIOx,<sp/>uint16_t<sp/>GPIO_Pin)</highlight></codeline>
<codeline lineno="282"><highlight class="normal">{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/>uint8_t<sp/>bitstatus<sp/>=<sp/>0x00;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___g_p_i_o___exported___types_1ga68b2a1f0b05c13978217db5439c7f790" kindref="member">IS_GPIO_ALL_PERIPH</ref>(GPIOx));</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___g_p_i_o__pins__define_1gaddf7154b7f30b7c0a70f3aeaff5ddffc" kindref="member">IS_GET_GPIO_PIN</ref>(GPIO_Pin));<sp/></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((GPIOx-&gt;<ref refid="struct_g_p_i_o___type_def_1acf11156409414ad8841bb0b62959ee96" kindref="member">IDR</ref><sp/>&amp;<sp/>GPIO_Pin)<sp/>!=<sp/>(uint32_t)<ref refid="group___g_p_i_o___exported___types_1gga176130b21c0e719121470a6042d4cf19ae2c026f2b44a949f82a65f3385edef09" kindref="member">Bit_RESET</ref>)</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>bitstatus<sp/>=<sp/>(uint8_t)<ref refid="group___g_p_i_o___exported___types_1gga176130b21c0e719121470a6042d4cf19a3c477841a6ceec13fe47ef322432b992" kindref="member">Bit_SET</ref>;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>bitstatus<sp/>=<sp/>(uint8_t)Bit_RESET;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bitstatus;</highlight></codeline>
<codeline lineno="298"><highlight class="normal">}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="305" refid="group___g_p_i_o___private___functions_1ga139a33adc8409288e9f193bbebb5a0f7" refkind="member"><highlight class="normal">uint16_t<sp/><ref refid="group___g_p_i_o___private___functions_1ga139a33adc8409288e9f193bbebb5a0f7" kindref="member">GPIO_ReadInputData</ref>(<ref refid="struct_g_p_i_o___type_def" kindref="compound">GPIO_TypeDef</ref>*<sp/>GPIOx)</highlight></codeline>
<codeline lineno="306"><highlight class="normal">{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___g_p_i_o___exported___types_1ga68b2a1f0b05c13978217db5439c7f790" kindref="member">IS_GPIO_ALL_PERIPH</ref>(GPIOx));</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((uint16_t)GPIOx-&gt;<ref refid="struct_g_p_i_o___type_def_1acf11156409414ad8841bb0b62959ee96" kindref="member">IDR</ref>);</highlight></codeline>
<codeline lineno="311"><highlight class="normal">}</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="320" refid="group___g_p_i_o___private___functions_1ga138270f8695b105b7c6ed405792919c1" refkind="member"><highlight class="normal">uint8_t<sp/><ref refid="group___g_p_i_o___private___functions_1ga138270f8695b105b7c6ed405792919c1" kindref="member">GPIO_ReadOutputDataBit</ref>(<ref refid="struct_g_p_i_o___type_def" kindref="compound">GPIO_TypeDef</ref>*<sp/>GPIOx,<sp/>uint16_t<sp/>GPIO_Pin)</highlight></codeline>
<codeline lineno="321"><highlight class="normal">{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/>uint8_t<sp/>bitstatus<sp/>=<sp/>0x00;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___g_p_i_o___exported___types_1ga68b2a1f0b05c13978217db5439c7f790" kindref="member">IS_GPIO_ALL_PERIPH</ref>(GPIOx));</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___g_p_i_o__pins__define_1gaddf7154b7f30b7c0a70f3aeaff5ddffc" kindref="member">IS_GET_GPIO_PIN</ref>(GPIO_Pin));<sp/></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((GPIOx-&gt;<ref refid="struct_g_p_i_o___type_def_1a6fb78f4a978a36032cdeac93ac3c9c8b" kindref="member">ODR</ref><sp/>&amp;<sp/>GPIO_Pin)<sp/>!=<sp/>(uint32_t)<ref refid="group___g_p_i_o___exported___types_1gga176130b21c0e719121470a6042d4cf19ae2c026f2b44a949f82a65f3385edef09" kindref="member">Bit_RESET</ref>)</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>bitstatus<sp/>=<sp/>(uint8_t)<ref refid="group___g_p_i_o___exported___types_1gga176130b21c0e719121470a6042d4cf19a3c477841a6ceec13fe47ef322432b992" kindref="member">Bit_SET</ref>;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>bitstatus<sp/>=<sp/>(uint8_t)Bit_RESET;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bitstatus;</highlight></codeline>
<codeline lineno="336"><highlight class="normal">}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="343" refid="group___g_p_i_o___private___functions_1gaf8938a34280b7dc3e39872a7c17bb323" refkind="member"><highlight class="normal">uint16_t<sp/><ref refid="group___g_p_i_o___private___functions_1gaf8938a34280b7dc3e39872a7c17bb323" kindref="member">GPIO_ReadOutputData</ref>(<ref refid="struct_g_p_i_o___type_def" kindref="compound">GPIO_TypeDef</ref>*<sp/>GPIOx)</highlight></codeline>
<codeline lineno="344"><highlight class="normal">{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___g_p_i_o___exported___types_1ga68b2a1f0b05c13978217db5439c7f790" kindref="member">IS_GPIO_ALL_PERIPH</ref>(GPIOx));</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((uint16_t)GPIOx-&gt;<ref refid="struct_g_p_i_o___type_def_1a6fb78f4a978a36032cdeac93ac3c9c8b" kindref="member">ODR</ref>);</highlight></codeline>
<codeline lineno="349"><highlight class="normal">}</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="358" refid="group___g_p_i_o___private___functions_1ga9e1352eed7c6620e18af2d86f6b6ff8e" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___g_p_i_o___private___functions_1ga9e1352eed7c6620e18af2d86f6b6ff8e" kindref="member">GPIO_SetBits</ref>(<ref refid="struct_g_p_i_o___type_def" kindref="compound">GPIO_TypeDef</ref>*<sp/>GPIOx,<sp/>uint16_t<sp/>GPIO_Pin)</highlight></codeline>
<codeline lineno="359"><highlight class="normal">{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___g_p_i_o___exported___types_1ga68b2a1f0b05c13978217db5439c7f790" kindref="member">IS_GPIO_ALL_PERIPH</ref>(GPIOx));</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___g_p_i_o__pins__define_1gad6ec74e33360395535ad5d91ba6d4781" kindref="member">IS_GPIO_PIN</ref>(GPIO_Pin));</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/>GPIOx-&gt;<ref refid="struct_g_p_i_o___type_def_1acd6f21e08912b484c030ca8b18e11cd6" kindref="member">BSRR</ref><sp/>=<sp/>GPIO_Pin;</highlight></codeline>
<codeline lineno="365"><highlight class="normal">}</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="374" refid="group___g_p_i_o___private___functions_1ga6fcd35b207a66608dd2c9d7de9247dc8" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___g_p_i_o___private___functions_1ga6fcd35b207a66608dd2c9d7de9247dc8" kindref="member">GPIO_ResetBits</ref>(<ref refid="struct_g_p_i_o___type_def" kindref="compound">GPIO_TypeDef</ref>*<sp/>GPIOx,<sp/>uint16_t<sp/>GPIO_Pin)</highlight></codeline>
<codeline lineno="375"><highlight class="normal">{</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___g_p_i_o___exported___types_1ga68b2a1f0b05c13978217db5439c7f790" kindref="member">IS_GPIO_ALL_PERIPH</ref>(GPIOx));</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___g_p_i_o__pins__define_1gad6ec74e33360395535ad5d91ba6d4781" kindref="member">IS_GPIO_PIN</ref>(GPIO_Pin));</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/>GPIOx-&gt;<ref refid="struct_g_p_i_o___type_def_1aab918bfbfae459789db1fd0b220c7f21" kindref="member">BRR</ref><sp/>=<sp/>GPIO_Pin;</highlight></codeline>
<codeline lineno="381"><highlight class="normal">}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="394" refid="group___g_p_i_o___private___functions_1ga8f7b237fd744d9f7456fbe0da47a9b80" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___g_p_i_o___private___functions_1ga8f7b237fd744d9f7456fbe0da47a9b80" kindref="member">GPIO_WriteBit</ref>(<ref refid="struct_g_p_i_o___type_def" kindref="compound">GPIO_TypeDef</ref>*<sp/>GPIOx,<sp/>uint16_t<sp/>GPIO_Pin,<sp/><ref refid="group___g_p_i_o___exported___types_1ga176130b21c0e719121470a6042d4cf19" kindref="member">BitAction</ref><sp/>BitVal)</highlight></codeline>
<codeline lineno="395"><highlight class="normal">{</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___g_p_i_o___exported___types_1ga68b2a1f0b05c13978217db5439c7f790" kindref="member">IS_GPIO_ALL_PERIPH</ref>(GPIOx));</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___g_p_i_o__pins__define_1gaddf7154b7f30b7c0a70f3aeaff5ddffc" kindref="member">IS_GET_GPIO_PIN</ref>(GPIO_Pin));</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___g_p_i_o___exported___types_1ga6b882caa8ed9857c5c7267959a7818c5" kindref="member">IS_GPIO_BIT_ACTION</ref>(BitVal));<sp/></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(BitVal<sp/>!=<sp/><ref refid="group___g_p_i_o___exported___types_1gga176130b21c0e719121470a6042d4cf19ae2c026f2b44a949f82a65f3385edef09" kindref="member">Bit_RESET</ref>)</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>GPIOx-&gt;<ref refid="struct_g_p_i_o___type_def_1acd6f21e08912b484c030ca8b18e11cd6" kindref="member">BSRR</ref><sp/>=<sp/>GPIO_Pin;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>GPIOx-&gt;<ref refid="struct_g_p_i_o___type_def_1aab918bfbfae459789db1fd0b220c7f21" kindref="member">BRR</ref><sp/>=<sp/>GPIO_Pin;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="409"><highlight class="normal">}</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="417" refid="group___g_p_i_o___private___functions_1gaa925f19c8547a00c7a0c269a84873bf9" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___g_p_i_o___private___functions_1gaa925f19c8547a00c7a0c269a84873bf9" kindref="member">GPIO_Write</ref>(<ref refid="struct_g_p_i_o___type_def" kindref="compound">GPIO_TypeDef</ref>*<sp/>GPIOx,<sp/>uint16_t<sp/>PortVal)</highlight></codeline>
<codeline lineno="418"><highlight class="normal">{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___g_p_i_o___exported___types_1ga68b2a1f0b05c13978217db5439c7f790" kindref="member">IS_GPIO_ALL_PERIPH</ref>(GPIOx));</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/>GPIOx-&gt;<ref refid="struct_g_p_i_o___type_def_1a6fb78f4a978a36032cdeac93ac3c9c8b" kindref="member">ODR</ref><sp/>=<sp/>PortVal;</highlight></codeline>
<codeline lineno="423"><highlight class="normal">}</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="432" refid="group___g_p_i_o___private___functions_1gad2f2e615928c69fd0d8c641a7cedaafc" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___g_p_i_o___private___functions_1gad2f2e615928c69fd0d8c641a7cedaafc" kindref="member">GPIO_PinLockConfig</ref>(<ref refid="struct_g_p_i_o___type_def" kindref="compound">GPIO_TypeDef</ref>*<sp/>GPIOx,<sp/>uint16_t<sp/>GPIO_Pin)</highlight></codeline>
<codeline lineno="433"><highlight class="normal">{</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/>uint32_t<sp/>tmp<sp/>=<sp/>0x00010000;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___g_p_i_o___exported___types_1ga68b2a1f0b05c13978217db5439c7f790" kindref="member">IS_GPIO_ALL_PERIPH</ref>(GPIOx));</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___g_p_i_o__pins__define_1gad6ec74e33360395535ad5d91ba6d4781" kindref="member">IS_GPIO_PIN</ref>(GPIO_Pin));</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/>tmp<sp/>|=<sp/>GPIO_Pin;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>LCKK<sp/>bit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/>GPIOx-&gt;<ref refid="struct_g_p_i_o___type_def_1a95a59d4b1d52be521f3246028be32f3e" kindref="member">LCKR</ref><sp/>=<sp/>tmp;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>LCKK<sp/>bit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/>GPIOx-&gt;<ref refid="struct_g_p_i_o___type_def_1a95a59d4b1d52be521f3246028be32f3e" kindref="member">LCKR</ref><sp/>=<sp/><sp/>GPIO_Pin;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>LCKK<sp/>bit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/>GPIOx-&gt;<ref refid="struct_g_p_i_o___type_def_1a95a59d4b1d52be521f3246028be32f3e" kindref="member">LCKR</ref><sp/>=<sp/>tmp;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Read<sp/>LCKK<sp/>bit*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/>tmp<sp/>=<sp/>GPIOx-&gt;<ref refid="struct_g_p_i_o___type_def_1a95a59d4b1d52be521f3246028be32f3e" kindref="member">LCKR</ref>;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Read<sp/>LCKK<sp/>bit*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/>tmp<sp/>=<sp/>GPIOx-&gt;<ref refid="struct_g_p_i_o___type_def_1a95a59d4b1d52be521f3246028be32f3e" kindref="member">LCKR</ref>;</highlight></codeline>
<codeline lineno="451"><highlight class="normal">}</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="462" refid="group___g_p_i_o___private___functions_1ga935f31ed7a86c6cb594cf34313b4b7af" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___g_p_i_o___private___functions_1ga935f31ed7a86c6cb594cf34313b4b7af" kindref="member">GPIO_EventOutputConfig</ref>(uint8_t<sp/>GPIO_PortSource,<sp/>uint8_t<sp/>GPIO_PinSource)</highlight></codeline>
<codeline lineno="463"><highlight class="normal">{</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/>uint32_t<sp/>tmpreg<sp/>=<sp/>0x00;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___g_p_i_o___port___sources_1ga40d86e5f9f013777038932f57bc6bbef" kindref="member">IS_GPIO_EVENTOUT_PORT_SOURCE</ref>(GPIO_PortSource));</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___g_p_i_o___pin__sources_1ga689e4e72591136b6a8d4df9d895181f7" kindref="member">IS_GPIO_PIN_SOURCE</ref>(GPIO_PinSource));</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/>tmpreg<sp/>=<sp/><ref refid="group___peripheral__declaration_1ga582e09473429414015b1de90cf767fa8" kindref="member">AFIO</ref>-&gt;EVCR;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Clear<sp/>the<sp/>PORT[6:4]<sp/>and<sp/>PIN[3:0]<sp/>bits<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/>tmpreg<sp/>&amp;=<sp/><ref refid="group___g_p_i_o___private___defines_1ga97d20e77a588a767e1a775dd4299d1c5" kindref="member">EVCR_PORTPINCONFIG_MASK</ref>;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/>tmpreg<sp/>|=<sp/>(uint32_t)GPIO_PortSource<sp/>&lt;&lt;<sp/>0x04;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/>tmpreg<sp/>|=<sp/>GPIO_PinSource;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><ref refid="group___peripheral__declaration_1ga582e09473429414015b1de90cf767fa8" kindref="member">AFIO</ref>-&gt;EVCR<sp/>=<sp/>tmpreg;</highlight></codeline>
<codeline lineno="475"><highlight class="normal">}</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="483" refid="group___g_p_i_o___private___functions_1gaf13ab3d59e467df44b492f1cdfe2f588" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___g_p_i_o___private___functions_1gaf13ab3d59e467df44b492f1cdfe2f588" kindref="member">GPIO_EventOutputCmd</ref>(<ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref><sp/>NewState)</highlight></codeline>
<codeline lineno="484"><highlight class="normal">{</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" kindref="member">IS_FUNCTIONAL_STATE</ref>(NewState));</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/>*(<ref refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" kindref="member">__IO</ref><sp/>uint32_t<sp/>*)<sp/><ref refid="group___g_p_i_o___private___defines_1ga6e4f8c4e3def38811ac6c03b4f64240b" kindref="member">EVCR_EVOE_BB</ref><sp/>=<sp/>(uint32_t)NewState;</highlight></codeline>
<codeline lineno="489"><highlight class="normal">}</highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight></codeline>
<codeline lineno="549" refid="group___g_p_i_o___private___functions_1ga64eb76f6211b840daf9829289df4208b" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___g_p_i_o___private___functions_1ga64eb76f6211b840daf9829289df4208b" kindref="member">GPIO_PinRemapConfig</ref>(uint32_t<sp/>GPIO_Remap,<sp/><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref><sp/>NewState)</highlight></codeline>
<codeline lineno="550"><highlight class="normal">{</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/>uint32_t<sp/>tmp<sp/>=<sp/>0x00,<sp/>tmp1<sp/>=<sp/>0x00,<sp/>tmpreg<sp/>=<sp/>0x00,<sp/>tmpmask<sp/>=<sp/>0x00;</highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___g_p_i_o___remap__define_1gaccf4664689f281fd4ee91ef16c9dc985" kindref="member">IS_GPIO_REMAP</ref>(GPIO_Remap));</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" kindref="member">IS_FUNCTIONAL_STATE</ref>(NewState));<sp/><sp/></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((GPIO_Remap<sp/>&amp;<sp/>0x80000000)<sp/>==<sp/>0x80000000)</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/>tmpreg<sp/>=<sp/><ref refid="group___peripheral__declaration_1ga582e09473429414015b1de90cf767fa8" kindref="member">AFIO</ref>-&gt;MAPR2;</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/>tmpreg<sp/>=<sp/><ref refid="group___peripheral__declaration_1ga582e09473429414015b1de90cf767fa8" kindref="member">AFIO</ref>-&gt;MAPR;</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/>tmpmask<sp/>=<sp/>(GPIO_Remap<sp/>&amp;<sp/><ref refid="group___g_p_i_o___private___defines_1gafa4eba58b1839413acb4591da00e7559" kindref="member">DBGAFR_POSITION_MASK</ref>)<sp/>&gt;&gt;<sp/>0x10;</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/>tmp<sp/>=<sp/>GPIO_Remap<sp/>&amp;<sp/><ref refid="group___g_p_i_o___private___defines_1ga338d54179ac0da2af2363e3a930bf374" kindref="member">LSB_MASK</ref>;</highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((GPIO_Remap<sp/>&amp;<sp/>(<ref refid="group___g_p_i_o___private___defines_1gaab83406f875057e96458940ca9519b7d" kindref="member">DBGAFR_LOCATION_MASK</ref><sp/>|<sp/><ref refid="group___g_p_i_o___private___defines_1gaea2fa480dea4d6e061eaa1417a9196dc" kindref="member">DBGAFR_NUMBITS_MASK</ref>))<sp/>==<sp/>(<ref refid="group___g_p_i_o___private___defines_1gaab83406f875057e96458940ca9519b7d" kindref="member">DBGAFR_LOCATION_MASK</ref><sp/>|<sp/><ref refid="group___g_p_i_o___private___defines_1gaea2fa480dea4d6e061eaa1417a9196dc" kindref="member">DBGAFR_NUMBITS_MASK</ref>))</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/>tmpreg<sp/>&amp;=<sp/><ref refid="group___g_p_i_o___private___defines_1ga47a1cd3c0505a7be3e161671237d8460" kindref="member">DBGAFR_SWJCFG_MASK</ref>;</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga582e09473429414015b1de90cf767fa8" kindref="member">AFIO</ref>-&gt;MAPR<sp/>&amp;=<sp/><ref refid="group___g_p_i_o___private___defines_1ga47a1cd3c0505a7be3e161671237d8460" kindref="member">DBGAFR_SWJCFG_MASK</ref>;</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((GPIO_Remap<sp/>&amp;<sp/><ref refid="group___g_p_i_o___private___defines_1gaea2fa480dea4d6e061eaa1417a9196dc" kindref="member">DBGAFR_NUMBITS_MASK</ref>)<sp/>==<sp/><ref refid="group___g_p_i_o___private___defines_1gaea2fa480dea4d6e061eaa1417a9196dc" kindref="member">DBGAFR_NUMBITS_MASK</ref>)</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp1<sp/>=<sp/>((uint32_t)0x03)<sp/>&lt;&lt;<sp/>tmpmask;</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/>tmpreg<sp/>&amp;=<sp/>~tmp1;</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/>tmpreg<sp/>|=<sp/>~<ref refid="group___g_p_i_o___private___defines_1ga47a1cd3c0505a7be3e161671237d8460" kindref="member">DBGAFR_SWJCFG_MASK</ref>;</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/>tmpreg<sp/>&amp;=<sp/>~(tmp<sp/>&lt;&lt;<sp/>((GPIO_Remap<sp/>&gt;&gt;<sp/>0x15)*0x10));</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/>tmpreg<sp/>|=<sp/>~<ref refid="group___g_p_i_o___private___defines_1ga47a1cd3c0505a7be3e161671237d8460" kindref="member">DBGAFR_SWJCFG_MASK</ref>;</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(NewState<sp/>!=<sp/><ref refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1ad3a9df141be0ccf10389b640f492b26d" kindref="member">DISABLE</ref>)</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/>tmpreg<sp/>|=<sp/>(tmp<sp/>&lt;&lt;<sp/>((GPIO_Remap<sp/>&gt;&gt;<sp/>0x15)*0x10));</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((GPIO_Remap<sp/>&amp;<sp/>0x80000000)<sp/>==<sp/>0x80000000)</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga582e09473429414015b1de90cf767fa8" kindref="member">AFIO</ref>-&gt;MAPR2<sp/>=<sp/>tmpreg;</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga582e09473429414015b1de90cf767fa8" kindref="member">AFIO</ref>-&gt;MAPR<sp/>=<sp/>tmpreg;</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/>}<sp/><sp/></highlight></codeline>
<codeline lineno="599"><highlight class="normal">}</highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight></codeline>
<codeline lineno="609" refid="group___g_p_i_o___private___functions_1ga8c1f13646d7418827378032a584da653" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___g_p_i_o___private___functions_1ga8c1f13646d7418827378032a584da653" kindref="member">GPIO_EXTILineConfig</ref>(uint8_t<sp/>GPIO_PortSource,<sp/>uint8_t<sp/>GPIO_PinSource)</highlight></codeline>
<codeline lineno="610"><highlight class="normal">{</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/>uint32_t<sp/>tmp<sp/>=<sp/>0x00;</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___g_p_i_o___port___sources_1ga53c3a469f6b286da38bc198acf25e8f1" kindref="member">IS_GPIO_EXTI_PORT_SOURCE</ref>(GPIO_PortSource));</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___g_p_i_o___pin__sources_1ga689e4e72591136b6a8d4df9d895181f7" kindref="member">IS_GPIO_PIN_SOURCE</ref>(GPIO_PinSource));</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/>tmp<sp/>=<sp/>((uint32_t)0x0F)<sp/>&lt;&lt;<sp/>(0x04<sp/>*<sp/>(GPIO_PinSource<sp/>&amp;<sp/>(uint8_t)0x03));</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><ref refid="group___peripheral__declaration_1ga582e09473429414015b1de90cf767fa8" kindref="member">AFIO</ref>-&gt;EXTICR[GPIO_PinSource<sp/>&gt;&gt;<sp/>0x02]<sp/>&amp;=<sp/>~tmp;</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><ref refid="group___peripheral__declaration_1ga582e09473429414015b1de90cf767fa8" kindref="member">AFIO</ref>-&gt;EXTICR[GPIO_PinSource<sp/>&gt;&gt;<sp/>0x02]<sp/>|=<sp/>(((uint32_t)GPIO_PortSource)<sp/>&lt;&lt;<sp/>(0x04<sp/>*<sp/>(GPIO_PinSource<sp/>&amp;<sp/>(uint8_t)0x03)));</highlight></codeline>
<codeline lineno="619"><highlight class="normal">}</highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight></codeline>
<codeline lineno="630" refid="group___g_p_i_o___private___functions_1gacbfad958f684347be0f2c762dc85c3c2" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___g_p_i_o___private___functions_1gacbfad958f684347be0f2c762dc85c3c2" kindref="member">GPIO_ETH_MediaInterfaceConfig</ref>(uint32_t<sp/>GPIO_ETH_MediaInterface)<sp/></highlight></codeline>
<codeline lineno="631"><highlight class="normal">{<sp/></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___ethernet___media___interface_1gaaba662c046aed61cb28aa10918bfd4c4" kindref="member">IS_GPIO_ETH_MEDIA_INTERFACE</ref>(GPIO_ETH_MediaInterface));<sp/></highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Configure<sp/>MII_RMII<sp/>selection<sp/>bit<sp/>*/</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/>*(<ref refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" kindref="member">__IO</ref><sp/>uint32_t<sp/>*)<sp/><ref refid="group___g_p_i_o___private___defines_1ga00e75433e8a45d7a55c021397cb85aa9" kindref="member">MAPR_MII_RMII_SEL_BB</ref><sp/>=<sp/>GPIO_ETH_MediaInterface;<sp/></highlight></codeline>
<codeline lineno="636"><highlight class="normal">}</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="650"><highlight class="comment">/*******************<sp/>(C)<sp/>COPYRIGHT<sp/>2011<sp/>STMicroelectronics<sp/>*****END<sp/>OF<sp/>FILE****/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_gpio.c"/>
  </compounddef>
</doxygen>
