<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="stm32f10x__usart_8h" kind="file" language="C++">
    <compoundname>stm32f10x_usart.h</compoundname>
    <includes refid="stm32f10x_8h" local="yes">stm32f10x.h</includes>
    <includedby refid="stm32f10x__conf_8h" local="yes">C:/Users/anilj/Desktop/cmsis/sorc/include/stm32f10x_conf.h</includedby>
    <includedby refid="stm32f10x__usart_8c" local="yes">C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_usart.c</includedby>
    <incdepgraph>
      <node id="732">
        <label>system_stm32f10x.h</label>
        <link refid="system__stm32f10x_8h"/>
      </node>
      <node id="729">
        <label>stdint.h</label>
      </node>
      <node id="728">
        <label>core_cm3.h</label>
        <link refid="core__cm3_8h"/>
        <childnode refid="729" relation="include">
        </childnode>
        <childnode refid="730" relation="include">
        </childnode>
        <childnode refid="731" relation="include">
        </childnode>
      </node>
      <node id="731">
        <label>core_cmFunc.h</label>
        <link refid="core__cm_func_8h"/>
      </node>
      <node id="730">
        <label>core_cmInstr.h</label>
        <link refid="core__cm_instr_8h"/>
      </node>
      <node id="727">
        <label>stm32f10x.h</label>
        <link refid="stm32f10x_8h"/>
        <childnode refid="728" relation="include">
        </childnode>
        <childnode refid="732" relation="include">
        </childnode>
        <childnode refid="729" relation="include">
        </childnode>
      </node>
      <node id="726">
        <label>C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h</label>
        <link refid="stm32f10x__usart_8h"/>
        <childnode refid="727" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="734">
        <label>C:/Users/anilj/Desktop/cmsis/sorc/include/stm32f10x_conf.h</label>
        <link refid="stm32f10x__conf_8h"/>
      </node>
      <node id="735">
        <label>C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_usart.c</label>
        <link refid="stm32f10x__usart_8c"/>
      </node>
      <node id="733">
        <label>C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h</label>
        <link refid="stm32f10x__usart_8h"/>
        <childnode refid="734" relation="include">
        </childnode>
        <childnode refid="735" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_u_s_a_r_t___init_type_def" prot="public">USART_InitTypeDef</innerclass>
    <innerclass refid="struct_u_s_a_r_t___clock_init_type_def" prot="public">USART_ClockInitTypeDef</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="group___u_s_a_r_t___exported___constants_1gae890b8e77c1b84a77c485a353949f7eb" prot="public" static="no">
        <name>IS_USART_ALL_PERIPH</name>
        <param><defname>PERIPH</defname></param>
        <initializer>(((PERIPH) == <ref refid="group___peripheral__declaration_1ga92871691058ff7ccffd7635930cb08da" kindref="member">USART1</ref>) || \
                                     ((PERIPH) == <ref refid="group___peripheral__declaration_1gaf114a9eab03ca08a6fb720e511595930" kindref="member">USART2</ref>) || \
                                     ((PERIPH) == <ref refid="group___peripheral__declaration_1ga2350115553c1fe0a7bc14e6a7ec6a225" kindref="member">USART3</ref>) || \
                                     ((PERIPH) == <ref refid="group___peripheral__declaration_1ga7c035f6f443c999fc043b2b7fb598800" kindref="member">UART4</ref>) || \
                                     ((PERIPH) == <ref refid="group___peripheral__declaration_1ga9274e37cf5e8a174fc5dd627b98ec0fe" kindref="member">UART5</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" line="113" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" bodystart="113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___u_s_a_r_t___exported___constants_1ga30e128c5edde23e1315724c0b2000d0d" prot="public" static="no">
        <name>IS_USART_123_PERIPH</name>
        <param><defname>PERIPH</defname></param>
        <initializer>(((PERIPH) == <ref refid="group___peripheral__declaration_1ga92871691058ff7ccffd7635930cb08da" kindref="member">USART1</ref>) || \
                                     ((PERIPH) == <ref refid="group___peripheral__declaration_1gaf114a9eab03ca08a6fb720e511595930" kindref="member">USART2</ref>) || \
                                     ((PERIPH) == <ref refid="group___peripheral__declaration_1ga2350115553c1fe0a7bc14e6a7ec6a225" kindref="member">USART3</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" line="119" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___u_s_a_r_t___exported___constants_1ga9b6af380cae2290d0653bd555deaeda1" prot="public" static="no">
        <name>IS_USART_1234_PERIPH</name>
        <param><defname>PERIPH</defname></param>
        <initializer>(((PERIPH) == <ref refid="group___peripheral__declaration_1ga92871691058ff7ccffd7635930cb08da" kindref="member">USART1</ref>) || \
                                      ((PERIPH) == <ref refid="group___peripheral__declaration_1gaf114a9eab03ca08a6fb720e511595930" kindref="member">USART2</ref>) || \
                                      ((PERIPH) == <ref refid="group___peripheral__declaration_1ga2350115553c1fe0a7bc14e6a7ec6a225" kindref="member">USART3</ref>) || \
                                      ((PERIPH) == <ref refid="group___peripheral__declaration_1ga7c035f6f443c999fc043b2b7fb598800" kindref="member">UART4</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" line="123" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___u_s_a_r_t___word___length_1ga08682faddc657df85a93627b5a146c25" prot="public" static="no">
        <name>USART_WordLength_8b</name>
        <initializer>((uint16_t)0x0000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" line="131" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" bodystart="131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___u_s_a_r_t___word___length_1gae7dd162142660e09e2321aa3f33dc4d2" prot="public" static="no">
        <name>USART_WordLength_9b</name>
        <initializer>((uint16_t)0x1000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" line="132" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" bodystart="132" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___u_s_a_r_t___word___length_1ga5b07b29ee91f0bea4c10ec0fd74fbc04" prot="public" static="no">
        <name>IS_USART_WORD_LENGTH</name>
        <param><defname>LENGTH</defname></param>
        <initializer>(((LENGTH) == <ref refid="group___u_s_a_r_t___word___length_1ga08682faddc657df85a93627b5a146c25" kindref="member">USART_WordLength_8b</ref>) || \
                                      ((LENGTH) == <ref refid="group___u_s_a_r_t___word___length_1gae7dd162142660e09e2321aa3f33dc4d2" kindref="member">USART_WordLength_9b</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" line="134" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" bodystart="134" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___u_s_a_r_t___stop___bits_1gae2cb35620ba001f0d63e9e0be93e4a05" prot="public" static="no">
        <name>USART_StopBits_1</name>
        <initializer>((uint16_t)0x0000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" line="144" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" bodystart="144" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___u_s_a_r_t___stop___bits_1ga2ad06e3acfb691735d05ab9a314e2e32" prot="public" static="no">
        <name>USART_StopBits_0_5</name>
        <initializer>((uint16_t)0x1000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" line="145" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" bodystart="145" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___u_s_a_r_t___stop___bits_1ga652058b6be2f48ac0d82d0e75537fc81" prot="public" static="no">
        <name>USART_StopBits_2</name>
        <initializer>((uint16_t)0x2000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" line="146" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" bodystart="146" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___u_s_a_r_t___stop___bits_1ga30897cc46d5b3790a9b14ffaba354527" prot="public" static="no">
        <name>USART_StopBits_1_5</name>
        <initializer>((uint16_t)0x3000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" line="147" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" bodystart="147" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___u_s_a_r_t___stop___bits_1ga6f9153c1fbee1058ba26ec88f0f20828" prot="public" static="no">
        <name>IS_USART_STOPBITS</name>
        <param><defname>STOPBITS</defname></param>
        <initializer>(((STOPBITS) == <ref refid="group___u_s_a_r_t___stop___bits_1gae2cb35620ba001f0d63e9e0be93e4a05" kindref="member">USART_StopBits_1</ref>) || \
                                     ((STOPBITS) == <ref refid="group___u_s_a_r_t___stop___bits_1ga2ad06e3acfb691735d05ab9a314e2e32" kindref="member">USART_StopBits_0_5</ref>) || \
                                     ((STOPBITS) == <ref refid="group___u_s_a_r_t___stop___bits_1ga652058b6be2f48ac0d82d0e75537fc81" kindref="member">USART_StopBits_2</ref>) || \
                                     ((STOPBITS) == <ref refid="group___u_s_a_r_t___stop___bits_1ga30897cc46d5b3790a9b14ffaba354527" kindref="member">USART_StopBits_1_5</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" line="148" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" bodystart="148" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___u_s_a_r_t___parity_1gab9deebcb0a859360dfec85074abaa3aa" prot="public" static="no">
        <name>USART_Parity_No</name>
        <initializer>((uint16_t)0x0000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" line="160" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" bodystart="160" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___u_s_a_r_t___parity_1ga62193247d36fffe982e159c1f246271e" prot="public" static="no">
        <name>USART_Parity_Even</name>
        <initializer>((uint16_t)0x0400)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" line="161" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" bodystart="161" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___u_s_a_r_t___parity_1gafcd68937a6b4b8ffff8f96e68d6a5ecd" prot="public" static="no">
        <name>USART_Parity_Odd</name>
        <initializer>((uint16_t)0x0600)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" line="162" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" bodystart="162" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___u_s_a_r_t___parity_1gaa87b2e338e0ccc42887d3c56901bee87" prot="public" static="no">
        <name>IS_USART_PARITY</name>
        <param><defname>PARITY</defname></param>
        <initializer>(((PARITY) == <ref refid="group___u_s_a_r_t___parity_1gab9deebcb0a859360dfec85074abaa3aa" kindref="member">USART_Parity_No</ref>) || \
                                 ((PARITY) == <ref refid="group___u_s_a_r_t___parity_1ga62193247d36fffe982e159c1f246271e" kindref="member">USART_Parity_Even</ref>) || \
                                 ((PARITY) == <ref refid="group___u_s_a_r_t___parity_1gafcd68937a6b4b8ffff8f96e68d6a5ecd" kindref="member">USART_Parity_Odd</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" line="163" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" bodystart="163" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___u_s_a_r_t___mode_1gafefcc3d3c1a1f83b425784fa6289aecf" prot="public" static="no">
        <name>USART_Mode_Rx</name>
        <initializer>((uint16_t)0x0004)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" line="174" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" bodystart="174" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___u_s_a_r_t___mode_1ga22b2813509a062435ea68d086ec565b4" prot="public" static="no">
        <name>USART_Mode_Tx</name>
        <initializer>((uint16_t)0x0008)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" line="175" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" bodystart="175" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___u_s_a_r_t___mode_1gae9140e5ca405d2377fe0e82c79e136a2" prot="public" static="no">
        <name>IS_USART_MODE</name>
        <param><defname>MODE</defname></param>
        <initializer>((((MODE) &amp; (uint16_t)0xFFF3) == 0x00) &amp;&amp; ((MODE) != (uint16_t)0x00))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" line="176" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" bodystart="176" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___u_s_a_r_t___hardware___flow___control_1gaf3deaf4429b88db7753ee203f4797bd3" prot="public" static="no">
        <name>USART_HardwareFlowControl_None</name>
        <initializer>((uint16_t)0x0000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" line="184" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" bodystart="184" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___u_s_a_r_t___hardware___flow___control_1ga22d4339693e3356d992abca259b0418e" prot="public" static="no">
        <name>USART_HardwareFlowControl_RTS</name>
        <initializer>((uint16_t)0x0100)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" line="185" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" bodystart="185" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___u_s_a_r_t___hardware___flow___control_1ga4d989f112f94009c0849fe4dbe829d81" prot="public" static="no">
        <name>USART_HardwareFlowControl_CTS</name>
        <initializer>((uint16_t)0x0200)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" line="186" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" bodystart="186" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___u_s_a_r_t___hardware___flow___control_1ga2986aed8c6cba414ac8afe0180ab553e" prot="public" static="no">
        <name>USART_HardwareFlowControl_RTS_CTS</name>
        <initializer>((uint16_t)0x0300)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" line="187" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" bodystart="187" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___u_s_a_r_t___hardware___flow___control_1ga9b905eb465780173a2e98bc8b602c030" prot="public" static="no">
        <name>IS_USART_HARDWARE_FLOW_CONTROL</name>
        <param><defname>CONTROL</defname></param>
        <initializer>(((CONTROL) == <ref refid="group___u_s_a_r_t___hardware___flow___control_1gaf3deaf4429b88db7753ee203f4797bd3" kindref="member">USART_HardwareFlowControl_None</ref>) || \
                               ((CONTROL) == <ref refid="group___u_s_a_r_t___hardware___flow___control_1ga22d4339693e3356d992abca259b0418e" kindref="member">USART_HardwareFlowControl_RTS</ref>) || \
                               ((CONTROL) == <ref refid="group___u_s_a_r_t___hardware___flow___control_1ga4d989f112f94009c0849fe4dbe829d81" kindref="member">USART_HardwareFlowControl_CTS</ref>) || \
                               ((CONTROL) == <ref refid="group___u_s_a_r_t___hardware___flow___control_1ga2986aed8c6cba414ac8afe0180ab553e" kindref="member">USART_HardwareFlowControl_RTS_CTS</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" line="188" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" bodystart="188" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___u_s_a_r_t___clock_1ga56c12b81d19853c093e0a373d0c52fb5" prot="public" static="no">
        <name>USART_Clock_Disable</name>
        <initializer>((uint16_t)0x0000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" line="200" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" bodystart="200" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___u_s_a_r_t___clock_1gacfe029e2ec4f49ddde031fd031654caa" prot="public" static="no">
        <name>USART_Clock_Enable</name>
        <initializer>((uint16_t)0x0800)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" line="201" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" bodystart="201" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___u_s_a_r_t___clock_1ga0f1e1ba37690b21b7338ed3b06614cf6" prot="public" static="no">
        <name>IS_USART_CLOCK</name>
        <param><defname>CLOCK</defname></param>
        <initializer>(((CLOCK) == <ref refid="group___u_s_a_r_t___clock_1ga56c12b81d19853c093e0a373d0c52fb5" kindref="member">USART_Clock_Disable</ref>) || \
                               ((CLOCK) == <ref refid="group___u_s_a_r_t___clock_1gacfe029e2ec4f49ddde031fd031654caa" kindref="member">USART_Clock_Enable</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" line="202" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" bodystart="202" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___u_s_a_r_t___clock___polarity_1ga194d60b47d8042d39e843c52f3a6aa1a" prot="public" static="no">
        <name>USART_CPOL_Low</name>
        <initializer>((uint16_t)0x0000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" line="212" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" bodystart="212" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___u_s_a_r_t___clock___polarity_1ga4ba6946dd9f0b4fd38115f24798c210f" prot="public" static="no">
        <name>USART_CPOL_High</name>
        <initializer>((uint16_t)0x0400)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" line="213" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" bodystart="213" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___u_s_a_r_t___clock___polarity_1ga833e9d2e85ab84658c7a7c18bd0bc8b9" prot="public" static="no">
        <name>IS_USART_CPOL</name>
        <param><defname>CPOL</defname></param>
        <initializer>(((CPOL) == <ref refid="group___u_s_a_r_t___clock___polarity_1ga194d60b47d8042d39e843c52f3a6aa1a" kindref="member">USART_CPOL_Low</ref>) || ((CPOL) == <ref refid="group___u_s_a_r_t___clock___polarity_1ga4ba6946dd9f0b4fd38115f24798c210f" kindref="member">USART_CPOL_High</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" line="214" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" bodystart="214" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___u_s_a_r_t___clock___phase_1gab6c0fb052fb9bc418cf368c1a0e4643b" prot="public" static="no">
        <name>USART_CPHA_1Edge</name>
        <initializer>((uint16_t)0x0000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" line="224" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" bodystart="224" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___u_s_a_r_t___clock___phase_1ga66344d0725f1300e9d0f8f1708111f25" prot="public" static="no">
        <name>USART_CPHA_2Edge</name>
        <initializer>((uint16_t)0x0200)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" line="225" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" bodystart="225" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___u_s_a_r_t___clock___phase_1ga66fa1a3a757025fcd8dd069a90689f88" prot="public" static="no">
        <name>IS_USART_CPHA</name>
        <param><defname>CPHA</defname></param>
        <initializer>(((CPHA) == <ref refid="group___u_s_a_r_t___clock___phase_1gab6c0fb052fb9bc418cf368c1a0e4643b" kindref="member">USART_CPHA_1Edge</ref>) || ((CPHA) == <ref refid="group___u_s_a_r_t___clock___phase_1ga66344d0725f1300e9d0f8f1708111f25" kindref="member">USART_CPHA_2Edge</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" line="226" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" bodystart="226" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___u_s_a_r_t___last___bit_1ga129c89b9e0dbb3ce43ee92589b3324e5" prot="public" static="no">
        <name>USART_LastBit_Disable</name>
        <initializer>((uint16_t)0x0000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" line="236" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" bodystart="236" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___u_s_a_r_t___last___bit_1gaf8c19d1ce01c6efff8c24ee82cc7b52e" prot="public" static="no">
        <name>USART_LastBit_Enable</name>
        <initializer>((uint16_t)0x0100)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" line="237" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" bodystart="237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___u_s_a_r_t___last___bit_1gaa941695e5612b53e9c2aca6a9fa0d695" prot="public" static="no">
        <name>IS_USART_LASTBIT</name>
        <param><defname>LASTBIT</defname></param>
        <initializer>(((LASTBIT) == <ref refid="group___u_s_a_r_t___last___bit_1ga129c89b9e0dbb3ce43ee92589b3324e5" kindref="member">USART_LastBit_Disable</ref>) || \
                                   ((LASTBIT) == <ref refid="group___u_s_a_r_t___last___bit_1gaf8c19d1ce01c6efff8c24ee82cc7b52e" kindref="member">USART_LastBit_Enable</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" line="238" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" bodystart="238" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___u_s_a_r_t___interrupt__definition_1gae607c28a462c224c575b7541dc4f7067" prot="public" static="no">
        <name>USART_IT_PE</name>
        <initializer>((uint16_t)0x0028)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" line="248" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" bodystart="248" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___u_s_a_r_t___interrupt__definition_1gab18d0fe889204a4c34f6d5817fb5147d" prot="public" static="no">
        <name>USART_IT_TXE</name>
        <initializer>((uint16_t)0x0727)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" line="249" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" bodystart="249" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___u_s_a_r_t___interrupt__definition_1ga748e86162cc110513330079982821c39" prot="public" static="no">
        <name>USART_IT_TC</name>
        <initializer>((uint16_t)0x0626)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" line="250" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" bodystart="250" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___u_s_a_r_t___interrupt__definition_1gacdd49b93072655a21a63a35e6431f8ae" prot="public" static="no">
        <name>USART_IT_RXNE</name>
        <initializer>((uint16_t)0x0525)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" line="251" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" bodystart="251" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___u_s_a_r_t___interrupt__definition_1ga5d85aab24b7b2dfddb61ba2a49fa6185" prot="public" static="no">
        <name>USART_IT_IDLE</name>
        <initializer>((uint16_t)0x0424)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" line="252" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" bodystart="252" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___u_s_a_r_t___interrupt__definition_1ga063628e16cdda199b07d380421afc4a5" prot="public" static="no">
        <name>USART_IT_LBD</name>
        <initializer>((uint16_t)0x0846)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" line="253" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" bodystart="253" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___u_s_a_r_t___interrupt__definition_1gab49efbefaca2921e8cbe8f5146e99dbd" prot="public" static="no">
        <name>USART_IT_CTS</name>
        <initializer>((uint16_t)0x096A)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" line="254" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" bodystart="254" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___u_s_a_r_t___interrupt__definition_1ga631e83efd4c4789128d80a9539faf78a" prot="public" static="no">
        <name>USART_IT_ERR</name>
        <initializer>((uint16_t)0x0060)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" line="255" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" bodystart="255" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___u_s_a_r_t___interrupt__definition_1ga8b7d40e02a81be787fbb325bbe6dfbeb" prot="public" static="no">
        <name>USART_IT_ORE</name>
        <initializer>((uint16_t)0x0360)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" line="256" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" bodystart="256" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___u_s_a_r_t___interrupt__definition_1gad5de042f579b50f1e8643009176486b3" prot="public" static="no">
        <name>USART_IT_NE</name>
        <initializer>((uint16_t)0x0260)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" line="257" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" bodystart="257" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___u_s_a_r_t___interrupt__definition_1ga9af8790f78f6cb1591506c57d0cc0fb3" prot="public" static="no">
        <name>USART_IT_FE</name>
        <initializer>((uint16_t)0x0160)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" line="258" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" bodystart="258" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___u_s_a_r_t___interrupt__definition_1ga37ce140eae1938a414ff32afed5ef236" prot="public" static="no">
        <name>IS_USART_CONFIG_IT</name>
        <param><defname>IT</defname></param>
        <initializer>(((IT) == <ref refid="group___u_s_a_r_t___interrupt__definition_1gae607c28a462c224c575b7541dc4f7067" kindref="member">USART_IT_PE</ref>) || ((IT) == <ref refid="group___u_s_a_r_t___interrupt__definition_1gab18d0fe889204a4c34f6d5817fb5147d" kindref="member">USART_IT_TXE</ref>) || \
                               ((IT) == <ref refid="group___u_s_a_r_t___interrupt__definition_1ga748e86162cc110513330079982821c39" kindref="member">USART_IT_TC</ref>) || ((IT) == <ref refid="group___u_s_a_r_t___interrupt__definition_1gacdd49b93072655a21a63a35e6431f8ae" kindref="member">USART_IT_RXNE</ref>) || \
                               ((IT) == <ref refid="group___u_s_a_r_t___interrupt__definition_1ga5d85aab24b7b2dfddb61ba2a49fa6185" kindref="member">USART_IT_IDLE</ref>) || ((IT) == <ref refid="group___u_s_a_r_t___interrupt__definition_1ga063628e16cdda199b07d380421afc4a5" kindref="member">USART_IT_LBD</ref>) || \
                               ((IT) == <ref refid="group___u_s_a_r_t___interrupt__definition_1gab49efbefaca2921e8cbe8f5146e99dbd" kindref="member">USART_IT_CTS</ref>) || ((IT) == <ref refid="group___u_s_a_r_t___interrupt__definition_1ga631e83efd4c4789128d80a9539faf78a" kindref="member">USART_IT_ERR</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" line="259" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" bodystart="259" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___u_s_a_r_t___interrupt__definition_1ga9a8014793a383d710eaaf4185f2b795d" prot="public" static="no">
        <name>IS_USART_GET_IT</name>
        <param><defname>IT</defname></param>
        <initializer>(((IT) == <ref refid="group___u_s_a_r_t___interrupt__definition_1gae607c28a462c224c575b7541dc4f7067" kindref="member">USART_IT_PE</ref>) || ((IT) == <ref refid="group___u_s_a_r_t___interrupt__definition_1gab18d0fe889204a4c34f6d5817fb5147d" kindref="member">USART_IT_TXE</ref>) || \
                            ((IT) == <ref refid="group___u_s_a_r_t___interrupt__definition_1ga748e86162cc110513330079982821c39" kindref="member">USART_IT_TC</ref>) || ((IT) == <ref refid="group___u_s_a_r_t___interrupt__definition_1gacdd49b93072655a21a63a35e6431f8ae" kindref="member">USART_IT_RXNE</ref>) || \
                            ((IT) == <ref refid="group___u_s_a_r_t___interrupt__definition_1ga5d85aab24b7b2dfddb61ba2a49fa6185" kindref="member">USART_IT_IDLE</ref>) || ((IT) == <ref refid="group___u_s_a_r_t___interrupt__definition_1ga063628e16cdda199b07d380421afc4a5" kindref="member">USART_IT_LBD</ref>) || \
                            ((IT) == <ref refid="group___u_s_a_r_t___interrupt__definition_1gab49efbefaca2921e8cbe8f5146e99dbd" kindref="member">USART_IT_CTS</ref>) || ((IT) == <ref refid="group___u_s_a_r_t___interrupt__definition_1ga8b7d40e02a81be787fbb325bbe6dfbeb" kindref="member">USART_IT_ORE</ref>) || \
                            ((IT) == <ref refid="group___u_s_a_r_t___interrupt__definition_1gad5de042f579b50f1e8643009176486b3" kindref="member">USART_IT_NE</ref>) || ((IT) == <ref refid="group___u_s_a_r_t___interrupt__definition_1ga9af8790f78f6cb1591506c57d0cc0fb3" kindref="member">USART_IT_FE</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" line="263" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" bodystart="263" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___u_s_a_r_t___interrupt__definition_1ga3ceda175140b84eea02a2261ebda4efd" prot="public" static="no">
        <name>IS_USART_CLEAR_IT</name>
        <param><defname>IT</defname></param>
        <initializer>(((IT) == <ref refid="group___u_s_a_r_t___interrupt__definition_1ga748e86162cc110513330079982821c39" kindref="member">USART_IT_TC</ref>) || ((IT) == <ref refid="group___u_s_a_r_t___interrupt__definition_1gacdd49b93072655a21a63a35e6431f8ae" kindref="member">USART_IT_RXNE</ref>) || \
                               ((IT) == <ref refid="group___u_s_a_r_t___interrupt__definition_1ga063628e16cdda199b07d380421afc4a5" kindref="member">USART_IT_LBD</ref>) || ((IT) == <ref refid="group___u_s_a_r_t___interrupt__definition_1gab49efbefaca2921e8cbe8f5146e99dbd" kindref="member">USART_IT_CTS</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" line="268" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" bodystart="268" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___u_s_a_r_t___d_m_a___requests_1gae38097d8f82ba969c9812194022cae9a" prot="public" static="no">
        <name>USART_DMAReq_Tx</name>
        <initializer>((uint16_t)0x0080)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" line="278" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" bodystart="278" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___u_s_a_r_t___d_m_a___requests_1gaf33c13abb942251afab3297d8b8362ca" prot="public" static="no">
        <name>USART_DMAReq_Rx</name>
        <initializer>((uint16_t)0x0040)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" line="279" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" bodystart="279" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___u_s_a_r_t___d_m_a___requests_1ga8be7a899d21d82de2ee0a763b4564dc3" prot="public" static="no">
        <name>IS_USART_DMAREQ</name>
        <param><defname>DMAREQ</defname></param>
        <initializer>((((DMAREQ) &amp; (uint16_t)0xFF3F) == 0x00) &amp;&amp; ((DMAREQ) != (uint16_t)0x00))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" line="280" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" bodystart="280" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___u_s_a_r_t___wake_up__methods_1ga9646d71590d5cef29ee12da0bb431d92" prot="public" static="no">
        <name>USART_WakeUp_IdleLine</name>
        <initializer>((uint16_t)0x0000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" line="290" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" bodystart="290" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___u_s_a_r_t___wake_up__methods_1ga9f63c1671060682adee91b9a2f3202e4" prot="public" static="no">
        <name>USART_WakeUp_AddressMark</name>
        <initializer>((uint16_t)0x0800)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" line="291" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" bodystart="291" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___u_s_a_r_t___wake_up__methods_1ga3611be417bdb82f42dc2ca17584271f9" prot="public" static="no">
        <name>IS_USART_WAKEUP</name>
        <param><defname>WAKEUP</defname></param>
        <initializer>(((WAKEUP) == <ref refid="group___u_s_a_r_t___wake_up__methods_1ga9646d71590d5cef29ee12da0bb431d92" kindref="member">USART_WakeUp_IdleLine</ref>) || \
                                 ((WAKEUP) == <ref refid="group___u_s_a_r_t___wake_up__methods_1ga9f63c1671060682adee91b9a2f3202e4" kindref="member">USART_WakeUp_AddressMark</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" line="292" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" bodystart="292" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___u_s_a_r_t___l_i_n___break___detection___length_1gacfd0aabae8774239440e828c961ac2a0" prot="public" static="no">
        <name>USART_LINBreakDetectLength_10b</name>
        <initializer>((uint16_t)0x0000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" line="302" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" bodystart="302" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___u_s_a_r_t___l_i_n___break___detection___length_1gaf591cfcc859d67d71e6fa594eb5aec16" prot="public" static="no">
        <name>USART_LINBreakDetectLength_11b</name>
        <initializer>((uint16_t)0x0020)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" line="303" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" bodystart="303" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___u_s_a_r_t___l_i_n___break___detection___length_1gaa7a45d542b1df5da1160777ad4a80d72" prot="public" static="no">
        <name>IS_USART_LIN_BREAK_DETECT_LENGTH</name>
        <param><defname>LENGTH</defname></param>
        <initializer>(((LENGTH) == <ref refid="group___u_s_a_r_t___l_i_n___break___detection___length_1gacfd0aabae8774239440e828c961ac2a0" kindref="member">USART_LINBreakDetectLength_10b</ref>) || \
                                ((LENGTH) == <ref refid="group___u_s_a_r_t___l_i_n___break___detection___length_1gaf591cfcc859d67d71e6fa594eb5aec16" kindref="member">USART_LINBreakDetectLength_11b</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" line="304" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" bodystart="304" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___u_s_a_r_t___ir_d_a___low___power_1ga00c2635d0e6ca1a5b158f1c1673e862f" prot="public" static="no">
        <name>USART_IrDAMode_LowPower</name>
        <initializer>((uint16_t)0x0004)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" line="315" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" bodystart="315" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___u_s_a_r_t___ir_d_a___low___power_1ga796cd5451deb896741206986bd6d03e6" prot="public" static="no">
        <name>USART_IrDAMode_Normal</name>
        <initializer>((uint16_t)0x0000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" line="316" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" bodystart="316" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___u_s_a_r_t___ir_d_a___low___power_1ga7790838ff8ee71089da2c0e5bceee569" prot="public" static="no">
        <name>IS_USART_IRDA_MODE</name>
        <param><defname>MODE</defname></param>
        <initializer>(((MODE) == <ref refid="group___u_s_a_r_t___ir_d_a___low___power_1ga00c2635d0e6ca1a5b158f1c1673e862f" kindref="member">USART_IrDAMode_LowPower</ref>) || \
                                  ((MODE) == <ref refid="group___u_s_a_r_t___ir_d_a___low___power_1ga796cd5451deb896741206986bd6d03e6" kindref="member">USART_IrDAMode_Normal</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" line="317" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" bodystart="317" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___u_s_a_r_t___flags_1ga94b7272319cca88a65075d5cb6048441" prot="public" static="no">
        <name>USART_FLAG_CTS</name>
        <initializer>((uint16_t)0x0200)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" line="327" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" bodystart="327" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___u_s_a_r_t___flags_1ga27be6517de20ce14711f71dcd5a7b91f" prot="public" static="no">
        <name>USART_FLAG_LBD</name>
        <initializer>((uint16_t)0x0100)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" line="328" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" bodystart="328" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___u_s_a_r_t___flags_1ga7129f13333f2a7218838cc32fe507bfa" prot="public" static="no">
        <name>USART_FLAG_TXE</name>
        <initializer>((uint16_t)0x0080)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" line="329" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" bodystart="329" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___u_s_a_r_t___flags_1gae7b85c9e2cc86af5bbc8b8d8b854410f" prot="public" static="no">
        <name>USART_FLAG_TC</name>
        <initializer>((uint16_t)0x0040)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" line="330" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" bodystart="330" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___u_s_a_r_t___flags_1ga11d6b70c8f00216b6d8a43790dfdcf2f" prot="public" static="no">
        <name>USART_FLAG_RXNE</name>
        <initializer>((uint16_t)0x0020)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" line="331" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" bodystart="331" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___u_s_a_r_t___flags_1gac2f1ccc91a834f9cbec3f058872b972a" prot="public" static="no">
        <name>USART_FLAG_IDLE</name>
        <initializer>((uint16_t)0x0010)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" line="332" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" bodystart="332" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___u_s_a_r_t___flags_1gabdb285b5c1876d93f9c802f9304538d5" prot="public" static="no">
        <name>USART_FLAG_ORE</name>
        <initializer>((uint16_t)0x0008)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" line="333" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" bodystart="333" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___u_s_a_r_t___flags_1ga81781d27ffc8b85dfaf7b7b791229547" prot="public" static="no">
        <name>USART_FLAG_NE</name>
        <initializer>((uint16_t)0x0004)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" line="334" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" bodystart="334" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___u_s_a_r_t___flags_1ga3551a32bac49a2ec040e5fdafcc9c4bd" prot="public" static="no">
        <name>USART_FLAG_FE</name>
        <initializer>((uint16_t)0x0002)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" line="335" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" bodystart="335" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___u_s_a_r_t___flags_1ga5e87fde5704f27c75df25395e23404ad" prot="public" static="no">
        <name>USART_FLAG_PE</name>
        <initializer>((uint16_t)0x0001)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" line="336" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" bodystart="336" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___u_s_a_r_t___flags_1ga3e20747ce7c97a36718933c0cb3dac29" prot="public" static="no">
        <name>IS_USART_FLAG</name>
        <param><defname>FLAG</defname></param>
        <initializer>(((FLAG) == <ref refid="group___u_s_a_r_t___flags_1ga5e87fde5704f27c75df25395e23404ad" kindref="member">USART_FLAG_PE</ref>) || ((FLAG) == <ref refid="group___u_s_a_r_t___flags_1ga7129f13333f2a7218838cc32fe507bfa" kindref="member">USART_FLAG_TXE</ref>) || \
                             ((FLAG) == <ref refid="group___u_s_a_r_t___flags_1gae7b85c9e2cc86af5bbc8b8d8b854410f" kindref="member">USART_FLAG_TC</ref>) || ((FLAG) == <ref refid="group___u_s_a_r_t___flags_1ga11d6b70c8f00216b6d8a43790dfdcf2f" kindref="member">USART_FLAG_RXNE</ref>) || \
                             ((FLAG) == <ref refid="group___u_s_a_r_t___flags_1gac2f1ccc91a834f9cbec3f058872b972a" kindref="member">USART_FLAG_IDLE</ref>) || ((FLAG) == <ref refid="group___u_s_a_r_t___flags_1ga27be6517de20ce14711f71dcd5a7b91f" kindref="member">USART_FLAG_LBD</ref>) || \
                             ((FLAG) == <ref refid="group___u_s_a_r_t___flags_1ga94b7272319cca88a65075d5cb6048441" kindref="member">USART_FLAG_CTS</ref>) || ((FLAG) == <ref refid="group___u_s_a_r_t___flags_1gabdb285b5c1876d93f9c802f9304538d5" kindref="member">USART_FLAG_ORE</ref>) || \
                             ((FLAG) == <ref refid="group___u_s_a_r_t___flags_1ga81781d27ffc8b85dfaf7b7b791229547" kindref="member">USART_FLAG_NE</ref>) || ((FLAG) == <ref refid="group___u_s_a_r_t___flags_1ga3551a32bac49a2ec040e5fdafcc9c4bd" kindref="member">USART_FLAG_FE</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" line="337" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" bodystart="337" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___u_s_a_r_t___flags_1gadc905fdce8defba31c00c95554a26bc3" prot="public" static="no">
        <name>IS_USART_CLEAR_FLAG</name>
        <param><defname>FLAG</defname></param>
        <initializer>((((FLAG) &amp; (uint16_t)0xFC9F) == 0x00) &amp;&amp; ((FLAG) != (uint16_t)0x00))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" line="343" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" bodystart="343" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___u_s_a_r_t___flags_1gad8395894e77b07a0713756b355aa22e5" prot="public" static="no">
        <name>IS_USART_PERIPH_FLAG</name>
        <param><defname>PERIPH</defname></param>
        <param><defname>USART_FLAG</defname></param>
        <initializer>((((*(uint32_t*)&amp;(PERIPH)) != <ref refid="group___peripheral__memory__map_1ga94d92270bf587ccdc3a37a5bb5d20467" kindref="member">UART4_BASE</ref>) &amp;&amp;\
                                                  ((*(uint32_t*)&amp;(PERIPH)) != <ref refid="group___peripheral__memory__map_1gaa155689c0e206e6994951dc3cf31052a" kindref="member">UART5_BASE</ref>)) \
                                                  || ((USART_FLAG) != <ref refid="group___u_s_a_r_t___flags_1ga94b7272319cca88a65075d5cb6048441" kindref="member">USART_FLAG_CTS</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" line="344" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" bodystart="344" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___u_s_a_r_t___flags_1ga9dc365e0a1e01031a8e0757a34b9d420" prot="public" static="no">
        <name>IS_USART_BAUDRATE</name>
        <param><defname>BAUDRATE</defname></param>
        <initializer>(((BAUDRATE) &gt; 0) &amp;&amp; ((BAUDRATE) &lt; 0x0044AA21))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" line="347" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" bodystart="347" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___u_s_a_r_t___flags_1ga194e771c3324f9e130b2887c701460a7" prot="public" static="no">
        <name>IS_USART_ADDRESS</name>
        <param><defname>ADDRESS</defname></param>
        <initializer>((ADDRESS) &lt;= 0xF)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" line="348" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" bodystart="348" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___u_s_a_r_t___flags_1gafd6307e41818e076d31f3c24cb5ba135" prot="public" static="no">
        <name>IS_USART_DATA</name>
        <param><defname>DATA</defname></param>
        <initializer>((DATA) &lt;= 0x1FF)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" line="349" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" bodystart="349" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group___u_s_a_r_t___exported___functions_1ga2f8e1ce72da21b6539d8e1f299ec3b0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void USART_DeInit</definition>
        <argsstring>(USART_TypeDef *USARTx)</argsstring>
        <name>USART_DeInit</name>
        <param>
          <type><ref refid="struct_u_s_a_r_t___type_def" kindref="compound">USART_TypeDef</ref> *</type>
          <declname>USARTx</declname>
        </param>
        <briefdescription>
<para>Deinitializes the USARTx peripheral registers to their default reset values. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>USARTx</parametername>
</parameternamelist>
<parameterdescription>
<para>Select the USART or the UART peripheral. This parameter can be one of the following values: USART1, USART2, USART3, UART4 or UART5. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" line="371" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_usart.c" bodystart="130" bodyend="163"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___u_s_a_r_t___exported___constants_1gae890b8e77c1b84a77c485a353949f7eb" compoundref="stm32f10x__usart_8h" startline="113">IS_USART_ALL_PERIPH</references>
        <references refid="group___peripheral__declaration_1ga92871691058ff7ccffd7635930cb08da" compoundref="stm32f10x_8h" startline="1420">USART1</references>
        <references refid="group___r_c_c___exported___functions_1gad94553850ac07106a27ee85fec37efdf" compoundref="stm32f10x__rcc_8c" startline="1185" endline="1198">RCC_APB2PeriphResetCmd</references>
        <references refid="group___a_p_b2__peripheral_1ga14e1b3b6d84801c223a37a954b5b1910" compoundref="stm32f10x__rcc_8h" startline="510">RCC_APB2Periph_USART1</references>
        <references refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1a7d46875fa3ebd2c34d2756950eda83bf" compoundref="stm32f10x_8h" startline="521">ENABLE</references>
        <references refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1ad3a9df141be0ccf10389b640f492b26d" compoundref="stm32f10x_8h" startline="521">DISABLE</references>
        <references refid="group___peripheral__declaration_1gaf114a9eab03ca08a6fb720e511595930" compoundref="stm32f10x_8h" startline="1394">USART2</references>
        <references refid="group___r_c_c___exported___functions_1gab197ae4369c10b92640a733b40ed2801" compoundref="stm32f10x__rcc_8c" startline="1216" endline="1229">RCC_APB1PeriphResetCmd</references>
        <references refid="group___a_p_b1__peripheral_1gaa69c77220b943a42a4bacb8a3bf87dd0" compoundref="stm32f10x__rcc_8h" startline="540">RCC_APB1Periph_USART2</references>
        <references refid="group___peripheral__declaration_1ga2350115553c1fe0a7bc14e6a7ec6a225" compoundref="stm32f10x_8h" startline="1395">USART3</references>
        <references refid="group___a_p_b1__peripheral_1gaf72838a63d7d6200f251c1eb334cbaac" compoundref="stm32f10x__rcc_8h" startline="541">RCC_APB1Periph_USART3</references>
        <references refid="group___peripheral__declaration_1ga7c035f6f443c999fc043b2b7fb598800" compoundref="stm32f10x_8h" startline="1396">UART4</references>
        <references refid="group___a_p_b1__peripheral_1ga839d7ae3386622158210ecf53d9cd989" compoundref="stm32f10x__rcc_8h" startline="542">RCC_APB1Periph_UART4</references>
        <references refid="group___peripheral__declaration_1ga9274e37cf5e8a174fc5dd627b98ec0fe" compoundref="stm32f10x_8h" startline="1397">UART5</references>
        <references refid="group___a_p_b1__peripheral_1gaa00c73f88a7af45fb29df97b07acd856" compoundref="stm32f10x__rcc_8h" startline="543">RCC_APB1Periph_UART5</references>
      </memberdef>
      <memberdef kind="function" id="group___u_s_a_r_t___exported___functions_1ga98da340ea0324002ba1b4263e91ab2ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void USART_Init</definition>
        <argsstring>(USART_TypeDef *USARTx, USART_InitTypeDef *USART_InitStruct)</argsstring>
        <name>USART_Init</name>
        <param>
          <type><ref refid="struct_u_s_a_r_t___type_def" kindref="compound">USART_TypeDef</ref> *</type>
          <declname>USARTx</declname>
        </param>
        <param>
          <type><ref refid="struct_u_s_a_r_t___init_type_def" kindref="compound">USART_InitTypeDef</ref> *</type>
          <declname>USART_InitStruct</declname>
        </param>
        <briefdescription>
<para>Initializes the USARTx peripheral according to the specified parameters in the USART_InitStruct . </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>USARTx</parametername>
</parameternamelist>
<parameterdescription>
<para>Select the USART or the UART peripheral. This parameter can be one of the following values: USART1, USART2, USART3, UART4 or UART5. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>USART_InitStruct</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a <ref refid="struct_u_s_a_r_t___init_type_def" kindref="compound">USART_InitTypeDef</ref> structure that contains the configuration information for the specified USART peripheral. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" line="372" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_usart.c" bodystart="176" bodyend="273"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___u_s_a_r_t___exported___constants_1gae890b8e77c1b84a77c485a353949f7eb" compoundref="stm32f10x__usart_8h" startline="113">IS_USART_ALL_PERIPH</references>
        <references refid="group___u_s_a_r_t___flags_1ga9dc365e0a1e01031a8e0757a34b9d420" compoundref="stm32f10x__usart_8h" startline="347">IS_USART_BAUDRATE</references>
        <references refid="struct_u_s_a_r_t___init_type_def_1a6f763cb0e6044f838ee764ce437997b2" compoundref="stm32f10x__usart_8h" startline="58">USART_InitTypeDef::USART_BaudRate</references>
        <references refid="group___u_s_a_r_t___word___length_1ga5b07b29ee91f0bea4c10ec0fd74fbc04" compoundref="stm32f10x__usart_8h" startline="134">IS_USART_WORD_LENGTH</references>
        <references refid="struct_u_s_a_r_t___init_type_def_1a16d1fb7ccc2b51964f1bcfcbfba6d89d" compoundref="stm32f10x__usart_8h" startline="63">USART_InitTypeDef::USART_WordLength</references>
        <references refid="group___u_s_a_r_t___stop___bits_1ga6f9153c1fbee1058ba26ec88f0f20828" compoundref="stm32f10x__usart_8h" startline="148">IS_USART_STOPBITS</references>
        <references refid="struct_u_s_a_r_t___init_type_def_1ac745bceb79a6c4c2640fd8e8ce6639d6" compoundref="stm32f10x__usart_8h" startline="66">USART_InitTypeDef::USART_StopBits</references>
        <references refid="group___u_s_a_r_t___parity_1gaa87b2e338e0ccc42887d3c56901bee87" compoundref="stm32f10x__usart_8h" startline="163">IS_USART_PARITY</references>
        <references refid="struct_u_s_a_r_t___init_type_def_1a5ae66aba755bac37c5cf0dfbf529e2ed" compoundref="stm32f10x__usart_8h" startline="69">USART_InitTypeDef::USART_Parity</references>
        <references refid="group___u_s_a_r_t___mode_1gae9140e5ca405d2377fe0e82c79e136a2" compoundref="stm32f10x__usart_8h" startline="176">IS_USART_MODE</references>
        <references refid="struct_u_s_a_r_t___init_type_def_1a7d944d35d7d1fc79a63f249615148584" compoundref="stm32f10x__usart_8h" startline="76">USART_InitTypeDef::USART_Mode</references>
        <references refid="group___u_s_a_r_t___hardware___flow___control_1ga9b905eb465780173a2e98bc8b602c030" compoundref="stm32f10x__usart_8h" startline="188">IS_USART_HARDWARE_FLOW_CONTROL</references>
        <references refid="struct_u_s_a_r_t___init_type_def_1a9996edf3bfd90c36f03b4075969703f5" compoundref="stm32f10x__usart_8h" startline="79">USART_InitTypeDef::USART_HardwareFlowControl</references>
        <references refid="group___u_s_a_r_t___hardware___flow___control_1gaf3deaf4429b88db7753ee203f4797bd3" compoundref="stm32f10x__usart_8h" startline="184">USART_HardwareFlowControl_None</references>
        <references refid="group___u_s_a_r_t___exported___constants_1ga30e128c5edde23e1315724c0b2000d0d" compoundref="stm32f10x__usart_8h" startline="119">IS_USART_123_PERIPH</references>
        <references refid="struct_u_s_a_r_t___type_def_1a2a494156d185762e4596696796c393bc" compoundref="stm32f10x_8h" startline="1244">USART_TypeDef::CR2</references>
        <references refid="group___u_s_a_r_t___private___defines_1ga8a2294276016f30cb361a7f54ad07cd4" compoundref="stm32f10x__usart_8c" startline="62">CR2_STOP_CLEAR_Mask</references>
        <references refid="struct_u_s_a_r_t___type_def_1a5de50313b1437f7f926093f00902d37a" compoundref="stm32f10x_8h" startline="1242">USART_TypeDef::CR1</references>
        <references refid="group___u_s_a_r_t___private___defines_1ga67f7dd35ea3d1296677e5fc50b88fa90" compoundref="stm32f10x__usart_8c" startline="55">CR1_CLEAR_Mask</references>
        <references refid="struct_u_s_a_r_t___type_def_1a2b9d1df38cb1d745305c8190a8707a0f" compoundref="stm32f10x_8h" startline="1246">USART_TypeDef::CR3</references>
        <references refid="group___u_s_a_r_t___private___defines_1ga085e8ef6bc8f5de45c5be95971715f7f" compoundref="stm32f10x__usart_8c" startline="75">CR3_CLEAR_Mask</references>
        <references refid="group___r_c_c___exported___functions_1ga3e9944fd1ed734275222bbb3e3f29993" compoundref="stm32f10x__rcc_8c" startline="908" endline="1031">RCC_GetClocksFreq</references>
        <references refid="group___peripheral__memory__map_1ga86162ab3f740db9026c1320d46938b4d" compoundref="stm32f10x_8h" startline="1327">USART1_BASE</references>
        <references refid="struct_r_c_c___clocks_type_def_1ad854f0b70a6c4cf6de6dbbdcbc99b856" compoundref="stm32f10x__rcc_8h" startline="51">RCC_ClocksTypeDef::PCLK2_Frequency</references>
        <references refid="struct_r_c_c___clocks_type_def_1add4cfc63c35178d187107edc764e0b8f" compoundref="stm32f10x__rcc_8h" startline="50">RCC_ClocksTypeDef::PCLK1_Frequency</references>
        <references refid="group___u_s_a_r_t___private___defines_1ga11495857ca81074790c376317382140f" compoundref="stm32f10x__usart_8c" startline="84">CR1_OVER8_Set</references>
        <references refid="struct_u_s_a_r_t___type_def_1a2044eb2a0a8a731400d309741bceb2f7" compoundref="stm32f10x_8h" startline="1240">USART_TypeDef::BRR</references>
      </memberdef>
      <memberdef kind="function" id="group___u_s_a_r_t___exported___functions_1ga34e1faa2f312496c16cfd05155f4c8b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void USART_StructInit</definition>
        <argsstring>(USART_InitTypeDef *USART_InitStruct)</argsstring>
        <name>USART_StructInit</name>
        <param>
          <type><ref refid="struct_u_s_a_r_t___init_type_def" kindref="compound">USART_InitTypeDef</ref> *</type>
          <declname>USART_InitStruct</declname>
        </param>
        <briefdescription>
<para>Fills each USART_InitStruct member with its default value. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>USART_InitStruct</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a <ref refid="struct_u_s_a_r_t___init_type_def" kindref="compound">USART_InitTypeDef</ref> structure which will be initialized. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" line="373" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_usart.c" bodystart="281" bodyend="290"/>
        <references refid="struct_u_s_a_r_t___init_type_def_1a6f763cb0e6044f838ee764ce437997b2" compoundref="stm32f10x__usart_8h" startline="58">USART_InitTypeDef::USART_BaudRate</references>
        <references refid="struct_u_s_a_r_t___init_type_def_1a16d1fb7ccc2b51964f1bcfcbfba6d89d" compoundref="stm32f10x__usart_8h" startline="63">USART_InitTypeDef::USART_WordLength</references>
        <references refid="group___u_s_a_r_t___word___length_1ga08682faddc657df85a93627b5a146c25" compoundref="stm32f10x__usart_8h" startline="131">USART_WordLength_8b</references>
        <references refid="struct_u_s_a_r_t___init_type_def_1ac745bceb79a6c4c2640fd8e8ce6639d6" compoundref="stm32f10x__usart_8h" startline="66">USART_InitTypeDef::USART_StopBits</references>
        <references refid="group___u_s_a_r_t___stop___bits_1gae2cb35620ba001f0d63e9e0be93e4a05" compoundref="stm32f10x__usart_8h" startline="144">USART_StopBits_1</references>
        <references refid="struct_u_s_a_r_t___init_type_def_1a5ae66aba755bac37c5cf0dfbf529e2ed" compoundref="stm32f10x__usart_8h" startline="69">USART_InitTypeDef::USART_Parity</references>
        <references refid="group___u_s_a_r_t___parity_1gab9deebcb0a859360dfec85074abaa3aa" compoundref="stm32f10x__usart_8h" startline="160">USART_Parity_No</references>
        <references refid="struct_u_s_a_r_t___init_type_def_1a7d944d35d7d1fc79a63f249615148584" compoundref="stm32f10x__usart_8h" startline="76">USART_InitTypeDef::USART_Mode</references>
        <references refid="group___u_s_a_r_t___mode_1gafefcc3d3c1a1f83b425784fa6289aecf" compoundref="stm32f10x__usart_8h" startline="174">USART_Mode_Rx</references>
        <references refid="group___u_s_a_r_t___mode_1ga22b2813509a062435ea68d086ec565b4" compoundref="stm32f10x__usart_8h" startline="175">USART_Mode_Tx</references>
        <references refid="struct_u_s_a_r_t___init_type_def_1a9996edf3bfd90c36f03b4075969703f5" compoundref="stm32f10x__usart_8h" startline="79">USART_InitTypeDef::USART_HardwareFlowControl</references>
        <references refid="group___u_s_a_r_t___hardware___flow___control_1gaf3deaf4429b88db7753ee203f4797bd3" compoundref="stm32f10x__usart_8h" startline="184">USART_HardwareFlowControl_None</references>
      </memberdef>
      <memberdef kind="function" id="group___u_s_a_r_t___exported___functions_1gadb50c7a2175c91acd3728f8eefd0c63d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void USART_ClockInit</definition>
        <argsstring>(USART_TypeDef *USARTx, USART_ClockInitTypeDef *USART_ClockInitStruct)</argsstring>
        <name>USART_ClockInit</name>
        <param>
          <type><ref refid="struct_u_s_a_r_t___type_def" kindref="compound">USART_TypeDef</ref> *</type>
          <declname>USARTx</declname>
        </param>
        <param>
          <type><ref refid="struct_u_s_a_r_t___clock_init_type_def" kindref="compound">USART_ClockInitTypeDef</ref> *</type>
          <declname>USART_ClockInitStruct</declname>
        </param>
        <briefdescription>
<para>Initializes the USARTx peripheral Clock according to the specified parameters in the USART_ClockInitStruct . </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>USARTx</parametername>
</parameternamelist>
<parameterdescription>
<para>where x can be 1, 2, 3 to select the USART peripheral. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>USART_ClockInitStruct</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a <ref refid="struct_u_s_a_r_t___clock_init_type_def" kindref="compound">USART_ClockInitTypeDef</ref> structure that contains the configuration information for the specified USART peripheral. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>The Smart Card and Synchronous modes are not available for UART4 and UART5. </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" line="374" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_usart.c" bodystart="302" bodyend="325"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___u_s_a_r_t___exported___constants_1ga30e128c5edde23e1315724c0b2000d0d" compoundref="stm32f10x__usart_8h" startline="119">IS_USART_123_PERIPH</references>
        <references refid="group___u_s_a_r_t___clock_1ga0f1e1ba37690b21b7338ed3b06614cf6" compoundref="stm32f10x__usart_8h" startline="202">IS_USART_CLOCK</references>
        <references refid="struct_u_s_a_r_t___clock_init_type_def_1a229ba7c3f9a4d6d56513e6899f6c6693" compoundref="stm32f10x__usart_8h" startline="91">USART_ClockInitTypeDef::USART_Clock</references>
        <references refid="group___u_s_a_r_t___clock___polarity_1ga833e9d2e85ab84658c7a7c18bd0bc8b9" compoundref="stm32f10x__usart_8h" startline="214">IS_USART_CPOL</references>
        <references refid="struct_u_s_a_r_t___clock_init_type_def_1a01450cba8a40cf9a624b25979dc6aa77" compoundref="stm32f10x__usart_8h" startline="94">USART_ClockInitTypeDef::USART_CPOL</references>
        <references refid="group___u_s_a_r_t___clock___phase_1ga66fa1a3a757025fcd8dd069a90689f88" compoundref="stm32f10x__usart_8h" startline="226">IS_USART_CPHA</references>
        <references refid="struct_u_s_a_r_t___clock_init_type_def_1abda3a2172bd5819e1c207dc0d1c822d8" compoundref="stm32f10x__usart_8h" startline="97">USART_ClockInitTypeDef::USART_CPHA</references>
        <references refid="group___u_s_a_r_t___last___bit_1gaa941695e5612b53e9c2aca6a9fa0d695" compoundref="stm32f10x__usart_8h" startline="238">IS_USART_LASTBIT</references>
        <references refid="struct_u_s_a_r_t___clock_init_type_def_1ab1b28d63d2be6e57849666d78a4467bd" compoundref="stm32f10x__usart_8h" startline="100">USART_ClockInitTypeDef::USART_LastBit</references>
        <references refid="struct_u_s_a_r_t___type_def_1a2a494156d185762e4596696796c393bc" compoundref="stm32f10x_8h" startline="1244">USART_TypeDef::CR2</references>
        <references refid="group___u_s_a_r_t___private___defines_1ga846e1873279b2b0798cc34d76bd80592" compoundref="stm32f10x__usart_8c" startline="63">CR2_CLOCK_CLEAR_Mask</references>
      </memberdef>
      <memberdef kind="function" id="group___u_s_a_r_t___exported___functions_1ga59df27d0adda18b16ee28d47672cc724" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void USART_ClockStructInit</definition>
        <argsstring>(USART_ClockInitTypeDef *USART_ClockInitStruct)</argsstring>
        <name>USART_ClockStructInit</name>
        <param>
          <type><ref refid="struct_u_s_a_r_t___clock_init_type_def" kindref="compound">USART_ClockInitTypeDef</ref> *</type>
          <declname>USART_ClockInitStruct</declname>
        </param>
        <briefdescription>
<para>Fills each USART_ClockInitStruct member with its default value. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>USART_ClockInitStruct</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a <ref refid="struct_u_s_a_r_t___clock_init_type_def" kindref="compound">USART_ClockInitTypeDef</ref> structure which will be initialized. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" line="375" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_usart.c" bodystart="333" bodyend="340"/>
        <references refid="struct_u_s_a_r_t___clock_init_type_def_1a229ba7c3f9a4d6d56513e6899f6c6693" compoundref="stm32f10x__usart_8h" startline="91">USART_ClockInitTypeDef::USART_Clock</references>
        <references refid="group___u_s_a_r_t___clock_1ga56c12b81d19853c093e0a373d0c52fb5" compoundref="stm32f10x__usart_8h" startline="200">USART_Clock_Disable</references>
        <references refid="struct_u_s_a_r_t___clock_init_type_def_1a01450cba8a40cf9a624b25979dc6aa77" compoundref="stm32f10x__usart_8h" startline="94">USART_ClockInitTypeDef::USART_CPOL</references>
        <references refid="group___u_s_a_r_t___clock___polarity_1ga194d60b47d8042d39e843c52f3a6aa1a" compoundref="stm32f10x__usart_8h" startline="212">USART_CPOL_Low</references>
        <references refid="struct_u_s_a_r_t___clock_init_type_def_1abda3a2172bd5819e1c207dc0d1c822d8" compoundref="stm32f10x__usart_8h" startline="97">USART_ClockInitTypeDef::USART_CPHA</references>
        <references refid="group___u_s_a_r_t___clock___phase_1gab6c0fb052fb9bc418cf368c1a0e4643b" compoundref="stm32f10x__usart_8h" startline="224">USART_CPHA_1Edge</references>
        <references refid="struct_u_s_a_r_t___clock_init_type_def_1ab1b28d63d2be6e57849666d78a4467bd" compoundref="stm32f10x__usart_8h" startline="100">USART_ClockInitTypeDef::USART_LastBit</references>
        <references refid="group___u_s_a_r_t___last___bit_1ga129c89b9e0dbb3ce43ee92589b3324e5" compoundref="stm32f10x__usart_8h" startline="236">USART_LastBit_Disable</references>
      </memberdef>
      <memberdef kind="function" id="group___u_s_a_r_t___exported___functions_1ga45e51626739c5f22a6567c8a85d1d85e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void USART_Cmd</definition>
        <argsstring>(USART_TypeDef *USARTx, FunctionalState NewState)</argsstring>
        <name>USART_Cmd</name>
        <param>
          <type><ref refid="struct_u_s_a_r_t___type_def" kindref="compound">USART_TypeDef</ref> *</type>
          <declname>USARTx</declname>
        </param>
        <param>
          <type><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref></type>
          <declname>NewState</declname>
        </param>
        <briefdescription>
<para>Enables or disables the specified USART peripheral. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>USARTx</parametername>
</parameternamelist>
<parameterdescription>
<para>Select the USART or the UART peripheral. This parameter can be one of the following values: USART1, USART2, USART3, UART4 or UART5. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NewState</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of the USARTx peripheral. This parameter can be: ENABLE or DISABLE. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" line="376" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_usart.c" bodystart="351" bodyend="367"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___u_s_a_r_t___exported___constants_1gae890b8e77c1b84a77c485a353949f7eb" compoundref="stm32f10x__usart_8h" startline="113">IS_USART_ALL_PERIPH</references>
        <references refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" compoundref="stm32f10x_8h" startline="522">IS_FUNCTIONAL_STATE</references>
        <references refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1ad3a9df141be0ccf10389b640f492b26d" compoundref="stm32f10x_8h" startline="521">DISABLE</references>
        <references refid="struct_u_s_a_r_t___type_def_1a5de50313b1437f7f926093f00902d37a" compoundref="stm32f10x_8h" startline="1242">USART_TypeDef::CR1</references>
        <references refid="group___u_s_a_r_t___private___defines_1ga95f5821be56b1a5dbfdd38fdb37ed54c" compoundref="stm32f10x__usart_8c" startline="47">CR1_UE_Set</references>
        <references refid="group___u_s_a_r_t___private___defines_1ga9c75a44192cb3dbbbf509cddfc47481c" compoundref="stm32f10x__usart_8c" startline="48">CR1_UE_Reset</references>
      </memberdef>
      <memberdef kind="function" id="group___u_s_a_r_t___exported___functions_1ga6d8f2dd1f34060ae7e386e3e5d56b6f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void USART_ITConfig</definition>
        <argsstring>(USART_TypeDef *USARTx, uint16_t USART_IT, FunctionalState NewState)</argsstring>
        <name>USART_ITConfig</name>
        <param>
          <type><ref refid="struct_u_s_a_r_t___type_def" kindref="compound">USART_TypeDef</ref> *</type>
          <declname>USARTx</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>USART_IT</declname>
        </param>
        <param>
          <type><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref></type>
          <declname>NewState</declname>
        </param>
        <briefdescription>
<para>Enables or disables the specified USART interrupts. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>USARTx</parametername>
</parameternamelist>
<parameterdescription>
<para>Select the USART or the UART peripheral. This parameter can be one of the following values: USART1, USART2, USART3, UART4 or UART5. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>USART_IT</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the USART interrupt sources to be enabled or disabled. This parameter can be one of the following values: <itemizedlist>
<listitem><para>USART_IT_CTS: CTS change interrupt (not available for UART4 and UART5) </para></listitem>
<listitem><para>USART_IT_LBD: LIN Break detection interrupt </para></listitem>
<listitem><para>USART_IT_TXE: Transmit Data Register empty interrupt </para></listitem>
<listitem><para>USART_IT_TC: Transmission complete interrupt </para></listitem>
<listitem><para>USART_IT_RXNE: Receive Data register not empty interrupt </para></listitem>
<listitem><para>USART_IT_IDLE: Idle line detection interrupt </para></listitem>
<listitem><para>USART_IT_PE: Parity Error interrupt </para></listitem>
<listitem><para>USART_IT_ERR: Error interrupt(Frame error, noise error, overrun error) </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NewState</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of the specified USARTx interrupts. This parameter can be: ENABLE or DISABLE. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" line="377" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_usart.c" bodystart="388" bodyend="431"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___u_s_a_r_t___exported___constants_1gae890b8e77c1b84a77c485a353949f7eb" compoundref="stm32f10x__usart_8h" startline="113">IS_USART_ALL_PERIPH</references>
        <references refid="group___u_s_a_r_t___interrupt__definition_1ga37ce140eae1938a414ff32afed5ef236" compoundref="stm32f10x__usart_8h" startline="259">IS_USART_CONFIG_IT</references>
        <references refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" compoundref="stm32f10x_8h" startline="522">IS_FUNCTIONAL_STATE</references>
        <references refid="group___u_s_a_r_t___interrupt__definition_1gab49efbefaca2921e8cbe8f5146e99dbd" compoundref="stm32f10x__usart_8h" startline="254">USART_IT_CTS</references>
        <references refid="group___u_s_a_r_t___exported___constants_1ga30e128c5edde23e1315724c0b2000d0d" compoundref="stm32f10x__usart_8h" startline="119">IS_USART_123_PERIPH</references>
        <references refid="group___u_s_a_r_t___private___defines_1ga401c753d4de6ab56fcb026c91b8c8487" compoundref="stm32f10x__usart_8c" startline="81">IT_Mask</references>
        <references refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1ad3a9df141be0ccf10389b640f492b26d" compoundref="stm32f10x_8h" startline="521">DISABLE</references>
        <references refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" compoundref="core__cm0_8h" startline="221">__IO</references>
      </memberdef>
      <memberdef kind="function" id="group___u_s_a_r_t___exported___functions_1ga902857f199ebfba21c63d725354af66f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void USART_DMACmd</definition>
        <argsstring>(USART_TypeDef *USARTx, uint16_t USART_DMAReq, FunctionalState NewState)</argsstring>
        <name>USART_DMACmd</name>
        <param>
          <type><ref refid="struct_u_s_a_r_t___type_def" kindref="compound">USART_TypeDef</ref> *</type>
          <declname>USARTx</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>USART_DMAReq</declname>
        </param>
        <param>
          <type><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref></type>
          <declname>NewState</declname>
        </param>
        <briefdescription>
<para>Enables or disables the USART�s DMA interface. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>USARTx</parametername>
</parameternamelist>
<parameterdescription>
<para>Select the USART or the UART peripheral. This parameter can be one of the following values: USART1, USART2, USART3, UART4 or UART5. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>USART_DMAReq</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the DMA request. This parameter can be any combination of the following values: <itemizedlist>
<listitem><para>USART_DMAReq_Tx: USART DMA transmit request </para></listitem>
<listitem><para>USART_DMAReq_Rx: USART DMA receive request </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NewState</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of the DMA Request sources. This parameter can be: ENABLE or DISABLE. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>The DMA mode is not available for UART5 except in the STM32 High density value line devices(STM32F10X_HD_VL). </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" line="378" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_usart.c" bodystart="448" bodyend="466"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___u_s_a_r_t___exported___constants_1gae890b8e77c1b84a77c485a353949f7eb" compoundref="stm32f10x__usart_8h" startline="113">IS_USART_ALL_PERIPH</references>
        <references refid="group___u_s_a_r_t___d_m_a___requests_1ga8be7a899d21d82de2ee0a763b4564dc3" compoundref="stm32f10x__usart_8h" startline="280">IS_USART_DMAREQ</references>
        <references refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" compoundref="stm32f10x_8h" startline="522">IS_FUNCTIONAL_STATE</references>
        <references refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1ad3a9df141be0ccf10389b640f492b26d" compoundref="stm32f10x_8h" startline="521">DISABLE</references>
        <references refid="struct_u_s_a_r_t___type_def_1a2b9d1df38cb1d745305c8190a8707a0f" compoundref="stm32f10x_8h" startline="1246">USART_TypeDef::CR3</references>
      </memberdef>
      <memberdef kind="function" id="group___u_s_a_r_t___exported___functions_1ga65ec9928817f3f031dd9a4dfc95d6666" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void USART_SetAddress</definition>
        <argsstring>(USART_TypeDef *USARTx, uint8_t USART_Address)</argsstring>
        <name>USART_SetAddress</name>
        <param>
          <type><ref refid="struct_u_s_a_r_t___type_def" kindref="compound">USART_TypeDef</ref> *</type>
          <declname>USARTx</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>USART_Address</declname>
        </param>
        <briefdescription>
<para>Sets the address of the USART node. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>USARTx</parametername>
</parameternamelist>
<parameterdescription>
<para>Select the USART or the UART peripheral. This parameter can be one of the following values: USART1, USART2, USART3, UART4 or UART5. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>USART_Address</parametername>
</parameternamelist>
<parameterdescription>
<para>Indicates the address of the USART node. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" line="379" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_usart.c" bodystart="476" bodyend="498"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___u_s_a_r_t___exported___constants_1gae890b8e77c1b84a77c485a353949f7eb" compoundref="stm32f10x__usart_8h" startline="113">IS_USART_ALL_PERIPH</references>
        <references refid="group___u_s_a_r_t___flags_1ga194e771c3324f9e130b2887c701460a7" compoundref="stm32f10x__usart_8h" startline="348">IS_USART_ADDRESS</references>
        <references refid="struct_u_s_a_r_t___type_def_1a2a494156d185762e4596696796c393bc" compoundref="stm32f10x_8h" startline="1244">USART_TypeDef::CR2</references>
        <references refid="group___u_s_a_r_t___private___defines_1ga080c343a5a95d4419789b94405c27764" compoundref="stm32f10x__usart_8c" startline="56">CR2_Address_Mask</references>
      </memberdef>
      <memberdef kind="function" id="group___u_s_a_r_t___exported___functions_1ga4965417c2412c36e462fcad50a8d5393" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void USART_WakeUpConfig</definition>
        <argsstring>(USART_TypeDef *USARTx, uint16_t USART_WakeUp)</argsstring>
        <name>USART_WakeUpConfig</name>
        <param>
          <type><ref refid="struct_u_s_a_r_t___type_def" kindref="compound">USART_TypeDef</ref> *</type>
          <declname>USARTx</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>USART_WakeUp</declname>
        </param>
        <briefdescription>
<para>Selects the USART WakeUp method. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>USARTx</parametername>
</parameternamelist>
<parameterdescription>
<para>Select the USART or the UART peripheral. This parameter can be one of the following values: USART1, USART2, USART3, UART4 or UART5. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>USART_WakeUp</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the USART wakeup method. This parameter can be one of the following values: <itemizedlist>
<listitem><para>USART_WakeUp_IdleLine: WakeUp by an idle line detection </para></listitem>
<listitem><para>USART_WakeUp_AddressMark: WakeUp by an address mark </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" line="380" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_usart.c" bodystart="511" bodyend="519"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___u_s_a_r_t___exported___constants_1gae890b8e77c1b84a77c485a353949f7eb" compoundref="stm32f10x__usart_8h" startline="113">IS_USART_ALL_PERIPH</references>
        <references refid="group___u_s_a_r_t___wake_up__methods_1ga3611be417bdb82f42dc2ca17584271f9" compoundref="stm32f10x__usart_8h" startline="292">IS_USART_WAKEUP</references>
        <references refid="struct_u_s_a_r_t___type_def_1a5de50313b1437f7f926093f00902d37a" compoundref="stm32f10x_8h" startline="1242">USART_TypeDef::CR1</references>
        <references refid="group___u_s_a_r_t___private___defines_1gae4045dea092c3cbfe07d14fef39195ce" compoundref="stm32f10x__usart_8c" startline="50">CR1_WAKE_Mask</references>
      </memberdef>
      <memberdef kind="function" id="group___u_s_a_r_t___exported___functions_1gac27b78ce445a16fe33851d2f87781c02" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void USART_ReceiverWakeUpCmd</definition>
        <argsstring>(USART_TypeDef *USARTx, FunctionalState NewState)</argsstring>
        <name>USART_ReceiverWakeUpCmd</name>
        <param>
          <type><ref refid="struct_u_s_a_r_t___type_def" kindref="compound">USART_TypeDef</ref> *</type>
          <declname>USARTx</declname>
        </param>
        <param>
          <type><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref></type>
          <declname>NewState</declname>
        </param>
        <briefdescription>
<para>Determines if the USART is in mute mode or not. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>USARTx</parametername>
</parameternamelist>
<parameterdescription>
<para>Select the USART or the UART peripheral. This parameter can be one of the following values: USART1, USART2, USART3, UART4 or UART5. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NewState</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of the USART mute mode. This parameter can be: ENABLE or DISABLE. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" line="381" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_usart.c" bodystart="530" bodyend="546"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___u_s_a_r_t___exported___constants_1gae890b8e77c1b84a77c485a353949f7eb" compoundref="stm32f10x__usart_8h" startline="113">IS_USART_ALL_PERIPH</references>
        <references refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" compoundref="stm32f10x_8h" startline="522">IS_FUNCTIONAL_STATE</references>
        <references refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1ad3a9df141be0ccf10389b640f492b26d" compoundref="stm32f10x_8h" startline="521">DISABLE</references>
        <references refid="struct_u_s_a_r_t___type_def_1a5de50313b1437f7f926093f00902d37a" compoundref="stm32f10x_8h" startline="1242">USART_TypeDef::CR1</references>
        <references refid="group___u_s_a_r_t___private___defines_1ga5cb566b7c5e126e5ef11dd25bba50ffa" compoundref="stm32f10x__usart_8c" startline="52">CR1_RWU_Set</references>
        <references refid="group___u_s_a_r_t___private___defines_1ga064a46d19ffffddd410e969798d335ee" compoundref="stm32f10x__usart_8c" startline="53">CR1_RWU_Reset</references>
      </memberdef>
      <memberdef kind="function" id="group___u_s_a_r_t___exported___functions_1ga7bc2d291831cbc5e53e73337308029b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void USART_LINBreakDetectLengthConfig</definition>
        <argsstring>(USART_TypeDef *USARTx, uint16_t USART_LINBreakDetectLength)</argsstring>
        <name>USART_LINBreakDetectLengthConfig</name>
        <param>
          <type><ref refid="struct_u_s_a_r_t___type_def" kindref="compound">USART_TypeDef</ref> *</type>
          <declname>USARTx</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>USART_LINBreakDetectLength</declname>
        </param>
        <briefdescription>
<para>Sets the USART LIN Break detection length. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>USARTx</parametername>
</parameternamelist>
<parameterdescription>
<para>Select the USART or the UART peripheral. This parameter can be one of the following values: USART1, USART2, USART3, UART4 or UART5. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>USART_LINBreakDetectLength</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the LIN break detection length. This parameter can be one of the following values: <itemizedlist>
<listitem><para>USART_LINBreakDetectLength_10b: 10-bit break detection </para></listitem>
<listitem><para>USART_LINBreakDetectLength_11b: 11-bit break detection </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" line="382" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_usart.c" bodystart="559" bodyend="567"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___u_s_a_r_t___exported___constants_1gae890b8e77c1b84a77c485a353949f7eb" compoundref="stm32f10x__usart_8h" startline="113">IS_USART_ALL_PERIPH</references>
        <references refid="group___u_s_a_r_t___l_i_n___break___detection___length_1gaa7a45d542b1df5da1160777ad4a80d72" compoundref="stm32f10x__usart_8h" startline="304">IS_USART_LIN_BREAK_DETECT_LENGTH</references>
        <references refid="struct_u_s_a_r_t___type_def_1a2a494156d185762e4596696796c393bc" compoundref="stm32f10x_8h" startline="1244">USART_TypeDef::CR2</references>
        <references refid="group___u_s_a_r_t___private___defines_1ga9b365a89de44809a52895090e9050646" compoundref="stm32f10x__usart_8c" startline="61">CR2_LBDL_Mask</references>
      </memberdef>
      <memberdef kind="function" id="group___u_s_a_r_t___exported___functions_1ga9fdd6296f4ca4acdfcbd58bf56bd4185" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void USART_LINCmd</definition>
        <argsstring>(USART_TypeDef *USARTx, FunctionalState NewState)</argsstring>
        <name>USART_LINCmd</name>
        <param>
          <type><ref refid="struct_u_s_a_r_t___type_def" kindref="compound">USART_TypeDef</ref> *</type>
          <declname>USARTx</declname>
        </param>
        <param>
          <type><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref></type>
          <declname>NewState</declname>
        </param>
        <briefdescription>
<para>Enables or disables the USART�s LIN mode. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>USARTx</parametername>
</parameternamelist>
<parameterdescription>
<para>Select the USART or the UART peripheral. This parameter can be one of the following values: USART1, USART2, USART3, UART4 or UART5. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NewState</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of the USART LIN mode. This parameter can be: ENABLE or DISABLE. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" line="383" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_usart.c" bodystart="578" bodyend="594"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___u_s_a_r_t___exported___constants_1gae890b8e77c1b84a77c485a353949f7eb" compoundref="stm32f10x__usart_8h" startline="113">IS_USART_ALL_PERIPH</references>
        <references refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" compoundref="stm32f10x_8h" startline="522">IS_FUNCTIONAL_STATE</references>
        <references refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1ad3a9df141be0ccf10389b640f492b26d" compoundref="stm32f10x_8h" startline="521">DISABLE</references>
        <references refid="struct_u_s_a_r_t___type_def_1a2a494156d185762e4596696796c393bc" compoundref="stm32f10x_8h" startline="1244">USART_TypeDef::CR2</references>
        <references refid="group___u_s_a_r_t___private___defines_1gabc3f2b022d70a11fd0605e58cb23023f" compoundref="stm32f10x__usart_8c" startline="58">CR2_LINEN_Set</references>
        <references refid="group___u_s_a_r_t___private___defines_1ga7b8fbe7be4c85c16ea1c1e3c9fa95b05" compoundref="stm32f10x__usart_8c" startline="59">CR2_LINEN_Reset</references>
      </memberdef>
      <memberdef kind="function" id="group___u_s_a_r_t___exported___functions_1ga0b43d42da9540f446d494bf69823c6fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void USART_SendData</definition>
        <argsstring>(USART_TypeDef *USARTx, uint16_t Data)</argsstring>
        <name>USART_SendData</name>
        <param>
          <type><ref refid="struct_u_s_a_r_t___type_def" kindref="compound">USART_TypeDef</ref> *</type>
          <declname>USARTx</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>Data</declname>
        </param>
        <briefdescription>
<para>Transmits single data through the USARTx peripheral. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>USARTx</parametername>
</parameternamelist>
<parameterdescription>
<para>Select the USART or the UART peripheral. This parameter can be one of the following values: USART1, USART2, USART3, UART4 or UART5. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Data</parametername>
</parameternamelist>
<parameterdescription>
<para>the data to transmit. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" line="384" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_usart.c" bodystart="604" bodyend="612"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___u_s_a_r_t___exported___constants_1gae890b8e77c1b84a77c485a353949f7eb" compoundref="stm32f10x__usart_8h" startline="113">IS_USART_ALL_PERIPH</references>
        <references refid="group___u_s_a_r_t___flags_1gafd6307e41818e076d31f3c24cb5ba135" compoundref="stm32f10x__usart_8h" startline="349">IS_USART_DATA</references>
        <references refid="struct_u_s_a_r_t___type_def_1accee34aaec89aad4aeef512bba173ae5" compoundref="stm32f10x_8h" startline="1238">USART_TypeDef::DR</references>
      </memberdef>
      <memberdef kind="function" id="group___u_s_a_r_t___exported___functions_1gac67a91845b0b1d54d31bdfb1c5e9867c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t USART_ReceiveData</definition>
        <argsstring>(USART_TypeDef *USARTx)</argsstring>
        <name>USART_ReceiveData</name>
        <param>
          <type><ref refid="struct_u_s_a_r_t___type_def" kindref="compound">USART_TypeDef</ref> *</type>
          <declname>USARTx</declname>
        </param>
        <briefdescription>
<para>Returns the most recent received data by the USARTx peripheral. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>USARTx</parametername>
</parameternamelist>
<parameterdescription>
<para>Select the USART or the UART peripheral. This parameter can be one of the following values: USART1, USART2, USART3, UART4 or UART5. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>received data. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" line="385" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_usart.c" bodystart="621" bodyend="628"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___u_s_a_r_t___exported___constants_1gae890b8e77c1b84a77c485a353949f7eb" compoundref="stm32f10x__usart_8h" startline="113">IS_USART_ALL_PERIPH</references>
        <references refid="struct_u_s_a_r_t___type_def_1accee34aaec89aad4aeef512bba173ae5" compoundref="stm32f10x_8h" startline="1238">USART_TypeDef::DR</references>
      </memberdef>
      <memberdef kind="function" id="group___u_s_a_r_t___exported___functions_1ga39a3d33e23ee28529fa8f7259ce6811e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void USART_SendBreak</definition>
        <argsstring>(USART_TypeDef *USARTx)</argsstring>
        <name>USART_SendBreak</name>
        <param>
          <type><ref refid="struct_u_s_a_r_t___type_def" kindref="compound">USART_TypeDef</ref> *</type>
          <declname>USARTx</declname>
        </param>
        <briefdescription>
<para>Transmits break characters. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>USARTx</parametername>
</parameternamelist>
<parameterdescription>
<para>Select the USART or the UART peripheral. This parameter can be one of the following values: USART1, USART2, USART3, UART4 or UART5. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" line="386" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_usart.c" bodystart="637" bodyend="644"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___u_s_a_r_t___exported___constants_1gae890b8e77c1b84a77c485a353949f7eb" compoundref="stm32f10x__usart_8h" startline="113">IS_USART_ALL_PERIPH</references>
        <references refid="struct_u_s_a_r_t___type_def_1a5de50313b1437f7f926093f00902d37a" compoundref="stm32f10x_8h" startline="1242">USART_TypeDef::CR1</references>
        <references refid="group___u_s_a_r_t___private___defines_1ga2813b7fa1263aecfeefa48f8a55938b9" compoundref="stm32f10x__usart_8c" startline="54">CR1_SBK_Set</references>
      </memberdef>
      <memberdef kind="function" id="group___u_s_a_r_t___exported___functions_1gac4a35c6acd71ae7e0d67c1f03f0a8777" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void USART_SetGuardTime</definition>
        <argsstring>(USART_TypeDef *USARTx, uint8_t USART_GuardTime)</argsstring>
        <name>USART_SetGuardTime</name>
        <param>
          <type><ref refid="struct_u_s_a_r_t___type_def" kindref="compound">USART_TypeDef</ref> *</type>
          <declname>USARTx</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>USART_GuardTime</declname>
        </param>
        <briefdescription>
<para>Sets the specified USART guard time. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>USARTx</parametername>
</parameternamelist>
<parameterdescription>
<para>where x can be 1, 2 or 3 to select the USART peripheral. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>USART_GuardTime</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the guard time. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>The guard time bits are not available for UART4 and UART5. </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" line="387" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_usart.c" bodystart="653" bodyend="662"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___u_s_a_r_t___exported___constants_1ga30e128c5edde23e1315724c0b2000d0d" compoundref="stm32f10x__usart_8h" startline="119">IS_USART_123_PERIPH</references>
        <references refid="struct_u_s_a_r_t___type_def_1abe51502097b1fd281d0a2a1b157d769e" compoundref="stm32f10x_8h" startline="1248">USART_TypeDef::GTPR</references>
        <references refid="group___u_s_a_r_t___private___defines_1ga2fe593d0c308e2245bb66905930b3ebb" compoundref="stm32f10x__usart_8c" startline="79">GTPR_LSB_Mask</references>
      </memberdef>
      <memberdef kind="function" id="group___u_s_a_r_t___exported___functions_1gaf5da8f2eee8245425584d85d4f62cc33" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void USART_SetPrescaler</definition>
        <argsstring>(USART_TypeDef *USARTx, uint8_t USART_Prescaler)</argsstring>
        <name>USART_SetPrescaler</name>
        <param>
          <type><ref refid="struct_u_s_a_r_t___type_def" kindref="compound">USART_TypeDef</ref> *</type>
          <declname>USARTx</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>USART_Prescaler</declname>
        </param>
        <briefdescription>
<para>Sets the system clock prescaler. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>USARTx</parametername>
</parameternamelist>
<parameterdescription>
<para>Select the USART or the UART peripheral. This parameter can be one of the following values: USART1, USART2, USART3, UART4 or UART5. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>USART_Prescaler</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the prescaler clock. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>The function is used for IrDA mode with UART4 and UART5. </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" line="388" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_usart.c" bodystart="673" bodyend="694"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___u_s_a_r_t___exported___constants_1gae890b8e77c1b84a77c485a353949f7eb" compoundref="stm32f10x__usart_8h" startline="113">IS_USART_ALL_PERIPH</references>
        <references refid="struct_u_s_a_r_t___type_def_1abe51502097b1fd281d0a2a1b157d769e" compoundref="stm32f10x_8h" startline="1248">USART_TypeDef::GTPR</references>
        <references refid="group___u_s_a_r_t___private___defines_1ga405b4222892bafdf1d084de5efd24d70" compoundref="stm32f10x__usart_8c" startline="80">GTPR_MSB_Mask</references>
      </memberdef>
      <memberdef kind="function" id="group___u_s_a_r_t___exported___functions_1gabd1347e244c623447151ba3a5e986c5f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void USART_SmartCardCmd</definition>
        <argsstring>(USART_TypeDef *USARTx, FunctionalState NewState)</argsstring>
        <name>USART_SmartCardCmd</name>
        <param>
          <type><ref refid="struct_u_s_a_r_t___type_def" kindref="compound">USART_TypeDef</ref> *</type>
          <declname>USARTx</declname>
        </param>
        <param>
          <type><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref></type>
          <declname>NewState</declname>
        </param>
        <briefdescription>
<para>Enables or disables the USART�s Smart Card mode. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>USARTx</parametername>
</parameternamelist>
<parameterdescription>
<para>where x can be 1, 2 or 3 to select the USART peripheral. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NewState</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of the Smart Card mode. This parameter can be: ENABLE or DISABLE. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>The Smart Card mode is not available for UART4 and UART5. </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" line="389" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_usart.c" bodystart="704" bodyend="719"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___u_s_a_r_t___exported___constants_1ga30e128c5edde23e1315724c0b2000d0d" compoundref="stm32f10x__usart_8h" startline="119">IS_USART_123_PERIPH</references>
        <references refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" compoundref="stm32f10x_8h" startline="522">IS_FUNCTIONAL_STATE</references>
        <references refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1ad3a9df141be0ccf10389b640f492b26d" compoundref="stm32f10x_8h" startline="521">DISABLE</references>
        <references refid="struct_u_s_a_r_t___type_def_1a2b9d1df38cb1d745305c8190a8707a0f" compoundref="stm32f10x_8h" startline="1246">USART_TypeDef::CR3</references>
        <references refid="group___u_s_a_r_t___private___defines_1gab47df7b36b4f1315953f6aa45de2fb61" compoundref="stm32f10x__usart_8c" startline="65">CR3_SCEN_Set</references>
        <references refid="group___u_s_a_r_t___private___defines_1ga294c473dc7f8ff3e9cbaa0675c8c75f3" compoundref="stm32f10x__usart_8c" startline="66">CR3_SCEN_Reset</references>
      </memberdef>
      <memberdef kind="function" id="group___u_s_a_r_t___exported___functions_1ga62e22f47e38aa53f2edce8771f7a5dfa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void USART_SmartCardNACKCmd</definition>
        <argsstring>(USART_TypeDef *USARTx, FunctionalState NewState)</argsstring>
        <name>USART_SmartCardNACKCmd</name>
        <param>
          <type><ref refid="struct_u_s_a_r_t___type_def" kindref="compound">USART_TypeDef</ref> *</type>
          <declname>USARTx</declname>
        </param>
        <param>
          <type><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref></type>
          <declname>NewState</declname>
        </param>
        <briefdescription>
<para>Enables or disables NACK transmission. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>USARTx</parametername>
</parameternamelist>
<parameterdescription>
<para>where x can be 1, 2 or 3 to select the USART peripheral. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NewState</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of the NACK transmission. This parameter can be: ENABLE or DISABLE. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>The Smart Card mode is not available for UART4 and UART5. </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" line="390" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_usart.c" bodystart="729" bodyend="744"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___u_s_a_r_t___exported___constants_1ga30e128c5edde23e1315724c0b2000d0d" compoundref="stm32f10x__usart_8h" startline="119">IS_USART_123_PERIPH</references>
        <references refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" compoundref="stm32f10x_8h" startline="522">IS_FUNCTIONAL_STATE</references>
        <references refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1ad3a9df141be0ccf10389b640f492b26d" compoundref="stm32f10x_8h" startline="521">DISABLE</references>
        <references refid="struct_u_s_a_r_t___type_def_1a2b9d1df38cb1d745305c8190a8707a0f" compoundref="stm32f10x_8h" startline="1246">USART_TypeDef::CR3</references>
        <references refid="group___u_s_a_r_t___private___defines_1ga950cc9f7251709854754add7d9aaca60" compoundref="stm32f10x__usart_8c" startline="68">CR3_NACK_Set</references>
        <references refid="group___u_s_a_r_t___private___defines_1gabed0cac273ff4faf009e8c35243c1e10" compoundref="stm32f10x__usart_8c" startline="69">CR3_NACK_Reset</references>
      </memberdef>
      <memberdef kind="function" id="group___u_s_a_r_t___exported___functions_1gaaa23b05fe0e1896bad90da7f82750831" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void USART_HalfDuplexCmd</definition>
        <argsstring>(USART_TypeDef *USARTx, FunctionalState NewState)</argsstring>
        <name>USART_HalfDuplexCmd</name>
        <param>
          <type><ref refid="struct_u_s_a_r_t___type_def" kindref="compound">USART_TypeDef</ref> *</type>
          <declname>USARTx</declname>
        </param>
        <param>
          <type><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref></type>
          <declname>NewState</declname>
        </param>
        <briefdescription>
<para>Enables or disables the USART�s Half Duplex communication. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>USARTx</parametername>
</parameternamelist>
<parameterdescription>
<para>Select the USART or the UART peripheral. This parameter can be one of the following values: USART1, USART2, USART3, UART4 or UART5. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NewState</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of the USART Communication. This parameter can be: ENABLE or DISABLE. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" line="391" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_usart.c" bodystart="755" bodyend="771"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___u_s_a_r_t___exported___constants_1gae890b8e77c1b84a77c485a353949f7eb" compoundref="stm32f10x__usart_8h" startline="113">IS_USART_ALL_PERIPH</references>
        <references refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" compoundref="stm32f10x_8h" startline="522">IS_FUNCTIONAL_STATE</references>
        <references refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1ad3a9df141be0ccf10389b640f492b26d" compoundref="stm32f10x_8h" startline="521">DISABLE</references>
        <references refid="struct_u_s_a_r_t___type_def_1a2b9d1df38cb1d745305c8190a8707a0f" compoundref="stm32f10x_8h" startline="1246">USART_TypeDef::CR3</references>
        <references refid="group___u_s_a_r_t___private___defines_1ga0c5c30ea9777d0c8c6f1b5ff85dfca3c" compoundref="stm32f10x__usart_8c" startline="71">CR3_HDSEL_Set</references>
        <references refid="group___u_s_a_r_t___private___defines_1ga762c72448ba24f3487dfa457a8dcc9fc" compoundref="stm32f10x__usart_8c" startline="72">CR3_HDSEL_Reset</references>
      </memberdef>
      <memberdef kind="function" id="group___u_s_a_r_t___exported___functions_1ga3897bab07491d9239f8a238a9a7cddea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void USART_OverSampling8Cmd</definition>
        <argsstring>(USART_TypeDef *USARTx, FunctionalState NewState)</argsstring>
        <name>USART_OverSampling8Cmd</name>
        <param>
          <type><ref refid="struct_u_s_a_r_t___type_def" kindref="compound">USART_TypeDef</ref> *</type>
          <declname>USARTx</declname>
        </param>
        <param>
          <type><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref></type>
          <declname>NewState</declname>
        </param>
        <briefdescription>
<para>Enables or disables the USART&apos;s 8x oversampling mode. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>USARTx</parametername>
</parameternamelist>
<parameterdescription>
<para>Select the USART or the UART peripheral. This parameter can be one of the following values: USART1, USART2, USART3, UART4 or UART5. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NewState</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of the USART one bit sampling method. This parameter can be: ENABLE or DISABLE. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function has to be called before calling <ref refid="group___u_s_a_r_t___private___functions_1ga98da340ea0324002ba1b4263e91ab2ff" kindref="member">USART_Init()</ref> function in order to have correct baudrate Divider value. </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" line="392" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_usart.c" bodystart="786" bodyend="802"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___u_s_a_r_t___exported___constants_1gae890b8e77c1b84a77c485a353949f7eb" compoundref="stm32f10x__usart_8h" startline="113">IS_USART_ALL_PERIPH</references>
        <references refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" compoundref="stm32f10x_8h" startline="522">IS_FUNCTIONAL_STATE</references>
        <references refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1ad3a9df141be0ccf10389b640f492b26d" compoundref="stm32f10x_8h" startline="521">DISABLE</references>
        <references refid="struct_u_s_a_r_t___type_def_1a5de50313b1437f7f926093f00902d37a" compoundref="stm32f10x_8h" startline="1242">USART_TypeDef::CR1</references>
        <references refid="group___u_s_a_r_t___private___defines_1ga11495857ca81074790c376317382140f" compoundref="stm32f10x__usart_8c" startline="84">CR1_OVER8_Set</references>
        <references refid="group___u_s_a_r_t___private___defines_1gaf84165f2974000906c495b3c27dc5121" compoundref="stm32f10x__usart_8c" startline="85">CR1_OVER8_Reset</references>
      </memberdef>
      <memberdef kind="function" id="group___u_s_a_r_t___exported___functions_1ga3ed89ea8765d851510cfe90f7d90cbbb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void USART_OneBitMethodCmd</definition>
        <argsstring>(USART_TypeDef *USARTx, FunctionalState NewState)</argsstring>
        <name>USART_OneBitMethodCmd</name>
        <param>
          <type><ref refid="struct_u_s_a_r_t___type_def" kindref="compound">USART_TypeDef</ref> *</type>
          <declname>USARTx</declname>
        </param>
        <param>
          <type><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref></type>
          <declname>NewState</declname>
        </param>
        <briefdescription>
<para>Enables or disables the USART&apos;s one bit sampling method. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>USARTx</parametername>
</parameternamelist>
<parameterdescription>
<para>Select the USART or the UART peripheral. This parameter can be one of the following values: USART1, USART2, USART3, UART4 or UART5. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NewState</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of the USART one bit sampling method. This parameter can be: ENABLE or DISABLE. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" line="393" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_usart.c" bodystart="813" bodyend="829"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___u_s_a_r_t___exported___constants_1gae890b8e77c1b84a77c485a353949f7eb" compoundref="stm32f10x__usart_8h" startline="113">IS_USART_ALL_PERIPH</references>
        <references refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" compoundref="stm32f10x_8h" startline="522">IS_FUNCTIONAL_STATE</references>
        <references refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1ad3a9df141be0ccf10389b640f492b26d" compoundref="stm32f10x_8h" startline="521">DISABLE</references>
        <references refid="struct_u_s_a_r_t___type_def_1a2b9d1df38cb1d745305c8190a8707a0f" compoundref="stm32f10x_8h" startline="1246">USART_TypeDef::CR3</references>
        <references refid="group___u_s_a_r_t___private___defines_1gac512024dda541435acfe0b50de925105" compoundref="stm32f10x__usart_8c" startline="88">CR3_ONEBITE_Set</references>
        <references refid="group___u_s_a_r_t___private___defines_1ga55dc289819dde550630df98267bbef52" compoundref="stm32f10x__usart_8c" startline="89">CR3_ONEBITE_Reset</references>
      </memberdef>
      <memberdef kind="function" id="group___u_s_a_r_t___exported___functions_1ga81a0cd36199040bf6d266b57babd678e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void USART_IrDAConfig</definition>
        <argsstring>(USART_TypeDef *USARTx, uint16_t USART_IrDAMode)</argsstring>
        <name>USART_IrDAConfig</name>
        <param>
          <type><ref refid="struct_u_s_a_r_t___type_def" kindref="compound">USART_TypeDef</ref> *</type>
          <declname>USARTx</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>USART_IrDAMode</declname>
        </param>
        <briefdescription>
<para>Configures the USART&apos;s IrDA interface. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>USARTx</parametername>
</parameternamelist>
<parameterdescription>
<para>Select the USART or the UART peripheral. This parameter can be one of the following values: USART1, USART2, USART3, UART4 or UART5. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>USART_IrDAMode</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the IrDA mode. This parameter can be one of the following values: <itemizedlist>
<listitem><para>USART_IrDAMode_LowPower </para></listitem>
<listitem><para>USART_IrDAMode_Normal </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" line="394" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_usart.c" bodystart="842" bodyend="850"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___u_s_a_r_t___exported___constants_1gae890b8e77c1b84a77c485a353949f7eb" compoundref="stm32f10x__usart_8h" startline="113">IS_USART_ALL_PERIPH</references>
        <references refid="group___u_s_a_r_t___ir_d_a___low___power_1ga7790838ff8ee71089da2c0e5bceee569" compoundref="stm32f10x__usart_8h" startline="317">IS_USART_IRDA_MODE</references>
        <references refid="struct_u_s_a_r_t___type_def_1a2b9d1df38cb1d745305c8190a8707a0f" compoundref="stm32f10x_8h" startline="1246">USART_TypeDef::CR3</references>
        <references refid="group___u_s_a_r_t___private___defines_1gaea5d8d002a34c3a587719533db2c17f9" compoundref="stm32f10x__usart_8c" startline="74">CR3_IRLP_Mask</references>
      </memberdef>
      <memberdef kind="function" id="group___u_s_a_r_t___exported___functions_1gabff56ebb494fdfadcc6ef4fe9ac8dd24" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void USART_IrDACmd</definition>
        <argsstring>(USART_TypeDef *USARTx, FunctionalState NewState)</argsstring>
        <name>USART_IrDACmd</name>
        <param>
          <type><ref refid="struct_u_s_a_r_t___type_def" kindref="compound">USART_TypeDef</ref> *</type>
          <declname>USARTx</declname>
        </param>
        <param>
          <type><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref></type>
          <declname>NewState</declname>
        </param>
        <briefdescription>
<para>Enables or disables the USART&apos;s IrDA interface. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>USARTx</parametername>
</parameternamelist>
<parameterdescription>
<para>Select the USART or the UART peripheral. This parameter can be one of the following values: USART1, USART2, USART3, UART4 or UART5. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NewState</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of the IrDA mode. This parameter can be: ENABLE or DISABLE. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" line="395" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_usart.c" bodystart="861" bodyend="877"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___u_s_a_r_t___exported___constants_1gae890b8e77c1b84a77c485a353949f7eb" compoundref="stm32f10x__usart_8h" startline="113">IS_USART_ALL_PERIPH</references>
        <references refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" compoundref="stm32f10x_8h" startline="522">IS_FUNCTIONAL_STATE</references>
        <references refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1ad3a9df141be0ccf10389b640f492b26d" compoundref="stm32f10x_8h" startline="521">DISABLE</references>
        <references refid="struct_u_s_a_r_t___type_def_1a2b9d1df38cb1d745305c8190a8707a0f" compoundref="stm32f10x_8h" startline="1246">USART_TypeDef::CR3</references>
        <references refid="group___u_s_a_r_t___private___defines_1gad5dd1d08f3836f9a3c3f3cc0c66a8b8f" compoundref="stm32f10x__usart_8c" startline="77">CR3_IREN_Set</references>
        <references refid="group___u_s_a_r_t___private___defines_1gad1520358de97e48fe18780e5cc5296bd" compoundref="stm32f10x__usart_8c" startline="78">CR3_IREN_Reset</references>
      </memberdef>
      <memberdef kind="function" id="group___u_s_a_r_t___exported___functions_1ga144630722defc9e312f0ad280b68e9da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___exported__types_1ga89136caac2e14c55151f527ac02daaff" kindref="member">FlagStatus</ref></type>
        <definition>FlagStatus USART_GetFlagStatus</definition>
        <argsstring>(USART_TypeDef *USARTx, uint16_t USART_FLAG)</argsstring>
        <name>USART_GetFlagStatus</name>
        <param>
          <type><ref refid="struct_u_s_a_r_t___type_def" kindref="compound">USART_TypeDef</ref> *</type>
          <declname>USARTx</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>USART_FLAG</declname>
        </param>
        <briefdescription>
<para>Checks whether the specified USART flag is set or not. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>USARTx</parametername>
</parameternamelist>
<parameterdescription>
<para>Select the USART or the UART peripheral. This parameter can be one of the following values: USART1, USART2, USART3, UART4 or UART5. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>USART_FLAG</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the flag to check. This parameter can be one of the following values: <itemizedlist>
<listitem><para>USART_FLAG_CTS: CTS Change flag (not available for UART4 and UART5) </para></listitem>
<listitem><para>USART_FLAG_LBD: LIN Break detection flag </para></listitem>
<listitem><para>USART_FLAG_TXE: Transmit data register empty flag </para></listitem>
<listitem><para>USART_FLAG_TC: Transmission Complete flag </para></listitem>
<listitem><para>USART_FLAG_RXNE: Receive data register not empty flag </para></listitem>
<listitem><para>USART_FLAG_IDLE: Idle Line detection flag </para></listitem>
<listitem><para>USART_FLAG_ORE: OverRun Error flag </para></listitem>
<listitem><para>USART_FLAG_NE: Noise Error flag </para></listitem>
<listitem><para>USART_FLAG_FE: Framing Error flag </para></listitem>
<listitem><para>USART_FLAG_PE: Parity Error flag </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of USART_FLAG (SET or RESET). </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" line="396" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_usart.c" bodystart="898" bodyend="919"/>
        <references refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffa589b7d94a3d91d145720e2fed0eb3a05" compoundref="stm32f10x_8h" startline="519">RESET</references>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___u_s_a_r_t___exported___constants_1gae890b8e77c1b84a77c485a353949f7eb" compoundref="stm32f10x__usart_8h" startline="113">IS_USART_ALL_PERIPH</references>
        <references refid="group___u_s_a_r_t___flags_1ga3e20747ce7c97a36718933c0cb3dac29" compoundref="stm32f10x__usart_8h" startline="337">IS_USART_FLAG</references>
        <references refid="group___u_s_a_r_t___flags_1ga94b7272319cca88a65075d5cb6048441" compoundref="stm32f10x__usart_8h" startline="327">USART_FLAG_CTS</references>
        <references refid="group___u_s_a_r_t___exported___constants_1ga30e128c5edde23e1315724c0b2000d0d" compoundref="stm32f10x__usart_8h" startline="119">IS_USART_123_PERIPH</references>
        <references refid="struct_u_s_a_r_t___type_def_1a3f1fd9f0c004d3087caeba4815faa41c" compoundref="stm32f10x_8h" startline="1236">USART_TypeDef::SR</references>
        <references refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffab44c8101cc294c074709ec1b14211792" compoundref="stm32f10x_8h" startline="519">SET</references>
      </memberdef>
      <memberdef kind="function" id="group___u_s_a_r_t___exported___functions_1gad962e148fc466ae1b45b288f6c91d966" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void USART_ClearFlag</definition>
        <argsstring>(USART_TypeDef *USARTx, uint16_t USART_FLAG)</argsstring>
        <name>USART_ClearFlag</name>
        <param>
          <type><ref refid="struct_u_s_a_r_t___type_def" kindref="compound">USART_TypeDef</ref> *</type>
          <declname>USARTx</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>USART_FLAG</declname>
        </param>
        <briefdescription>
<para>Clears the USARTx&apos;s pending flags. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>USARTx</parametername>
</parameternamelist>
<parameterdescription>
<para>Select the USART or the UART peripheral. This parameter can be one of the following values: USART1, USART2, USART3, UART4 or UART5. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>USART_FLAG</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the flag to clear. This parameter can be any combination of the following values: <itemizedlist>
<listitem><para>USART_FLAG_CTS: CTS Change flag (not available for UART4 and UART5). </para></listitem>
<listitem><para>USART_FLAG_LBD: LIN Break detection flag. </para></listitem>
<listitem><para>USART_FLAG_TC: Transmission Complete flag. </para></listitem>
<listitem><para>USART_FLAG_RXNE: Receive data register not empty flag.</para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para><itemizedlist>
<listitem><para>PE (Parity error), FE (Framing error), NE (Noise error), ORE (OverRun error) and IDLE (Idle line detected) flags are cleared by software sequence: a read operation to USART_SR register (<ref refid="group___u_s_a_r_t___private___functions_1ga144630722defc9e312f0ad280b68e9da" kindref="member">USART_GetFlagStatus()</ref>) followed by a read operation to USART_DR register (<ref refid="group___u_s_a_r_t___private___functions_1gac67a91845b0b1d54d31bdfb1c5e9867c" kindref="member">USART_ReceiveData()</ref>).</para></listitem><listitem><para>RXNE flag can be also cleared by a read to the USART_DR register (<ref refid="group___u_s_a_r_t___private___functions_1gac67a91845b0b1d54d31bdfb1c5e9867c" kindref="member">USART_ReceiveData()</ref>).</para></listitem><listitem><para>TC flag can be also cleared by software sequence: a read operation to USART_SR register (<ref refid="group___u_s_a_r_t___private___functions_1ga144630722defc9e312f0ad280b68e9da" kindref="member">USART_GetFlagStatus()</ref>) followed by a write operation to USART_DR register (<ref refid="group___u_s_a_r_t___private___functions_1ga0b43d42da9540f446d494bf69823c6fb" kindref="member">USART_SendData()</ref>).</para></listitem><listitem><para>TXE flag is cleared only by a write to the USART_DR register (<ref refid="group___u_s_a_r_t___private___functions_1ga0b43d42da9540f446d494bf69823c6fb" kindref="member">USART_SendData()</ref>). </para></listitem></itemizedlist>
</para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" line="397" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_usart.c" bodystart="947" bodyend="959"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___u_s_a_r_t___exported___constants_1gae890b8e77c1b84a77c485a353949f7eb" compoundref="stm32f10x__usart_8h" startline="113">IS_USART_ALL_PERIPH</references>
        <references refid="group___u_s_a_r_t___flags_1gadc905fdce8defba31c00c95554a26bc3" compoundref="stm32f10x__usart_8h" startline="343">IS_USART_CLEAR_FLAG</references>
        <references refid="group___u_s_a_r_t___flags_1ga94b7272319cca88a65075d5cb6048441" compoundref="stm32f10x__usart_8h" startline="327">USART_FLAG_CTS</references>
        <references refid="group___u_s_a_r_t___exported___constants_1ga30e128c5edde23e1315724c0b2000d0d" compoundref="stm32f10x__usart_8h" startline="119">IS_USART_123_PERIPH</references>
        <references refid="struct_u_s_a_r_t___type_def_1a3f1fd9f0c004d3087caeba4815faa41c" compoundref="stm32f10x_8h" startline="1236">USART_TypeDef::SR</references>
      </memberdef>
      <memberdef kind="function" id="group___u_s_a_r_t___exported___functions_1ga93d8f031241bcdbe938d091a85295445" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___exported__types_1gaacbd7ed539db0aacd973a0f6eca34074" kindref="member">ITStatus</ref></type>
        <definition>ITStatus USART_GetITStatus</definition>
        <argsstring>(USART_TypeDef *USARTx, uint16_t USART_IT)</argsstring>
        <name>USART_GetITStatus</name>
        <param>
          <type><ref refid="struct_u_s_a_r_t___type_def" kindref="compound">USART_TypeDef</ref> *</type>
          <declname>USARTx</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>USART_IT</declname>
        </param>
        <briefdescription>
<para>Checks whether the specified USART interrupt has occurred or not. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>USARTx</parametername>
</parameternamelist>
<parameterdescription>
<para>Select the USART or the UART peripheral. This parameter can be one of the following values: USART1, USART2, USART3, UART4 or UART5. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>USART_IT</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the USART interrupt source to check. This parameter can be one of the following values: <itemizedlist>
<listitem><para>USART_IT_CTS: CTS change interrupt (not available for UART4 and UART5) </para></listitem>
<listitem><para>USART_IT_LBD: LIN Break detection interrupt </para></listitem>
<listitem><para>USART_IT_TXE: Tansmit Data Register empty interrupt </para></listitem>
<listitem><para>USART_IT_TC: Transmission complete interrupt </para></listitem>
<listitem><para>USART_IT_RXNE: Receive Data register not empty interrupt </para></listitem>
<listitem><para>USART_IT_IDLE: Idle line detection interrupt </para></listitem>
<listitem><para>USART_IT_ORE: OverRun Error interrupt </para></listitem>
<listitem><para>USART_IT_NE: Noise Error interrupt </para></listitem>
<listitem><para>USART_IT_FE: Framing Error interrupt </para></listitem>
<listitem><para>USART_IT_PE: Parity Error interrupt </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of USART_IT (SET or RESET). </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" line="398" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_usart.c" bodystart="980" bodyend="1025"/>
        <references refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffa589b7d94a3d91d145720e2fed0eb3a05" compoundref="stm32f10x_8h" startline="519">RESET</references>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___u_s_a_r_t___exported___constants_1gae890b8e77c1b84a77c485a353949f7eb" compoundref="stm32f10x__usart_8h" startline="113">IS_USART_ALL_PERIPH</references>
        <references refid="group___u_s_a_r_t___interrupt__definition_1ga9a8014793a383d710eaaf4185f2b795d" compoundref="stm32f10x__usart_8h" startline="263">IS_USART_GET_IT</references>
        <references refid="group___u_s_a_r_t___interrupt__definition_1gab49efbefaca2921e8cbe8f5146e99dbd" compoundref="stm32f10x__usart_8h" startline="254">USART_IT_CTS</references>
        <references refid="group___u_s_a_r_t___exported___constants_1ga30e128c5edde23e1315724c0b2000d0d" compoundref="stm32f10x__usart_8h" startline="119">IS_USART_123_PERIPH</references>
        <references refid="group___u_s_a_r_t___private___defines_1ga401c753d4de6ab56fcb026c91b8c8487" compoundref="stm32f10x__usart_8c" startline="81">IT_Mask</references>
        <references refid="struct_u_s_a_r_t___type_def_1a5de50313b1437f7f926093f00902d37a" compoundref="stm32f10x_8h" startline="1242">USART_TypeDef::CR1</references>
        <references refid="struct_u_s_a_r_t___type_def_1a2a494156d185762e4596696796c393bc" compoundref="stm32f10x_8h" startline="1244">USART_TypeDef::CR2</references>
        <references refid="struct_u_s_a_r_t___type_def_1a2b9d1df38cb1d745305c8190a8707a0f" compoundref="stm32f10x_8h" startline="1246">USART_TypeDef::CR3</references>
        <references refid="struct_u_s_a_r_t___type_def_1a3f1fd9f0c004d3087caeba4815faa41c" compoundref="stm32f10x_8h" startline="1236">USART_TypeDef::SR</references>
        <references refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffab44c8101cc294c074709ec1b14211792" compoundref="stm32f10x_8h" startline="519">SET</references>
      </memberdef>
      <memberdef kind="function" id="group___u_s_a_r_t___exported___functions_1ga1fc25d0338695063be5e50156955d9bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void USART_ClearITPendingBit</definition>
        <argsstring>(USART_TypeDef *USARTx, uint16_t USART_IT)</argsstring>
        <name>USART_ClearITPendingBit</name>
        <param>
          <type><ref refid="struct_u_s_a_r_t___type_def" kindref="compound">USART_TypeDef</ref> *</type>
          <declname>USARTx</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>USART_IT</declname>
        </param>
        <briefdescription>
<para>Clears the USARTx&apos;s interrupt pending bits. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>USARTx</parametername>
</parameternamelist>
<parameterdescription>
<para>Select the USART or the UART peripheral. This parameter can be one of the following values: USART1, USART2, USART3, UART4 or UART5. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>USART_IT</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the interrupt pending bit to clear. This parameter can be one of the following values: <itemizedlist>
<listitem><para>USART_IT_CTS: CTS change interrupt (not available for UART4 and UART5) </para></listitem>
<listitem><para>USART_IT_LBD: LIN Break detection interrupt </para></listitem>
<listitem><para>USART_IT_TC: Transmission complete interrupt. </para></listitem>
<listitem><para>USART_IT_RXNE: Receive Data register not empty interrupt.</para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para><itemizedlist>
<listitem><para>PE (Parity error), FE (Framing error), NE (Noise error), ORE (OverRun error) and IDLE (Idle line detected) pending bits are cleared by software sequence: a read operation to USART_SR register (<ref refid="group___u_s_a_r_t___private___functions_1ga93d8f031241bcdbe938d091a85295445" kindref="member">USART_GetITStatus()</ref>) followed by a read operation to USART_DR register (<ref refid="group___u_s_a_r_t___private___functions_1gac67a91845b0b1d54d31bdfb1c5e9867c" kindref="member">USART_ReceiveData()</ref>).</para></listitem><listitem><para>RXNE pending bit can be also cleared by a read to the USART_DR register (<ref refid="group___u_s_a_r_t___private___functions_1gac67a91845b0b1d54d31bdfb1c5e9867c" kindref="member">USART_ReceiveData()</ref>).</para></listitem><listitem><para>TC pending bit can be also cleared by software sequence: a read operation to USART_SR register (<ref refid="group___u_s_a_r_t___private___functions_1ga93d8f031241bcdbe938d091a85295445" kindref="member">USART_GetITStatus()</ref>) followed by a write operation to USART_DR register (<ref refid="group___u_s_a_r_t___private___functions_1ga0b43d42da9540f446d494bf69823c6fb" kindref="member">USART_SendData()</ref>).</para></listitem><listitem><para>TXE pending bit is cleared only by a write to the USART_DR register (<ref refid="group___u_s_a_r_t___private___functions_1ga0b43d42da9540f446d494bf69823c6fb" kindref="member">USART_SendData()</ref>). </para></listitem></itemizedlist>
</para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h" line="399" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_usart.c" bodystart="1054" bodyend="1080"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___u_s_a_r_t___exported___constants_1gae890b8e77c1b84a77c485a353949f7eb" compoundref="stm32f10x__usart_8h" startline="113">IS_USART_ALL_PERIPH</references>
        <references refid="group___u_s_a_r_t___interrupt__definition_1ga3ceda175140b84eea02a2261ebda4efd" compoundref="stm32f10x__usart_8h" startline="268">IS_USART_CLEAR_IT</references>
        <references refid="group___u_s_a_r_t___interrupt__definition_1gab49efbefaca2921e8cbe8f5146e99dbd" compoundref="stm32f10x__usart_8h" startline="254">USART_IT_CTS</references>
        <references refid="group___u_s_a_r_t___exported___constants_1ga30e128c5edde23e1315724c0b2000d0d" compoundref="stm32f10x__usart_8h" startline="119">IS_USART_123_PERIPH</references>
        <references refid="struct_u_s_a_r_t___type_def_1a3f1fd9f0c004d3087caeba4815faa41c" compoundref="stm32f10x_8h" startline="1236">USART_TypeDef::SR</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This file contains all the functions prototypes for the USART firmware library. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>MCD Application Team </para></simplesect>
<simplesect kind="version"><para>V3.5.0 </para></simplesect>
<simplesect kind="date"><para>11-March-2011 </para></simplesect>
<simplesect kind="attention"><para></para></simplesect>
THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.</para><para><heading level="2"><center><copy/> COPYRIGHT 2011 STMicroelectronics</center></heading>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="23"><highlight class="comment">/*<sp/>Define<sp/>to<sp/>prevent<sp/>recursive<sp/>inclusion<sp/>-------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__STM32F10x_USART_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__STM32F10x_USART_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/>[ILG]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>(<sp/>__GNUC__<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>GCC<sp/>diagnostic<sp/>push</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>GCC<sp/>diagnostic<sp/>ignored<sp/>&quot;-Wpadded&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Includes<sp/>------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="stm32f10x_8h" kindref="compound">stm32f10x.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="struct_u_s_a_r_t___init_type_def" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal">{</highlight></codeline>
<codeline lineno="58" refid="struct_u_s_a_r_t___init_type_def_1a6f763cb0e6044f838ee764ce437997b2" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="struct_u_s_a_r_t___init_type_def_1a6f763cb0e6044f838ee764ce437997b2" kindref="member">USART_BaudRate</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="63" refid="struct_u_s_a_r_t___init_type_def_1a16d1fb7ccc2b51964f1bcfcbfba6d89d" refkind="member"><highlight class="normal"><sp/><sp/>uint16_t<sp/><ref refid="struct_u_s_a_r_t___init_type_def_1a16d1fb7ccc2b51964f1bcfcbfba6d89d" kindref="member">USART_WordLength</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="66" refid="struct_u_s_a_r_t___init_type_def_1ac745bceb79a6c4c2640fd8e8ce6639d6" refkind="member"><highlight class="normal"><sp/><sp/>uint16_t<sp/><ref refid="struct_u_s_a_r_t___init_type_def_1ac745bceb79a6c4c2640fd8e8ce6639d6" kindref="member">USART_StopBits</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="69" refid="struct_u_s_a_r_t___init_type_def_1a5ae66aba755bac37c5cf0dfbf529e2ed" refkind="member"><highlight class="normal"><sp/><sp/>uint16_t<sp/><ref refid="struct_u_s_a_r_t___init_type_def_1a5ae66aba755bac37c5cf0dfbf529e2ed" kindref="member">USART_Parity</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="76" refid="struct_u_s_a_r_t___init_type_def_1a7d944d35d7d1fc79a63f249615148584" refkind="member"><highlight class="normal"><sp/><sp/>uint16_t<sp/><ref refid="struct_u_s_a_r_t___init_type_def_1a7d944d35d7d1fc79a63f249615148584" kindref="member">USART_Mode</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="79" refid="struct_u_s_a_r_t___init_type_def_1a9996edf3bfd90c36f03b4075969703f5" refkind="member"><highlight class="normal"><sp/><sp/>uint16_t<sp/><ref refid="struct_u_s_a_r_t___init_type_def_1a9996edf3bfd90c36f03b4075969703f5" kindref="member">USART_HardwareFlowControl</ref>;<sp/></highlight></codeline>
<codeline lineno="82"><highlight class="normal">}<sp/><ref refid="struct_u_s_a_r_t___init_type_def" kindref="compound">USART_InitTypeDef</ref>;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="struct_u_s_a_r_t___clock_init_type_def" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal">{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="struct_u_s_a_r_t___clock_init_type_def_1a229ba7c3f9a4d6d56513e6899f6c6693" refkind="member"><highlight class="normal"><sp/><sp/>uint16_t<sp/><ref refid="struct_u_s_a_r_t___clock_init_type_def_1a229ba7c3f9a4d6d56513e6899f6c6693" kindref="member">USART_Clock</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="94" refid="struct_u_s_a_r_t___clock_init_type_def_1a01450cba8a40cf9a624b25979dc6aa77" refkind="member"><highlight class="normal"><sp/><sp/>uint16_t<sp/><ref refid="struct_u_s_a_r_t___clock_init_type_def_1a01450cba8a40cf9a624b25979dc6aa77" kindref="member">USART_CPOL</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="97" refid="struct_u_s_a_r_t___clock_init_type_def_1abda3a2172bd5819e1c207dc0d1c822d8" refkind="member"><highlight class="normal"><sp/><sp/>uint16_t<sp/><ref refid="struct_u_s_a_r_t___clock_init_type_def_1abda3a2172bd5819e1c207dc0d1c822d8" kindref="member">USART_CPHA</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="100" refid="struct_u_s_a_r_t___clock_init_type_def_1ab1b28d63d2be6e57849666d78a4467bd" refkind="member"><highlight class="normal"><sp/><sp/>uint16_t<sp/><ref refid="struct_u_s_a_r_t___clock_init_type_def_1ab1b28d63d2be6e57849666d78a4467bd" kindref="member">USART_LastBit</ref>;<sp/></highlight></codeline>
<codeline lineno="103"><highlight class="normal">}<sp/><ref refid="struct_u_s_a_r_t___clock_init_type_def" kindref="compound">USART_ClockInitTypeDef</ref>;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="113" refid="group___u_s_a_r_t___exported___constants_1gae890b8e77c1b84a77c485a353949f7eb" refkind="member"><highlight class="preprocessor">#define<sp/>IS_USART_ALL_PERIPH(PERIPH)<sp/>(((PERIPH)<sp/>==<sp/>USART1)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="114"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((PERIPH)<sp/>==<sp/>USART2)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="115"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((PERIPH)<sp/>==<sp/>USART3)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="116"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((PERIPH)<sp/>==<sp/>UART4)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="117"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((PERIPH)<sp/>==<sp/>UART5))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119" refid="group___u_s_a_r_t___exported___constants_1ga30e128c5edde23e1315724c0b2000d0d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_USART_123_PERIPH(PERIPH)<sp/>(((PERIPH)<sp/>==<sp/>USART1)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="120"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((PERIPH)<sp/>==<sp/>USART2)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="121"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((PERIPH)<sp/>==<sp/>USART3))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123" refid="group___u_s_a_r_t___exported___constants_1ga9b6af380cae2290d0653bd555deaeda1" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_USART_1234_PERIPH(PERIPH)<sp/>(((PERIPH)<sp/>==<sp/>USART1)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="124"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((PERIPH)<sp/>==<sp/>USART2)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="125"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((PERIPH)<sp/>==<sp/>USART3)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="126"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((PERIPH)<sp/>==<sp/>UART4))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="131" refid="group___u_s_a_r_t___word___length_1ga08682faddc657df85a93627b5a146c25" refkind="member"><highlight class="preprocessor">#define<sp/>USART_WordLength_8b<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint16_t)0x0000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132" refid="group___u_s_a_r_t___word___length_1gae7dd162142660e09e2321aa3f33dc4d2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>USART_WordLength_9b<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint16_t)0x1000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="134" refid="group___u_s_a_r_t___word___length_1ga5b07b29ee91f0bea4c10ec0fd74fbc04" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_USART_WORD_LENGTH(LENGTH)<sp/>(((LENGTH)<sp/>==<sp/>USART_WordLength_8b)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="135"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((LENGTH)<sp/>==<sp/>USART_WordLength_9b))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="144" refid="group___u_s_a_r_t___stop___bits_1gae2cb35620ba001f0d63e9e0be93e4a05" refkind="member"><highlight class="preprocessor">#define<sp/>USART_StopBits_1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint16_t)0x0000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145" refid="group___u_s_a_r_t___stop___bits_1ga2ad06e3acfb691735d05ab9a314e2e32" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>USART_StopBits_0_5<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint16_t)0x1000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146" refid="group___u_s_a_r_t___stop___bits_1ga652058b6be2f48ac0d82d0e75537fc81" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>USART_StopBits_2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint16_t)0x2000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147" refid="group___u_s_a_r_t___stop___bits_1ga30897cc46d5b3790a9b14ffaba354527" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>USART_StopBits_1_5<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint16_t)0x3000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148" refid="group___u_s_a_r_t___stop___bits_1ga6f9153c1fbee1058ba26ec88f0f20828" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_USART_STOPBITS(STOPBITS)<sp/>(((STOPBITS)<sp/>==<sp/>USART_StopBits_1)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="149"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((STOPBITS)<sp/>==<sp/>USART_StopBits_0_5)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="150"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((STOPBITS)<sp/>==<sp/>USART_StopBits_2)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="151"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((STOPBITS)<sp/>==<sp/>USART_StopBits_1_5))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="160" refid="group___u_s_a_r_t___parity_1gab9deebcb0a859360dfec85074abaa3aa" refkind="member"><highlight class="preprocessor">#define<sp/>USART_Parity_No<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint16_t)0x0000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161" refid="group___u_s_a_r_t___parity_1ga62193247d36fffe982e159c1f246271e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>USART_Parity_Even<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint16_t)0x0400)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162" refid="group___u_s_a_r_t___parity_1gafcd68937a6b4b8ffff8f96e68d6a5ecd" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>USART_Parity_Odd<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint16_t)0x0600)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163" refid="group___u_s_a_r_t___parity_1gaa87b2e338e0ccc42887d3c56901bee87" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_USART_PARITY(PARITY)<sp/>(((PARITY)<sp/>==<sp/>USART_Parity_No)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="164"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((PARITY)<sp/>==<sp/>USART_Parity_Even)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="165"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((PARITY)<sp/>==<sp/>USART_Parity_Odd))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="174" refid="group___u_s_a_r_t___mode_1gafefcc3d3c1a1f83b425784fa6289aecf" refkind="member"><highlight class="preprocessor">#define<sp/>USART_Mode_Rx<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint16_t)0x0004)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175" refid="group___u_s_a_r_t___mode_1ga22b2813509a062435ea68d086ec565b4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>USART_Mode_Tx<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint16_t)0x0008)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176" refid="group___u_s_a_r_t___mode_1gae9140e5ca405d2377fe0e82c79e136a2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_USART_MODE(MODE)<sp/>((((MODE)<sp/>&amp;<sp/>(uint16_t)0xFFF3)<sp/>==<sp/>0x00)<sp/>&amp;&amp;<sp/>((MODE)<sp/>!=<sp/>(uint16_t)0x00))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="184" refid="group___u_s_a_r_t___hardware___flow___control_1gaf3deaf4429b88db7753ee203f4797bd3" refkind="member"><highlight class="preprocessor">#define<sp/>USART_HardwareFlowControl_None<sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint16_t)0x0000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185" refid="group___u_s_a_r_t___hardware___flow___control_1ga22d4339693e3356d992abca259b0418e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>USART_HardwareFlowControl_RTS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint16_t)0x0100)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186" refid="group___u_s_a_r_t___hardware___flow___control_1ga4d989f112f94009c0849fe4dbe829d81" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>USART_HardwareFlowControl_CTS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint16_t)0x0200)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187" refid="group___u_s_a_r_t___hardware___flow___control_1ga2986aed8c6cba414ac8afe0180ab553e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>USART_HardwareFlowControl_RTS_CTS<sp/><sp/><sp/><sp/>((uint16_t)0x0300)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188" refid="group___u_s_a_r_t___hardware___flow___control_1ga9b905eb465780173a2e98bc8b602c030" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_USART_HARDWARE_FLOW_CONTROL(CONTROL)\</highlight></codeline>
<codeline lineno="189"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((CONTROL)<sp/>==<sp/>USART_HardwareFlowControl_None)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="190"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((CONTROL)<sp/>==<sp/>USART_HardwareFlowControl_RTS)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="191"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((CONTROL)<sp/>==<sp/>USART_HardwareFlowControl_CTS)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="192"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((CONTROL)<sp/>==<sp/>USART_HardwareFlowControl_RTS_CTS))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="200" refid="group___u_s_a_r_t___clock_1ga56c12b81d19853c093e0a373d0c52fb5" refkind="member"><highlight class="preprocessor">#define<sp/>USART_Clock_Disable<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint16_t)0x0000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201" refid="group___u_s_a_r_t___clock_1gacfe029e2ec4f49ddde031fd031654caa" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>USART_Clock_Enable<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint16_t)0x0800)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202" refid="group___u_s_a_r_t___clock_1ga0f1e1ba37690b21b7338ed3b06614cf6" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_USART_CLOCK(CLOCK)<sp/>(((CLOCK)<sp/>==<sp/>USART_Clock_Disable)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="203"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((CLOCK)<sp/>==<sp/>USART_Clock_Enable))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="212" refid="group___u_s_a_r_t___clock___polarity_1ga194d60b47d8042d39e843c52f3a6aa1a" refkind="member"><highlight class="preprocessor">#define<sp/>USART_CPOL_Low<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint16_t)0x0000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213" refid="group___u_s_a_r_t___clock___polarity_1ga4ba6946dd9f0b4fd38115f24798c210f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>USART_CPOL_High<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint16_t)0x0400)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214" refid="group___u_s_a_r_t___clock___polarity_1ga833e9d2e85ab84658c7a7c18bd0bc8b9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_USART_CPOL(CPOL)<sp/>(((CPOL)<sp/>==<sp/>USART_CPOL_Low)<sp/>||<sp/>((CPOL)<sp/>==<sp/>USART_CPOL_High))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="224" refid="group___u_s_a_r_t___clock___phase_1gab6c0fb052fb9bc418cf368c1a0e4643b" refkind="member"><highlight class="preprocessor">#define<sp/>USART_CPHA_1Edge<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint16_t)0x0000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225" refid="group___u_s_a_r_t___clock___phase_1ga66344d0725f1300e9d0f8f1708111f25" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>USART_CPHA_2Edge<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint16_t)0x0200)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226" refid="group___u_s_a_r_t___clock___phase_1ga66fa1a3a757025fcd8dd069a90689f88" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_USART_CPHA(CPHA)<sp/>(((CPHA)<sp/>==<sp/>USART_CPHA_1Edge)<sp/>||<sp/>((CPHA)<sp/>==<sp/>USART_CPHA_2Edge))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="236" refid="group___u_s_a_r_t___last___bit_1ga129c89b9e0dbb3ce43ee92589b3324e5" refkind="member"><highlight class="preprocessor">#define<sp/>USART_LastBit_Disable<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint16_t)0x0000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237" refid="group___u_s_a_r_t___last___bit_1gaf8c19d1ce01c6efff8c24ee82cc7b52e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>USART_LastBit_Enable<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint16_t)0x0100)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238" refid="group___u_s_a_r_t___last___bit_1gaa941695e5612b53e9c2aca6a9fa0d695" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_USART_LASTBIT(LASTBIT)<sp/>(((LASTBIT)<sp/>==<sp/>USART_LastBit_Disable)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="239"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((LASTBIT)<sp/>==<sp/>USART_LastBit_Enable))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="248" refid="group___u_s_a_r_t___interrupt__definition_1gae607c28a462c224c575b7541dc4f7067" refkind="member"><highlight class="preprocessor">#define<sp/>USART_IT_PE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint16_t)0x0028)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249" refid="group___u_s_a_r_t___interrupt__definition_1gab18d0fe889204a4c34f6d5817fb5147d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>USART_IT_TXE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint16_t)0x0727)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250" refid="group___u_s_a_r_t___interrupt__definition_1ga748e86162cc110513330079982821c39" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>USART_IT_TC<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint16_t)0x0626)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251" refid="group___u_s_a_r_t___interrupt__definition_1gacdd49b93072655a21a63a35e6431f8ae" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>USART_IT_RXNE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint16_t)0x0525)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252" refid="group___u_s_a_r_t___interrupt__definition_1ga5d85aab24b7b2dfddb61ba2a49fa6185" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>USART_IT_IDLE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint16_t)0x0424)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253" refid="group___u_s_a_r_t___interrupt__definition_1ga063628e16cdda199b07d380421afc4a5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>USART_IT_LBD<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint16_t)0x0846)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254" refid="group___u_s_a_r_t___interrupt__definition_1gab49efbefaca2921e8cbe8f5146e99dbd" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>USART_IT_CTS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint16_t)0x096A)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255" refid="group___u_s_a_r_t___interrupt__definition_1ga631e83efd4c4789128d80a9539faf78a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>USART_IT_ERR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint16_t)0x0060)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256" refid="group___u_s_a_r_t___interrupt__definition_1ga8b7d40e02a81be787fbb325bbe6dfbeb" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>USART_IT_ORE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint16_t)0x0360)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257" refid="group___u_s_a_r_t___interrupt__definition_1gad5de042f579b50f1e8643009176486b3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>USART_IT_NE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint16_t)0x0260)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258" refid="group___u_s_a_r_t___interrupt__definition_1ga9af8790f78f6cb1591506c57d0cc0fb3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>USART_IT_FE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint16_t)0x0160)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259" refid="group___u_s_a_r_t___interrupt__definition_1ga37ce140eae1938a414ff32afed5ef236" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_USART_CONFIG_IT(IT)<sp/>(((IT)<sp/>==<sp/>USART_IT_PE)<sp/>||<sp/>((IT)<sp/>==<sp/>USART_IT_TXE)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="260"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((IT)<sp/>==<sp/>USART_IT_TC)<sp/>||<sp/>((IT)<sp/>==<sp/>USART_IT_RXNE)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="261"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((IT)<sp/>==<sp/>USART_IT_IDLE)<sp/>||<sp/>((IT)<sp/>==<sp/>USART_IT_LBD)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="262"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((IT)<sp/>==<sp/>USART_IT_CTS)<sp/>||<sp/>((IT)<sp/>==<sp/>USART_IT_ERR))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263" refid="group___u_s_a_r_t___interrupt__definition_1ga9a8014793a383d710eaaf4185f2b795d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_USART_GET_IT(IT)<sp/>(((IT)<sp/>==<sp/>USART_IT_PE)<sp/>||<sp/>((IT)<sp/>==<sp/>USART_IT_TXE)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="264"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((IT)<sp/>==<sp/>USART_IT_TC)<sp/>||<sp/>((IT)<sp/>==<sp/>USART_IT_RXNE)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="265"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((IT)<sp/>==<sp/>USART_IT_IDLE)<sp/>||<sp/>((IT)<sp/>==<sp/>USART_IT_LBD)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="266"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((IT)<sp/>==<sp/>USART_IT_CTS)<sp/>||<sp/>((IT)<sp/>==<sp/>USART_IT_ORE)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="267"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((IT)<sp/>==<sp/>USART_IT_NE)<sp/>||<sp/>((IT)<sp/>==<sp/>USART_IT_FE))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268" refid="group___u_s_a_r_t___interrupt__definition_1ga3ceda175140b84eea02a2261ebda4efd" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_USART_CLEAR_IT(IT)<sp/>(((IT)<sp/>==<sp/>USART_IT_TC)<sp/>||<sp/>((IT)<sp/>==<sp/>USART_IT_RXNE)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="269"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((IT)<sp/>==<sp/>USART_IT_LBD)<sp/>||<sp/>((IT)<sp/>==<sp/>USART_IT_CTS))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="278" refid="group___u_s_a_r_t___d_m_a___requests_1gae38097d8f82ba969c9812194022cae9a" refkind="member"><highlight class="preprocessor">#define<sp/>USART_DMAReq_Tx<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint16_t)0x0080)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279" refid="group___u_s_a_r_t___d_m_a___requests_1gaf33c13abb942251afab3297d8b8362ca" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>USART_DMAReq_Rx<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint16_t)0x0040)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280" refid="group___u_s_a_r_t___d_m_a___requests_1ga8be7a899d21d82de2ee0a763b4564dc3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_USART_DMAREQ(DMAREQ)<sp/>((((DMAREQ)<sp/>&amp;<sp/>(uint16_t)0xFF3F)<sp/>==<sp/>0x00)<sp/>&amp;&amp;<sp/>((DMAREQ)<sp/>!=<sp/>(uint16_t)0x00))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="290" refid="group___u_s_a_r_t___wake_up__methods_1ga9646d71590d5cef29ee12da0bb431d92" refkind="member"><highlight class="preprocessor">#define<sp/>USART_WakeUp_IdleLine<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint16_t)0x0000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291" refid="group___u_s_a_r_t___wake_up__methods_1ga9f63c1671060682adee91b9a2f3202e4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>USART_WakeUp_AddressMark<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint16_t)0x0800)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292" refid="group___u_s_a_r_t___wake_up__methods_1ga3611be417bdb82f42dc2ca17584271f9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_USART_WAKEUP(WAKEUP)<sp/>(((WAKEUP)<sp/>==<sp/>USART_WakeUp_IdleLine)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="293"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((WAKEUP)<sp/>==<sp/>USART_WakeUp_AddressMark))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="302" refid="group___u_s_a_r_t___l_i_n___break___detection___length_1gacfd0aabae8774239440e828c961ac2a0" refkind="member"><highlight class="preprocessor">#define<sp/>USART_LINBreakDetectLength_10b<sp/><sp/><sp/><sp/><sp/><sp/>((uint16_t)0x0000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303" refid="group___u_s_a_r_t___l_i_n___break___detection___length_1gaf591cfcc859d67d71e6fa594eb5aec16" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>USART_LINBreakDetectLength_11b<sp/><sp/><sp/><sp/><sp/><sp/>((uint16_t)0x0020)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304" refid="group___u_s_a_r_t___l_i_n___break___detection___length_1gaa7a45d542b1df5da1160777ad4a80d72" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_USART_LIN_BREAK_DETECT_LENGTH(LENGTH)<sp/>\</highlight></codeline>
<codeline lineno="305"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((LENGTH)<sp/>==<sp/>USART_LINBreakDetectLength_10b)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="306"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((LENGTH)<sp/>==<sp/>USART_LINBreakDetectLength_11b))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="315" refid="group___u_s_a_r_t___ir_d_a___low___power_1ga00c2635d0e6ca1a5b158f1c1673e862f" refkind="member"><highlight class="preprocessor">#define<sp/>USART_IrDAMode_LowPower<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint16_t)0x0004)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316" refid="group___u_s_a_r_t___ir_d_a___low___power_1ga796cd5451deb896741206986bd6d03e6" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>USART_IrDAMode_Normal<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint16_t)0x0000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317" refid="group___u_s_a_r_t___ir_d_a___low___power_1ga7790838ff8ee71089da2c0e5bceee569" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_USART_IRDA_MODE(MODE)<sp/>(((MODE)<sp/>==<sp/>USART_IrDAMode_LowPower)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="318"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((MODE)<sp/>==<sp/>USART_IrDAMode_Normal))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="327" refid="group___u_s_a_r_t___flags_1ga94b7272319cca88a65075d5cb6048441" refkind="member"><highlight class="preprocessor">#define<sp/>USART_FLAG_CTS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint16_t)0x0200)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328" refid="group___u_s_a_r_t___flags_1ga27be6517de20ce14711f71dcd5a7b91f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>USART_FLAG_LBD<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint16_t)0x0100)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329" refid="group___u_s_a_r_t___flags_1ga7129f13333f2a7218838cc32fe507bfa" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>USART_FLAG_TXE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint16_t)0x0080)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330" refid="group___u_s_a_r_t___flags_1gae7b85c9e2cc86af5bbc8b8d8b854410f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>USART_FLAG_TC<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint16_t)0x0040)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331" refid="group___u_s_a_r_t___flags_1ga11d6b70c8f00216b6d8a43790dfdcf2f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>USART_FLAG_RXNE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint16_t)0x0020)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332" refid="group___u_s_a_r_t___flags_1gac2f1ccc91a834f9cbec3f058872b972a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>USART_FLAG_IDLE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint16_t)0x0010)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333" refid="group___u_s_a_r_t___flags_1gabdb285b5c1876d93f9c802f9304538d5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>USART_FLAG_ORE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint16_t)0x0008)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334" refid="group___u_s_a_r_t___flags_1ga81781d27ffc8b85dfaf7b7b791229547" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>USART_FLAG_NE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint16_t)0x0004)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335" refid="group___u_s_a_r_t___flags_1ga3551a32bac49a2ec040e5fdafcc9c4bd" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>USART_FLAG_FE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint16_t)0x0002)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336" refid="group___u_s_a_r_t___flags_1ga5e87fde5704f27c75df25395e23404ad" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>USART_FLAG_PE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint16_t)0x0001)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337" refid="group___u_s_a_r_t___flags_1ga3e20747ce7c97a36718933c0cb3dac29" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_USART_FLAG(FLAG)<sp/>(((FLAG)<sp/>==<sp/>USART_FLAG_PE)<sp/>||<sp/>((FLAG)<sp/>==<sp/>USART_FLAG_TXE)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="338"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((FLAG)<sp/>==<sp/>USART_FLAG_TC)<sp/>||<sp/>((FLAG)<sp/>==<sp/>USART_FLAG_RXNE)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="339"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((FLAG)<sp/>==<sp/>USART_FLAG_IDLE)<sp/>||<sp/>((FLAG)<sp/>==<sp/>USART_FLAG_LBD)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="340"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((FLAG)<sp/>==<sp/>USART_FLAG_CTS)<sp/>||<sp/>((FLAG)<sp/>==<sp/>USART_FLAG_ORE)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="341"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((FLAG)<sp/>==<sp/>USART_FLAG_NE)<sp/>||<sp/>((FLAG)<sp/>==<sp/>USART_FLAG_FE))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="343" refid="group___u_s_a_r_t___flags_1gadc905fdce8defba31c00c95554a26bc3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_USART_CLEAR_FLAG(FLAG)<sp/>((((FLAG)<sp/>&amp;<sp/>(uint16_t)0xFC9F)<sp/>==<sp/>0x00)<sp/>&amp;&amp;<sp/>((FLAG)<sp/>!=<sp/>(uint16_t)0x00))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344" refid="group___u_s_a_r_t___flags_1gad8395894e77b07a0713756b355aa22e5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_USART_PERIPH_FLAG(PERIPH,<sp/>USART_FLAG)<sp/>((((*(uint32_t*)&amp;(PERIPH))<sp/>!=<sp/>UART4_BASE)<sp/>&amp;&amp;\</highlight></codeline>
<codeline lineno="345"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((*(uint32_t*)&amp;(PERIPH))<sp/>!=<sp/>UART5_BASE))<sp/>\</highlight></codeline>
<codeline lineno="346"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>((USART_FLAG)<sp/>!=<sp/>USART_FLAG_CTS))<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347" refid="group___u_s_a_r_t___flags_1ga9dc365e0a1e01031a8e0757a34b9d420" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_USART_BAUDRATE(BAUDRATE)<sp/>(((BAUDRATE)<sp/>&gt;<sp/>0)<sp/>&amp;&amp;<sp/>((BAUDRATE)<sp/>&lt;<sp/>0x0044AA21))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348" refid="group___u_s_a_r_t___flags_1ga194e771c3324f9e130b2887c701460a7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_USART_ADDRESS(ADDRESS)<sp/>((ADDRESS)<sp/>&lt;=<sp/>0xF)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349" refid="group___u_s_a_r_t___flags_1gafd6307e41818e076d31f3c24cb5ba135" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_USART_DATA(DATA)<sp/>((DATA)<sp/>&lt;=<sp/>0x1FF)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___u_s_a_r_t___exported___functions_1ga2f8e1ce72da21b6539d8e1f299ec3b0d" kindref="member">USART_DeInit</ref>(<ref refid="struct_u_s_a_r_t___type_def" kindref="compound">USART_TypeDef</ref>*<sp/>USARTx);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___u_s_a_r_t___exported___functions_1ga98da340ea0324002ba1b4263e91ab2ff" kindref="member">USART_Init</ref>(<ref refid="struct_u_s_a_r_t___type_def" kindref="compound">USART_TypeDef</ref>*<sp/>USARTx,<sp/><ref refid="struct_u_s_a_r_t___init_type_def" kindref="compound">USART_InitTypeDef</ref>*<sp/>USART_InitStruct);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___u_s_a_r_t___exported___functions_1ga34e1faa2f312496c16cfd05155f4c8b1" kindref="member">USART_StructInit</ref>(<ref refid="struct_u_s_a_r_t___init_type_def" kindref="compound">USART_InitTypeDef</ref>*<sp/>USART_InitStruct);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___u_s_a_r_t___exported___functions_1gadb50c7a2175c91acd3728f8eefd0c63d" kindref="member">USART_ClockInit</ref>(<ref refid="struct_u_s_a_r_t___type_def" kindref="compound">USART_TypeDef</ref>*<sp/>USARTx,<sp/><ref refid="struct_u_s_a_r_t___clock_init_type_def" kindref="compound">USART_ClockInitTypeDef</ref>*<sp/>USART_ClockInitStruct);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___u_s_a_r_t___exported___functions_1ga59df27d0adda18b16ee28d47672cc724" kindref="member">USART_ClockStructInit</ref>(<ref refid="struct_u_s_a_r_t___clock_init_type_def" kindref="compound">USART_ClockInitTypeDef</ref>*<sp/>USART_ClockInitStruct);</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___u_s_a_r_t___exported___functions_1ga45e51626739c5f22a6567c8a85d1d85e" kindref="member">USART_Cmd</ref>(<ref refid="struct_u_s_a_r_t___type_def" kindref="compound">USART_TypeDef</ref>*<sp/>USARTx,<sp/><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref><sp/>NewState);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___u_s_a_r_t___exported___functions_1ga6d8f2dd1f34060ae7e386e3e5d56b6f6" kindref="member">USART_ITConfig</ref>(<ref refid="struct_u_s_a_r_t___type_def" kindref="compound">USART_TypeDef</ref>*<sp/>USARTx,<sp/>uint16_t<sp/>USART_IT,<sp/><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref><sp/>NewState);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___u_s_a_r_t___exported___functions_1ga902857f199ebfba21c63d725354af66f" kindref="member">USART_DMACmd</ref>(<ref refid="struct_u_s_a_r_t___type_def" kindref="compound">USART_TypeDef</ref>*<sp/>USARTx,<sp/>uint16_t<sp/>USART_DMAReq,<sp/><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref><sp/>NewState);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___u_s_a_r_t___exported___functions_1ga65ec9928817f3f031dd9a4dfc95d6666" kindref="member">USART_SetAddress</ref>(<ref refid="struct_u_s_a_r_t___type_def" kindref="compound">USART_TypeDef</ref>*<sp/>USARTx,<sp/>uint8_t<sp/>USART_Address);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___u_s_a_r_t___exported___functions_1ga4965417c2412c36e462fcad50a8d5393" kindref="member">USART_WakeUpConfig</ref>(<ref refid="struct_u_s_a_r_t___type_def" kindref="compound">USART_TypeDef</ref>*<sp/>USARTx,<sp/>uint16_t<sp/>USART_WakeUp);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___u_s_a_r_t___exported___functions_1gac27b78ce445a16fe33851d2f87781c02" kindref="member">USART_ReceiverWakeUpCmd</ref>(<ref refid="struct_u_s_a_r_t___type_def" kindref="compound">USART_TypeDef</ref>*<sp/>USARTx,<sp/><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref><sp/>NewState);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___u_s_a_r_t___exported___functions_1ga7bc2d291831cbc5e53e73337308029b5" kindref="member">USART_LINBreakDetectLengthConfig</ref>(<ref refid="struct_u_s_a_r_t___type_def" kindref="compound">USART_TypeDef</ref>*<sp/>USARTx,<sp/>uint16_t<sp/>USART_LINBreakDetectLength);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___u_s_a_r_t___exported___functions_1ga9fdd6296f4ca4acdfcbd58bf56bd4185" kindref="member">USART_LINCmd</ref>(<ref refid="struct_u_s_a_r_t___type_def" kindref="compound">USART_TypeDef</ref>*<sp/>USARTx,<sp/><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref><sp/>NewState);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___u_s_a_r_t___exported___functions_1ga0b43d42da9540f446d494bf69823c6fb" kindref="member">USART_SendData</ref>(<ref refid="struct_u_s_a_r_t___type_def" kindref="compound">USART_TypeDef</ref>*<sp/>USARTx,<sp/>uint16_t<sp/>Data);</highlight></codeline>
<codeline lineno="385"><highlight class="normal">uint16_t<sp/><ref refid="group___u_s_a_r_t___exported___functions_1gac67a91845b0b1d54d31bdfb1c5e9867c" kindref="member">USART_ReceiveData</ref>(<ref refid="struct_u_s_a_r_t___type_def" kindref="compound">USART_TypeDef</ref>*<sp/>USARTx);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___u_s_a_r_t___exported___functions_1ga39a3d33e23ee28529fa8f7259ce6811e" kindref="member">USART_SendBreak</ref>(<ref refid="struct_u_s_a_r_t___type_def" kindref="compound">USART_TypeDef</ref>*<sp/>USARTx);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___u_s_a_r_t___exported___functions_1gac4a35c6acd71ae7e0d67c1f03f0a8777" kindref="member">USART_SetGuardTime</ref>(<ref refid="struct_u_s_a_r_t___type_def" kindref="compound">USART_TypeDef</ref>*<sp/>USARTx,<sp/>uint8_t<sp/>USART_GuardTime);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___u_s_a_r_t___exported___functions_1gaf5da8f2eee8245425584d85d4f62cc33" kindref="member">USART_SetPrescaler</ref>(<ref refid="struct_u_s_a_r_t___type_def" kindref="compound">USART_TypeDef</ref>*<sp/>USARTx,<sp/>uint8_t<sp/>USART_Prescaler);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___u_s_a_r_t___exported___functions_1gabd1347e244c623447151ba3a5e986c5f" kindref="member">USART_SmartCardCmd</ref>(<ref refid="struct_u_s_a_r_t___type_def" kindref="compound">USART_TypeDef</ref>*<sp/>USARTx,<sp/><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref><sp/>NewState);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___u_s_a_r_t___exported___functions_1ga62e22f47e38aa53f2edce8771f7a5dfa" kindref="member">USART_SmartCardNACKCmd</ref>(<ref refid="struct_u_s_a_r_t___type_def" kindref="compound">USART_TypeDef</ref>*<sp/>USARTx,<sp/><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref><sp/>NewState);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___u_s_a_r_t___exported___functions_1gaaa23b05fe0e1896bad90da7f82750831" kindref="member">USART_HalfDuplexCmd</ref>(<ref refid="struct_u_s_a_r_t___type_def" kindref="compound">USART_TypeDef</ref>*<sp/>USARTx,<sp/><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref><sp/>NewState);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___u_s_a_r_t___exported___functions_1ga3897bab07491d9239f8a238a9a7cddea" kindref="member">USART_OverSampling8Cmd</ref>(<ref refid="struct_u_s_a_r_t___type_def" kindref="compound">USART_TypeDef</ref>*<sp/>USARTx,<sp/><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref><sp/>NewState);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___u_s_a_r_t___exported___functions_1ga3ed89ea8765d851510cfe90f7d90cbbb" kindref="member">USART_OneBitMethodCmd</ref>(<ref refid="struct_u_s_a_r_t___type_def" kindref="compound">USART_TypeDef</ref>*<sp/>USARTx,<sp/><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref><sp/>NewState);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___u_s_a_r_t___exported___functions_1ga81a0cd36199040bf6d266b57babd678e" kindref="member">USART_IrDAConfig</ref>(<ref refid="struct_u_s_a_r_t___type_def" kindref="compound">USART_TypeDef</ref>*<sp/>USARTx,<sp/>uint16_t<sp/>USART_IrDAMode);</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___u_s_a_r_t___exported___functions_1gabff56ebb494fdfadcc6ef4fe9ac8dd24" kindref="member">USART_IrDACmd</ref>(<ref refid="struct_u_s_a_r_t___type_def" kindref="compound">USART_TypeDef</ref>*<sp/>USARTx,<sp/><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref><sp/>NewState);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><ref refid="group___exported__types_1ga89136caac2e14c55151f527ac02daaff" kindref="member">FlagStatus</ref><sp/><ref refid="group___u_s_a_r_t___exported___functions_1ga144630722defc9e312f0ad280b68e9da" kindref="member">USART_GetFlagStatus</ref>(<ref refid="struct_u_s_a_r_t___type_def" kindref="compound">USART_TypeDef</ref>*<sp/>USARTx,<sp/>uint16_t<sp/>USART_FLAG);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___u_s_a_r_t___exported___functions_1gad962e148fc466ae1b45b288f6c91d966" kindref="member">USART_ClearFlag</ref>(<ref refid="struct_u_s_a_r_t___type_def" kindref="compound">USART_TypeDef</ref>*<sp/>USARTx,<sp/>uint16_t<sp/>USART_FLAG);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><ref refid="group___exported__types_1gaacbd7ed539db0aacd973a0f6eca34074" kindref="member">ITStatus</ref><sp/><ref refid="group___u_s_a_r_t___exported___functions_1ga93d8f031241bcdbe938d091a85295445" kindref="member">USART_GetITStatus</ref>(<ref refid="struct_u_s_a_r_t___type_def" kindref="compound">USART_TypeDef</ref>*<sp/>USARTx,<sp/>uint16_t<sp/>USART_IT);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___u_s_a_r_t___exported___functions_1ga1fc25d0338695063be5e50156955d9bc" kindref="member">USART_ClearITPendingBit</ref>(<ref refid="struct_u_s_a_r_t___type_def" kindref="compound">USART_TypeDef</ref>*<sp/>USARTx,<sp/>uint16_t<sp/>USART_IT);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal">}</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight><highlight class="comment">//<sp/>[ILG]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>(<sp/>__GNUC__<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>GCC<sp/>diagnostic<sp/>pop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>__STM32F10x_USART_H<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="comment">/*******************<sp/>(C)<sp/>COPYRIGHT<sp/>2011<sp/>STMicroelectronics<sp/>*****END<sp/>OF<sp/>FILE****/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_usart.h"/>
  </compounddef>
</doxygen>
