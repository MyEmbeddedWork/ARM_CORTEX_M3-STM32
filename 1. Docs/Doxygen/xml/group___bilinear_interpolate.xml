<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="group___bilinear_interpolate" kind="group">
    <compoundname>BilinearInterpolate</compoundname>
    <title>Bilinear Interpolation</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group___bilinear_interpolate_1gab49a4c0f64854903d996d01ba38f711a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__INLINE <ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref></type>
        <definition>static __INLINE float32_t arm_bilinear_interp_f32</definition>
        <argsstring>(const arm_bilinear_interp_instance_f32 *S, float32_t X, float32_t Y)</argsstring>
        <name>arm_bilinear_interp_f32</name>
        <param>
          <type>const <ref refid="structarm__bilinear__interp__instance__f32" kindref="compound">arm_bilinear_interp_instance_f32</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref></type>
          <declname>X</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref></type>
          <declname>Y</declname>
        </param>
        <briefdescription>
<para>Floating-point bilinear interpolation. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">S</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the interpolation structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">X</parametername>
</parameternamelist>
<parameterdescription>
<para>interpolation coordinate. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">Y</parametername>
</parameternamelist>
<parameterdescription>
<para>interpolation coordinate. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>out interpolated value. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="6752" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" bodystart="6752" bodyend="6807"/>
      </memberdef>
      <memberdef kind="function" id="group___bilinear_interpolate_1ga202a033c8a2ad3678b136f93153b6d13" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__INLINE <ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref></type>
        <definition>static __INLINE q31_t arm_bilinear_interp_q31</definition>
        <argsstring>(arm_bilinear_interp_instance_q31 *S, q31_t X, q31_t Y)</argsstring>
        <name>arm_bilinear_interp_q31</name>
        <param>
          <type><ref refid="structarm__bilinear__interp__instance__q31" kindref="compound">arm_bilinear_interp_instance_q31</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref></type>
          <declname>X</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref></type>
          <declname>Y</declname>
        </param>
        <briefdescription>
<para>Q31 bilinear interpolation. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">S</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the interpolation structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">X</parametername>
</parameternamelist>
<parameterdescription>
<para>interpolation coordinate in 12.20 format. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">Y</parametername>
</parameternamelist>
<parameterdescription>
<para>interpolation coordinate in 12.20 format. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>out interpolated value. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="6818" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" bodystart="6818" bodyend="6882"/>
      </memberdef>
      <memberdef kind="function" id="group___bilinear_interpolate_1gaa8dffbc2a01bb7accf231384498ec85e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__INLINE <ref refid="arm__math_8h_1ab5a8fb21a5b3b983d5f54f31614052ea" kindref="member">q15_t</ref></type>
        <definition>static __INLINE q15_t arm_bilinear_interp_q15</definition>
        <argsstring>(arm_bilinear_interp_instance_q15 *S, q31_t X, q31_t Y)</argsstring>
        <name>arm_bilinear_interp_q15</name>
        <param>
          <type><ref refid="structarm__bilinear__interp__instance__q15" kindref="compound">arm_bilinear_interp_instance_q15</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref></type>
          <declname>X</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref></type>
          <declname>Y</declname>
        </param>
        <briefdescription>
<para>Q15 bilinear interpolation. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">S</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the interpolation structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">X</parametername>
</parameternamelist>
<parameterdescription>
<para>interpolation coordinate in 12.20 format. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">Y</parametername>
</parameternamelist>
<parameterdescription>
<para>interpolation coordinate in 12.20 format. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>out interpolated value. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="6892" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" bodystart="6892" bodyend="6960"/>
      </memberdef>
      <memberdef kind="function" id="group___bilinear_interpolate_1gade8db9706a3ae9ad03b2750a239d2ee6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__INLINE <ref refid="arm__math_8h_1ae541b6f232c305361e9b416fc9eed263" kindref="member">q7_t</ref></type>
        <definition>static __INLINE q7_t arm_bilinear_interp_q7</definition>
        <argsstring>(arm_bilinear_interp_instance_q7 *S, q31_t X, q31_t Y)</argsstring>
        <name>arm_bilinear_interp_q7</name>
        <param>
          <type><ref refid="structarm__bilinear__interp__instance__q7" kindref="compound">arm_bilinear_interp_instance_q7</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref></type>
          <declname>X</declname>
        </param>
        <param>
          <type><ref refid="arm__math_8h_1adc89a3547f5324b7b3b95adec3806bc0" kindref="member">q31_t</ref></type>
          <declname>Y</declname>
        </param>
        <briefdescription>
<para>Q7 bilinear interpolation. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">S</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the interpolation structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">X</parametername>
</parameternamelist>
<parameterdescription>
<para>interpolation coordinate in 12.20 format. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">Y</parametername>
</parameternamelist>
<parameterdescription>
<para>interpolation coordinate in 12.20 format. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>out interpolated value. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" line="6970" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/cmsis/arm_math.h" bodystart="6970" bodyend="7034"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Bilinear interpolation is an extension of linear interpolation applied to a two dimensional grid. The underlying function <computeroutput>f(x, y)</computeroutput> is sampled on a regular grid and the interpolation process determines values between the grid points. Bilinear interpolation is equivalent to two step linear interpolation, first in the x-dimension and then in the y-dimension. Bilinear interpolation is often used in image processing to rescale images. The CMSIS DSP library provides bilinear interpolation functions for Q7, Q15, Q31, and floating-point data types.</para><para><bold>Algorithm</bold> <simplesect kind="par"><title></title><para>The instance structure used by the bilinear interpolation functions describes a two dimensional data table. For floating-point, the instance structure is defined as: <preformatted>
  typedef struct
  {
    uint16_t numRows;
    uint16_t numCols;
    float32_t *pData;
} <ref refid="structarm__bilinear__interp__instance__f32" kindref="compound">arm_bilinear_interp_instance_f32</ref>;
</preformatted></para></simplesect>
<simplesect kind="par"><title></title><para>where <computeroutput>numRows</computeroutput> specifies the number of rows in the table; <computeroutput>numCols</computeroutput> specifies the number of columns in the table; and <computeroutput>pData</computeroutput> points to an array of size <computeroutput>numRows*numCols</computeroutput> values. The data table <computeroutput>pTable</computeroutput> is organized in row order and the supplied data values fall on integer indexes. That is, table element (x,y) is located at <computeroutput>pTable[x + y*numCols]</computeroutput> where x and y are integers.</para></simplesect>
<simplesect kind="par"><title></title><para>Let <computeroutput>(x, y)</computeroutput> specify the desired interpolation point. Then define: <preformatted>
    XF = floor(x)
    YF = floor(y)
</preformatted> </para></simplesect>
<simplesect kind="par"><title></title><para>The interpolated output point is computed as: <preformatted>
 f(x, y) = f(XF, YF) * (1-(x-XF)) * (1-(y-YF))
          + f(XF+1, YF) * (x-XF)*(1-(y-YF))
          + f(XF, YF+1) * (1-(x-XF))*(y-YF)
          + f(XF+1, YF+1) * (x-XF)*(y-YF)
</preformatted> Note that the coordinates (x, y) contain integer and fractional components. The integer components specify which portion of the table to use while the fractional components control the interpolation processor.</para></simplesect>
<simplesect kind="par"><title></title><para>if (x,y) are outside of the table boundary, Bilinear interpolation returns zero output. </para></simplesect>
</para>    </detaileddescription>
  </compounddef>
</doxygen>
