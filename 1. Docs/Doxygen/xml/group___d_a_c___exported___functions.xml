<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="group___d_a_c___exported___functions" kind="group">
    <compoundname>DAC_Exported_Functions</compoundname>
    <title>DAC_Exported_Functions</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group___d_a_c___exported___functions_1ga1fae225204e1e049d6795319e99ba8bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DAC_DeInit</definition>
        <argsstring>(void)</argsstring>
        <name>DAC_DeInit</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Deinitializes the DAC peripheral registers to their default reset values. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" line="282" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_dac.c" bodystart="98" bodyend="104"/>
        <references refid="group___r_c_c___exported___functions_1gab197ae4369c10b92640a733b40ed2801" compoundref="stm32f10x__rcc_8c" startline="1216" endline="1229">RCC_APB1PeriphResetCmd</references>
        <references refid="group___a_p_b1__peripheral_1ga8d019a727701634822c19371b6aaabb5" compoundref="stm32f10x__rcc_8h" startline="551">RCC_APB1Periph_DAC</references>
        <references refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1a7d46875fa3ebd2c34d2756950eda83bf" compoundref="stm32f10x_8h" startline="521">ENABLE</references>
        <references refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1ad3a9df141be0ccf10389b640f492b26d" compoundref="stm32f10x_8h" startline="521">DISABLE</references>
      </memberdef>
      <memberdef kind="function" id="group___d_a_c___exported___functions_1ga7c59850468ed4bf0659663fe495441da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DAC_Init</definition>
        <argsstring>(uint32_t DAC_Channel, DAC_InitTypeDef *DAC_InitStruct)</argsstring>
        <name>DAC_Init</name>
        <param>
          <type>uint32_t</type>
          <declname>DAC_Channel</declname>
        </param>
        <param>
          <type><ref refid="struct_d_a_c___init_type_def" kindref="compound">DAC_InitTypeDef</ref> *</type>
          <declname>DAC_InitStruct</declname>
        </param>
        <briefdescription>
<para>Initializes the DAC peripheral according to the specified parameters in the DAC_InitStruct. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>DAC_Channel</parametername>
</parameternamelist>
<parameterdescription>
<para>the selected DAC channel. This parameter can be one of the following values: <itemizedlist>
<listitem><para>DAC_Channel_1: DAC Channel1 selected </para></listitem>
<listitem><para>DAC_Channel_2: DAC Channel2 selected </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>DAC_InitStruct</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a <ref refid="struct_d_a_c___init_type_def" kindref="compound">DAC_InitTypeDef</ref> structure that contains the configuration information for the specified DAC channel. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" line="283" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_dac.c" bodystart="117" bodyend="142"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___d_a_c__trigger__selection_1ga4409b79639e6ae3b1f0ed61a33c810a3" compoundref="stm32f10x__dac_8h" startline="99">IS_DAC_TRIGGER</references>
        <references refid="struct_d_a_c___init_type_def_1a7b26ebaeb51a0157a781f7de8ba779e5" compoundref="stm32f10x__dac_8h" startline="52">DAC_InitTypeDef::DAC_Trigger</references>
        <references refid="group___d_a_c__wave__generation_1ga50fb2dd12305cd7bd0b738a1f6388d3c" compoundref="stm32f10x__dac_8h" startline="120">IS_DAC_GENERATE_WAVE</references>
        <references refid="struct_d_a_c___init_type_def_1a6753e78ddd2dc8273444ba01a272d63a" compoundref="stm32f10x__dac_8h" startline="55">DAC_InitTypeDef::DAC_WaveGeneration</references>
        <references refid="group___d_a_c__lfsrunmask__triangleamplitude_1ga20f7c3c43f917f14593f0c478c2412e1" compoundref="stm32f10x__dac_8h" startline="156">IS_DAC_LFSR_UNMASK_TRIANGLE_AMPLITUDE</references>
        <references refid="struct_d_a_c___init_type_def_1a27ed27a544d50781b20d59cc55e6cef8" compoundref="stm32f10x__dac_8h" startline="59">DAC_InitTypeDef::DAC_LFSRUnmask_TriangleAmplitude</references>
        <references refid="group___d_a_c__output__buffer_1gaa5a56816d641129fb62d11133c9dcccd" compoundref="stm32f10x__dac_8h" startline="190">IS_DAC_OUTPUT_BUFFER_STATE</references>
        <references refid="struct_d_a_c___init_type_def_1ad3e9e01486443e99f19e65a446b03ca6" compoundref="stm32f10x__dac_8h" startline="63">DAC_InitTypeDef::DAC_OutputBuffer</references>
        <references refid="group___peripheral__declaration_1ga4aa2a4ab86ce00c23035e5cee2e7fc7e" compoundref="stm32f10x_8h" startline="1404">DAC</references>
        <references refid="group___d_a_c___private___defines_1ga8a5812a1d5ced986bb997a4bb7ae697d" compoundref="stm32f10x__dac_8c" startline="48">CR_CLEAR_MASK</references>
      </memberdef>
      <memberdef kind="function" id="group___d_a_c___exported___functions_1gadfc270974d54cb5fa5f92556015c4046" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DAC_StructInit</definition>
        <argsstring>(DAC_InitTypeDef *DAC_InitStruct)</argsstring>
        <name>DAC_StructInit</name>
        <param>
          <type><ref refid="struct_d_a_c___init_type_def" kindref="compound">DAC_InitTypeDef</ref> *</type>
          <declname>DAC_InitStruct</declname>
        </param>
        <briefdescription>
<para>Fills each DAC_InitStruct member with its default value. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>DAC_InitStruct</parametername>
</parameternamelist>
<parameterdescription>
<para>: pointer to a <ref refid="struct_d_a_c___init_type_def" kindref="compound">DAC_InitTypeDef</ref> structure which will be initialized. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" line="284" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_dac.c" bodystart="150" bodyend="161"/>
        <references refid="struct_d_a_c___init_type_def_1a7b26ebaeb51a0157a781f7de8ba779e5" compoundref="stm32f10x__dac_8h" startline="52">DAC_InitTypeDef::DAC_Trigger</references>
        <references refid="group___d_a_c__trigger__selection_1ga7849138e043267668d755390d923e4ba" compoundref="stm32f10x__dac_8h" startline="79">DAC_Trigger_None</references>
        <references refid="struct_d_a_c___init_type_def_1a6753e78ddd2dc8273444ba01a272d63a" compoundref="stm32f10x__dac_8h" startline="55">DAC_InitTypeDef::DAC_WaveGeneration</references>
        <references refid="group___d_a_c__wave__generation_1gaabbcd575d6106267f6b65ce988158f29" compoundref="stm32f10x__dac_8h" startline="117">DAC_WaveGeneration_None</references>
        <references refid="struct_d_a_c___init_type_def_1a27ed27a544d50781b20d59cc55e6cef8" compoundref="stm32f10x__dac_8h" startline="59">DAC_InitTypeDef::DAC_LFSRUnmask_TriangleAmplitude</references>
        <references refid="group___d_a_c__lfsrunmask__triangleamplitude_1ga60794fd5092a332cfa82e1cee13945fc" compoundref="stm32f10x__dac_8h" startline="131">DAC_LFSRUnmask_Bit0</references>
        <references refid="struct_d_a_c___init_type_def_1ad3e9e01486443e99f19e65a446b03ca6" compoundref="stm32f10x__dac_8h" startline="63">DAC_InitTypeDef::DAC_OutputBuffer</references>
        <references refid="group___d_a_c__output__buffer_1gab3f92803a8b6bc5fb3e4859908b5161f" compoundref="stm32f10x__dac_8h" startline="188">DAC_OutputBuffer_Enable</references>
      </memberdef>
      <memberdef kind="function" id="group___d_a_c___exported___functions_1ga323e61530d7fa9396c3bce9edb61f733" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DAC_Cmd</definition>
        <argsstring>(uint32_t DAC_Channel, FunctionalState NewState)</argsstring>
        <name>DAC_Cmd</name>
        <param>
          <type>uint32_t</type>
          <declname>DAC_Channel</declname>
        </param>
        <param>
          <type><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref></type>
          <declname>NewState</declname>
        </param>
        <briefdescription>
<para>Enables or disables the specified DAC channel. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>DAC_Channel</parametername>
</parameternamelist>
<parameterdescription>
<para>the selected DAC channel. This parameter can be one of the following values: <itemizedlist>
<listitem><para>DAC_Channel_1: DAC Channel1 selected </para></listitem>
<listitem><para>DAC_Channel_2: DAC Channel2 selected </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NewState</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of the DAC channel. This parameter can be: ENABLE or DISABLE. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" line="285" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_dac.c" bodystart="173" bodyend="188"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___d_a_c___channel__selection_1gafb2b9bdaccb3a5e3396925d7cba02cc3" compoundref="stm32f10x__dac_8h" startline="202">IS_DAC_CHANNEL</references>
        <references refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" compoundref="stm32f10x_8h" startline="522">IS_FUNCTIONAL_STATE</references>
        <references refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1ad3a9df141be0ccf10389b640f492b26d" compoundref="stm32f10x_8h" startline="521">DISABLE</references>
        <references refid="group___peripheral__declaration_1ga4aa2a4ab86ce00c23035e5cee2e7fc7e" compoundref="stm32f10x_8h" startline="1404">DAC</references>
        <references refid="group___peripheral___registers___bits___definition_1gabd8cedbb3dda03d56ac0ba92d2d9cefd" compoundref="stm32f10x_8h" startline="4053">DAC_CR_EN1</references>
      </memberdef>
      <memberdef kind="function" id="group___d_a_c___exported___functions_1ga194cba38f60ace11658824f0250121f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DAC_DMACmd</definition>
        <argsstring>(uint32_t DAC_Channel, FunctionalState NewState)</argsstring>
        <name>DAC_DMACmd</name>
        <param>
          <type>uint32_t</type>
          <declname>DAC_Channel</declname>
        </param>
        <param>
          <type><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref></type>
          <declname>NewState</declname>
        </param>
        <briefdescription>
<para>Enables or disables the specified DAC channel DMA request. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>DAC_Channel</parametername>
</parameternamelist>
<parameterdescription>
<para>the selected DAC channel. This parameter can be one of the following values: <itemizedlist>
<listitem><para>DAC_Channel_1: DAC Channel1 selected </para></listitem>
<listitem><para>DAC_Channel_2: DAC Channel2 selected </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NewState</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of the selected DAC channel DMA request. This parameter can be: ENABLE or DISABLE. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" line="289" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_dac.c" bodystart="233" bodyend="248"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___d_a_c___channel__selection_1gafb2b9bdaccb3a5e3396925d7cba02cc3" compoundref="stm32f10x__dac_8h" startline="202">IS_DAC_CHANNEL</references>
        <references refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" compoundref="stm32f10x_8h" startline="522">IS_FUNCTIONAL_STATE</references>
        <references refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1ad3a9df141be0ccf10389b640f492b26d" compoundref="stm32f10x_8h" startline="521">DISABLE</references>
        <references refid="group___peripheral__declaration_1ga4aa2a4ab86ce00c23035e5cee2e7fc7e" compoundref="stm32f10x_8h" startline="1404">DAC</references>
        <references refid="group___peripheral___registers___bits___definition_1ga995c19d8c8de9ee09057ec6151154e17" compoundref="stm32f10x_8h" startline="4072">DAC_CR_DMAEN1</references>
      </memberdef>
      <memberdef kind="function" id="group___d_a_c___exported___functions_1ga46f9f7f6b9520a86e300fe966afe5fb3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DAC_SoftwareTriggerCmd</definition>
        <argsstring>(uint32_t DAC_Channel, FunctionalState NewState)</argsstring>
        <name>DAC_SoftwareTriggerCmd</name>
        <param>
          <type>uint32_t</type>
          <declname>DAC_Channel</declname>
        </param>
        <param>
          <type><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref></type>
          <declname>NewState</declname>
        </param>
        <briefdescription>
<para>Enables or disables the selected DAC channel software trigger. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>DAC_Channel</parametername>
</parameternamelist>
<parameterdescription>
<para>the selected DAC channel. This parameter can be one of the following values: <itemizedlist>
<listitem><para>DAC_Channel_1: DAC Channel1 selected </para></listitem>
<listitem><para>DAC_Channel_2: DAC Channel2 selected </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NewState</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of the selected DAC channel software trigger. This parameter can be: ENABLE or DISABLE. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" line="290" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_dac.c" bodystart="260" bodyend="275"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___d_a_c___channel__selection_1gafb2b9bdaccb3a5e3396925d7cba02cc3" compoundref="stm32f10x__dac_8h" startline="202">IS_DAC_CHANNEL</references>
        <references refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" compoundref="stm32f10x_8h" startline="522">IS_FUNCTIONAL_STATE</references>
        <references refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1ad3a9df141be0ccf10389b640f492b26d" compoundref="stm32f10x_8h" startline="521">DISABLE</references>
        <references refid="group___peripheral__declaration_1ga4aa2a4ab86ce00c23035e5cee2e7fc7e" compoundref="stm32f10x_8h" startline="1404">DAC</references>
        <references refid="group___peripheral___registers___bits___definition_1ga970ef02dffaceb35ff1dd7aceb67acdd" compoundref="stm32f10x_8h" startline="4095">DAC_SWTRIGR_SWTRIG1</references>
      </memberdef>
      <memberdef kind="function" id="group___d_a_c___exported___functions_1gab4d3b364a6b184dcd65f3b294ebf56dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DAC_DualSoftwareTriggerCmd</definition>
        <argsstring>(FunctionalState NewState)</argsstring>
        <name>DAC_DualSoftwareTriggerCmd</name>
        <param>
          <type><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref></type>
          <declname>NewState</declname>
        </param>
        <briefdescription>
<para>Enables or disables simultaneously the two DAC channels software triggers. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>NewState</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of the DAC channels software triggers. This parameter can be: ENABLE or DISABLE. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" line="291" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_dac.c" bodystart="284" bodyend="298"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" compoundref="stm32f10x_8h" startline="522">IS_FUNCTIONAL_STATE</references>
        <references refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1ad3a9df141be0ccf10389b640f492b26d" compoundref="stm32f10x_8h" startline="521">DISABLE</references>
        <references refid="group___peripheral__declaration_1ga4aa2a4ab86ce00c23035e5cee2e7fc7e" compoundref="stm32f10x_8h" startline="1404">DAC</references>
        <references refid="group___d_a_c___private___defines_1ga6401668f65168b2b689b49155f380bdd" compoundref="stm32f10x__dac_8c" startline="51">DUAL_SWTRIG_SET</references>
        <references refid="group___d_a_c___private___defines_1gacd3ce00f8b25892532af267f26932ed7" compoundref="stm32f10x__dac_8c" startline="52">DUAL_SWTRIG_RESET</references>
      </memberdef>
      <memberdef kind="function" id="group___d_a_c___exported___functions_1gabd51ae6880821d4dcd923969ec19a19e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DAC_WaveGenerationCmd</definition>
        <argsstring>(uint32_t DAC_Channel, uint32_t DAC_Wave, FunctionalState NewState)</argsstring>
        <name>DAC_WaveGenerationCmd</name>
        <param>
          <type>uint32_t</type>
          <declname>DAC_Channel</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>DAC_Wave</declname>
        </param>
        <param>
          <type><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref></type>
          <declname>NewState</declname>
        </param>
        <briefdescription>
<para>Enables or disables the selected DAC channel wave generation. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>DAC_Channel</parametername>
</parameternamelist>
<parameterdescription>
<para>the selected DAC channel. This parameter can be one of the following values: <itemizedlist>
<listitem><para>DAC_Channel_1: DAC Channel1 selected </para></listitem>
<listitem><para>DAC_Channel_2: DAC Channel2 selected </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>DAC_Wave</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the wave type to enable or disable. This parameter can be one of the following values: <itemizedlist>
<listitem><para>DAC_Wave_Noise: noise wave generation </para></listitem>
<listitem><para>DAC_Wave_Triangle: triangle wave generation </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NewState</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of the selected DAC channel wave generation. This parameter can be: ENABLE or DISABLE. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" line="292" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_dac.c" bodystart="314" bodyend="330"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___d_a_c___channel__selection_1gafb2b9bdaccb3a5e3396925d7cba02cc3" compoundref="stm32f10x__dac_8h" startline="202">IS_DAC_CHANNEL</references>
        <references refid="group___d_a_c__wave__generation_1ga45c25065fb713820f6dbae0009376e1c" compoundref="stm32f10x__dac_8h" startline="228">IS_DAC_WAVE</references>
        <references refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" compoundref="stm32f10x_8h" startline="522">IS_FUNCTIONAL_STATE</references>
        <references refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1ad3a9df141be0ccf10389b640f492b26d" compoundref="stm32f10x_8h" startline="521">DISABLE</references>
        <references refid="group___peripheral__declaration_1ga4aa2a4ab86ce00c23035e5cee2e7fc7e" compoundref="stm32f10x_8h" startline="1404">DAC</references>
      </memberdef>
      <memberdef kind="function" id="group___d_a_c___exported___functions_1gad06b4230d2b17d1d13f41dce4c782461" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DAC_SetChannel1Data</definition>
        <argsstring>(uint32_t DAC_Align, uint16_t Data)</argsstring>
        <name>DAC_SetChannel1Data</name>
        <param>
          <type>uint32_t</type>
          <declname>DAC_Align</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>Data</declname>
        </param>
        <briefdescription>
<para>Set the specified data holding register value for DAC channel1. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>DAC_Align</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the data alignment for DAC channel1. This parameter can be one of the following values: <itemizedlist>
<listitem><para>DAC_Align_8b_R: 8bit right data alignment selected </para></listitem>
<listitem><para>DAC_Align_12b_L: 12bit left data alignment selected </para></listitem>
<listitem><para>DAC_Align_12b_R: 12bit right data alignment selected </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Data</parametername>
</parameternamelist>
<parameterdescription>
<para>: Data to be loaded in the selected data holding register. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" line="293" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_dac.c" bodystart="342" bodyend="355"/>
        <references refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" compoundref="core__cm0_8h" startline="221">__IO</references>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___d_a_c__data__alignment_1ga7779c36606827a6a2c4423414a441bde" compoundref="stm32f10x__dac_8h" startline="215">IS_DAC_ALIGN</references>
        <references refid="group___d_a_c__data_1ga903e28d4971e172b37c1c2fc17c2a884" compoundref="stm32f10x__dac_8h" startline="238">IS_DAC_DATA</references>
        <references refid="group___peripheral__memory__map_1gad18d0b914c7f68cecbee1a2d23a67d38" compoundref="stm32f10x_8h" startline="1310">DAC_BASE</references>
        <references refid="group___d_a_c___private___defines_1gaf1305e3b7cfb0f898678baeab6e91cbf" compoundref="stm32f10x__dac_8c" startline="55">DHR12R1_OFFSET</references>
      </memberdef>
      <memberdef kind="function" id="group___d_a_c___exported___functions_1ga44e12006ec186791378d132da8541552" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DAC_SetChannel2Data</definition>
        <argsstring>(uint32_t DAC_Align, uint16_t Data)</argsstring>
        <name>DAC_SetChannel2Data</name>
        <param>
          <type>uint32_t</type>
          <declname>DAC_Align</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>Data</declname>
        </param>
        <briefdescription>
<para>Set the specified data holding register value for DAC channel2. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>DAC_Align</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the data alignment for DAC channel2. This parameter can be one of the following values: <itemizedlist>
<listitem><para>DAC_Align_8b_R: 8bit right data alignment selected </para></listitem>
<listitem><para>DAC_Align_12b_L: 12bit left data alignment selected </para></listitem>
<listitem><para>DAC_Align_12b_R: 12bit right data alignment selected </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Data</parametername>
</parameternamelist>
<parameterdescription>
<para>: Data to be loaded in the selected data holding register. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" line="294" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_dac.c" bodystart="367" bodyend="380"/>
        <references refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" compoundref="core__cm0_8h" startline="221">__IO</references>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___d_a_c__data__alignment_1ga7779c36606827a6a2c4423414a441bde" compoundref="stm32f10x__dac_8h" startline="215">IS_DAC_ALIGN</references>
        <references refid="group___d_a_c__data_1ga903e28d4971e172b37c1c2fc17c2a884" compoundref="stm32f10x__dac_8h" startline="238">IS_DAC_DATA</references>
        <references refid="group___peripheral__memory__map_1gad18d0b914c7f68cecbee1a2d23a67d38" compoundref="stm32f10x_8h" startline="1310">DAC_BASE</references>
        <references refid="group___d_a_c___private___defines_1ga157b0fbccea090637eea09172fdd6a39" compoundref="stm32f10x__dac_8c" startline="56">DHR12R2_OFFSET</references>
      </memberdef>
      <memberdef kind="function" id="group___d_a_c___exported___functions_1ga4ca2cfdf56ab35a23f2517f23d7fbb24" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DAC_SetDualChannelData</definition>
        <argsstring>(uint32_t DAC_Align, uint16_t Data2, uint16_t Data1)</argsstring>
        <name>DAC_SetDualChannelData</name>
        <param>
          <type>uint32_t</type>
          <declname>DAC_Align</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>Data2</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>Data1</declname>
        </param>
        <briefdescription>
<para>Set the specified data holding register value for dual channel DAC. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>DAC_Align</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the data alignment for dual channel DAC. This parameter can be one of the following values: <itemizedlist>
<listitem><para>DAC_Align_8b_R: 8bit right data alignment selected </para></listitem>
<listitem><para>DAC_Align_12b_L: 12bit left data alignment selected </para></listitem>
<listitem><para>DAC_Align_12b_R: 12bit right data alignment selected </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Data2</parametername>
</parameternamelist>
<parameterdescription>
<para>Data for DAC Channel2 to be loaded in the selected data holding register. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Data1</parametername>
</parameternamelist>
<parameterdescription>
<para>Data for DAC Channel1 to be loaded in the selected data holding register. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" line="295" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_dac.c" bodystart="396" bodyend="420"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___d_a_c__data__alignment_1ga7779c36606827a6a2c4423414a441bde" compoundref="stm32f10x__dac_8h" startline="215">IS_DAC_ALIGN</references>
        <references refid="group___d_a_c__data_1ga903e28d4971e172b37c1c2fc17c2a884" compoundref="stm32f10x__dac_8h" startline="238">IS_DAC_DATA</references>
        <references refid="group___d_a_c__data__alignment_1gaa633fbcf85e97e12c4894eaed530dd8f" compoundref="stm32f10x__dac_8h" startline="214">DAC_Align_8b_R</references>
        <references refid="group___peripheral__memory__map_1gad18d0b914c7f68cecbee1a2d23a67d38" compoundref="stm32f10x_8h" startline="1310">DAC_BASE</references>
        <references refid="group___d_a_c___private___defines_1ga2893b0491ec29a95fd061e5e0fa029e3" compoundref="stm32f10x__dac_8c" startline="57">DHR12RD_OFFSET</references>
        <references refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" compoundref="core__cm0_8h" startline="221">__IO</references>
      </memberdef>
      <memberdef kind="function" id="group___d_a_c___exported___functions_1ga51274838de1e5dd012a82d7f44d7a50b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t DAC_GetDataOutputValue</definition>
        <argsstring>(uint32_t DAC_Channel)</argsstring>
        <name>DAC_GetDataOutputValue</name>
        <param>
          <type>uint32_t</type>
          <declname>DAC_Channel</declname>
        </param>
        <briefdescription>
<para>Returns the last data output value of the selected DAC channel. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>DAC_Channel</parametername>
</parameternamelist>
<parameterdescription>
<para>the selected DAC channel. This parameter can be one of the following values: <itemizedlist>
<listitem><para>DAC_Channel_1: DAC Channel1 selected </para></listitem>
<listitem><para>DAC_Channel_2: DAC Channel2 selected </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>selected DAC channel data output value. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_dac.h" line="296" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_dac.c" bodystart="430" bodyend="442"/>
        <references refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" compoundref="core__cm0_8h" startline="221">__IO</references>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___d_a_c___channel__selection_1gafb2b9bdaccb3a5e3396925d7cba02cc3" compoundref="stm32f10x__dac_8h" startline="202">IS_DAC_CHANNEL</references>
        <references refid="group___peripheral__memory__map_1gad18d0b914c7f68cecbee1a2d23a67d38" compoundref="stm32f10x_8h" startline="1310">DAC_BASE</references>
        <references refid="group___d_a_c___private___defines_1ga051bab7263211bd232d13665339c1745" compoundref="stm32f10x__dac_8c" startline="60">DOR_OFFSET</references>
        <references refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffa589b7d94a3d91d145720e2fed0eb3a05" compoundref="stm32f10x_8h" startline="519">RESET</references>
        <references refid="group___peripheral__declaration_1ga4aa2a4ab86ce00c23035e5cee2e7fc7e" compoundref="stm32f10x_8h" startline="1404">DAC</references>
        <references refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffab44c8101cc294c074709ec1b14211792" compoundref="stm32f10x_8h" startline="519">SET</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
