<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="stm32f10x__pwr_8h" kind="file" language="C++">
    <compoundname>stm32f10x_pwr.h</compoundname>
    <includes refid="stm32f10x_8h" local="yes">stm32f10x.h</includes>
    <includedby refid="stm32f10x__conf_8h" local="yes">C:/Users/anilj/Desktop/cmsis/sorc/include/stm32f10x_conf.h</includedby>
    <includedby refid="stm32f10x__pwr_8c" local="yes">C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_pwr.c</includedby>
    <incdepgraph>
      <node id="657">
        <label>system_stm32f10x.h</label>
        <link refid="system__stm32f10x_8h"/>
      </node>
      <node id="651">
        <label>C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_pwr.h</label>
        <link refid="stm32f10x__pwr_8h"/>
        <childnode refid="652" relation="include">
        </childnode>
      </node>
      <node id="654">
        <label>stdint.h</label>
      </node>
      <node id="653">
        <label>core_cm3.h</label>
        <link refid="core__cm3_8h"/>
        <childnode refid="654" relation="include">
        </childnode>
        <childnode refid="655" relation="include">
        </childnode>
        <childnode refid="656" relation="include">
        </childnode>
      </node>
      <node id="656">
        <label>core_cmFunc.h</label>
        <link refid="core__cm_func_8h"/>
      </node>
      <node id="655">
        <label>core_cmInstr.h</label>
        <link refid="core__cm_instr_8h"/>
      </node>
      <node id="652">
        <label>stm32f10x.h</label>
        <link refid="stm32f10x_8h"/>
        <childnode refid="653" relation="include">
        </childnode>
        <childnode refid="657" relation="include">
        </childnode>
        <childnode refid="654" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="658">
        <label>C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_pwr.h</label>
        <link refid="stm32f10x__pwr_8h"/>
        <childnode refid="659" relation="include">
        </childnode>
        <childnode refid="660" relation="include">
        </childnode>
      </node>
      <node id="659">
        <label>C:/Users/anilj/Desktop/cmsis/sorc/include/stm32f10x_conf.h</label>
        <link refid="stm32f10x__conf_8h"/>
      </node>
      <node id="660">
        <label>C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_pwr.c</label>
        <link refid="stm32f10x__pwr_8c"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="group___p_v_d__detection__level_1ga5cf8b09ed099c7412fcee6ccec2ec20b" prot="public" static="no">
        <name>PWR_PVDLevel_2V2</name>
        <initializer>((uint32_t)0x00000000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_pwr.h" line="58" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_pwr.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_v_d__detection__level_1ga561e543dedb4c2cb126ec8d9d604260c" prot="public" static="no">
        <name>PWR_PVDLevel_2V3</name>
        <initializer>((uint32_t)0x00000020)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_pwr.h" line="59" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_pwr.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_v_d__detection__level_1ga5b585e7e6eda29e8b119e16779ba7a8b" prot="public" static="no">
        <name>PWR_PVDLevel_2V4</name>
        <initializer>((uint32_t)0x00000040)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_pwr.h" line="60" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_pwr.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_v_d__detection__level_1gad91e74c3034a5baccca70250815e680e" prot="public" static="no">
        <name>PWR_PVDLevel_2V5</name>
        <initializer>((uint32_t)0x00000060)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_pwr.h" line="61" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_pwr.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_v_d__detection__level_1ga46174e5288082b59473068a3ca8e8ea6" prot="public" static="no">
        <name>PWR_PVDLevel_2V6</name>
        <initializer>((uint32_t)0x00000080)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_pwr.h" line="62" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_pwr.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_v_d__detection__level_1ga72d22a858d8289ef02fff45f4810b916" prot="public" static="no">
        <name>PWR_PVDLevel_2V7</name>
        <initializer>((uint32_t)0x000000A0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_pwr.h" line="63" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_pwr.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_v_d__detection__level_1ga5f38835a95c026b1db16dbebf81b45a2" prot="public" static="no">
        <name>PWR_PVDLevel_2V8</name>
        <initializer>((uint32_t)0x000000C0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_pwr.h" line="64" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_pwr.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_v_d__detection__level_1ga9c156a7155f9946c0d3a73794f51a1ce" prot="public" static="no">
        <name>PWR_PVDLevel_2V9</name>
        <initializer>((uint32_t)0x000000E0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_pwr.h" line="65" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_pwr.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_v_d__detection__level_1gabac4485a57abc97aad91eaa0b65ae927" prot="public" static="no">
        <name>IS_PWR_PVD_LEVEL</name>
        <param><defname>LEVEL</defname></param>
        <initializer>(((LEVEL) == <ref refid="group___p_v_d__detection__level_1ga5cf8b09ed099c7412fcee6ccec2ec20b" kindref="member">PWR_PVDLevel_2V2</ref>) || ((LEVEL) == <ref refid="group___p_v_d__detection__level_1ga561e543dedb4c2cb126ec8d9d604260c" kindref="member">PWR_PVDLevel_2V3</ref>)|| \
                                 ((LEVEL) == <ref refid="group___p_v_d__detection__level_1ga5b585e7e6eda29e8b119e16779ba7a8b" kindref="member">PWR_PVDLevel_2V4</ref>) || ((LEVEL) == <ref refid="group___p_v_d__detection__level_1gad91e74c3034a5baccca70250815e680e" kindref="member">PWR_PVDLevel_2V5</ref>)|| \
                                 ((LEVEL) == <ref refid="group___p_v_d__detection__level_1ga46174e5288082b59473068a3ca8e8ea6" kindref="member">PWR_PVDLevel_2V6</ref>) || ((LEVEL) == <ref refid="group___p_v_d__detection__level_1ga72d22a858d8289ef02fff45f4810b916" kindref="member">PWR_PVDLevel_2V7</ref>)|| \
                                 ((LEVEL) == <ref refid="group___p_v_d__detection__level_1ga5f38835a95c026b1db16dbebf81b45a2" kindref="member">PWR_PVDLevel_2V8</ref>) || ((LEVEL) == <ref refid="group___p_v_d__detection__level_1ga9c156a7155f9946c0d3a73794f51a1ce" kindref="member">PWR_PVDLevel_2V9</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_pwr.h" line="66" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_pwr.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___regulator__state__is___s_t_o_p__mode_1gabf58b999bff6b4bf0fb5b97d74a75683" prot="public" static="no">
        <name>PWR_Regulator_ON</name>
        <initializer>((uint32_t)0x00000000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_pwr.h" line="78" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_pwr.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___regulator__state__is___s_t_o_p__mode_1ga13745136d094661358d373b67ebf1ac7" prot="public" static="no">
        <name>PWR_Regulator_LowPower</name>
        <initializer>((uint32_t)0x00000001)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_pwr.h" line="79" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_pwr.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___regulator__state__is___s_t_o_p__mode_1ga03c105070272141c0bab5f2b74469072" prot="public" static="no">
        <name>IS_PWR_REGULATOR</name>
        <param><defname>REGULATOR</defname></param>
        <initializer>(((REGULATOR) == <ref refid="group___regulator__state__is___s_t_o_p__mode_1gabf58b999bff6b4bf0fb5b97d74a75683" kindref="member">PWR_Regulator_ON</ref>) || \
                                     ((REGULATOR) == <ref refid="group___regulator__state__is___s_t_o_p__mode_1ga13745136d094661358d373b67ebf1ac7" kindref="member">PWR_Regulator_LowPower</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_pwr.h" line="80" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_pwr.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_t_o_p__mode__entry_1gaa1e1362f3d0b93e8f5f674e18cfc96c4" prot="public" static="no">
        <name>PWR_STOPEntry_WFI</name>
        <initializer>((uint8_t)0x01)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_pwr.h" line="90" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_pwr.h" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_t_o_p__mode__entry_1gaac98ac55fb8764121d4168d99c9b369e" prot="public" static="no">
        <name>PWR_STOPEntry_WFE</name>
        <initializer>((uint8_t)0x02)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_pwr.h" line="91" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_pwr.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_t_o_p__mode__entry_1ga4a94eb1f400dec6e486fbc229cbea8a0" prot="public" static="no">
        <name>IS_PWR_STOP_ENTRY</name>
        <param><defname>ENTRY</defname></param>
        <initializer>(((ENTRY) == <ref refid="group___s_t_o_p__mode__entry_1gaa1e1362f3d0b93e8f5f674e18cfc96c4" kindref="member">PWR_STOPEntry_WFI</ref>) || ((ENTRY) == <ref refid="group___s_t_o_p__mode__entry_1gaac98ac55fb8764121d4168d99c9b369e" kindref="member">PWR_STOPEntry_WFE</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_pwr.h" line="92" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_pwr.h" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_w_r___flag_1ga2d06760a5769e729b06d41e37036d58e" prot="public" static="no">
        <name>PWR_FLAG_WU</name>
        <initializer>((uint32_t)0x00000001)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_pwr.h" line="102" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_pwr.h" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_w_r___flag_1ga9e55f0b5dec2346d5c8dee3ab3c0c2df" prot="public" static="no">
        <name>PWR_FLAG_SB</name>
        <initializer>((uint32_t)0x00000002)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_pwr.h" line="103" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_pwr.h" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_w_r___flag_1gaefd05d58cc050eeef83a1b5c520b2c2a" prot="public" static="no">
        <name>PWR_FLAG_PVDO</name>
        <initializer>((uint32_t)0x00000004)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_pwr.h" line="104" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_pwr.h" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_w_r___flag_1gadc822638d0dd52d2f920808dd96c00a1" prot="public" static="no">
        <name>IS_PWR_GET_FLAG</name>
        <param><defname>FLAG</defname></param>
        <initializer>(((FLAG) == <ref refid="group___p_w_r___flag_1ga2d06760a5769e729b06d41e37036d58e" kindref="member">PWR_FLAG_WU</ref>) || ((FLAG) == <ref refid="group___p_w_r___flag_1ga9e55f0b5dec2346d5c8dee3ab3c0c2df" kindref="member">PWR_FLAG_SB</ref>) || \
                               ((FLAG) == <ref refid="group___p_w_r___flag_1gaefd05d58cc050eeef83a1b5c520b2c2a" kindref="member">PWR_FLAG_PVDO</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_pwr.h" line="105" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_pwr.h" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_w_r___flag_1ga36d35a770e683e4a0baf3aac350fcb5a" prot="public" static="no">
        <name>IS_PWR_CLEAR_FLAG</name>
        <param><defname>FLAG</defname></param>
        <initializer>(((FLAG) == <ref refid="group___p_w_r___flag_1ga2d06760a5769e729b06d41e37036d58e" kindref="member">PWR_FLAG_WU</ref>) || ((FLAG) == <ref refid="group___p_w_r___flag_1ga9e55f0b5dec2346d5c8dee3ab3c0c2df" kindref="member">PWR_FLAG_SB</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_pwr.h" line="108" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_pwr.h" bodystart="108" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group___p_w_r___exported___functions_1gad03a0aac7bc3bc3a9fd012f3769a6990" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PWR_DeInit</definition>
        <argsstring>(void)</argsstring>
        <name>PWR_DeInit</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Deinitializes the PWR peripheral registers to their default reset values. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_pwr.h" line="129" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_pwr.c" bodystart="112" bodyend="116"/>
        <references refid="group___r_c_c___exported___functions_1gab197ae4369c10b92640a733b40ed2801" compoundref="stm32f10x__rcc_8c" startline="1216" endline="1229">RCC_APB1PeriphResetCmd</references>
        <references refid="group___a_p_b1__peripheral_1ga59ae4e17d5b35a934b1614f8ee883834" compoundref="stm32f10x__rcc_8h" startline="550">RCC_APB1Periph_PWR</references>
        <references refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1a7d46875fa3ebd2c34d2756950eda83bf" compoundref="stm32f10x_8h" startline="521">ENABLE</references>
        <references refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1ad3a9df141be0ccf10389b640f492b26d" compoundref="stm32f10x_8h" startline="521">DISABLE</references>
      </memberdef>
      <memberdef kind="function" id="group___p_w_r___exported___functions_1ga0741aea35572b1a75f82b74de12df800" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PWR_BackupAccessCmd</definition>
        <argsstring>(FunctionalState NewState)</argsstring>
        <name>PWR_BackupAccessCmd</name>
        <param>
          <type><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref></type>
          <declname>NewState</declname>
        </param>
        <briefdescription>
<para>Enables or disables access to the RTC and backup registers. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>NewState</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of the access to the RTC and backup registers. This parameter can be: ENABLE or DISABLE. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_pwr.h" line="130" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_pwr.c" bodystart="124" bodyend="129"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" compoundref="stm32f10x_8h" startline="522">IS_FUNCTIONAL_STATE</references>
        <references refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" compoundref="core__cm0_8h" startline="221">__IO</references>
        <references refid="group___p_w_r___private___defines_1ga799ab60bdbcfc1076cf2d7f206d09b0c" compoundref="stm32f10x__pwr_8c" startline="55">CR_DBP_BB</references>
      </memberdef>
      <memberdef kind="function" id="group___p_w_r___exported___functions_1ga42cad476b816e0a33594a933b3ed1acd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PWR_PVDCmd</definition>
        <argsstring>(FunctionalState NewState)</argsstring>
        <name>PWR_PVDCmd</name>
        <param>
          <type><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref></type>
          <declname>NewState</declname>
        </param>
        <briefdescription>
<para>Enables or disables the Power Voltage Detector(PVD). </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>NewState</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of the PVD. This parameter can be: ENABLE or DISABLE. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_pwr.h" line="131" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_pwr.c" bodystart="137" bodyend="142"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" compoundref="stm32f10x_8h" startline="522">IS_FUNCTIONAL_STATE</references>
        <references refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" compoundref="core__cm0_8h" startline="221">__IO</references>
        <references refid="group___p_w_r___private___defines_1ga49f51ef8285a6be76fd204d49a00709c" compoundref="stm32f10x__pwr_8c" startline="59">CR_PVDE_BB</references>
      </memberdef>
      <memberdef kind="function" id="group___p_w_r___exported___functions_1ga237c143ef6aa55abb8049fa7bf24ab8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PWR_PVDLevelConfig</definition>
        <argsstring>(uint32_t PWR_PVDLevel)</argsstring>
        <name>PWR_PVDLevelConfig</name>
        <param>
          <type>uint32_t</type>
          <declname>PWR_PVDLevel</declname>
        </param>
        <briefdescription>
<para>Configures the voltage threshold detected by the Power Voltage Detector(PVD). </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>PWR_PVDLevel</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the PVD detection level This parameter can be one of the following values: <itemizedlist>
<listitem><para>PWR_PVDLevel_2V2: PVD detection level set to 2.2V </para></listitem>
<listitem><para>PWR_PVDLevel_2V3: PVD detection level set to 2.3V </para></listitem>
<listitem><para>PWR_PVDLevel_2V4: PVD detection level set to 2.4V </para></listitem>
<listitem><para>PWR_PVDLevel_2V5: PVD detection level set to 2.5V </para></listitem>
<listitem><para>PWR_PVDLevel_2V6: PVD detection level set to 2.6V </para></listitem>
<listitem><para>PWR_PVDLevel_2V7: PVD detection level set to 2.7V </para></listitem>
<listitem><para>PWR_PVDLevel_2V8: PVD detection level set to 2.8V </para></listitem>
<listitem><para>PWR_PVDLevel_2V9: PVD detection level set to 2.9V </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_pwr.h" line="132" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_pwr.c" bodystart="158" bodyend="170"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___p_v_d__detection__level_1gabac4485a57abc97aad91eaa0b65ae927" compoundref="stm32f10x__pwr_8h" startline="66">IS_PWR_PVD_LEVEL</references>
        <references refid="group___peripheral__declaration_1ga04651c526497822a859942b928e57f8e" compoundref="stm32f10x_8h" startline="1403">PWR</references>
        <references refid="group___p_w_r___private___defines_1gac4a30eebdd1d292331a578b189962e77" compoundref="stm32f10x__pwr_8c" startline="72">CR_PLS_MASK</references>
      </memberdef>
      <memberdef kind="function" id="group___p_w_r___exported___functions_1gae5fd6f9336ef8c60d5483651cb0d1a00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PWR_WakeUpPinCmd</definition>
        <argsstring>(FunctionalState NewState)</argsstring>
        <name>PWR_WakeUpPinCmd</name>
        <param>
          <type><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref></type>
          <declname>NewState</declname>
        </param>
        <briefdescription>
<para>Enables or disables the WakeUp Pin functionality. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>NewState</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of the WakeUp Pin functionality. This parameter can be: ENABLE or DISABLE. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_pwr.h" line="133" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_pwr.c" bodystart="178" bodyend="183"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" compoundref="stm32f10x_8h" startline="522">IS_FUNCTIONAL_STATE</references>
        <references refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" compoundref="core__cm0_8h" startline="221">__IO</references>
        <references refid="group___p_w_r___private___defines_1gaaff864595f697850b19173b0bca991b0" compoundref="stm32f10x__pwr_8c" startline="66">CSR_EWUP_BB</references>
      </memberdef>
      <memberdef kind="function" id="group___p_w_r___exported___functions_1ga694676ac06a9baf50eae45adae0118ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PWR_EnterSTOPMode</definition>
        <argsstring>(uint32_t PWR_Regulator, uint8_t PWR_STOPEntry)</argsstring>
        <name>PWR_EnterSTOPMode</name>
        <param>
          <type>uint32_t</type>
          <declname>PWR_Regulator</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>PWR_STOPEntry</declname>
        </param>
        <briefdescription>
<para>Enters STOP mode. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>PWR_Regulator</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the regulator state in STOP mode. This parameter can be one of the following values: <itemizedlist>
<listitem><para>PWR_Regulator_ON: STOP mode with regulator ON </para></listitem>
<listitem><para>PWR_Regulator_LowPower: STOP mode with regulator in low power mode </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>PWR_STOPEntry</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies if STOP mode in entered with WFI or WFE instruction. This parameter can be one of the following values: <itemizedlist>
<listitem><para>PWR_STOPEntry_WFI: enter STOP mode with WFI instruction </para></listitem>
<listitem><para>PWR_STOPEntry_WFE: enter STOP mode with WFE instruction </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_pwr.h" line="134" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_pwr.c" bodystart="197" bodyend="229"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___regulator__state__is___s_t_o_p__mode_1ga03c105070272141c0bab5f2b74469072" compoundref="stm32f10x__pwr_8h" startline="80">IS_PWR_REGULATOR</references>
        <references refid="group___s_t_o_p__mode__entry_1ga4a94eb1f400dec6e486fbc229cbea8a0" compoundref="stm32f10x__pwr_8h" startline="92">IS_PWR_STOP_ENTRY</references>
        <references refid="group___peripheral__declaration_1ga04651c526497822a859942b928e57f8e" compoundref="stm32f10x_8h" startline="1403">PWR</references>
        <references refid="group___p_w_r___private___defines_1ga8ee6bf9218f3c476629dd9ee70deef21" compoundref="stm32f10x__pwr_8c" startline="71">CR_DS_MASK</references>
        <references refid="group___c_m_s_i_s__core__base_1gaaaf6477c2bde2f00f99e3c2fd1060b01" compoundref="core__cm0_8h" startline="595">SCB</references>
        <references refid="group___peripheral___registers___bits___definition_1gac4f4f02bfc91aef800b88fa58329cb92" compoundref="stm32f10x_8h" startline="3182">SCB_SCR_SLEEPDEEP</references>
        <references refid="group___s_t_o_p__mode__entry_1gaa1e1362f3d0b93e8f5f674e18cfc96c4" compoundref="stm32f10x__pwr_8h" startline="90">PWR_STOPEntry_WFI</references>
        <references refid="group___c_m_s_i_s___core___instruction_interface_1gad23bf2b78a9a4524157c9de0d30b7448" compoundref="cmsis__armcc_8h" startline="320">__WFI</references>
        <references refid="group___c_m_s_i_s___core___instruction_interface_1gaac6cc7dd4325d9cb40d3290fa5244b3d" compoundref="cmsis__armcc_8h" startline="328">__WFE</references>
      </memberdef>
      <memberdef kind="function" id="group___p_w_r___exported___functions_1ga00ddae00a9c327b81b24d2597b0052f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PWR_EnterSTANDBYMode</definition>
        <argsstring>(void)</argsstring>
        <name>PWR_EnterSTANDBYMode</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Enters STANDBY mode. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_pwr.h" line="135" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_pwr.c" bodystart="236" bodyend="250"/>
        <references refid="group___peripheral__declaration_1ga04651c526497822a859942b928e57f8e" compoundref="stm32f10x_8h" startline="1403">PWR</references>
        <references refid="group___peripheral___registers___bits___definition_1ga3928de64f633b84770b1cfecea702fa7" compoundref="stm32f10x_8h" startline="1497">PWR_CR_CWUF</references>
        <references refid="group___peripheral___registers___bits___definition_1ga8c8075e98772470804c9e3fe74984115" compoundref="stm32f10x_8h" startline="1496">PWR_CR_PDDS</references>
        <references refid="group___c_m_s_i_s__core__base_1gaaaf6477c2bde2f00f99e3c2fd1060b01" compoundref="core__cm0_8h" startline="595">SCB</references>
        <references refid="group___peripheral___registers___bits___definition_1gac4f4f02bfc91aef800b88fa58329cb92" compoundref="stm32f10x_8h" startline="3182">SCB_SCR_SLEEPDEEP</references>
        <references refid="group___c_m_s_i_s___core___instruction_interface_1gad23bf2b78a9a4524157c9de0d30b7448" compoundref="cmsis__armcc_8h" startline="320">__WFI</references>
      </memberdef>
      <memberdef kind="function" id="group___p_w_r___exported___functions_1gaa980163a4d83304280ee34942464b4ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___exported__types_1ga89136caac2e14c55151f527ac02daaff" kindref="member">FlagStatus</ref></type>
        <definition>FlagStatus PWR_GetFlagStatus</definition>
        <argsstring>(uint32_t PWR_FLAG)</argsstring>
        <name>PWR_GetFlagStatus</name>
        <param>
          <type>uint32_t</type>
          <declname>PWR_FLAG</declname>
        </param>
        <briefdescription>
<para>Checks whether the specified PWR flag is set or not. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>PWR_FLAG</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the flag to check. This parameter can be one of the following values: <itemizedlist>
<listitem><para>PWR_FLAG_WU: Wake Up flag </para></listitem>
<listitem><para>PWR_FLAG_SB: StandBy flag </para></listitem>
<listitem><para>PWR_FLAG_PVDO: PVD Output </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of PWR_FLAG (SET or RESET). </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_pwr.h" line="136" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_pwr.c" bodystart="261" bodyend="277"/>
        <references refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffa589b7d94a3d91d145720e2fed0eb3a05" compoundref="stm32f10x_8h" startline="519">RESET</references>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___p_w_r___flag_1gadc822638d0dd52d2f920808dd96c00a1" compoundref="stm32f10x__pwr_8h" startline="105">IS_PWR_GET_FLAG</references>
        <references refid="group___peripheral__declaration_1ga04651c526497822a859942b928e57f8e" compoundref="stm32f10x_8h" startline="1403">PWR</references>
        <references refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffab44c8101cc294c074709ec1b14211792" compoundref="stm32f10x_8h" startline="519">SET</references>
      </memberdef>
      <memberdef kind="function" id="group___p_w_r___exported___functions_1ga01c4b2fbd16514b993324e101c3ddf7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PWR_ClearFlag</definition>
        <argsstring>(uint32_t PWR_FLAG)</argsstring>
        <name>PWR_ClearFlag</name>
        <param>
          <type>uint32_t</type>
          <declname>PWR_FLAG</declname>
        </param>
        <briefdescription>
<para>Clears the PWR&apos;s pending flags. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>PWR_FLAG</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the flag to clear. This parameter can be one of the following values: <itemizedlist>
<listitem><para>PWR_FLAG_WU: Wake Up flag </para></listitem>
<listitem><para>PWR_FLAG_SB: StandBy flag </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_pwr.h" line="137" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_pwr.c" bodystart="287" bodyend="293"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___p_w_r___flag_1ga36d35a770e683e4a0baf3aac350fcb5a" compoundref="stm32f10x__pwr_8h" startline="108">IS_PWR_CLEAR_FLAG</references>
        <references refid="group___peripheral__declaration_1ga04651c526497822a859942b928e57f8e" compoundref="stm32f10x_8h" startline="1403">PWR</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This file contains all the functions prototypes for the PWR firmware library. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>MCD Application Team </para></simplesect>
<simplesect kind="version"><para>V3.5.0 </para></simplesect>
<simplesect kind="date"><para>11-March-2011 </para></simplesect>
<simplesect kind="attention"><para></para></simplesect>
THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.</para><para><heading level="2"><center><copy/> COPYRIGHT 2011 STMicroelectronics</center></heading>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="23"><highlight class="comment">/*<sp/>Define<sp/>to<sp/>prevent<sp/>recursive<sp/>inclusion<sp/>-------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__STM32F10x_PWR_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__STM32F10x_PWR_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Includes<sp/>------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="stm32f10x_8h" kindref="compound">stm32f10x.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="group___p_v_d__detection__level_1ga5cf8b09ed099c7412fcee6ccec2ec20b" refkind="member"><highlight class="preprocessor">#define<sp/>PWR_PVDLevel_2V2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="group___p_v_d__detection__level_1ga561e543dedb4c2cb126ec8d9d604260c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PWR_PVDLevel_2V3<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000020)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="group___p_v_d__detection__level_1ga5b585e7e6eda29e8b119e16779ba7a8b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PWR_PVDLevel_2V4<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000040)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="group___p_v_d__detection__level_1gad91e74c3034a5baccca70250815e680e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PWR_PVDLevel_2V5<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000060)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="group___p_v_d__detection__level_1ga46174e5288082b59473068a3ca8e8ea6" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PWR_PVDLevel_2V6<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000080)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="group___p_v_d__detection__level_1ga72d22a858d8289ef02fff45f4810b916" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PWR_PVDLevel_2V7<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x000000A0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="group___p_v_d__detection__level_1ga5f38835a95c026b1db16dbebf81b45a2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PWR_PVDLevel_2V8<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x000000C0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="group___p_v_d__detection__level_1ga9c156a7155f9946c0d3a73794f51a1ce" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PWR_PVDLevel_2V9<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x000000E0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="group___p_v_d__detection__level_1gabac4485a57abc97aad91eaa0b65ae927" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PWR_PVD_LEVEL(LEVEL)<sp/>(((LEVEL)<sp/>==<sp/>PWR_PVDLevel_2V2)<sp/>||<sp/>((LEVEL)<sp/>==<sp/>PWR_PVDLevel_2V3)||<sp/>\</highlight></codeline>
<codeline lineno="67"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((LEVEL)<sp/>==<sp/>PWR_PVDLevel_2V4)<sp/>||<sp/>((LEVEL)<sp/>==<sp/>PWR_PVDLevel_2V5)||<sp/>\</highlight></codeline>
<codeline lineno="68"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((LEVEL)<sp/>==<sp/>PWR_PVDLevel_2V6)<sp/>||<sp/>((LEVEL)<sp/>==<sp/>PWR_PVDLevel_2V7)||<sp/>\</highlight></codeline>
<codeline lineno="69"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((LEVEL)<sp/>==<sp/>PWR_PVDLevel_2V8)<sp/>||<sp/>((LEVEL)<sp/>==<sp/>PWR_PVDLevel_2V9))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="group___regulator__state__is___s_t_o_p__mode_1gabf58b999bff6b4bf0fb5b97d74a75683" refkind="member"><highlight class="preprocessor">#define<sp/>PWR_Regulator_ON<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="group___regulator__state__is___s_t_o_p__mode_1ga13745136d094661358d373b67ebf1ac7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PWR_Regulator_LowPower<sp/><sp/><sp/><sp/>((uint32_t)0x00000001)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="group___regulator__state__is___s_t_o_p__mode_1ga03c105070272141c0bab5f2b74469072" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PWR_REGULATOR(REGULATOR)<sp/>(((REGULATOR)<sp/>==<sp/>PWR_Regulator_ON)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="81"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((REGULATOR)<sp/>==<sp/>PWR_Regulator_LowPower))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="group___s_t_o_p__mode__entry_1gaa1e1362f3d0b93e8f5f674e18cfc96c4" refkind="member"><highlight class="preprocessor">#define<sp/>PWR_STOPEntry_WFI<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)0x01)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="group___s_t_o_p__mode__entry_1gaac98ac55fb8764121d4168d99c9b369e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PWR_STOPEntry_WFE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)0x02)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="group___s_t_o_p__mode__entry_1ga4a94eb1f400dec6e486fbc229cbea8a0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PWR_STOP_ENTRY(ENTRY)<sp/>(((ENTRY)<sp/>==<sp/>PWR_STOPEntry_WFI)<sp/>||<sp/>((ENTRY)<sp/>==<sp/>PWR_STOPEntry_WFE))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="102" refid="group___p_w_r___flag_1ga2d06760a5769e729b06d41e37036d58e" refkind="member"><highlight class="preprocessor">#define<sp/>PWR_FLAG_WU<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000001)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103" refid="group___p_w_r___flag_1ga9e55f0b5dec2346d5c8dee3ab3c0c2df" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PWR_FLAG_SB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000002)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104" refid="group___p_w_r___flag_1gaefd05d58cc050eeef83a1b5c520b2c2a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PWR_FLAG_PVDO<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000004)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105" refid="group___p_w_r___flag_1gadc822638d0dd52d2f920808dd96c00a1" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PWR_GET_FLAG(FLAG)<sp/>(((FLAG)<sp/>==<sp/>PWR_FLAG_WU)<sp/>||<sp/>((FLAG)<sp/>==<sp/>PWR_FLAG_SB)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="106"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((FLAG)<sp/>==<sp/>PWR_FLAG_PVDO))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108" refid="group___p_w_r___flag_1ga36d35a770e683e4a0baf3aac350fcb5a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PWR_CLEAR_FLAG(FLAG)<sp/>(((FLAG)<sp/>==<sp/>PWR_FLAG_WU)<sp/>||<sp/>((FLAG)<sp/>==<sp/>PWR_FLAG_SB))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___p_w_r___exported___functions_1gad03a0aac7bc3bc3a9fd012f3769a6990" kindref="member">PWR_DeInit</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___p_w_r___exported___functions_1ga0741aea35572b1a75f82b74de12df800" kindref="member">PWR_BackupAccessCmd</ref>(<ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref><sp/>NewState);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___p_w_r___exported___functions_1ga42cad476b816e0a33594a933b3ed1acd" kindref="member">PWR_PVDCmd</ref>(<ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref><sp/>NewState);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___p_w_r___exported___functions_1ga237c143ef6aa55abb8049fa7bf24ab8f" kindref="member">PWR_PVDLevelConfig</ref>(uint32_t<sp/>PWR_PVDLevel);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___p_w_r___exported___functions_1gae5fd6f9336ef8c60d5483651cb0d1a00" kindref="member">PWR_WakeUpPinCmd</ref>(<ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref><sp/>NewState);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___p_w_r___exported___functions_1ga694676ac06a9baf50eae45adae0118ab" kindref="member">PWR_EnterSTOPMode</ref>(uint32_t<sp/>PWR_Regulator,<sp/>uint8_t<sp/>PWR_STOPEntry);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___p_w_r___exported___functions_1ga00ddae00a9c327b81b24d2597b0052f3" kindref="member">PWR_EnterSTANDBYMode</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><ref refid="group___exported__types_1ga89136caac2e14c55151f527ac02daaff" kindref="member">FlagStatus</ref><sp/><ref refid="group___p_w_r___exported___functions_1gaa980163a4d83304280ee34942464b4ec" kindref="member">PWR_GetFlagStatus</ref>(uint32_t<sp/>PWR_FLAG);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___p_w_r___exported___functions_1ga01c4b2fbd16514b993324e101c3ddf7c" kindref="member">PWR_ClearFlag</ref>(uint32_t<sp/>PWR_FLAG);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal">}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>__STM32F10x_PWR_H<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="comment">/*******************<sp/>(C)<sp/>COPYRIGHT<sp/>2011<sp/>STMicroelectronics<sp/>*****END<sp/>OF<sp/>FILE****/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/include/stm32f1-stdperiph/stm32f10x_pwr.h"/>
  </compounddef>
</doxygen>
