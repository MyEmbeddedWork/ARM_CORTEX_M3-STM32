<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="stm32f10x__sdio_8c" kind="file" language="C++">
    <compoundname>stm32f10x_sdio.c</compoundname>
    <includes refid="stm32f10x__sdio_8h" local="yes">stm32f10x_sdio.h</includes>
    <includes refid="stm32f10x__rcc_8h" local="yes">stm32f10x_rcc.h</includes>
    <incdepgraph>
      <node id="1009">
        <label>system_stm32f10x.h</label>
        <link refid="system__stm32f10x_8h"/>
      </node>
      <node id="1006">
        <label>stdint.h</label>
      </node>
      <node id="1005">
        <label>core_cm3.h</label>
        <link refid="core__cm3_8h"/>
        <childnode refid="1006" relation="include">
        </childnode>
        <childnode refid="1007" relation="include">
        </childnode>
        <childnode refid="1008" relation="include">
        </childnode>
      </node>
      <node id="1008">
        <label>core_cmFunc.h</label>
        <link refid="core__cm_func_8h"/>
      </node>
      <node id="1010">
        <label>stm32f10x_rcc.h</label>
        <link refid="stm32f10x__rcc_8h"/>
        <childnode refid="1004" relation="include">
        </childnode>
      </node>
      <node id="1007">
        <label>core_cmInstr.h</label>
        <link refid="core__cm_instr_8h"/>
      </node>
      <node id="1003">
        <label>stm32f10x_sdio.h</label>
        <link refid="stm32f10x__sdio_8h"/>
        <childnode refid="1004" relation="include">
        </childnode>
      </node>
      <node id="1004">
        <label>stm32f10x.h</label>
        <link refid="stm32f10x_8h"/>
        <childnode refid="1005" relation="include">
        </childnode>
        <childnode refid="1009" relation="include">
        </childnode>
        <childnode refid="1006" relation="include">
        </childnode>
      </node>
      <node id="1002">
        <label>C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c</label>
        <link refid="stm32f10x__sdio_8c"/>
        <childnode refid="1003" relation="include">
        </childnode>
        <childnode refid="1010" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="group___s_d_i_o___private___types_definitions_1gabf07aced03df5f46d57cea1d4f56d1e3" prot="public" static="no">
        <name>SDIO_OFFSET</name>
        <initializer>(<ref refid="group___peripheral__memory__map_1ga95dd0abbc6767893b4b02935fa846f52" kindref="member">SDIO_BASE</ref> - <ref refid="group___peripheral__memory__map_1ga9171f49478fa86d932f89e78e73b88b0" kindref="member">PERIPH_BASE</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" line="40" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___private___types_definitions_1gac5d642be874338519fdec175204ca8ed" prot="public" static="no">
        <name>CLKCR_OFFSET</name>
        <initializer>(<ref refid="group___s_d_i_o___private___types_definitions_1gabf07aced03df5f46d57cea1d4f56d1e3" kindref="member">SDIO_OFFSET</ref> + 0x04)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" line="45" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___private___types_definitions_1ga6ad1da47f9d84c54eb620b9231ebec86" prot="public" static="no">
        <name>CLKEN_BitNumber</name>
        <initializer>0x08</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" line="46" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___private___types_definitions_1gabfb5772b9b734972b576309f7ca8bf92" prot="public" static="no">
        <name>CLKCR_CLKEN_BB</name>
        <initializer>(<ref refid="group___peripheral__memory__map_1gaed7efc100877000845c236ccdc9e144a" kindref="member">PERIPH_BB_BASE</ref> + (<ref refid="group___s_d_i_o___private___types_definitions_1gac5d642be874338519fdec175204ca8ed" kindref="member">CLKCR_OFFSET</ref> * 32) + (<ref refid="group___s_d_i_o___private___types_definitions_1ga6ad1da47f9d84c54eb620b9231ebec86" kindref="member">CLKEN_BitNumber</ref> * 4))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" line="47" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___private___types_definitions_1gaf12d26702ce7a88d2a3dae87f000b75e" prot="public" static="no">
        <name>CMD_OFFSET</name>
        <initializer>(<ref refid="group___s_d_i_o___private___types_definitions_1gabf07aced03df5f46d57cea1d4f56d1e3" kindref="member">SDIO_OFFSET</ref> + 0x0C)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" line="52" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___private___types_definitions_1gaf88f03a42d76974b55dfb8bda65ade97" prot="public" static="no">
        <name>SDIOSUSPEND_BitNumber</name>
        <initializer>0x0B</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" line="53" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___private___types_definitions_1ga931e48aa282e2a937308f57f807e0781" prot="public" static="no">
        <name>CMD_SDIOSUSPEND_BB</name>
        <initializer>(<ref refid="group___peripheral__memory__map_1gaed7efc100877000845c236ccdc9e144a" kindref="member">PERIPH_BB_BASE</ref> + (<ref refid="group___s_d_i_o___private___types_definitions_1gaf12d26702ce7a88d2a3dae87f000b75e" kindref="member">CMD_OFFSET</ref> * 32) + (<ref refid="group___s_d_i_o___private___types_definitions_1gaf88f03a42d76974b55dfb8bda65ade97" kindref="member">SDIOSUSPEND_BitNumber</ref> * 4))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" line="54" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___private___types_definitions_1ga1d1112c7b804791a0fffd8b317085aeb" prot="public" static="no">
        <name>ENCMDCOMPL_BitNumber</name>
        <initializer>0x0C</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" line="57" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___private___types_definitions_1gade06098d1616639ce5f1b70675280b7c" prot="public" static="no">
        <name>CMD_ENCMDCOMPL_BB</name>
        <initializer>(<ref refid="group___peripheral__memory__map_1gaed7efc100877000845c236ccdc9e144a" kindref="member">PERIPH_BB_BASE</ref> + (<ref refid="group___s_d_i_o___private___types_definitions_1gaf12d26702ce7a88d2a3dae87f000b75e" kindref="member">CMD_OFFSET</ref> * 32) + (<ref refid="group___s_d_i_o___private___types_definitions_1ga1d1112c7b804791a0fffd8b317085aeb" kindref="member">ENCMDCOMPL_BitNumber</ref> * 4))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" line="58" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___private___types_definitions_1gab6d83a7ccd4a0d9ea9a09fec263fb25f" prot="public" static="no">
        <name>NIEN_BitNumber</name>
        <initializer>0x0D</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" line="61" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___private___types_definitions_1ga08623f1d053677de8b20a6f5f5090edd" prot="public" static="no">
        <name>CMD_NIEN_BB</name>
        <initializer>(<ref refid="group___peripheral__memory__map_1gaed7efc100877000845c236ccdc9e144a" kindref="member">PERIPH_BB_BASE</ref> + (<ref refid="group___s_d_i_o___private___types_definitions_1gaf12d26702ce7a88d2a3dae87f000b75e" kindref="member">CMD_OFFSET</ref> * 32) + (<ref refid="group___s_d_i_o___private___types_definitions_1gab6d83a7ccd4a0d9ea9a09fec263fb25f" kindref="member">NIEN_BitNumber</ref> * 4))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" line="62" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___private___types_definitions_1gabd4fd3bb700b879f843ccc867db1832e" prot="public" static="no">
        <name>ATACMD_BitNumber</name>
        <initializer>0x0E</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" line="65" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___private___types_definitions_1gabb7e537f931b6fdd3b49e826f2e19d7c" prot="public" static="no">
        <name>CMD_ATACMD_BB</name>
        <initializer>(<ref refid="group___peripheral__memory__map_1gaed7efc100877000845c236ccdc9e144a" kindref="member">PERIPH_BB_BASE</ref> + (<ref refid="group___s_d_i_o___private___types_definitions_1gaf12d26702ce7a88d2a3dae87f000b75e" kindref="member">CMD_OFFSET</ref> * 32) + (<ref refid="group___s_d_i_o___private___types_definitions_1gabd4fd3bb700b879f843ccc867db1832e" kindref="member">ATACMD_BitNumber</ref> * 4))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" line="66" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___private___types_definitions_1ga948c1382c4cfd3af3e406c4d0cdd4240" prot="public" static="no">
        <name>DCTRL_OFFSET</name>
        <initializer>(<ref refid="group___s_d_i_o___private___types_definitions_1gabf07aced03df5f46d57cea1d4f56d1e3" kindref="member">SDIO_OFFSET</ref> + 0x2C)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" line="71" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___private___types_definitions_1gab2af311e327213503f0dbf3d013b7944" prot="public" static="no">
        <name>DMAEN_BitNumber</name>
        <initializer>0x03</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" line="72" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___private___types_definitions_1ga43f7336d4f955c6cf1f676ccbc043fe9" prot="public" static="no">
        <name>DCTRL_DMAEN_BB</name>
        <initializer>(<ref refid="group___peripheral__memory__map_1gaed7efc100877000845c236ccdc9e144a" kindref="member">PERIPH_BB_BASE</ref> + (<ref refid="group___s_d_i_o___private___types_definitions_1ga948c1382c4cfd3af3e406c4d0cdd4240" kindref="member">DCTRL_OFFSET</ref> * 32) + (<ref refid="group___s_d_i_o___private___types_definitions_1gab2af311e327213503f0dbf3d013b7944" kindref="member">DMAEN_BitNumber</ref> * 4))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" line="73" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___private___types_definitions_1ga773045c51d3e8daee0c181517c44a2df" prot="public" static="no">
        <name>RWSTART_BitNumber</name>
        <initializer>0x08</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" line="76" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___private___types_definitions_1gac776c39dfac0e1ed007217133e1145c3" prot="public" static="no">
        <name>DCTRL_RWSTART_BB</name>
        <initializer>(<ref refid="group___peripheral__memory__map_1gaed7efc100877000845c236ccdc9e144a" kindref="member">PERIPH_BB_BASE</ref> + (<ref refid="group___s_d_i_o___private___types_definitions_1ga948c1382c4cfd3af3e406c4d0cdd4240" kindref="member">DCTRL_OFFSET</ref> * 32) + (<ref refid="group___s_d_i_o___private___types_definitions_1ga773045c51d3e8daee0c181517c44a2df" kindref="member">RWSTART_BitNumber</ref> * 4))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" line="77" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___private___types_definitions_1gae8c0654ad5cba23281bcfa77ef19b9cf" prot="public" static="no">
        <name>RWSTOP_BitNumber</name>
        <initializer>0x09</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" line="80" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___private___types_definitions_1ga678da1db835676b0fb1976cf3408e2d1" prot="public" static="no">
        <name>DCTRL_RWSTOP_BB</name>
        <initializer>(<ref refid="group___peripheral__memory__map_1gaed7efc100877000845c236ccdc9e144a" kindref="member">PERIPH_BB_BASE</ref> + (<ref refid="group___s_d_i_o___private___types_definitions_1ga948c1382c4cfd3af3e406c4d0cdd4240" kindref="member">DCTRL_OFFSET</ref> * 32) + (<ref refid="group___s_d_i_o___private___types_definitions_1gae8c0654ad5cba23281bcfa77ef19b9cf" kindref="member">RWSTOP_BitNumber</ref> * 4))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" line="81" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___private___types_definitions_1gad7b722671f65e79d1be2899b643278ad" prot="public" static="no">
        <name>RWMOD_BitNumber</name>
        <initializer>0x0A</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" line="84" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___private___types_definitions_1gad34bfe8650534ce24320ae83886c91e3" prot="public" static="no">
        <name>DCTRL_RWMOD_BB</name>
        <initializer>(<ref refid="group___peripheral__memory__map_1gaed7efc100877000845c236ccdc9e144a" kindref="member">PERIPH_BB_BASE</ref> + (<ref refid="group___s_d_i_o___private___types_definitions_1ga948c1382c4cfd3af3e406c4d0cdd4240" kindref="member">DCTRL_OFFSET</ref> * 32) + (<ref refid="group___s_d_i_o___private___types_definitions_1gad7b722671f65e79d1be2899b643278ad" kindref="member">RWMOD_BitNumber</ref> * 4))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" line="85" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___private___types_definitions_1ga37f3e1612e0dae8160be978ebfa54301" prot="public" static="no">
        <name>SDIOEN_BitNumber</name>
        <initializer>0x0B</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" line="88" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___private___types_definitions_1ga894f7da62b89ddd9f4b79d066056a3c7" prot="public" static="no">
        <name>DCTRL_SDIOEN_BB</name>
        <initializer>(<ref refid="group___peripheral__memory__map_1gaed7efc100877000845c236ccdc9e144a" kindref="member">PERIPH_BB_BASE</ref> + (<ref refid="group___s_d_i_o___private___types_definitions_1ga948c1382c4cfd3af3e406c4d0cdd4240" kindref="member">DCTRL_OFFSET</ref> * 32) + (<ref refid="group___s_d_i_o___private___types_definitions_1ga37f3e1612e0dae8160be978ebfa54301" kindref="member">SDIOEN_BitNumber</ref> * 4))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" line="89" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___private___types_definitions_1gac8d10dd1e49ca9e8a6954146654e9a01" prot="public" static="no">
        <name>CLKCR_CLEAR_MASK</name>
        <initializer>((uint32_t)0xFFFF8100)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" line="96" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___private___types_definitions_1ga7e6ec7be68d0fbb8fb4e3725cca9a05c" prot="public" static="no">
        <name>PWR_PWRCTRL_MASK</name>
        <initializer>((uint32_t)0xFFFFFFFC)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" line="101" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___private___types_definitions_1ga9e9fc7810b95805aeeb760bbdd87fa9b" prot="public" static="no">
        <name>DCTRL_CLEAR_MASK</name>
        <initializer>((uint32_t)0xFFFFFF08)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" line="106" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___private___types_definitions_1ga2325d77090e44221b07f8fba5bc9217e" prot="public" static="no">
        <name>CMD_CLEAR_MASK</name>
        <initializer>((uint32_t)0xFFFFF800)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" line="111" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_d_i_o___private___types_definitions_1ga4285ce49b005e3d03ddf9fdc491c4d70" prot="public" static="no">
        <name>SDIO_RESP_ADDR</name>
        <initializer>((uint32_t)(<ref refid="group___peripheral__memory__map_1ga95dd0abbc6767893b4b02935fa846f52" kindref="member">SDIO_BASE</ref> + 0x14))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" line="114" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" bodystart="114" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group___s_d_i_o___private___functions_1gac359d2c6c67a2590f8f9b720c0e4ff1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SDIO_DeInit</definition>
        <argsstring>(void)</argsstring>
        <name>SDIO_DeInit</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Deinitializes the SDIO peripheral registers to their default reset values. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" line="161" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" bodystart="161" bodyend="172"/>
        <references refid="group___peripheral__declaration_1ga8149aa2760fffac16bc75216d5fd9331" compoundref="stm32f10x_8h" startline="1428">SDIO</references>
      </memberdef>
      <memberdef kind="function" id="group___s_d_i_o___private___functions_1gad40764a8e37c0ed5c9141ae338ff0203" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SDIO_Init</definition>
        <argsstring>(SDIO_InitTypeDef *SDIO_InitStruct)</argsstring>
        <name>SDIO_Init</name>
        <param>
          <type><ref refid="struct_s_d_i_o___init_type_def" kindref="compound">SDIO_InitTypeDef</ref> *</type>
          <declname>SDIO_InitStruct</declname>
        </param>
        <briefdescription>
<para>Initializes the SDIO peripheral according to the specified parameters in the SDIO_InitStruct. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>SDIO_InitStruct</parametername>
</parameternamelist>
<parameterdescription>
<para>: pointer to a <ref refid="struct_s_d_i_o___init_type_def" kindref="compound">SDIO_InitTypeDef</ref> structure that contains the configuration information for the SDIO peripheral. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" line="181" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" bodystart="181" bodyend="211"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___s_d_i_o___clock___edge_1ga63420b10a52e3d82a89a45f20dc41786" compoundref="stm32f10x__sdio_8h" startline="131">IS_SDIO_CLOCK_EDGE</references>
        <references refid="struct_s_d_i_o___init_type_def_1a3252c846b68988b8ae70ca0d40030a52" compoundref="stm32f10x__sdio_8h" startline="54">SDIO_InitTypeDef::SDIO_ClockEdge</references>
        <references refid="group___s_d_i_o___clock___bypass_1ga5d5a2fcdd3150e4a89c5aa1efd738dec" compoundref="stm32f10x__sdio_8h" startline="143">IS_SDIO_CLOCK_BYPASS</references>
        <references refid="struct_s_d_i_o___init_type_def_1a6a06a65a5630b21da261f46125cb20b1" compoundref="stm32f10x__sdio_8h" startline="57">SDIO_InitTypeDef::SDIO_ClockBypass</references>
        <references refid="group___s_d_i_o___clock___power___save_1ga41988203e5d4e35a755aa604f1876cd3" compoundref="stm32f10x__sdio_8h" startline="155">IS_SDIO_CLOCK_POWER_SAVE</references>
        <references refid="struct_s_d_i_o___init_type_def_1ac236cc5a376a65b9de64a31dab816364" compoundref="stm32f10x__sdio_8h" startline="61">SDIO_InitTypeDef::SDIO_ClockPowerSave</references>
        <references refid="group___s_d_i_o___bus___wide_1gaa5c6ad922117d5df3213631bf68fde5b" compoundref="stm32f10x__sdio_8h" startline="168">IS_SDIO_BUS_WIDE</references>
        <references refid="struct_s_d_i_o___init_type_def_1a0540529f615c2b29933b442bc326f0a7" compoundref="stm32f10x__sdio_8h" startline="65">SDIO_InitTypeDef::SDIO_BusWide</references>
        <references refid="group___s_d_i_o___hardware___flow___control_1gad8be549f8348479d064dff21343ae411" compoundref="stm32f10x__sdio_8h" startline="181">IS_SDIO_HARDWARE_FLOW_CONTROL</references>
        <references refid="struct_s_d_i_o___init_type_def_1a5f57f8aca913de9aed47ef708c05f34f" compoundref="stm32f10x__sdio_8h" startline="68">SDIO_InitTypeDef::SDIO_HardwareFlowControl</references>
        <references refid="group___peripheral__declaration_1ga8149aa2760fffac16bc75216d5fd9331" compoundref="stm32f10x_8h" startline="1428">SDIO</references>
        <references refid="group___s_d_i_o___private___types_definitions_1gac8d10dd1e49ca9e8a6954146654e9a01" compoundref="stm32f10x__sdio_8c" startline="96">CLKCR_CLEAR_MASK</references>
        <references refid="struct_s_d_i_o___init_type_def_1a4166ee534e6cf8ac2c6a6a03bec45b06" compoundref="stm32f10x__sdio_8h" startline="71">SDIO_InitTypeDef::SDIO_ClockDiv</references>
      </memberdef>
      <memberdef kind="function" id="group___s_d_i_o___private___functions_1ga778d338c29df4fae9ef69432e6df32ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SDIO_StructInit</definition>
        <argsstring>(SDIO_InitTypeDef *SDIO_InitStruct)</argsstring>
        <name>SDIO_StructInit</name>
        <param>
          <type><ref refid="struct_s_d_i_o___init_type_def" kindref="compound">SDIO_InitTypeDef</ref> *</type>
          <declname>SDIO_InitStruct</declname>
        </param>
        <briefdescription>
<para>Fills each SDIO_InitStruct member with its default value. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>SDIO_InitStruct</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an <ref refid="struct_s_d_i_o___init_type_def" kindref="compound">SDIO_InitTypeDef</ref> structure which will be initialized. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" line="219" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" bodystart="219" bodyend="228"/>
        <references refid="struct_s_d_i_o___init_type_def_1a4166ee534e6cf8ac2c6a6a03bec45b06" compoundref="stm32f10x__sdio_8h" startline="71">SDIO_InitTypeDef::SDIO_ClockDiv</references>
        <references refid="struct_s_d_i_o___init_type_def_1a3252c846b68988b8ae70ca0d40030a52" compoundref="stm32f10x__sdio_8h" startline="54">SDIO_InitTypeDef::SDIO_ClockEdge</references>
        <references refid="group___s_d_i_o___clock___edge_1ga6d0f902037762a3048d95303c0037313" compoundref="stm32f10x__sdio_8h" startline="129">SDIO_ClockEdge_Rising</references>
        <references refid="struct_s_d_i_o___init_type_def_1a6a06a65a5630b21da261f46125cb20b1" compoundref="stm32f10x__sdio_8h" startline="57">SDIO_InitTypeDef::SDIO_ClockBypass</references>
        <references refid="group___s_d_i_o___clock___bypass_1gacc168d55136a0c6575e5afd7a6550343" compoundref="stm32f10x__sdio_8h" startline="141">SDIO_ClockBypass_Disable</references>
        <references refid="struct_s_d_i_o___init_type_def_1ac236cc5a376a65b9de64a31dab816364" compoundref="stm32f10x__sdio_8h" startline="61">SDIO_InitTypeDef::SDIO_ClockPowerSave</references>
        <references refid="group___s_d_i_o___clock___power___save_1ga032aa5fb2dfd7ba5dbd60a3845c82ba0" compoundref="stm32f10x__sdio_8h" startline="153">SDIO_ClockPowerSave_Disable</references>
        <references refid="struct_s_d_i_o___init_type_def_1a0540529f615c2b29933b442bc326f0a7" compoundref="stm32f10x__sdio_8h" startline="65">SDIO_InitTypeDef::SDIO_BusWide</references>
        <references refid="group___s_d_i_o___bus___wide_1ga9c333b57937c5cc0a173a58519f9250a" compoundref="stm32f10x__sdio_8h" startline="165">SDIO_BusWide_1b</references>
        <references refid="struct_s_d_i_o___init_type_def_1a5f57f8aca913de9aed47ef708c05f34f" compoundref="stm32f10x__sdio_8h" startline="68">SDIO_InitTypeDef::SDIO_HardwareFlowControl</references>
        <references refid="group___s_d_i_o___hardware___flow___control_1ga7529a3c8a11ac685bde4aafa12c8a977" compoundref="stm32f10x__sdio_8h" startline="179">SDIO_HardwareFlowControl_Disable</references>
      </memberdef>
      <memberdef kind="function" id="group___s_d_i_o___private___functions_1ga7243b857d6b323748ff3a493b265bedc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SDIO_ClockCmd</definition>
        <argsstring>(FunctionalState NewState)</argsstring>
        <name>SDIO_ClockCmd</name>
        <param>
          <type><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref></type>
          <declname>NewState</declname>
        </param>
        <briefdescription>
<para>Enables or disables the SDIO Clock. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>NewState</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of the SDIO Clock. This parameter can be: ENABLE or DISABLE. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" line="235" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" bodystart="235" bodyend="241"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" compoundref="stm32f10x_8h" startline="522">IS_FUNCTIONAL_STATE</references>
        <references refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" compoundref="core__cm0_8h" startline="221">__IO</references>
        <references refid="group___s_d_i_o___private___types_definitions_1gabfb5772b9b734972b576309f7ca8bf92" compoundref="stm32f10x__sdio_8c" startline="47">CLKCR_CLKEN_BB</references>
      </memberdef>
      <memberdef kind="function" id="group___s_d_i_o___private___functions_1ga36ecca32b904de74218fbe65cd5f5270" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SDIO_SetPowerState</definition>
        <argsstring>(uint32_t SDIO_PowerState)</argsstring>
        <name>SDIO_SetPowerState</name>
        <param>
          <type>uint32_t</type>
          <declname>SDIO_PowerState</declname>
        </param>
        <briefdescription>
<para>Sets the power status of the controller. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>SDIO_PowerState</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of the Power state. This parameter can be one of the following values: <itemizedlist>
<listitem><para>SDIO_PowerState_OFF </para></listitem>
<listitem><para>SDIO_PowerState_ON </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" line="251" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" bodystart="251" bodyend="258"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___s_d_i_o___power___state_1gad0dae767c2024de1769efb1feccc14ef" compoundref="stm32f10x__sdio_8h" startline="193">IS_SDIO_POWER_STATE</references>
        <references refid="group___peripheral__declaration_1ga8149aa2760fffac16bc75216d5fd9331" compoundref="stm32f10x_8h" startline="1428">SDIO</references>
        <references refid="group___s_d_i_o___private___types_definitions_1ga7e6ec7be68d0fbb8fb4e3725cca9a05c" compoundref="stm32f10x__sdio_8c" startline="101">PWR_PWRCTRL_MASK</references>
      </memberdef>
      <memberdef kind="function" id="group___s_d_i_o___private___functions_1ga3a19de2c7cd51645702213f64a1758ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t SDIO_GetPowerState</definition>
        <argsstring>(void)</argsstring>
        <name>SDIO_GetPowerState</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Gets the power status of the controller. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>Power</parametername>
</parameternamelist>
<parameterdescription>
<para>status of the controller. The returned value can be one of the following:<itemizedlist>
<listitem><para>0x00: Power OFF</para></listitem><listitem><para>0x02: Power UP</para></listitem><listitem><para>0x03: Power ON </para></listitem></itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" line="269" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" bodystart="269" bodyend="272"/>
        <references refid="group___peripheral__declaration_1ga8149aa2760fffac16bc75216d5fd9331" compoundref="stm32f10x_8h" startline="1428">SDIO</references>
        <references refid="group___s_d_i_o___private___types_definitions_1ga7e6ec7be68d0fbb8fb4e3725cca9a05c" compoundref="stm32f10x__sdio_8c" startline="101">PWR_PWRCTRL_MASK</references>
      </memberdef>
      <memberdef kind="function" id="group___s_d_i_o___private___functions_1ga208f51237ef43288735829dbaed37f00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SDIO_ITConfig</definition>
        <argsstring>(uint32_t SDIO_IT, FunctionalState NewState)</argsstring>
        <name>SDIO_ITConfig</name>
        <param>
          <type>uint32_t</type>
          <declname>SDIO_IT</declname>
        </param>
        <param>
          <type><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref></type>
          <declname>NewState</declname>
        </param>
        <briefdescription>
<para>Enables or disables the SDIO interrupts. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>SDIO_IT</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the SDIO interrupt sources to be enabled or disabled. This parameter can be one or a combination of the following values: <itemizedlist>
<listitem><para>SDIO_IT_CCRCFAIL: Command response received (CRC check failed) interrupt </para></listitem>
<listitem><para>SDIO_IT_DCRCFAIL: Data block sent/received (CRC check failed) interrupt </para></listitem>
<listitem><para>SDIO_IT_CTIMEOUT: Command response timeout interrupt </para></listitem>
<listitem><para>SDIO_IT_DTIMEOUT: Data timeout interrupt </para></listitem>
<listitem><para>SDIO_IT_TXUNDERR: Transmit FIFO underrun error interrupt </para></listitem>
<listitem><para>SDIO_IT_RXOVERR: Received FIFO overrun error interrupt </para></listitem>
<listitem><para>SDIO_IT_CMDREND: Command response received (CRC check passed) interrupt </para></listitem>
<listitem><para>SDIO_IT_CMDSENT: Command sent (no response required) interrupt </para></listitem>
<listitem><para>SDIO_IT_DATAEND: Data end (data counter, SDIDCOUNT, is zero) interrupt </para></listitem>
<listitem><para>SDIO_IT_STBITERR: Start bit not detected on all data signals in wide bus mode interrupt </para></listitem>
<listitem><para>SDIO_IT_DBCKEND: Data block sent/received (CRC check passed) interrupt </para></listitem>
<listitem><para>SDIO_IT_CMDACT: Command transfer in progress interrupt </para></listitem>
<listitem><para>SDIO_IT_TXACT: Data transmit in progress interrupt </para></listitem>
<listitem><para>SDIO_IT_RXACT: Data receive in progress interrupt </para></listitem>
<listitem><para>SDIO_IT_TXFIFOHE: Transmit FIFO Half Empty interrupt </para></listitem>
<listitem><para>SDIO_IT_RXFIFOHF: Receive FIFO Half Full interrupt </para></listitem>
<listitem><para>SDIO_IT_TXFIFOF: Transmit FIFO full interrupt </para></listitem>
<listitem><para>SDIO_IT_RXFIFOF: Receive FIFO full interrupt </para></listitem>
<listitem><para>SDIO_IT_TXFIFOE: Transmit FIFO empty interrupt </para></listitem>
<listitem><para>SDIO_IT_RXFIFOE: Receive FIFO empty interrupt </para></listitem>
<listitem><para>SDIO_IT_TXDAVL: Data available in transmit FIFO interrupt </para></listitem>
<listitem><para>SDIO_IT_RXDAVL: Data available in receive FIFO interrupt </para></listitem>
<listitem><para>SDIO_IT_SDIOIT: SD I/O interrupt received interrupt </para></listitem>
<listitem><para>SDIO_IT_CEATAEND: CE-ATA command completion signal received for CMD61 interrupt </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NewState</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of the specified SDIO interrupts. This parameter can be: ENABLE or DISABLE. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" line="307" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" bodystart="307" bodyend="323"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___s_d_i_o___interrupt__sources_1ga0e413e92ec50bab73042e8965acc3e6c" compoundref="stm32f10x__sdio_8h" startline="227">IS_SDIO_IT</references>
        <references refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" compoundref="stm32f10x_8h" startline="522">IS_FUNCTIONAL_STATE</references>
        <references refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1ad3a9df141be0ccf10389b640f492b26d" compoundref="stm32f10x_8h" startline="521">DISABLE</references>
        <references refid="group___peripheral__declaration_1ga8149aa2760fffac16bc75216d5fd9331" compoundref="stm32f10x_8h" startline="1428">SDIO</references>
      </memberdef>
      <memberdef kind="function" id="group___s_d_i_o___private___functions_1gad36fde5ec0ce0c2089b9d971c2271e6e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SDIO_DMACmd</definition>
        <argsstring>(FunctionalState NewState)</argsstring>
        <name>SDIO_DMACmd</name>
        <param>
          <type><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref></type>
          <declname>NewState</declname>
        </param>
        <briefdescription>
<para>Enables or disables the SDIO DMA request. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>NewState</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of the selected SDIO DMA request. This parameter can be: ENABLE or DISABLE. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" line="331" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" bodystart="331" bodyend="337"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" compoundref="stm32f10x_8h" startline="522">IS_FUNCTIONAL_STATE</references>
        <references refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" compoundref="core__cm0_8h" startline="221">__IO</references>
        <references refid="group___s_d_i_o___private___types_definitions_1ga43f7336d4f955c6cf1f676ccbc043fe9" compoundref="stm32f10x__sdio_8c" startline="73">DCTRL_DMAEN_BB</references>
      </memberdef>
      <memberdef kind="function" id="group___s_d_i_o___private___functions_1ga7117d2f702703f6c0a66bc07707cab23" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SDIO_SendCommand</definition>
        <argsstring>(SDIO_CmdInitTypeDef *SDIO_CmdInitStruct)</argsstring>
        <name>SDIO_SendCommand</name>
        <param>
          <type><ref refid="struct_s_d_i_o___cmd_init_type_def" kindref="compound">SDIO_CmdInitTypeDef</ref> *</type>
          <declname>SDIO_CmdInitStruct</declname>
        </param>
        <briefdescription>
<para>Initializes the SDIO Command according to the specified parameters in the SDIO_CmdInitStruct and send the command. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>SDIO_CmdInitStruct</parametername>
</parameternamelist>
<parameterdescription>
<para>: pointer to a <ref refid="struct_s_d_i_o___cmd_init_type_def" kindref="compound">SDIO_CmdInitTypeDef</ref> structure that contains the configuration information for the SDIO command. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" line="346" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" bodystart="346" bodyend="374"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___s_d_i_o___command___index_1gae988f9f37c4ebb5f5f9866acb30f2880" compoundref="stm32f10x__sdio_8h" startline="236">IS_SDIO_CMD_INDEX</references>
        <references refid="struct_s_d_i_o___cmd_init_type_def_1ab5e1df1f0e8d48a308edfb59a6f80fb4" compoundref="stm32f10x__sdio_8h" startline="83">SDIO_CmdInitTypeDef::SDIO_CmdIndex</references>
        <references refid="group___s_d_i_o___response___type_1gae4df2359c9b637694b9baa220c16e062" compoundref="stm32f10x__sdio_8h" startline="248">IS_SDIO_RESPONSE</references>
        <references refid="struct_s_d_i_o___cmd_init_type_def_1aecb203e21321126d5f05c34787cacfd2" compoundref="stm32f10x__sdio_8h" startline="85">SDIO_CmdInitTypeDef::SDIO_Response</references>
        <references refid="group___s_d_i_o___wait___interrupt___state_1ga7ee5c289c8e06a76b849808d15b03810" compoundref="stm32f10x__sdio_8h" startline="262">IS_SDIO_WAIT</references>
        <references refid="struct_s_d_i_o___cmd_init_type_def_1a582258554233ff8550bd04d2d790c67c" compoundref="stm32f10x__sdio_8h" startline="88">SDIO_CmdInitTypeDef::SDIO_Wait</references>
        <references refid="group___s_d_i_o___c_p_s_m___state_1ga58cf04903dab015106e4e0937bef443b" compoundref="stm32f10x__sdio_8h" startline="274">IS_SDIO_CPSM</references>
        <references refid="struct_s_d_i_o___cmd_init_type_def_1ab0e869ae285cc132478dd743c28cd8e2" compoundref="stm32f10x__sdio_8h" startline="91">SDIO_CmdInitTypeDef::SDIO_CPSM</references>
        <references refid="group___peripheral__declaration_1ga8149aa2760fffac16bc75216d5fd9331" compoundref="stm32f10x_8h" startline="1428">SDIO</references>
        <references refid="struct_s_d_i_o___cmd_init_type_def_1a37dfc4d7191ec10cffdb05ecf58d4807" compoundref="stm32f10x__sdio_8h" startline="78">SDIO_CmdInitTypeDef::SDIO_Argument</references>
        <references refid="group___s_d_i_o___private___types_definitions_1ga2325d77090e44221b07f8fba5bc9217e" compoundref="stm32f10x__sdio_8c" startline="111">CMD_CLEAR_MASK</references>
      </memberdef>
      <memberdef kind="function" id="group___s_d_i_o___private___functions_1ga09d9e89f49c87c82aec79c97b7068e24" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SDIO_CmdStructInit</definition>
        <argsstring>(SDIO_CmdInitTypeDef *SDIO_CmdInitStruct)</argsstring>
        <name>SDIO_CmdStructInit</name>
        <param>
          <type><ref refid="struct_s_d_i_o___cmd_init_type_def" kindref="compound">SDIO_CmdInitTypeDef</ref> *</type>
          <declname>SDIO_CmdInitStruct</declname>
        </param>
        <briefdescription>
<para>Fills each SDIO_CmdInitStruct member with its default value. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>SDIO_CmdInitStruct</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an <ref refid="struct_s_d_i_o___cmd_init_type_def" kindref="compound">SDIO_CmdInitTypeDef</ref> structure which will be initialized. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" line="382" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" bodystart="382" bodyend="390"/>
        <references refid="struct_s_d_i_o___cmd_init_type_def_1a37dfc4d7191ec10cffdb05ecf58d4807" compoundref="stm32f10x__sdio_8h" startline="78">SDIO_CmdInitTypeDef::SDIO_Argument</references>
        <references refid="struct_s_d_i_o___cmd_init_type_def_1ab5e1df1f0e8d48a308edfb59a6f80fb4" compoundref="stm32f10x__sdio_8h" startline="83">SDIO_CmdInitTypeDef::SDIO_CmdIndex</references>
        <references refid="struct_s_d_i_o___cmd_init_type_def_1aecb203e21321126d5f05c34787cacfd2" compoundref="stm32f10x__sdio_8h" startline="85">SDIO_CmdInitTypeDef::SDIO_Response</references>
        <references refid="group___s_d_i_o___response___type_1ga308b8ef0e79ba451644dda923bb3ac41" compoundref="stm32f10x__sdio_8h" startline="245">SDIO_Response_No</references>
        <references refid="struct_s_d_i_o___cmd_init_type_def_1a582258554233ff8550bd04d2d790c67c" compoundref="stm32f10x__sdio_8h" startline="88">SDIO_CmdInitTypeDef::SDIO_Wait</references>
        <references refid="group___s_d_i_o___wait___interrupt___state_1ga266294e1ffd7a4b45e62bff753ca44b2" compoundref="stm32f10x__sdio_8h" startline="259">SDIO_Wait_No</references>
        <references refid="struct_s_d_i_o___cmd_init_type_def_1ab0e869ae285cc132478dd743c28cd8e2" compoundref="stm32f10x__sdio_8h" startline="91">SDIO_CmdInitTypeDef::SDIO_CPSM</references>
        <references refid="group___s_d_i_o___c_p_s_m___state_1ga996751273ad238e255a740f7c2844c6c" compoundref="stm32f10x__sdio_8h" startline="272">SDIO_CPSM_Disable</references>
      </memberdef>
      <memberdef kind="function" id="group___s_d_i_o___private___functions_1ga9badf271c818e09da301d715c4ad0e5b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t SDIO_GetCommandResponse</definition>
        <argsstring>(void)</argsstring>
        <name>SDIO_GetCommandResponse</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Returns command index of last command for which response received. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>Returns</parametername>
</parameternamelist>
<parameterdescription>
<para>the command index of the last command response received. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" line="397" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" bodystart="397" bodyend="400"/>
        <references refid="group___peripheral__declaration_1ga8149aa2760fffac16bc75216d5fd9331" compoundref="stm32f10x_8h" startline="1428">SDIO</references>
      </memberdef>
      <memberdef kind="function" id="group___s_d_i_o___private___functions_1ga5c1e859511840e8cca6a9a768bce220b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t SDIO_GetResponse</definition>
        <argsstring>(uint32_t SDIO_RESP)</argsstring>
        <name>SDIO_GetResponse</name>
        <param>
          <type>uint32_t</type>
          <declname>SDIO_RESP</declname>
        </param>
        <briefdescription>
<para>Returns response received from the card for the last command. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>SDIO_RESP</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the SDIO response register. This parameter can be one of the following values: <itemizedlist>
<listitem><para>SDIO_RESP1: Response Register 1 </para></listitem>
<listitem><para>SDIO_RESP2: Response Register 2 </para></listitem>
<listitem><para>SDIO_RESP3: Response Register 3 </para></listitem>
<listitem><para>SDIO_RESP4: Response Register 4 </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>Corresponding response register value. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" line="412" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" bodystart="412" bodyend="422"/>
        <references refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" compoundref="core__cm0_8h" startline="221">__IO</references>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___s_d_i_o___response___registers_1gaea6a7f75a5e677d50ba5c9ae2d3a7839" compoundref="stm32f10x__sdio_8h" startline="287">IS_SDIO_RESP</references>
        <references refid="group___s_d_i_o___private___types_definitions_1ga4285ce49b005e3d03ddf9fdc491c4d70" compoundref="stm32f10x__sdio_8c" startline="114">SDIO_RESP_ADDR</references>
      </memberdef>
      <memberdef kind="function" id="group___s_d_i_o___private___functions_1gad65d896ae919683585bda44a1e2afae4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SDIO_DataConfig</definition>
        <argsstring>(SDIO_DataInitTypeDef *SDIO_DataInitStruct)</argsstring>
        <name>SDIO_DataConfig</name>
        <param>
          <type><ref refid="struct_s_d_i_o___data_init_type_def" kindref="compound">SDIO_DataInitTypeDef</ref> *</type>
          <declname>SDIO_DataInitStruct</declname>
        </param>
        <briefdescription>
<para>Initializes the SDIO data path according to the specified parameters in the SDIO_DataInitStruct. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>SDIO_DataInitStruct</parametername>
</parameternamelist>
<parameterdescription>
<para>: pointer to a <ref refid="struct_s_d_i_o___data_init_type_def" kindref="compound">SDIO_DataInitTypeDef</ref> structure that contains the configuration information for the SDIO command. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" line="431" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" bodystart="431" bodyend="464"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___s_d_i_o___data___length_1ga57dd64db3f69d18625ea8ca82c009fad" compoundref="stm32f10x__sdio_8h" startline="297">IS_SDIO_DATA_LENGTH</references>
        <references refid="struct_s_d_i_o___data_init_type_def_1ac325889a6dd582130a752aafc3ec9ee9" compoundref="stm32f10x__sdio_8h" startline="100">SDIO_DataInitTypeDef::SDIO_DataLength</references>
        <references refid="group___s_d_i_o___data___block___size_1ga25ce8d64134659c479d61aa681761948" compoundref="stm32f10x__sdio_8h" startline="321">IS_SDIO_BLOCK_SIZE</references>
        <references refid="struct_s_d_i_o___data_init_type_def_1a2252d17c4b3182830eb9f400489cb10f" compoundref="stm32f10x__sdio_8h" startline="102">SDIO_DataInitTypeDef::SDIO_DataBlockSize</references>
        <references refid="group___s_d_i_o___transfer___direction_1gaf84b8004cfef6a5a525b20db8a83c2f7" compoundref="stm32f10x__sdio_8h" startline="346">IS_SDIO_TRANSFER_DIR</references>
        <references refid="struct_s_d_i_o___data_init_type_def_1a4838fffdb3f87850569dff12f15485db" compoundref="stm32f10x__sdio_8h" startline="105">SDIO_DataInitTypeDef::SDIO_TransferDir</references>
        <references refid="group___s_d_i_o___transfer___type_1gaf7565ea93f9ed01558bdc9ad80dac763" compoundref="stm32f10x__sdio_8h" startline="358">IS_SDIO_TRANSFER_MODE</references>
        <references refid="struct_s_d_i_o___data_init_type_def_1a58ac19aaaceb2791d4bbcd30f334dd21" compoundref="stm32f10x__sdio_8h" startline="109">SDIO_DataInitTypeDef::SDIO_TransferMode</references>
        <references refid="group___s_d_i_o___d_p_s_m___state_1gac87a2d7a8fc417a4514d733be50e6d63" compoundref="stm32f10x__sdio_8h" startline="370">IS_SDIO_DPSM</references>
        <references refid="struct_s_d_i_o___data_init_type_def_1ad5eb5f3c6fd9e5d4a6664c5cf57d6b03" compoundref="stm32f10x__sdio_8h" startline="112">SDIO_DataInitTypeDef::SDIO_DPSM</references>
        <references refid="group___peripheral__declaration_1ga8149aa2760fffac16bc75216d5fd9331" compoundref="stm32f10x_8h" startline="1428">SDIO</references>
        <references refid="struct_s_d_i_o___data_init_type_def_1a6877ec1042a273e228114e5362b93aa1" compoundref="stm32f10x__sdio_8h" startline="98">SDIO_DataInitTypeDef::SDIO_DataTimeOut</references>
        <references refid="group___s_d_i_o___private___types_definitions_1ga9e9fc7810b95805aeeb760bbdd87fa9b" compoundref="stm32f10x__sdio_8c" startline="106">DCTRL_CLEAR_MASK</references>
      </memberdef>
      <memberdef kind="function" id="group___s_d_i_o___private___functions_1gaa83209c09e921521aca2587fb5b22ea2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SDIO_DataStructInit</definition>
        <argsstring>(SDIO_DataInitTypeDef *SDIO_DataInitStruct)</argsstring>
        <name>SDIO_DataStructInit</name>
        <param>
          <type><ref refid="struct_s_d_i_o___data_init_type_def" kindref="compound">SDIO_DataInitTypeDef</ref> *</type>
          <declname>SDIO_DataInitStruct</declname>
        </param>
        <briefdescription>
<para>Fills each SDIO_DataInitStruct member with its default value. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>SDIO_DataInitStruct</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an <ref refid="struct_s_d_i_o___data_init_type_def" kindref="compound">SDIO_DataInitTypeDef</ref> structure which will be initialized. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" line="472" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" bodystart="472" bodyend="481"/>
        <references refid="struct_s_d_i_o___data_init_type_def_1a6877ec1042a273e228114e5362b93aa1" compoundref="stm32f10x__sdio_8h" startline="98">SDIO_DataInitTypeDef::SDIO_DataTimeOut</references>
        <references refid="struct_s_d_i_o___data_init_type_def_1ac325889a6dd582130a752aafc3ec9ee9" compoundref="stm32f10x__sdio_8h" startline="100">SDIO_DataInitTypeDef::SDIO_DataLength</references>
        <references refid="struct_s_d_i_o___data_init_type_def_1a2252d17c4b3182830eb9f400489cb10f" compoundref="stm32f10x__sdio_8h" startline="102">SDIO_DataInitTypeDef::SDIO_DataBlockSize</references>
        <references refid="group___s_d_i_o___data___block___size_1gaa86e90ddc3426b242a5230b3360c620d" compoundref="stm32f10x__sdio_8h" startline="306">SDIO_DataBlockSize_1b</references>
        <references refid="struct_s_d_i_o___data_init_type_def_1a4838fffdb3f87850569dff12f15485db" compoundref="stm32f10x__sdio_8h" startline="105">SDIO_DataInitTypeDef::SDIO_TransferDir</references>
        <references refid="group___s_d_i_o___transfer___direction_1gaef8af0ffa4ea04b3362338d268cc0935" compoundref="stm32f10x__sdio_8h" startline="344">SDIO_TransferDir_ToCard</references>
        <references refid="struct_s_d_i_o___data_init_type_def_1a58ac19aaaceb2791d4bbcd30f334dd21" compoundref="stm32f10x__sdio_8h" startline="109">SDIO_DataInitTypeDef::SDIO_TransferMode</references>
        <references refid="group___s_d_i_o___transfer___type_1ga5b54ada18cc4072ceff1d98ee4b69972" compoundref="stm32f10x__sdio_8h" startline="356">SDIO_TransferMode_Block</references>
        <references refid="struct_s_d_i_o___data_init_type_def_1ad5eb5f3c6fd9e5d4a6664c5cf57d6b03" compoundref="stm32f10x__sdio_8h" startline="112">SDIO_DataInitTypeDef::SDIO_DPSM</references>
        <references refid="group___s_d_i_o___d_p_s_m___state_1ga156a9f6ab87a46dcb99ddd7462ca064b" compoundref="stm32f10x__sdio_8h" startline="368">SDIO_DPSM_Disable</references>
      </memberdef>
      <memberdef kind="function" id="group___s_d_i_o___private___functions_1ga7a28aaa2c25a9a5a8db1f49b0e8c9d0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t SDIO_GetDataCounter</definition>
        <argsstring>(void)</argsstring>
        <name>SDIO_GetDataCounter</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Returns number of remaining data bytes to be transferred. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>Number</parametername>
</parameternamelist>
<parameterdescription>
<para>of remaining data bytes to be transferred </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" line="488" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" bodystart="488" bodyend="491"/>
        <references refid="group___peripheral__declaration_1ga8149aa2760fffac16bc75216d5fd9331" compoundref="stm32f10x_8h" startline="1428">SDIO</references>
      </memberdef>
      <memberdef kind="function" id="group___s_d_i_o___private___functions_1ga4e8ac755ef3c31ecd4ed2708df19187e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t SDIO_ReadData</definition>
        <argsstring>(void)</argsstring>
        <name>SDIO_ReadData</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Read one data word from Rx FIFO. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>Data</parametername>
</parameternamelist>
<parameterdescription>
<para>received </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" line="498" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" bodystart="498" bodyend="501"/>
        <references refid="group___peripheral__declaration_1ga8149aa2760fffac16bc75216d5fd9331" compoundref="stm32f10x_8h" startline="1428">SDIO</references>
      </memberdef>
      <memberdef kind="function" id="group___s_d_i_o___private___functions_1ga361008b5252aa33b5f2b5823ee3d7240" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SDIO_WriteData</definition>
        <argsstring>(uint32_t Data)</argsstring>
        <name>SDIO_WriteData</name>
        <param>
          <type>uint32_t</type>
          <declname>Data</declname>
        </param>
        <briefdescription>
<para>Write one data word to Tx FIFO. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Data</parametername>
</parameternamelist>
<parameterdescription>
<para>32-bit data word to write. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" line="508" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" bodystart="508" bodyend="511"/>
        <references refid="group___peripheral__declaration_1ga8149aa2760fffac16bc75216d5fd9331" compoundref="stm32f10x_8h" startline="1428">SDIO</references>
      </memberdef>
      <memberdef kind="function" id="group___s_d_i_o___private___functions_1ga9a3343983a2d68b5164a1c89797d2dd6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t SDIO_GetFIFOCount</definition>
        <argsstring>(void)</argsstring>
        <name>SDIO_GetFIFOCount</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Returns the number of words left to be written to or read from FIFO. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>Remaining</parametername>
</parameternamelist>
<parameterdescription>
<para>number of words. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" line="518" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" bodystart="518" bodyend="521"/>
        <references refid="group___peripheral__declaration_1ga8149aa2760fffac16bc75216d5fd9331" compoundref="stm32f10x_8h" startline="1428">SDIO</references>
      </memberdef>
      <memberdef kind="function" id="group___s_d_i_o___private___functions_1gac88f914d9a68a83abc2265ec8a7b79fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SDIO_StartSDIOReadWait</definition>
        <argsstring>(FunctionalState NewState)</argsstring>
        <name>SDIO_StartSDIOReadWait</name>
        <param>
          <type><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref></type>
          <declname>NewState</declname>
        </param>
        <briefdescription>
<para>Starts the SD I/O Read Wait operation. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>NewState</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of the Start SDIO Read Wait operation. This parameter can be: ENABLE or DISABLE. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" line="529" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" bodystart="529" bodyend="535"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" compoundref="stm32f10x_8h" startline="522">IS_FUNCTIONAL_STATE</references>
        <references refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" compoundref="core__cm0_8h" startline="221">__IO</references>
        <references refid="group___s_d_i_o___private___types_definitions_1gac776c39dfac0e1ed007217133e1145c3" compoundref="stm32f10x__sdio_8c" startline="77">DCTRL_RWSTART_BB</references>
      </memberdef>
      <memberdef kind="function" id="group___s_d_i_o___private___functions_1gaca6b25eb2debb73ac827c66f0ebcf837" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SDIO_StopSDIOReadWait</definition>
        <argsstring>(FunctionalState NewState)</argsstring>
        <name>SDIO_StopSDIOReadWait</name>
        <param>
          <type><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref></type>
          <declname>NewState</declname>
        </param>
        <briefdescription>
<para>Stops the SD I/O Read Wait operation. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>NewState</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of the Stop SDIO Read Wait operation. This parameter can be: ENABLE or DISABLE. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" line="543" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" bodystart="543" bodyend="549"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" compoundref="stm32f10x_8h" startline="522">IS_FUNCTIONAL_STATE</references>
        <references refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" compoundref="core__cm0_8h" startline="221">__IO</references>
        <references refid="group___s_d_i_o___private___types_definitions_1ga678da1db835676b0fb1976cf3408e2d1" compoundref="stm32f10x__sdio_8c" startline="81">DCTRL_RWSTOP_BB</references>
      </memberdef>
      <memberdef kind="function" id="group___s_d_i_o___private___functions_1ga2baac4ea1bb6c2d94345d2712604338a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SDIO_SetSDIOReadWaitMode</definition>
        <argsstring>(uint32_t SDIO_ReadWaitMode)</argsstring>
        <name>SDIO_SetSDIOReadWaitMode</name>
        <param>
          <type>uint32_t</type>
          <declname>SDIO_ReadWaitMode</declname>
        </param>
        <briefdescription>
<para>Sets one of the two options of inserting read wait interval. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>SDIO_ReadWaitMode</parametername>
</parameternamelist>
<parameterdescription>
<para>SD I/O Read Wait operation mode. This parameter can be: <itemizedlist>
<listitem><para>SDIO_ReadWaitMode_CLK: Read Wait control by stopping SDIOCLK </para></listitem>
<listitem><para>SDIO_ReadWaitMode_DATA2: Read Wait control using SDIO_DATA2 </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" line="559" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" bodystart="559" bodyend="565"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___s_d_i_o___read___wait___mode_1ga35144093f5b3553a62c2248896eead4d" compoundref="stm32f10x__sdio_8h" startline="467">IS_SDIO_READWAIT_MODE</references>
        <references refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" compoundref="core__cm0_8h" startline="221">__IO</references>
        <references refid="group___s_d_i_o___private___types_definitions_1gad34bfe8650534ce24320ae83886c91e3" compoundref="stm32f10x__sdio_8c" startline="85">DCTRL_RWMOD_BB</references>
      </memberdef>
      <memberdef kind="function" id="group___s_d_i_o___private___functions_1ga24e210c185d5a7855cbaff4472a8f8d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SDIO_SetSDIOOperation</definition>
        <argsstring>(FunctionalState NewState)</argsstring>
        <name>SDIO_SetSDIOOperation</name>
        <param>
          <type><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref></type>
          <declname>NewState</declname>
        </param>
        <briefdescription>
<para>Enables or disables the SD I/O Mode Operation. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>NewState</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of SDIO specific operation. This parameter can be: ENABLE or DISABLE. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" line="573" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" bodystart="573" bodyend="579"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" compoundref="stm32f10x_8h" startline="522">IS_FUNCTIONAL_STATE</references>
        <references refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" compoundref="core__cm0_8h" startline="221">__IO</references>
        <references refid="group___s_d_i_o___private___types_definitions_1ga894f7da62b89ddd9f4b79d066056a3c7" compoundref="stm32f10x__sdio_8c" startline="89">DCTRL_SDIOEN_BB</references>
      </memberdef>
      <memberdef kind="function" id="group___s_d_i_o___private___functions_1ga9264137a01a1ab81d03bc80a3b3120fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SDIO_SendSDIOSuspendCmd</definition>
        <argsstring>(FunctionalState NewState)</argsstring>
        <name>SDIO_SendSDIOSuspendCmd</name>
        <param>
          <type><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref></type>
          <declname>NewState</declname>
        </param>
        <briefdescription>
<para>Enables or disables the SD I/O Mode suspend command sending. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>NewState</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of the SD I/O Mode suspend command. This parameter can be: ENABLE or DISABLE. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" line="587" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" bodystart="587" bodyend="593"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" compoundref="stm32f10x_8h" startline="522">IS_FUNCTIONAL_STATE</references>
        <references refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" compoundref="core__cm0_8h" startline="221">__IO</references>
        <references refid="group___s_d_i_o___private___types_definitions_1ga931e48aa282e2a937308f57f807e0781" compoundref="stm32f10x__sdio_8c" startline="54">CMD_SDIOSUSPEND_BB</references>
      </memberdef>
      <memberdef kind="function" id="group___s_d_i_o___private___functions_1ga1bbe98c629812bc62121d9c8b2c5e21b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SDIO_CommandCompletionCmd</definition>
        <argsstring>(FunctionalState NewState)</argsstring>
        <name>SDIO_CommandCompletionCmd</name>
        <param>
          <type><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref></type>
          <declname>NewState</declname>
        </param>
        <briefdescription>
<para>Enables or disables the command completion signal. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>NewState</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of command completion signal. This parameter can be: ENABLE or DISABLE. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" line="601" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" bodystart="601" bodyend="607"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" compoundref="stm32f10x_8h" startline="522">IS_FUNCTIONAL_STATE</references>
        <references refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" compoundref="core__cm0_8h" startline="221">__IO</references>
        <references refid="group___s_d_i_o___private___types_definitions_1gade06098d1616639ce5f1b70675280b7c" compoundref="stm32f10x__sdio_8c" startline="58">CMD_ENCMDCOMPL_BB</references>
      </memberdef>
      <memberdef kind="function" id="group___s_d_i_o___private___functions_1gab44b8cbc21be000a291563076159503b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SDIO_CEATAITCmd</definition>
        <argsstring>(FunctionalState NewState)</argsstring>
        <name>SDIO_CEATAITCmd</name>
        <param>
          <type><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref></type>
          <declname>NewState</declname>
        </param>
        <briefdescription>
<para>Enables or disables the CE-ATA interrupt. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>NewState</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of CE-ATA interrupt. This parameter can be: ENABLE or DISABLE. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" line="614" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" bodystart="614" bodyend="620"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" compoundref="stm32f10x_8h" startline="522">IS_FUNCTIONAL_STATE</references>
        <references refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" compoundref="core__cm0_8h" startline="221">__IO</references>
        <references refid="group___s_d_i_o___private___types_definitions_1ga08623f1d053677de8b20a6f5f5090edd" compoundref="stm32f10x__sdio_8c" startline="62">CMD_NIEN_BB</references>
      </memberdef>
      <memberdef kind="function" id="group___s_d_i_o___private___functions_1ga8dc7f17804bdb745b42f6647c8487b4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SDIO_SendCEATACmd</definition>
        <argsstring>(FunctionalState NewState)</argsstring>
        <name>SDIO_SendCEATACmd</name>
        <param>
          <type><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref></type>
          <declname>NewState</declname>
        </param>
        <briefdescription>
<para>Sends CE-ATA command (CMD61). </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>NewState</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of CE-ATA command. This parameter can be: ENABLE or DISABLE. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" line="627" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" bodystart="627" bodyend="633"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" compoundref="stm32f10x_8h" startline="522">IS_FUNCTIONAL_STATE</references>
        <references refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" compoundref="core__cm0_8h" startline="221">__IO</references>
        <references refid="group___s_d_i_o___private___types_definitions_1gabb7e537f931b6fdd3b49e826f2e19d7c" compoundref="stm32f10x__sdio_8c" startline="66">CMD_ATACMD_BB</references>
      </memberdef>
      <memberdef kind="function" id="group___s_d_i_o___private___functions_1ga644514b4b3c95c5c4326d99cd166f6f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___exported__types_1ga89136caac2e14c55151f527ac02daaff" kindref="member">FlagStatus</ref></type>
        <definition>FlagStatus SDIO_GetFlagStatus</definition>
        <argsstring>(uint32_t SDIO_FLAG)</argsstring>
        <name>SDIO_GetFlagStatus</name>
        <param>
          <type>uint32_t</type>
          <declname>SDIO_FLAG</declname>
        </param>
        <briefdescription>
<para>Checks whether the specified SDIO flag is set or not. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>SDIO_FLAG</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the flag to check. This parameter can be one of the following values: <itemizedlist>
<listitem><para>SDIO_FLAG_CCRCFAIL: Command response received (CRC check failed) </para></listitem>
<listitem><para>SDIO_FLAG_DCRCFAIL: Data block sent/received (CRC check failed) </para></listitem>
<listitem><para>SDIO_FLAG_CTIMEOUT: Command response timeout </para></listitem>
<listitem><para>SDIO_FLAG_DTIMEOUT: Data timeout </para></listitem>
<listitem><para>SDIO_FLAG_TXUNDERR: Transmit FIFO underrun error </para></listitem>
<listitem><para>SDIO_FLAG_RXOVERR: Received FIFO overrun error </para></listitem>
<listitem><para>SDIO_FLAG_CMDREND: Command response received (CRC check passed) </para></listitem>
<listitem><para>SDIO_FLAG_CMDSENT: Command sent (no response required) </para></listitem>
<listitem><para>SDIO_FLAG_DATAEND: Data end (data counter, SDIDCOUNT, is zero) </para></listitem>
<listitem><para>SDIO_FLAG_STBITERR: Start bit not detected on all data signals in wide bus mode. </para></listitem>
<listitem><para>SDIO_FLAG_DBCKEND: Data block sent/received (CRC check passed) </para></listitem>
<listitem><para>SDIO_FLAG_CMDACT: Command transfer in progress </para></listitem>
<listitem><para>SDIO_FLAG_TXACT: Data transmit in progress </para></listitem>
<listitem><para>SDIO_FLAG_RXACT: Data receive in progress </para></listitem>
<listitem><para>SDIO_FLAG_TXFIFOHE: Transmit FIFO Half Empty </para></listitem>
<listitem><para>SDIO_FLAG_RXFIFOHF: Receive FIFO Half Full </para></listitem>
<listitem><para>SDIO_FLAG_TXFIFOF: Transmit FIFO full </para></listitem>
<listitem><para>SDIO_FLAG_RXFIFOF: Receive FIFO full </para></listitem>
<listitem><para>SDIO_FLAG_TXFIFOE: Transmit FIFO empty </para></listitem>
<listitem><para>SDIO_FLAG_RXFIFOE: Receive FIFO empty </para></listitem>
<listitem><para>SDIO_FLAG_TXDAVL: Data available in transmit FIFO </para></listitem>
<listitem><para>SDIO_FLAG_RXDAVL: Data available in receive FIFO </para></listitem>
<listitem><para>SDIO_FLAG_SDIOIT: SD I/O interrupt received </para></listitem>
<listitem><para>SDIO_FLAG_CEATAEND: CE-ATA command completion signal received for CMD61 </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of SDIO_FLAG (SET or RESET). </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" line="666" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" bodystart="666" bodyend="682"/>
        <references refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffa589b7d94a3d91d145720e2fed0eb3a05" compoundref="stm32f10x_8h" startline="519">RESET</references>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___s_d_i_o___flags_1ga04b3c3c316e112172abacbf5e316f24a" compoundref="stm32f10x__sdio_8h" startline="403">IS_SDIO_FLAG</references>
        <references refid="group___peripheral__declaration_1ga8149aa2760fffac16bc75216d5fd9331" compoundref="stm32f10x_8h" startline="1428">SDIO</references>
        <references refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffab44c8101cc294c074709ec1b14211792" compoundref="stm32f10x_8h" startline="519">SET</references>
      </memberdef>
      <memberdef kind="function" id="group___s_d_i_o___private___functions_1ga7aff4efdeb528229135f9f285e53518a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SDIO_ClearFlag</definition>
        <argsstring>(uint32_t SDIO_FLAG)</argsstring>
        <name>SDIO_ClearFlag</name>
        <param>
          <type>uint32_t</type>
          <declname>SDIO_FLAG</declname>
        </param>
        <briefdescription>
<para>Clears the SDIO&apos;s pending flags. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>SDIO_FLAG</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the flag to clear. This parameter can be one or a combination of the following values: <itemizedlist>
<listitem><para>SDIO_FLAG_CCRCFAIL: Command response received (CRC check failed) </para></listitem>
<listitem><para>SDIO_FLAG_DCRCFAIL: Data block sent/received (CRC check failed) </para></listitem>
<listitem><para>SDIO_FLAG_CTIMEOUT: Command response timeout </para></listitem>
<listitem><para>SDIO_FLAG_DTIMEOUT: Data timeout </para></listitem>
<listitem><para>SDIO_FLAG_TXUNDERR: Transmit FIFO underrun error </para></listitem>
<listitem><para>SDIO_FLAG_RXOVERR: Received FIFO overrun error </para></listitem>
<listitem><para>SDIO_FLAG_CMDREND: Command response received (CRC check passed) </para></listitem>
<listitem><para>SDIO_FLAG_CMDSENT: Command sent (no response required) </para></listitem>
<listitem><para>SDIO_FLAG_DATAEND: Data end (data counter, SDIDCOUNT, is zero) </para></listitem>
<listitem><para>SDIO_FLAG_STBITERR: Start bit not detected on all data signals in wide bus mode </para></listitem>
<listitem><para>SDIO_FLAG_DBCKEND: Data block sent/received (CRC check passed) </para></listitem>
<listitem><para>SDIO_FLAG_SDIOIT: SD I/O interrupt received </para></listitem>
<listitem><para>SDIO_FLAG_CEATAEND: CE-ATA command completion signal received for CMD61 </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" line="704" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" bodystart="704" bodyend="710"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___s_d_i_o___flags_1ga8a093bc0b51901676fd5da7087d8ab3a" compoundref="stm32f10x__sdio_8h" startline="428">IS_SDIO_CLEAR_FLAG</references>
        <references refid="group___peripheral__declaration_1ga8149aa2760fffac16bc75216d5fd9331" compoundref="stm32f10x_8h" startline="1428">SDIO</references>
      </memberdef>
      <memberdef kind="function" id="group___s_d_i_o___private___functions_1ga2d64af1f3df0f99cb518f9a89bbd02ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___exported__types_1gaacbd7ed539db0aacd973a0f6eca34074" kindref="member">ITStatus</ref></type>
        <definition>ITStatus SDIO_GetITStatus</definition>
        <argsstring>(uint32_t SDIO_IT)</argsstring>
        <name>SDIO_GetITStatus</name>
        <param>
          <type>uint32_t</type>
          <declname>SDIO_IT</declname>
        </param>
        <briefdescription>
<para>Checks whether the specified SDIO interrupt has occurred or not. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>SDIO_IT</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the SDIO interrupt source to check. This parameter can be one of the following values: <itemizedlist>
<listitem><para>SDIO_IT_CCRCFAIL: Command response received (CRC check failed) interrupt </para></listitem>
<listitem><para>SDIO_IT_DCRCFAIL: Data block sent/received (CRC check failed) interrupt </para></listitem>
<listitem><para>SDIO_IT_CTIMEOUT: Command response timeout interrupt </para></listitem>
<listitem><para>SDIO_IT_DTIMEOUT: Data timeout interrupt </para></listitem>
<listitem><para>SDIO_IT_TXUNDERR: Transmit FIFO underrun error interrupt </para></listitem>
<listitem><para>SDIO_IT_RXOVERR: Received FIFO overrun error interrupt </para></listitem>
<listitem><para>SDIO_IT_CMDREND: Command response received (CRC check passed) interrupt </para></listitem>
<listitem><para>SDIO_IT_CMDSENT: Command sent (no response required) interrupt </para></listitem>
<listitem><para>SDIO_IT_DATAEND: Data end (data counter, SDIDCOUNT, is zero) interrupt </para></listitem>
<listitem><para>SDIO_IT_STBITERR: Start bit not detected on all data signals in wide bus mode interrupt </para></listitem>
<listitem><para>SDIO_IT_DBCKEND: Data block sent/received (CRC check passed) interrupt </para></listitem>
<listitem><para>SDIO_IT_CMDACT: Command transfer in progress interrupt </para></listitem>
<listitem><para>SDIO_IT_TXACT: Data transmit in progress interrupt </para></listitem>
<listitem><para>SDIO_IT_RXACT: Data receive in progress interrupt </para></listitem>
<listitem><para>SDIO_IT_TXFIFOHE: Transmit FIFO Half Empty interrupt </para></listitem>
<listitem><para>SDIO_IT_RXFIFOHF: Receive FIFO Half Full interrupt </para></listitem>
<listitem><para>SDIO_IT_TXFIFOF: Transmit FIFO full interrupt </para></listitem>
<listitem><para>SDIO_IT_RXFIFOF: Receive FIFO full interrupt </para></listitem>
<listitem><para>SDIO_IT_TXFIFOE: Transmit FIFO empty interrupt </para></listitem>
<listitem><para>SDIO_IT_RXFIFOE: Receive FIFO empty interrupt </para></listitem>
<listitem><para>SDIO_IT_TXDAVL: Data available in transmit FIFO interrupt </para></listitem>
<listitem><para>SDIO_IT_RXDAVL: Data available in receive FIFO interrupt </para></listitem>
<listitem><para>SDIO_IT_SDIOIT: SD I/O interrupt received interrupt </para></listitem>
<listitem><para>SDIO_IT_CEATAEND: CE-ATA command completion signal received for CMD61 interrupt </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of SDIO_IT (SET or RESET). </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" line="743" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" bodystart="743" bodyend="758"/>
        <references refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffa589b7d94a3d91d145720e2fed0eb3a05" compoundref="stm32f10x_8h" startline="519">RESET</references>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___s_d_i_o___flags_1gaef42c81f1f6250d8f9f438f4e16d1e98" compoundref="stm32f10x__sdio_8h" startline="430">IS_SDIO_GET_IT</references>
        <references refid="group___peripheral__declaration_1ga8149aa2760fffac16bc75216d5fd9331" compoundref="stm32f10x_8h" startline="1428">SDIO</references>
        <references refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffab44c8101cc294c074709ec1b14211792" compoundref="stm32f10x_8h" startline="519">SET</references>
      </memberdef>
      <memberdef kind="function" id="group___s_d_i_o___private___functions_1ga048e07fd86321cd01b2a22c071c3149b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SDIO_ClearITPendingBit</definition>
        <argsstring>(uint32_t SDIO_IT)</argsstring>
        <name>SDIO_ClearITPendingBit</name>
        <param>
          <type>uint32_t</type>
          <declname>SDIO_IT</declname>
        </param>
        <briefdescription>
<para>Clears the SDIO&apos;s interrupt pending bits. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>SDIO_IT</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the interrupt pending bit to clear. This parameter can be one or a combination of the following values: <itemizedlist>
<listitem><para>SDIO_IT_CCRCFAIL: Command response received (CRC check failed) interrupt </para></listitem>
<listitem><para>SDIO_IT_DCRCFAIL: Data block sent/received (CRC check failed) interrupt </para></listitem>
<listitem><para>SDIO_IT_CTIMEOUT: Command response timeout interrupt </para></listitem>
<listitem><para>SDIO_IT_DTIMEOUT: Data timeout interrupt </para></listitem>
<listitem><para>SDIO_IT_TXUNDERR: Transmit FIFO underrun error interrupt </para></listitem>
<listitem><para>SDIO_IT_RXOVERR: Received FIFO overrun error interrupt </para></listitem>
<listitem><para>SDIO_IT_CMDREND: Command response received (CRC check passed) interrupt </para></listitem>
<listitem><para>SDIO_IT_CMDSENT: Command sent (no response required) interrupt </para></listitem>
<listitem><para>SDIO_IT_DATAEND: Data end (data counter, SDIDCOUNT, is zero) interrupt </para></listitem>
<listitem><para>SDIO_IT_STBITERR: Start bit not detected on all data signals in wide bus mode interrupt </para></listitem>
<listitem><para>SDIO_IT_SDIOIT: SD I/O interrupt received interrupt </para></listitem>
<listitem><para>SDIO_IT_CEATAEND: CE-ATA command completion signal received for CMD61 </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" line="779" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c" bodystart="779" bodyend="785"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___s_d_i_o___flags_1gaf829b01d8c3e9a1e4e04d39abdc8c355" compoundref="stm32f10x__sdio_8h" startline="455">IS_SDIO_CLEAR_IT</references>
        <references refid="group___peripheral__declaration_1ga8149aa2760fffac16bc75216d5fd9331" compoundref="stm32f10x_8h" startline="1428">SDIO</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This file provides all the SDIO firmware functions. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>MCD Application Team </para></simplesect>
<simplesect kind="version"><para>V3.5.0 </para></simplesect>
<simplesect kind="date"><para>11-March-2011 </para></simplesect>
<simplesect kind="attention"><para></para></simplesect>
THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.</para><para><heading level="2"><center><copy/> COPYRIGHT 2011 STMicroelectronics</center></heading>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="22"><highlight class="comment">/*<sp/>Includes<sp/>------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="stm32f10x__sdio_8h" kindref="compound">stm32f10x_sdio.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="stm32f10x__rcc_8h" kindref="compound">stm32f10x_rcc.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="comment">/*<sp/>------------<sp/>SDIO<sp/>registers<sp/>bit<sp/>address<sp/>in<sp/>the<sp/>alias<sp/>region<sp/>-----------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="group___s_d_i_o___private___types_definitions_1gabf07aced03df5f46d57cea1d4f56d1e3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDIO_OFFSET<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(SDIO_BASE<sp/>-<sp/>PERIPH_BASE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>---<sp/>CLKCR<sp/>Register<sp/>---*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Alias<sp/>word<sp/>address<sp/>of<sp/>CLKEN<sp/>bit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="group___s_d_i_o___private___types_definitions_1gac5d642be874338519fdec175204ca8ed" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CLKCR_OFFSET<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(SDIO_OFFSET<sp/>+<sp/>0x04)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="group___s_d_i_o___private___types_definitions_1ga6ad1da47f9d84c54eb620b9231ebec86" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CLKEN_BitNumber<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x08</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="group___s_d_i_o___private___types_definitions_1gabfb5772b9b734972b576309f7ca8bf92" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CLKCR_CLKEN_BB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(PERIPH_BB_BASE<sp/>+<sp/>(CLKCR_OFFSET<sp/>*<sp/>32)<sp/>+<sp/>(CLKEN_BitNumber<sp/>*<sp/>4))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>---<sp/>CMD<sp/>Register<sp/>---*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Alias<sp/>word<sp/>address<sp/>of<sp/>SDIOSUSPEND<sp/>bit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="group___s_d_i_o___private___types_definitions_1gaf12d26702ce7a88d2a3dae87f000b75e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CMD_OFFSET<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(SDIO_OFFSET<sp/>+<sp/>0x0C)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="group___s_d_i_o___private___types_definitions_1gaf88f03a42d76974b55dfb8bda65ade97" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDIOSUSPEND_BitNumber<sp/><sp/><sp/><sp/><sp/>0x0B</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="group___s_d_i_o___private___types_definitions_1ga931e48aa282e2a937308f57f807e0781" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CMD_SDIOSUSPEND_BB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(PERIPH_BB_BASE<sp/>+<sp/>(CMD_OFFSET<sp/>*<sp/>32)<sp/>+<sp/>(SDIOSUSPEND_BitNumber<sp/>*<sp/>4))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Alias<sp/>word<sp/>address<sp/>of<sp/>ENCMDCOMPL<sp/>bit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="group___s_d_i_o___private___types_definitions_1ga1d1112c7b804791a0fffd8b317085aeb" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENCMDCOMPL_BitNumber<sp/><sp/><sp/><sp/><sp/><sp/>0x0C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="group___s_d_i_o___private___types_definitions_1gade06098d1616639ce5f1b70675280b7c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CMD_ENCMDCOMPL_BB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(PERIPH_BB_BASE<sp/>+<sp/>(CMD_OFFSET<sp/>*<sp/>32)<sp/>+<sp/>(ENCMDCOMPL_BitNumber<sp/>*<sp/>4))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Alias<sp/>word<sp/>address<sp/>of<sp/>NIEN<sp/>bit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="group___s_d_i_o___private___types_definitions_1gab6d83a7ccd4a0d9ea9a09fec263fb25f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NIEN_BitNumber<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x0D</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="group___s_d_i_o___private___types_definitions_1ga08623f1d053677de8b20a6f5f5090edd" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CMD_NIEN_BB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(PERIPH_BB_BASE<sp/>+<sp/>(CMD_OFFSET<sp/>*<sp/>32)<sp/>+<sp/>(NIEN_BitNumber<sp/>*<sp/>4))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Alias<sp/>word<sp/>address<sp/>of<sp/>ATACMD<sp/>bit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="group___s_d_i_o___private___types_definitions_1gabd4fd3bb700b879f843ccc867db1832e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ATACMD_BitNumber<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x0E</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="group___s_d_i_o___private___types_definitions_1gabb7e537f931b6fdd3b49e826f2e19d7c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CMD_ATACMD_BB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(PERIPH_BB_BASE<sp/>+<sp/>(CMD_OFFSET<sp/>*<sp/>32)<sp/>+<sp/>(ATACMD_BitNumber<sp/>*<sp/>4))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>---<sp/>DCTRL<sp/>Register<sp/>---*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Alias<sp/>word<sp/>address<sp/>of<sp/>DMAEN<sp/>bit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="group___s_d_i_o___private___types_definitions_1ga948c1382c4cfd3af3e406c4d0cdd4240" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DCTRL_OFFSET<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(SDIO_OFFSET<sp/>+<sp/>0x2C)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="group___s_d_i_o___private___types_definitions_1gab2af311e327213503f0dbf3d013b7944" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DMAEN_BitNumber<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x03</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="group___s_d_i_o___private___types_definitions_1ga43f7336d4f955c6cf1f676ccbc043fe9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DCTRL_DMAEN_BB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(PERIPH_BB_BASE<sp/>+<sp/>(DCTRL_OFFSET<sp/>*<sp/>32)<sp/>+<sp/>(DMAEN_BitNumber<sp/>*<sp/>4))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Alias<sp/>word<sp/>address<sp/>of<sp/>RWSTART<sp/>bit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="group___s_d_i_o___private___types_definitions_1ga773045c51d3e8daee0c181517c44a2df" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RWSTART_BitNumber<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x08</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="group___s_d_i_o___private___types_definitions_1gac776c39dfac0e1ed007217133e1145c3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DCTRL_RWSTART_BB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(PERIPH_BB_BASE<sp/>+<sp/>(DCTRL_OFFSET<sp/>*<sp/>32)<sp/>+<sp/>(RWSTART_BitNumber<sp/>*<sp/>4))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Alias<sp/>word<sp/>address<sp/>of<sp/>RWSTOP<sp/>bit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="group___s_d_i_o___private___types_definitions_1gae8c0654ad5cba23281bcfa77ef19b9cf" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RWSTOP_BitNumber<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x09</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="group___s_d_i_o___private___types_definitions_1ga678da1db835676b0fb1976cf3408e2d1" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DCTRL_RWSTOP_BB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(PERIPH_BB_BASE<sp/>+<sp/>(DCTRL_OFFSET<sp/>*<sp/>32)<sp/>+<sp/>(RWSTOP_BitNumber<sp/>*<sp/>4))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Alias<sp/>word<sp/>address<sp/>of<sp/>RWMOD<sp/>bit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="group___s_d_i_o___private___types_definitions_1gad7b722671f65e79d1be2899b643278ad" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RWMOD_BitNumber<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x0A</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85" refid="group___s_d_i_o___private___types_definitions_1gad34bfe8650534ce24320ae83886c91e3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DCTRL_RWMOD_BB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(PERIPH_BB_BASE<sp/>+<sp/>(DCTRL_OFFSET<sp/>*<sp/>32)<sp/>+<sp/>(RWMOD_BitNumber<sp/>*<sp/>4))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Alias<sp/>word<sp/>address<sp/>of<sp/>SDIOEN<sp/>bit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="group___s_d_i_o___private___types_definitions_1ga37f3e1612e0dae8160be978ebfa54301" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDIOEN_BitNumber<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x0B</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="group___s_d_i_o___private___types_definitions_1ga894f7da62b89ddd9f4b79d066056a3c7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DCTRL_SDIOEN_BB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(PERIPH_BB_BASE<sp/>+<sp/>(DCTRL_OFFSET<sp/>*<sp/>32)<sp/>+<sp/>(SDIOEN_BitNumber<sp/>*<sp/>4))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>----------------------<sp/>SDIO<sp/>registers<sp/>bit<sp/>mask<sp/>------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>---<sp/>CLKCR<sp/>Register<sp/>---*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>CLKCR<sp/>register<sp/>clear<sp/>mask<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="group___s_d_i_o___private___types_definitions_1gac8d10dd1e49ca9e8a6954146654e9a01" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CLKCR_CLEAR_MASK<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0xFFFF8100)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>---<sp/>PWRCTRL<sp/>Register<sp/>---*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>SDIO<sp/>PWRCTRL<sp/>Mask<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101" refid="group___s_d_i_o___private___types_definitions_1ga7e6ec7be68d0fbb8fb4e3725cca9a05c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PWR_PWRCTRL_MASK<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0xFFFFFFFC)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>---<sp/>DCTRL<sp/>Register<sp/>---*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>SDIO<sp/>DCTRL<sp/>Clear<sp/>Mask<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106" refid="group___s_d_i_o___private___types_definitions_1ga9e9fc7810b95805aeeb760bbdd87fa9b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DCTRL_CLEAR_MASK<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0xFFFFFF08)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>---<sp/>CMD<sp/>Register<sp/>---*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>CMD<sp/>Register<sp/>clear<sp/>mask<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111" refid="group___s_d_i_o___private___types_definitions_1ga2325d77090e44221b07f8fba5bc9217e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CMD_CLEAR_MASK<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0xFFFFF800)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>SDIO<sp/>RESP<sp/>Registers<sp/>Address<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114" refid="group___s_d_i_o___private___types_definitions_1ga4285ce49b005e3d03ddf9fdc491c4d70" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDIO_RESP_ADDR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)(SDIO_BASE<sp/>+<sp/>0x14))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="161" refid="group___s_d_i_o___private___functions_1gac359d2c6c67a2590f8f9b720c0e4ff1b" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___s_d_i_o___private___functions_1gac359d2c6c67a2590f8f9b720c0e4ff1b" kindref="member">SDIO_DeInit</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="162"><highlight class="normal">{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><ref refid="group___peripheral__declaration_1ga8149aa2760fffac16bc75216d5fd9331" kindref="member">SDIO</ref>-&gt;POWER<sp/>=<sp/>0x00000000;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><ref refid="group___peripheral__declaration_1ga8149aa2760fffac16bc75216d5fd9331" kindref="member">SDIO</ref>-&gt;CLKCR<sp/>=<sp/>0x00000000;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><ref refid="group___peripheral__declaration_1ga8149aa2760fffac16bc75216d5fd9331" kindref="member">SDIO</ref>-&gt;ARG<sp/>=<sp/>0x00000000;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><ref refid="group___peripheral__declaration_1ga8149aa2760fffac16bc75216d5fd9331" kindref="member">SDIO</ref>-&gt;CMD<sp/>=<sp/>0x00000000;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><ref refid="group___peripheral__declaration_1ga8149aa2760fffac16bc75216d5fd9331" kindref="member">SDIO</ref>-&gt;DTIMER<sp/>=<sp/>0x00000000;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><ref refid="group___peripheral__declaration_1ga8149aa2760fffac16bc75216d5fd9331" kindref="member">SDIO</ref>-&gt;DLEN<sp/>=<sp/>0x00000000;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><ref refid="group___peripheral__declaration_1ga8149aa2760fffac16bc75216d5fd9331" kindref="member">SDIO</ref>-&gt;DCTRL<sp/>=<sp/>0x00000000;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><ref refid="group___peripheral__declaration_1ga8149aa2760fffac16bc75216d5fd9331" kindref="member">SDIO</ref>-&gt;ICR<sp/>=<sp/>0x00C007FF;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><ref refid="group___peripheral__declaration_1ga8149aa2760fffac16bc75216d5fd9331" kindref="member">SDIO</ref>-&gt;MASK<sp/>=<sp/>0x00000000;</highlight></codeline>
<codeline lineno="172"><highlight class="normal">}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="181" refid="group___s_d_i_o___private___functions_1gad40764a8e37c0ed5c9141ae338ff0203" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___s_d_i_o___private___functions_1gad40764a8e37c0ed5c9141ae338ff0203" kindref="member">SDIO_Init</ref>(<ref refid="struct_s_d_i_o___init_type_def" kindref="compound">SDIO_InitTypeDef</ref>*<sp/>SDIO_InitStruct)</highlight></codeline>
<codeline lineno="182"><highlight class="normal">{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/>uint32_t<sp/>tmpreg<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___s_d_i_o___clock___edge_1ga63420b10a52e3d82a89a45f20dc41786" kindref="member">IS_SDIO_CLOCK_EDGE</ref>(SDIO_InitStruct-&gt;<ref refid="struct_s_d_i_o___init_type_def_1a3252c846b68988b8ae70ca0d40030a52" kindref="member">SDIO_ClockEdge</ref>));</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___s_d_i_o___clock___bypass_1ga5d5a2fcdd3150e4a89c5aa1efd738dec" kindref="member">IS_SDIO_CLOCK_BYPASS</ref>(SDIO_InitStruct-&gt;<ref refid="struct_s_d_i_o___init_type_def_1a6a06a65a5630b21da261f46125cb20b1" kindref="member">SDIO_ClockBypass</ref>));</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___s_d_i_o___clock___power___save_1ga41988203e5d4e35a755aa604f1876cd3" kindref="member">IS_SDIO_CLOCK_POWER_SAVE</ref>(SDIO_InitStruct-&gt;<ref refid="struct_s_d_i_o___init_type_def_1ac236cc5a376a65b9de64a31dab816364" kindref="member">SDIO_ClockPowerSave</ref>));</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___s_d_i_o___bus___wide_1gaa5c6ad922117d5df3213631bf68fde5b" kindref="member">IS_SDIO_BUS_WIDE</ref>(SDIO_InitStruct-&gt;<ref refid="struct_s_d_i_o___init_type_def_1a0540529f615c2b29933b442bc326f0a7" kindref="member">SDIO_BusWide</ref>));</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___s_d_i_o___hardware___flow___control_1gad8be549f8348479d064dff21343ae411" kindref="member">IS_SDIO_HARDWARE_FLOW_CONTROL</ref>(SDIO_InitStruct-&gt;<ref refid="struct_s_d_i_o___init_type_def_1a5f57f8aca913de9aed47ef708c05f34f" kindref="member">SDIO_HardwareFlowControl</ref>));<sp/></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="comment">/*----------------------------<sp/>SDIO<sp/>CLKCR<sp/>Configuration<sp/>------------------------*/</highlight><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>the<sp/>SDIO<sp/>CLKCR<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/>tmpreg<sp/>=<sp/><ref refid="group___peripheral__declaration_1ga8149aa2760fffac16bc75216d5fd9331" kindref="member">SDIO</ref>-&gt;CLKCR;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Clear<sp/>CLKDIV,<sp/>PWRSAV,<sp/>BYPASS,<sp/>WIDBUS,<sp/>NEGEDGE,<sp/>HWFC_EN<sp/>bits<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/>tmpreg<sp/>&amp;=<sp/><ref refid="group___s_d_i_o___private___types_definitions_1gac8d10dd1e49ca9e8a6954146654e9a01" kindref="member">CLKCR_CLEAR_MASK</ref>;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>CLKDIV<sp/>bits<sp/>according<sp/>to<sp/>SDIO_ClockDiv<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>PWRSAV<sp/>bit<sp/>according<sp/>to<sp/>SDIO_ClockPowerSave<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>BYPASS<sp/>bit<sp/>according<sp/>to<sp/>SDIO_ClockBypass<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>WIDBUS<sp/>bits<sp/>according<sp/>to<sp/>SDIO_BusWide<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>NEGEDGE<sp/>bits<sp/>according<sp/>to<sp/>SDIO_ClockEdge<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>HWFC_EN<sp/>bits<sp/>according<sp/>to<sp/>SDIO_HardwareFlowControl<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/>tmpreg<sp/>|=<sp/>(SDIO_InitStruct-&gt;<ref refid="struct_s_d_i_o___init_type_def_1a4166ee534e6cf8ac2c6a6a03bec45b06" kindref="member">SDIO_ClockDiv</ref><sp/><sp/>|<sp/>SDIO_InitStruct-&gt;<ref refid="struct_s_d_i_o___init_type_def_1ac236cc5a376a65b9de64a31dab816364" kindref="member">SDIO_ClockPowerSave</ref><sp/>|</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SDIO_InitStruct-&gt;<ref refid="struct_s_d_i_o___init_type_def_1a6a06a65a5630b21da261f46125cb20b1" kindref="member">SDIO_ClockBypass</ref><sp/>|<sp/>SDIO_InitStruct-&gt;<ref refid="struct_s_d_i_o___init_type_def_1a0540529f615c2b29933b442bc326f0a7" kindref="member">SDIO_BusWide</ref><sp/>|</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SDIO_InitStruct-&gt;<ref refid="struct_s_d_i_o___init_type_def_1a3252c846b68988b8ae70ca0d40030a52" kindref="member">SDIO_ClockEdge</ref><sp/>|<sp/>SDIO_InitStruct-&gt;<ref refid="struct_s_d_i_o___init_type_def_1a5f57f8aca913de9aed47ef708c05f34f" kindref="member">SDIO_HardwareFlowControl</ref>);<sp/></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Write<sp/>to<sp/>SDIO<sp/>CLKCR<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><ref refid="group___peripheral__declaration_1ga8149aa2760fffac16bc75216d5fd9331" kindref="member">SDIO</ref>-&gt;CLKCR<sp/>=<sp/>tmpreg;</highlight></codeline>
<codeline lineno="211"><highlight class="normal">}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="219" refid="group___s_d_i_o___private___functions_1ga778d338c29df4fae9ef69432e6df32ad" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___s_d_i_o___private___functions_1ga778d338c29df4fae9ef69432e6df32ad" kindref="member">SDIO_StructInit</ref>(<ref refid="struct_s_d_i_o___init_type_def" kindref="compound">SDIO_InitTypeDef</ref>*<sp/>SDIO_InitStruct)</highlight></codeline>
<codeline lineno="220"><highlight class="normal">{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>SDIO_InitStruct<sp/>members<sp/>default<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/>SDIO_InitStruct-&gt;<ref refid="struct_s_d_i_o___init_type_def_1a4166ee534e6cf8ac2c6a6a03bec45b06" kindref="member">SDIO_ClockDiv</ref><sp/>=<sp/>0x00;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/>SDIO_InitStruct-&gt;<ref refid="struct_s_d_i_o___init_type_def_1a3252c846b68988b8ae70ca0d40030a52" kindref="member">SDIO_ClockEdge</ref><sp/>=<sp/><ref refid="group___s_d_i_o___clock___edge_1ga6d0f902037762a3048d95303c0037313" kindref="member">SDIO_ClockEdge_Rising</ref>;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/>SDIO_InitStruct-&gt;<ref refid="struct_s_d_i_o___init_type_def_1a6a06a65a5630b21da261f46125cb20b1" kindref="member">SDIO_ClockBypass</ref><sp/>=<sp/><ref refid="group___s_d_i_o___clock___bypass_1gacc168d55136a0c6575e5afd7a6550343" kindref="member">SDIO_ClockBypass_Disable</ref>;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/>SDIO_InitStruct-&gt;<ref refid="struct_s_d_i_o___init_type_def_1ac236cc5a376a65b9de64a31dab816364" kindref="member">SDIO_ClockPowerSave</ref><sp/>=<sp/><ref refid="group___s_d_i_o___clock___power___save_1ga032aa5fb2dfd7ba5dbd60a3845c82ba0" kindref="member">SDIO_ClockPowerSave_Disable</ref>;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/>SDIO_InitStruct-&gt;<ref refid="struct_s_d_i_o___init_type_def_1a0540529f615c2b29933b442bc326f0a7" kindref="member">SDIO_BusWide</ref><sp/>=<sp/><ref refid="group___s_d_i_o___bus___wide_1ga9c333b57937c5cc0a173a58519f9250a" kindref="member">SDIO_BusWide_1b</ref>;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/>SDIO_InitStruct-&gt;<ref refid="struct_s_d_i_o___init_type_def_1a5f57f8aca913de9aed47ef708c05f34f" kindref="member">SDIO_HardwareFlowControl</ref><sp/>=<sp/><ref refid="group___s_d_i_o___hardware___flow___control_1ga7529a3c8a11ac685bde4aafa12c8a977" kindref="member">SDIO_HardwareFlowControl_Disable</ref>;</highlight></codeline>
<codeline lineno="228"><highlight class="normal">}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="235" refid="group___s_d_i_o___private___functions_1ga7243b857d6b323748ff3a493b265bedc" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___s_d_i_o___private___functions_1ga7243b857d6b323748ff3a493b265bedc" kindref="member">SDIO_ClockCmd</ref>(<ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref><sp/>NewState)</highlight></codeline>
<codeline lineno="236"><highlight class="normal">{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" kindref="member">IS_FUNCTIONAL_STATE</ref>(NewState));</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/>*(<ref refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" kindref="member">__IO</ref><sp/>uint32_t<sp/>*)<sp/><ref refid="group___s_d_i_o___private___types_definitions_1gabfb5772b9b734972b576309f7ca8bf92" kindref="member">CLKCR_CLKEN_BB</ref><sp/>=<sp/>(uint32_t)NewState;</highlight></codeline>
<codeline lineno="241"><highlight class="normal">}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="251" refid="group___s_d_i_o___private___functions_1ga36ecca32b904de74218fbe65cd5f5270" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___s_d_i_o___private___functions_1ga36ecca32b904de74218fbe65cd5f5270" kindref="member">SDIO_SetPowerState</ref>(uint32_t<sp/>SDIO_PowerState)</highlight></codeline>
<codeline lineno="252"><highlight class="normal">{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___s_d_i_o___power___state_1gad0dae767c2024de1769efb1feccc14ef" kindref="member">IS_SDIO_POWER_STATE</ref>(SDIO_PowerState));</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><ref refid="group___peripheral__declaration_1ga8149aa2760fffac16bc75216d5fd9331" kindref="member">SDIO</ref>-&gt;POWER<sp/>&amp;=<sp/><ref refid="group___s_d_i_o___private___types_definitions_1ga7e6ec7be68d0fbb8fb4e3725cca9a05c" kindref="member">PWR_PWRCTRL_MASK</ref>;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><ref refid="group___peripheral__declaration_1ga8149aa2760fffac16bc75216d5fd9331" kindref="member">SDIO</ref>-&gt;POWER<sp/>|=<sp/>SDIO_PowerState;</highlight></codeline>
<codeline lineno="258"><highlight class="normal">}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="269" refid="group___s_d_i_o___private___functions_1ga3a19de2c7cd51645702213f64a1758ed" refkind="member"><highlight class="normal">uint32_t<sp/><ref refid="group___s_d_i_o___private___functions_1ga3a19de2c7cd51645702213f64a1758ed" kindref="member">SDIO_GetPowerState</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="270"><highlight class="normal">{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="group___peripheral__declaration_1ga8149aa2760fffac16bc75216d5fd9331" kindref="member">SDIO</ref>-&gt;POWER<sp/>&amp;<sp/>(~<ref refid="group___s_d_i_o___private___types_definitions_1ga7e6ec7be68d0fbb8fb4e3725cca9a05c" kindref="member">PWR_PWRCTRL_MASK</ref>));</highlight></codeline>
<codeline lineno="272"><highlight class="normal">}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="307" refid="group___s_d_i_o___private___functions_1ga208f51237ef43288735829dbaed37f00" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___s_d_i_o___private___functions_1ga208f51237ef43288735829dbaed37f00" kindref="member">SDIO_ITConfig</ref>(uint32_t<sp/>SDIO_IT,<sp/><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref><sp/>NewState)</highlight></codeline>
<codeline lineno="308"><highlight class="normal">{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___s_d_i_o___interrupt__sources_1ga0e413e92ec50bab73042e8965acc3e6c" kindref="member">IS_SDIO_IT</ref>(SDIO_IT));</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" kindref="member">IS_FUNCTIONAL_STATE</ref>(NewState));</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(NewState<sp/>!=<sp/><ref refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1ad3a9df141be0ccf10389b640f492b26d" kindref="member">DISABLE</ref>)</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Enable<sp/>the<sp/>SDIO<sp/>interrupts<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga8149aa2760fffac16bc75216d5fd9331" kindref="member">SDIO</ref>-&gt;MASK<sp/>|=<sp/>SDIO_IT;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Disable<sp/>the<sp/>SDIO<sp/>interrupts<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga8149aa2760fffac16bc75216d5fd9331" kindref="member">SDIO</ref>-&gt;MASK<sp/>&amp;=<sp/>~SDIO_IT;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="323"><highlight class="normal">}</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="331" refid="group___s_d_i_o___private___functions_1gad36fde5ec0ce0c2089b9d971c2271e6e" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___s_d_i_o___private___functions_1gad36fde5ec0ce0c2089b9d971c2271e6e" kindref="member">SDIO_DMACmd</ref>(<ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref><sp/>NewState)</highlight></codeline>
<codeline lineno="332"><highlight class="normal">{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" kindref="member">IS_FUNCTIONAL_STATE</ref>(NewState));</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/>*(<ref refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" kindref="member">__IO</ref><sp/>uint32_t<sp/>*)<sp/><ref refid="group___s_d_i_o___private___types_definitions_1ga43f7336d4f955c6cf1f676ccbc043fe9" kindref="member">DCTRL_DMAEN_BB</ref><sp/>=<sp/>(uint32_t)NewState;</highlight></codeline>
<codeline lineno="337"><highlight class="normal">}</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="346" refid="group___s_d_i_o___private___functions_1ga7117d2f702703f6c0a66bc07707cab23" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___s_d_i_o___private___functions_1ga7117d2f702703f6c0a66bc07707cab23" kindref="member">SDIO_SendCommand</ref>(<ref refid="struct_s_d_i_o___cmd_init_type_def" kindref="compound">SDIO_CmdInitTypeDef</ref><sp/>*SDIO_CmdInitStruct)</highlight></codeline>
<codeline lineno="347"><highlight class="normal">{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/>uint32_t<sp/>tmpreg<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___s_d_i_o___command___index_1gae988f9f37c4ebb5f5f9866acb30f2880" kindref="member">IS_SDIO_CMD_INDEX</ref>(SDIO_CmdInitStruct-&gt;<ref refid="struct_s_d_i_o___cmd_init_type_def_1ab5e1df1f0e8d48a308edfb59a6f80fb4" kindref="member">SDIO_CmdIndex</ref>));</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___s_d_i_o___response___type_1gae4df2359c9b637694b9baa220c16e062" kindref="member">IS_SDIO_RESPONSE</ref>(SDIO_CmdInitStruct-&gt;<ref refid="struct_s_d_i_o___cmd_init_type_def_1aecb203e21321126d5f05c34787cacfd2" kindref="member">SDIO_Response</ref>));</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___s_d_i_o___wait___interrupt___state_1ga7ee5c289c8e06a76b849808d15b03810" kindref="member">IS_SDIO_WAIT</ref>(SDIO_CmdInitStruct-&gt;<ref refid="struct_s_d_i_o___cmd_init_type_def_1a582258554233ff8550bd04d2d790c67c" kindref="member">SDIO_Wait</ref>));</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___s_d_i_o___c_p_s_m___state_1ga58cf04903dab015106e4e0937bef443b" kindref="member">IS_SDIO_CPSM</ref>(SDIO_CmdInitStruct-&gt;<ref refid="struct_s_d_i_o___cmd_init_type_def_1ab0e869ae285cc132478dd743c28cd8e2" kindref="member">SDIO_CPSM</ref>));</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight><highlight class="comment">/*----------------------------<sp/>SDIO<sp/>ARG<sp/>Configuration<sp/>------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>the<sp/>SDIO<sp/>Argument<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><ref refid="group___peripheral__declaration_1ga8149aa2760fffac16bc75216d5fd9331" kindref="member">SDIO</ref>-&gt;ARG<sp/>=<sp/>SDIO_CmdInitStruct-&gt;<ref refid="struct_s_d_i_o___cmd_init_type_def_1a37dfc4d7191ec10cffdb05ecf58d4807" kindref="member">SDIO_Argument</ref>;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight><highlight class="comment">/*----------------------------<sp/>SDIO<sp/>CMD<sp/>Configuration<sp/>------------------------*/</highlight><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>the<sp/>SDIO<sp/>CMD<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/>tmpreg<sp/>=<sp/><ref refid="group___peripheral__declaration_1ga8149aa2760fffac16bc75216d5fd9331" kindref="member">SDIO</ref>-&gt;CMD;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Clear<sp/>CMDINDEX,<sp/>WAITRESP,<sp/>WAITINT,<sp/>WAITPEND,<sp/>CPSMEN<sp/>bits<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/>tmpreg<sp/>&amp;=<sp/><ref refid="group___s_d_i_o___private___types_definitions_1ga2325d77090e44221b07f8fba5bc9217e" kindref="member">CMD_CLEAR_MASK</ref>;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>CMDINDEX<sp/>bits<sp/>according<sp/>to<sp/>SDIO_CmdIndex<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>WAITRESP<sp/>bits<sp/>according<sp/>to<sp/>SDIO_Response<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>WAITINT<sp/>and<sp/>WAITPEND<sp/>bits<sp/>according<sp/>to<sp/>SDIO_Wait<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>CPSMEN<sp/>bits<sp/>according<sp/>to<sp/>SDIO_CPSM<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/>tmpreg<sp/>|=<sp/>(uint32_t)SDIO_CmdInitStruct-&gt;<ref refid="struct_s_d_i_o___cmd_init_type_def_1ab5e1df1f0e8d48a308edfb59a6f80fb4" kindref="member">SDIO_CmdIndex</ref><sp/>|<sp/>SDIO_CmdInitStruct-&gt;<ref refid="struct_s_d_i_o___cmd_init_type_def_1aecb203e21321126d5f05c34787cacfd2" kindref="member">SDIO_Response</ref></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>SDIO_CmdInitStruct-&gt;<ref refid="struct_s_d_i_o___cmd_init_type_def_1a582258554233ff8550bd04d2d790c67c" kindref="member">SDIO_Wait</ref><sp/>|<sp/>SDIO_CmdInitStruct-&gt;<ref refid="struct_s_d_i_o___cmd_init_type_def_1ab0e869ae285cc132478dd743c28cd8e2" kindref="member">SDIO_CPSM</ref>;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Write<sp/>to<sp/>SDIO<sp/>CMD<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><ref refid="group___peripheral__declaration_1ga8149aa2760fffac16bc75216d5fd9331" kindref="member">SDIO</ref>-&gt;CMD<sp/>=<sp/>tmpreg;</highlight></codeline>
<codeline lineno="374"><highlight class="normal">}</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="382" refid="group___s_d_i_o___private___functions_1ga09d9e89f49c87c82aec79c97b7068e24" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___s_d_i_o___private___functions_1ga09d9e89f49c87c82aec79c97b7068e24" kindref="member">SDIO_CmdStructInit</ref>(<ref refid="struct_s_d_i_o___cmd_init_type_def" kindref="compound">SDIO_CmdInitTypeDef</ref>*<sp/>SDIO_CmdInitStruct)</highlight></codeline>
<codeline lineno="383"><highlight class="normal">{</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>SDIO_CmdInitStruct<sp/>members<sp/>default<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/>SDIO_CmdInitStruct-&gt;<ref refid="struct_s_d_i_o___cmd_init_type_def_1a37dfc4d7191ec10cffdb05ecf58d4807" kindref="member">SDIO_Argument</ref><sp/>=<sp/>0x00;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/>SDIO_CmdInitStruct-&gt;<ref refid="struct_s_d_i_o___cmd_init_type_def_1ab5e1df1f0e8d48a308edfb59a6f80fb4" kindref="member">SDIO_CmdIndex</ref><sp/>=<sp/>0x00;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/>SDIO_CmdInitStruct-&gt;<ref refid="struct_s_d_i_o___cmd_init_type_def_1aecb203e21321126d5f05c34787cacfd2" kindref="member">SDIO_Response</ref><sp/>=<sp/><ref refid="group___s_d_i_o___response___type_1ga308b8ef0e79ba451644dda923bb3ac41" kindref="member">SDIO_Response_No</ref>;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/>SDIO_CmdInitStruct-&gt;<ref refid="struct_s_d_i_o___cmd_init_type_def_1a582258554233ff8550bd04d2d790c67c" kindref="member">SDIO_Wait</ref><sp/>=<sp/><ref refid="group___s_d_i_o___wait___interrupt___state_1ga266294e1ffd7a4b45e62bff753ca44b2" kindref="member">SDIO_Wait_No</ref>;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/>SDIO_CmdInitStruct-&gt;<ref refid="struct_s_d_i_o___cmd_init_type_def_1ab0e869ae285cc132478dd743c28cd8e2" kindref="member">SDIO_CPSM</ref><sp/>=<sp/><ref refid="group___s_d_i_o___c_p_s_m___state_1ga996751273ad238e255a740f7c2844c6c" kindref="member">SDIO_CPSM_Disable</ref>;</highlight></codeline>
<codeline lineno="390"><highlight class="normal">}</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="397" refid="group___s_d_i_o___private___functions_1ga9badf271c818e09da301d715c4ad0e5b" refkind="member"><highlight class="normal">uint8_t<sp/><ref refid="group___s_d_i_o___private___functions_1ga9badf271c818e09da301d715c4ad0e5b" kindref="member">SDIO_GetCommandResponse</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="398"><highlight class="normal">{</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(uint8_t)(<ref refid="group___peripheral__declaration_1ga8149aa2760fffac16bc75216d5fd9331" kindref="member">SDIO</ref>-&gt;RESPCMD);</highlight></codeline>
<codeline lineno="400"><highlight class="normal">}</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="412" refid="group___s_d_i_o___private___functions_1ga5c1e859511840e8cca6a9a768bce220b" refkind="member"><highlight class="normal">uint32_t<sp/><ref refid="group___s_d_i_o___private___functions_1ga5c1e859511840e8cca6a9a768bce220b" kindref="member">SDIO_GetResponse</ref>(uint32_t<sp/>SDIO_RESP)</highlight></codeline>
<codeline lineno="413"><highlight class="normal">{</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><ref refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" kindref="member">__IO</ref><sp/>uint32_t<sp/>tmp<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___s_d_i_o___response___registers_1gaea6a7f75a5e677d50ba5c9ae2d3a7839" kindref="member">IS_SDIO_RESP</ref>(SDIO_RESP));</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/>tmp<sp/>=<sp/><ref refid="group___s_d_i_o___private___types_definitions_1ga4285ce49b005e3d03ddf9fdc491c4d70" kindref="member">SDIO_RESP_ADDR</ref><sp/>+<sp/>SDIO_RESP;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*(<ref refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" kindref="member">__IO</ref><sp/>uint32_t<sp/>*)<sp/>tmp);<sp/></highlight></codeline>
<codeline lineno="422"><highlight class="normal">}</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="431" refid="group___s_d_i_o___private___functions_1gad65d896ae919683585bda44a1e2afae4" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___s_d_i_o___private___functions_1gad65d896ae919683585bda44a1e2afae4" kindref="member">SDIO_DataConfig</ref>(<ref refid="struct_s_d_i_o___data_init_type_def" kindref="compound">SDIO_DataInitTypeDef</ref>*<sp/>SDIO_DataInitStruct)</highlight></codeline>
<codeline lineno="432"><highlight class="normal">{</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/>uint32_t<sp/>tmpreg<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___s_d_i_o___data___length_1ga57dd64db3f69d18625ea8ca82c009fad" kindref="member">IS_SDIO_DATA_LENGTH</ref>(SDIO_DataInitStruct-&gt;<ref refid="struct_s_d_i_o___data_init_type_def_1ac325889a6dd582130a752aafc3ec9ee9" kindref="member">SDIO_DataLength</ref>));</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___s_d_i_o___data___block___size_1ga25ce8d64134659c479d61aa681761948" kindref="member">IS_SDIO_BLOCK_SIZE</ref>(SDIO_DataInitStruct-&gt;<ref refid="struct_s_d_i_o___data_init_type_def_1a2252d17c4b3182830eb9f400489cb10f" kindref="member">SDIO_DataBlockSize</ref>));</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___s_d_i_o___transfer___direction_1gaf84b8004cfef6a5a525b20db8a83c2f7" kindref="member">IS_SDIO_TRANSFER_DIR</ref>(SDIO_DataInitStruct-&gt;<ref refid="struct_s_d_i_o___data_init_type_def_1a4838fffdb3f87850569dff12f15485db" kindref="member">SDIO_TransferDir</ref>));</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___s_d_i_o___transfer___type_1gaf7565ea93f9ed01558bdc9ad80dac763" kindref="member">IS_SDIO_TRANSFER_MODE</ref>(SDIO_DataInitStruct-&gt;<ref refid="struct_s_d_i_o___data_init_type_def_1a58ac19aaaceb2791d4bbcd30f334dd21" kindref="member">SDIO_TransferMode</ref>));</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___s_d_i_o___d_p_s_m___state_1gac87a2d7a8fc417a4514d733be50e6d63" kindref="member">IS_SDIO_DPSM</ref>(SDIO_DataInitStruct-&gt;<ref refid="struct_s_d_i_o___data_init_type_def_1ad5eb5f3c6fd9e5d4a6664c5cf57d6b03" kindref="member">SDIO_DPSM</ref>));</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight><highlight class="comment">/*----------------------------<sp/>SDIO<sp/>DTIMER<sp/>Configuration<sp/>---------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>the<sp/>SDIO<sp/>Data<sp/>TimeOut<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><ref refid="group___peripheral__declaration_1ga8149aa2760fffac16bc75216d5fd9331" kindref="member">SDIO</ref>-&gt;DTIMER<sp/>=<sp/>SDIO_DataInitStruct-&gt;<ref refid="struct_s_d_i_o___data_init_type_def_1a6877ec1042a273e228114e5362b93aa1" kindref="member">SDIO_DataTimeOut</ref>;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight><highlight class="comment">/*----------------------------<sp/>SDIO<sp/>DLEN<sp/>Configuration<sp/>-----------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>the<sp/>SDIO<sp/>DataLength<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><ref refid="group___peripheral__declaration_1ga8149aa2760fffac16bc75216d5fd9331" kindref="member">SDIO</ref>-&gt;DLEN<sp/>=<sp/>SDIO_DataInitStruct-&gt;<ref refid="struct_s_d_i_o___data_init_type_def_1ac325889a6dd582130a752aafc3ec9ee9" kindref="member">SDIO_DataLength</ref>;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight><highlight class="comment">/*----------------------------<sp/>SDIO<sp/>DCTRL<sp/>Configuration<sp/>----------------------*/</highlight><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>the<sp/>SDIO<sp/>DCTRL<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/>tmpreg<sp/>=<sp/><ref refid="group___peripheral__declaration_1ga8149aa2760fffac16bc75216d5fd9331" kindref="member">SDIO</ref>-&gt;DCTRL;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Clear<sp/>DEN,<sp/>DTMODE,<sp/>DTDIR<sp/>and<sp/>DBCKSIZE<sp/>bits<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/>tmpreg<sp/>&amp;=<sp/><ref refid="group___s_d_i_o___private___types_definitions_1ga9e9fc7810b95805aeeb760bbdd87fa9b" kindref="member">DCTRL_CLEAR_MASK</ref>;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>DEN<sp/>bit<sp/>according<sp/>to<sp/>SDIO_DPSM<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>DTMODE<sp/>bit<sp/>according<sp/>to<sp/>SDIO_TransferMode<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>DTDIR<sp/>bit<sp/>according<sp/>to<sp/>SDIO_TransferDir<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>DBCKSIZE<sp/>bits<sp/>according<sp/>to<sp/>SDIO_DataBlockSize<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/>tmpreg<sp/>|=<sp/>(uint32_t)SDIO_DataInitStruct-&gt;<ref refid="struct_s_d_i_o___data_init_type_def_1a2252d17c4b3182830eb9f400489cb10f" kindref="member">SDIO_DataBlockSize</ref><sp/>|<sp/>SDIO_DataInitStruct-&gt;<ref refid="struct_s_d_i_o___data_init_type_def_1a4838fffdb3f87850569dff12f15485db" kindref="member">SDIO_TransferDir</ref></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>SDIO_DataInitStruct-&gt;<ref refid="struct_s_d_i_o___data_init_type_def_1a58ac19aaaceb2791d4bbcd30f334dd21" kindref="member">SDIO_TransferMode</ref><sp/>|<sp/>SDIO_DataInitStruct-&gt;<ref refid="struct_s_d_i_o___data_init_type_def_1ad5eb5f3c6fd9e5d4a6664c5cf57d6b03" kindref="member">SDIO_DPSM</ref>;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Write<sp/>to<sp/>SDIO<sp/>DCTRL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><ref refid="group___peripheral__declaration_1ga8149aa2760fffac16bc75216d5fd9331" kindref="member">SDIO</ref>-&gt;DCTRL<sp/>=<sp/>tmpreg;</highlight></codeline>
<codeline lineno="464"><highlight class="normal">}</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="472" refid="group___s_d_i_o___private___functions_1gaa83209c09e921521aca2587fb5b22ea2" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___s_d_i_o___private___functions_1gaa83209c09e921521aca2587fb5b22ea2" kindref="member">SDIO_DataStructInit</ref>(<ref refid="struct_s_d_i_o___data_init_type_def" kindref="compound">SDIO_DataInitTypeDef</ref>*<sp/>SDIO_DataInitStruct)</highlight></codeline>
<codeline lineno="473"><highlight class="normal">{</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>SDIO_DataInitStruct<sp/>members<sp/>default<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/>SDIO_DataInitStruct-&gt;<ref refid="struct_s_d_i_o___data_init_type_def_1a6877ec1042a273e228114e5362b93aa1" kindref="member">SDIO_DataTimeOut</ref><sp/>=<sp/>0xFFFFFFFF;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/>SDIO_DataInitStruct-&gt;<ref refid="struct_s_d_i_o___data_init_type_def_1ac325889a6dd582130a752aafc3ec9ee9" kindref="member">SDIO_DataLength</ref><sp/>=<sp/>0x00;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/>SDIO_DataInitStruct-&gt;<ref refid="struct_s_d_i_o___data_init_type_def_1a2252d17c4b3182830eb9f400489cb10f" kindref="member">SDIO_DataBlockSize</ref><sp/>=<sp/><ref refid="group___s_d_i_o___data___block___size_1gaa86e90ddc3426b242a5230b3360c620d" kindref="member">SDIO_DataBlockSize_1b</ref>;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/>SDIO_DataInitStruct-&gt;<ref refid="struct_s_d_i_o___data_init_type_def_1a4838fffdb3f87850569dff12f15485db" kindref="member">SDIO_TransferDir</ref><sp/>=<sp/><ref refid="group___s_d_i_o___transfer___direction_1gaef8af0ffa4ea04b3362338d268cc0935" kindref="member">SDIO_TransferDir_ToCard</ref>;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/>SDIO_DataInitStruct-&gt;<ref refid="struct_s_d_i_o___data_init_type_def_1a58ac19aaaceb2791d4bbcd30f334dd21" kindref="member">SDIO_TransferMode</ref><sp/>=<sp/><ref refid="group___s_d_i_o___transfer___type_1ga5b54ada18cc4072ceff1d98ee4b69972" kindref="member">SDIO_TransferMode_Block</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/>SDIO_DataInitStruct-&gt;<ref refid="struct_s_d_i_o___data_init_type_def_1ad5eb5f3c6fd9e5d4a6664c5cf57d6b03" kindref="member">SDIO_DPSM</ref><sp/>=<sp/><ref refid="group___s_d_i_o___d_p_s_m___state_1ga156a9f6ab87a46dcb99ddd7462ca064b" kindref="member">SDIO_DPSM_Disable</ref>;</highlight></codeline>
<codeline lineno="481"><highlight class="normal">}</highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="488" refid="group___s_d_i_o___private___functions_1ga7a28aaa2c25a9a5a8db1f49b0e8c9d0a" refkind="member"><highlight class="normal">uint32_t<sp/><ref refid="group___s_d_i_o___private___functions_1ga7a28aaa2c25a9a5a8db1f49b0e8c9d0a" kindref="member">SDIO_GetDataCounter</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="489"><highlight class="normal">{<sp/></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group___peripheral__declaration_1ga8149aa2760fffac16bc75216d5fd9331" kindref="member">SDIO</ref>-&gt;DCOUNT;</highlight></codeline>
<codeline lineno="491"><highlight class="normal">}</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="498" refid="group___s_d_i_o___private___functions_1ga4e8ac755ef3c31ecd4ed2708df19187e" refkind="member"><highlight class="normal">uint32_t<sp/><ref refid="group___s_d_i_o___private___functions_1ga4e8ac755ef3c31ecd4ed2708df19187e" kindref="member">SDIO_ReadData</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="499"><highlight class="normal">{<sp/></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group___peripheral__declaration_1ga8149aa2760fffac16bc75216d5fd9331" kindref="member">SDIO</ref>-&gt;FIFO;</highlight></codeline>
<codeline lineno="501"><highlight class="normal">}</highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="508" refid="group___s_d_i_o___private___functions_1ga361008b5252aa33b5f2b5823ee3d7240" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___s_d_i_o___private___functions_1ga361008b5252aa33b5f2b5823ee3d7240" kindref="member">SDIO_WriteData</ref>(uint32_t<sp/>Data)</highlight></codeline>
<codeline lineno="509"><highlight class="normal">{<sp/></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><ref refid="group___peripheral__declaration_1ga8149aa2760fffac16bc75216d5fd9331" kindref="member">SDIO</ref>-&gt;FIFO<sp/>=<sp/>Data;</highlight></codeline>
<codeline lineno="511"><highlight class="normal">}</highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight></codeline>
<codeline lineno="518" refid="group___s_d_i_o___private___functions_1ga9a3343983a2d68b5164a1c89797d2dd6" refkind="member"><highlight class="normal">uint32_t<sp/><ref refid="group___s_d_i_o___private___functions_1ga9a3343983a2d68b5164a1c89797d2dd6" kindref="member">SDIO_GetFIFOCount</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="519"><highlight class="normal">{<sp/></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group___peripheral__declaration_1ga8149aa2760fffac16bc75216d5fd9331" kindref="member">SDIO</ref>-&gt;FIFOCNT;</highlight></codeline>
<codeline lineno="521"><highlight class="normal">}</highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight></codeline>
<codeline lineno="529" refid="group___s_d_i_o___private___functions_1gac88f914d9a68a83abc2265ec8a7b79fc" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___s_d_i_o___private___functions_1gac88f914d9a68a83abc2265ec8a7b79fc" kindref="member">SDIO_StartSDIOReadWait</ref>(<ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref><sp/>NewState)</highlight></codeline>
<codeline lineno="530"><highlight class="normal">{<sp/></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" kindref="member">IS_FUNCTIONAL_STATE</ref>(NewState));</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/>*(<ref refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" kindref="member">__IO</ref><sp/>uint32_t<sp/>*)<sp/><ref refid="group___s_d_i_o___private___types_definitions_1gac776c39dfac0e1ed007217133e1145c3" kindref="member">DCTRL_RWSTART_BB</ref><sp/>=<sp/>(uint32_t)<sp/>NewState;</highlight></codeline>
<codeline lineno="535"><highlight class="normal">}</highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight></codeline>
<codeline lineno="543" refid="group___s_d_i_o___private___functions_1gaca6b25eb2debb73ac827c66f0ebcf837" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___s_d_i_o___private___functions_1gaca6b25eb2debb73ac827c66f0ebcf837" kindref="member">SDIO_StopSDIOReadWait</ref>(<ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref><sp/>NewState)</highlight></codeline>
<codeline lineno="544"><highlight class="normal">{<sp/></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" kindref="member">IS_FUNCTIONAL_STATE</ref>(NewState));</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/>*(<ref refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" kindref="member">__IO</ref><sp/>uint32_t<sp/>*)<sp/><ref refid="group___s_d_i_o___private___types_definitions_1ga678da1db835676b0fb1976cf3408e2d1" kindref="member">DCTRL_RWSTOP_BB</ref><sp/>=<sp/>(uint32_t)<sp/>NewState;</highlight></codeline>
<codeline lineno="549"><highlight class="normal">}</highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight></codeline>
<codeline lineno="559" refid="group___s_d_i_o___private___functions_1ga2baac4ea1bb6c2d94345d2712604338a" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___s_d_i_o___private___functions_1ga2baac4ea1bb6c2d94345d2712604338a" kindref="member">SDIO_SetSDIOReadWaitMode</ref>(uint32_t<sp/>SDIO_ReadWaitMode)</highlight></codeline>
<codeline lineno="560"><highlight class="normal">{</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___s_d_i_o___read___wait___mode_1ga35144093f5b3553a62c2248896eead4d" kindref="member">IS_SDIO_READWAIT_MODE</ref>(SDIO_ReadWaitMode));</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/>*(<ref refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" kindref="member">__IO</ref><sp/>uint32_t<sp/>*)<sp/><ref refid="group___s_d_i_o___private___types_definitions_1gad34bfe8650534ce24320ae83886c91e3" kindref="member">DCTRL_RWMOD_BB</ref><sp/>=<sp/>SDIO_ReadWaitMode;</highlight></codeline>
<codeline lineno="565"><highlight class="normal">}</highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight></codeline>
<codeline lineno="573" refid="group___s_d_i_o___private___functions_1ga24e210c185d5a7855cbaff4472a8f8d1" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___s_d_i_o___private___functions_1ga24e210c185d5a7855cbaff4472a8f8d1" kindref="member">SDIO_SetSDIOOperation</ref>(<ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref><sp/>NewState)</highlight></codeline>
<codeline lineno="574"><highlight class="normal">{<sp/></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" kindref="member">IS_FUNCTIONAL_STATE</ref>(NewState));</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/>*(<ref refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" kindref="member">__IO</ref><sp/>uint32_t<sp/>*)<sp/><ref refid="group___s_d_i_o___private___types_definitions_1ga894f7da62b89ddd9f4b79d066056a3c7" kindref="member">DCTRL_SDIOEN_BB</ref><sp/>=<sp/>(uint32_t)NewState;</highlight></codeline>
<codeline lineno="579"><highlight class="normal">}</highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight></codeline>
<codeline lineno="587" refid="group___s_d_i_o___private___functions_1ga9264137a01a1ab81d03bc80a3b3120fc" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___s_d_i_o___private___functions_1ga9264137a01a1ab81d03bc80a3b3120fc" kindref="member">SDIO_SendSDIOSuspendCmd</ref>(<ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref><sp/>NewState)</highlight></codeline>
<codeline lineno="588"><highlight class="normal">{<sp/></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" kindref="member">IS_FUNCTIONAL_STATE</ref>(NewState));</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/>*(<ref refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" kindref="member">__IO</ref><sp/>uint32_t<sp/>*)<sp/><ref refid="group___s_d_i_o___private___types_definitions_1ga931e48aa282e2a937308f57f807e0781" kindref="member">CMD_SDIOSUSPEND_BB</ref><sp/>=<sp/>(uint32_t)NewState;</highlight></codeline>
<codeline lineno="593"><highlight class="normal">}</highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight></codeline>
<codeline lineno="601" refid="group___s_d_i_o___private___functions_1ga1bbe98c629812bc62121d9c8b2c5e21b" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___s_d_i_o___private___functions_1ga1bbe98c629812bc62121d9c8b2c5e21b" kindref="member">SDIO_CommandCompletionCmd</ref>(<ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref><sp/>NewState)</highlight></codeline>
<codeline lineno="602"><highlight class="normal">{<sp/></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" kindref="member">IS_FUNCTIONAL_STATE</ref>(NewState));</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/>*(<ref refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" kindref="member">__IO</ref><sp/>uint32_t<sp/>*)<sp/><ref refid="group___s_d_i_o___private___types_definitions_1gade06098d1616639ce5f1b70675280b7c" kindref="member">CMD_ENCMDCOMPL_BB</ref><sp/>=<sp/>(uint32_t)NewState;</highlight></codeline>
<codeline lineno="607"><highlight class="normal">}</highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight></codeline>
<codeline lineno="614" refid="group___s_d_i_o___private___functions_1gab44b8cbc21be000a291563076159503b" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___s_d_i_o___private___functions_1gab44b8cbc21be000a291563076159503b" kindref="member">SDIO_CEATAITCmd</ref>(<ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref><sp/>NewState)</highlight></codeline>
<codeline lineno="615"><highlight class="normal">{<sp/></highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" kindref="member">IS_FUNCTIONAL_STATE</ref>(NewState));</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/>*(<ref refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" kindref="member">__IO</ref><sp/>uint32_t<sp/>*)<sp/><ref refid="group___s_d_i_o___private___types_definitions_1ga08623f1d053677de8b20a6f5f5090edd" kindref="member">CMD_NIEN_BB</ref><sp/>=<sp/>(uint32_t)((~((uint32_t)NewState))<sp/>&amp;<sp/>((uint32_t)0x1));</highlight></codeline>
<codeline lineno="620"><highlight class="normal">}</highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight></codeline>
<codeline lineno="627" refid="group___s_d_i_o___private___functions_1ga8dc7f17804bdb745b42f6647c8487b4c" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___s_d_i_o___private___functions_1ga8dc7f17804bdb745b42f6647c8487b4c" kindref="member">SDIO_SendCEATACmd</ref>(<ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref><sp/>NewState)</highlight></codeline>
<codeline lineno="628"><highlight class="normal">{<sp/></highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" kindref="member">IS_FUNCTIONAL_STATE</ref>(NewState));</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/>*(<ref refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" kindref="member">__IO</ref><sp/>uint32_t<sp/>*)<sp/><ref refid="group___s_d_i_o___private___types_definitions_1gabb7e537f931b6fdd3b49e826f2e19d7c" kindref="member">CMD_ATACMD_BB</ref><sp/>=<sp/>(uint32_t)NewState;</highlight></codeline>
<codeline lineno="633"><highlight class="normal">}</highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight></codeline>
<codeline lineno="666" refid="group___s_d_i_o___private___functions_1ga644514b4b3c95c5c4326d99cd166f6f9" refkind="member"><highlight class="normal"><ref refid="group___exported__types_1ga89136caac2e14c55151f527ac02daaff" kindref="member">FlagStatus</ref><sp/><ref refid="group___s_d_i_o___private___functions_1ga644514b4b3c95c5c4326d99cd166f6f9" kindref="member">SDIO_GetFlagStatus</ref>(uint32_t<sp/>SDIO_FLAG)</highlight></codeline>
<codeline lineno="667"><highlight class="normal">{<sp/></highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><ref refid="group___exported__types_1ga89136caac2e14c55151f527ac02daaff" kindref="member">FlagStatus</ref><sp/>bitstatus<sp/>=<sp/><ref refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffa589b7d94a3d91d145720e2fed0eb3a05" kindref="member">RESET</ref>;</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___s_d_i_o___flags_1ga04b3c3c316e112172abacbf5e316f24a" kindref="member">IS_SDIO_FLAG</ref>(SDIO_FLAG));</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="group___peripheral__declaration_1ga8149aa2760fffac16bc75216d5fd9331" kindref="member">SDIO</ref>-&gt;STA<sp/>&amp;<sp/>SDIO_FLAG)<sp/>!=<sp/>(uint32_t)<ref refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffa589b7d94a3d91d145720e2fed0eb3a05" kindref="member">RESET</ref>)</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/>bitstatus<sp/>=<sp/><ref refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffab44c8101cc294c074709ec1b14211792" kindref="member">SET</ref>;</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/>bitstatus<sp/>=<sp/><ref refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffa589b7d94a3d91d145720e2fed0eb3a05" kindref="member">RESET</ref>;</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bitstatus;</highlight></codeline>
<codeline lineno="682"><highlight class="normal">}</highlight></codeline>
<codeline lineno="683"><highlight class="normal"></highlight></codeline>
<codeline lineno="704" refid="group___s_d_i_o___private___functions_1ga7aff4efdeb528229135f9f285e53518a" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___s_d_i_o___private___functions_1ga7aff4efdeb528229135f9f285e53518a" kindref="member">SDIO_ClearFlag</ref>(uint32_t<sp/>SDIO_FLAG)</highlight></codeline>
<codeline lineno="705"><highlight class="normal">{<sp/></highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___s_d_i_o___flags_1ga8a093bc0b51901676fd5da7087d8ab3a" kindref="member">IS_SDIO_CLEAR_FLAG</ref>(SDIO_FLAG));</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><ref refid="group___peripheral__declaration_1ga8149aa2760fffac16bc75216d5fd9331" kindref="member">SDIO</ref>-&gt;ICR<sp/>=<sp/>SDIO_FLAG;</highlight></codeline>
<codeline lineno="710"><highlight class="normal">}</highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight></codeline>
<codeline lineno="743" refid="group___s_d_i_o___private___functions_1ga2d64af1f3df0f99cb518f9a89bbd02ac" refkind="member"><highlight class="normal"><ref refid="group___exported__types_1gaacbd7ed539db0aacd973a0f6eca34074" kindref="member">ITStatus</ref><sp/><ref refid="group___s_d_i_o___private___functions_1ga2d64af1f3df0f99cb518f9a89bbd02ac" kindref="member">SDIO_GetITStatus</ref>(uint32_t<sp/>SDIO_IT)</highlight></codeline>
<codeline lineno="744"><highlight class="normal">{<sp/></highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><ref refid="group___exported__types_1gaacbd7ed539db0aacd973a0f6eca34074" kindref="member">ITStatus</ref><sp/>bitstatus<sp/>=<sp/><ref refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffa589b7d94a3d91d145720e2fed0eb3a05" kindref="member">RESET</ref>;</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___s_d_i_o___flags_1gaef42c81f1f6250d8f9f438f4e16d1e98" kindref="member">IS_SDIO_GET_IT</ref>(SDIO_IT));</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="group___peripheral__declaration_1ga8149aa2760fffac16bc75216d5fd9331" kindref="member">SDIO</ref>-&gt;STA<sp/>&amp;<sp/>SDIO_IT)<sp/>!=<sp/>(uint32_t)<ref refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffa589b7d94a3d91d145720e2fed0eb3a05" kindref="member">RESET</ref>)<sp/><sp/></highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/>bitstatus<sp/>=<sp/><ref refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffab44c8101cc294c074709ec1b14211792" kindref="member">SET</ref>;</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/>bitstatus<sp/>=<sp/><ref refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffa589b7d94a3d91d145720e2fed0eb3a05" kindref="member">RESET</ref>;</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bitstatus;</highlight></codeline>
<codeline lineno="758"><highlight class="normal">}</highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight></codeline>
<codeline lineno="779" refid="group___s_d_i_o___private___functions_1ga048e07fd86321cd01b2a22c071c3149b" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___s_d_i_o___private___functions_1ga048e07fd86321cd01b2a22c071c3149b" kindref="member">SDIO_ClearITPendingBit</ref>(uint32_t<sp/>SDIO_IT)</highlight></codeline>
<codeline lineno="780"><highlight class="normal">{<sp/></highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___s_d_i_o___flags_1gaf829b01d8c3e9a1e4e04d39abdc8c355" kindref="member">IS_SDIO_CLEAR_IT</ref>(SDIO_IT));</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><ref refid="group___peripheral__declaration_1ga8149aa2760fffac16bc75216d5fd9331" kindref="member">SDIO</ref>-&gt;ICR<sp/>=<sp/>SDIO_IT;</highlight></codeline>
<codeline lineno="785"><highlight class="normal">}</highlight></codeline>
<codeline lineno="786"><highlight class="normal"></highlight></codeline>
<codeline lineno="799"><highlight class="comment">/*******************<sp/>(C)<sp/>COPYRIGHT<sp/>2011<sp/>STMicroelectronics<sp/>*****END<sp/>OF<sp/>FILE****/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_sdio.c"/>
  </compounddef>
</doxygen>
