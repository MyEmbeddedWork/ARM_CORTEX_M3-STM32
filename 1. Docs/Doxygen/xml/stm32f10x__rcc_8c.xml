<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="stm32f10x__rcc_8c" kind="file" language="C++">
    <compoundname>stm32f10x_rcc.c</compoundname>
    <includes refid="stm32f10x__rcc_8h" local="yes">stm32f10x_rcc.h</includes>
    <incdepgraph>
      <node id="991">
        <label>system_stm32f10x.h</label>
        <link refid="system__stm32f10x_8h"/>
      </node>
      <node id="988">
        <label>stdint.h</label>
      </node>
      <node id="987">
        <label>core_cm3.h</label>
        <link refid="core__cm3_8h"/>
        <childnode refid="988" relation="include">
        </childnode>
        <childnode refid="989" relation="include">
        </childnode>
        <childnode refid="990" relation="include">
        </childnode>
      </node>
      <node id="990">
        <label>core_cmFunc.h</label>
        <link refid="core__cm_func_8h"/>
      </node>
      <node id="984">
        <label>C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c</label>
        <link refid="stm32f10x__rcc_8c"/>
        <childnode refid="985" relation="include">
        </childnode>
      </node>
      <node id="985">
        <label>stm32f10x_rcc.h</label>
        <link refid="stm32f10x__rcc_8h"/>
        <childnode refid="986" relation="include">
        </childnode>
      </node>
      <node id="989">
        <label>core_cmInstr.h</label>
        <link refid="core__cm_instr_8h"/>
      </node>
      <node id="986">
        <label>stm32f10x.h</label>
        <link refid="stm32f10x_8h"/>
        <childnode refid="987" relation="include">
        </childnode>
        <childnode refid="991" relation="include">
        </childnode>
        <childnode refid="988" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="group___r_c_c___private___defines_1ga539e07c3b3c55f1f1d47231341fb11e1" prot="public" static="no">
        <name>RCC_OFFSET</name>
        <initializer>(<ref refid="group___peripheral__memory__map_1ga0e681b03f364532055d88f63fec0d99d" kindref="member">RCC_BASE</ref> - <ref refid="group___peripheral__memory__map_1ga9171f49478fa86d932f89e78e73b88b0" kindref="member">PERIPH_BASE</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" line="47" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_c_c___private___defines_1gafa1d3d0ea72132df651c76fc1bdffffc" prot="public" static="no">
        <name>CR_OFFSET</name>
        <initializer>(<ref refid="group___r_c_c___private___defines_1ga539e07c3b3c55f1f1d47231341fb11e1" kindref="member">RCC_OFFSET</ref> + 0x00)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" line="52" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_c_c___private___defines_1ga3d3085e491cbef815d223afbe5bf1930" prot="public" static="no">
        <name>HSION_BitNumber</name>
        <initializer>0x00</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" line="53" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_c_c___private___defines_1gac3290a833c0e35ec17d32c2d494e6133" prot="public" static="no">
        <name>CR_HSION_BB</name>
        <initializer>(<ref refid="group___peripheral__memory__map_1gaed7efc100877000845c236ccdc9e144a" kindref="member">PERIPH_BB_BASE</ref> + (<ref refid="group___r_c_c___private___defines_1gafa1d3d0ea72132df651c76fc1bdffffc" kindref="member">CR_OFFSET</ref> * 32) + (<ref refid="group___r_c_c___private___defines_1ga3d3085e491cbef815d223afbe5bf1930" kindref="member">HSION_BitNumber</ref> * 4))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" line="54" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_c_c___private___defines_1gab24d7f5f8e4b3b717fd91b54f393f6a3" prot="public" static="no">
        <name>PLLON_BitNumber</name>
        <initializer>0x18</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" line="57" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_c_c___private___defines_1ga3f1fb2589cb8b5ac2f7121aba1135a5f" prot="public" static="no">
        <name>CR_PLLON_BB</name>
        <initializer>(<ref refid="group___peripheral__memory__map_1gaed7efc100877000845c236ccdc9e144a" kindref="member">PERIPH_BB_BASE</ref> + (<ref refid="group___r_c_c___private___defines_1gafa1d3d0ea72132df651c76fc1bdffffc" kindref="member">CR_OFFSET</ref> * 32) + (<ref refid="group___r_c_c___private___defines_1gab24d7f5f8e4b3b717fd91b54f393f6a3" kindref="member">PLLON_BitNumber</ref> * 4))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" line="58" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_c_c___private___defines_1ga253fa44d87aabc55f0cd6628e77a51fd" prot="public" static="no">
        <name>CSSON_BitNumber</name>
        <initializer>0x13</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" line="71" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_c_c___private___defines_1gaca914aed10477ae4090fea0a9639b1ea" prot="public" static="no">
        <name>CR_CSSON_BB</name>
        <initializer>(<ref refid="group___peripheral__memory__map_1gaed7efc100877000845c236ccdc9e144a" kindref="member">PERIPH_BB_BASE</ref> + (<ref refid="group___r_c_c___private___defines_1gafa1d3d0ea72132df651c76fc1bdffffc" kindref="member">CR_OFFSET</ref> * 32) + (<ref refid="group___r_c_c___private___defines_1ga253fa44d87aabc55f0cd6628e77a51fd" kindref="member">CSSON_BitNumber</ref> * 4))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" line="72" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_c_c___private___defines_1ga8682298330c3b9bae1992e4f1a0af985" prot="public" static="no">
        <name>CFGR_OFFSET</name>
        <initializer>(<ref refid="group___r_c_c___private___defines_1ga539e07c3b3c55f1f1d47231341fb11e1" kindref="member">RCC_OFFSET</ref> + 0x04)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" line="77" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_c_c___private___defines_1gad758d602b6d2b93a04cb8ada87c20c82" prot="public" static="no">
        <name>USBPRE_BitNumber</name>
        <initializer>0x16</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" line="80" column="10" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_c_c___private___defines_1gabde4e60349b8412a79611c0aeb27c3a2" prot="public" static="no">
        <name>CFGR_USBPRE_BB</name>
        <initializer>(<ref refid="group___peripheral__memory__map_1gaed7efc100877000845c236ccdc9e144a" kindref="member">PERIPH_BB_BASE</ref> + (<ref refid="group___r_c_c___private___defines_1ga8682298330c3b9bae1992e4f1a0af985" kindref="member">CFGR_OFFSET</ref> * 32) + (<ref refid="group___r_c_c___private___defines_1gad758d602b6d2b93a04cb8ada87c20c82" kindref="member">USBPRE_BitNumber</ref> * 4))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" line="81" column="10" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_c_c___private___defines_1ga5f8a0c3cb5f5c835bf7eef09515138ad" prot="public" static="no">
        <name>BDCR_OFFSET</name>
        <initializer>(<ref refid="group___r_c_c___private___defines_1ga539e07c3b3c55f1f1d47231341fb11e1" kindref="member">RCC_OFFSET</ref> + 0x20)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" line="90" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_c_c___private___defines_1ga9302c551752124766afc4cee65436405" prot="public" static="no">
        <name>RTCEN_BitNumber</name>
        <initializer>0x0F</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" line="91" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_c_c___private___defines_1gaf70aaf70b0752ccb3a60307b2fb46038" prot="public" static="no">
        <name>BDCR_RTCEN_BB</name>
        <initializer>(<ref refid="group___peripheral__memory__map_1gaed7efc100877000845c236ccdc9e144a" kindref="member">PERIPH_BB_BASE</ref> + (<ref refid="group___r_c_c___private___defines_1ga5f8a0c3cb5f5c835bf7eef09515138ad" kindref="member">BDCR_OFFSET</ref> * 32) + (<ref refid="group___r_c_c___private___defines_1ga9302c551752124766afc4cee65436405" kindref="member">RTCEN_BitNumber</ref> * 4))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" line="92" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_c_c___private___defines_1gae6718158034388d8fde8caaa28ffe8b9" prot="public" static="no">
        <name>BDRST_BitNumber</name>
        <initializer>0x10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" line="95" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_c_c___private___defines_1ga892fdf297b85b85cbaf0723649b31818" prot="public" static="no">
        <name>BDCR_BDRST_BB</name>
        <initializer>(<ref refid="group___peripheral__memory__map_1gaed7efc100877000845c236ccdc9e144a" kindref="member">PERIPH_BB_BASE</ref> + (<ref refid="group___r_c_c___private___defines_1ga5f8a0c3cb5f5c835bf7eef09515138ad" kindref="member">BDCR_OFFSET</ref> * 32) + (<ref refid="group___r_c_c___private___defines_1gae6718158034388d8fde8caaa28ffe8b9" kindref="member">BDRST_BitNumber</ref> * 4))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" line="96" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_c_c___private___defines_1ga984cbe73312b6d3d355c5053763d499a" prot="public" static="no">
        <name>CSR_OFFSET</name>
        <initializer>(<ref refid="group___r_c_c___private___defines_1ga539e07c3b3c55f1f1d47231341fb11e1" kindref="member">RCC_OFFSET</ref> + 0x24)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" line="101" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_c_c___private___defines_1ga3f9dbe50769ce2a63ae12520433b9b40" prot="public" static="no">
        <name>LSION_BitNumber</name>
        <initializer>0x00</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" line="102" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_c_c___private___defines_1gaa253e36e7e5fb02998c0e4d0388abc52" prot="public" static="no">
        <name>CSR_LSION_BB</name>
        <initializer>(<ref refid="group___peripheral__memory__map_1gaed7efc100877000845c236ccdc9e144a" kindref="member">PERIPH_BB_BASE</ref> + (<ref refid="group___r_c_c___private___defines_1ga984cbe73312b6d3d355c5053763d499a" kindref="member">CSR_OFFSET</ref> * 32) + (<ref refid="group___r_c_c___private___defines_1ga3f9dbe50769ce2a63ae12520433b9b40" kindref="member">LSION_BitNumber</ref> * 4))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" line="103" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_c_c___private___defines_1ga98f5ef520febdb0a1cd8f407f8e5e62f" prot="public" static="no">
        <name>CR_HSEBYP_Reset</name>
        <initializer>((uint32_t)0xFFFBFFFF)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" line="121" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_c_c___private___defines_1ga84972845ff646ce1d3902d54dd7b9bc6" prot="public" static="no">
        <name>CR_HSEBYP_Set</name>
        <initializer>((uint32_t)0x00040000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" line="122" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_c_c___private___defines_1ga8185e6ea6e9abafcdee0e5f58e62805e" prot="public" static="no">
        <name>CR_HSEON_Reset</name>
        <initializer>((uint32_t)0xFFFEFFFF)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" line="123" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_c_c___private___defines_1gaca6ef9e2f11b921355809a5eccfec864" prot="public" static="no">
        <name>CR_HSEON_Set</name>
        <initializer>((uint32_t)0x00010000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" line="124" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_c_c___private___defines_1gac6a6adccdfb5a34541e2cdf01daf98ce" prot="public" static="no">
        <name>CR_HSITRIM_Mask</name>
        <initializer>((uint32_t)0xFFFFFF07)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" line="125" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" bodystart="125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_c_c___private___defines_1gaea605b2eaea5332218130fc2d20d917c" prot="public" static="no">
        <name>CFGR_PLL_Mask</name>
        <initializer>((uint32_t)0xFFC0FFFF)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" line="131" column="11" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" bodystart="131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_c_c___private___defines_1ga26ac4de307d4c081867dc0344f54c17a" prot="public" static="no">
        <name>CFGR_PLLMull_Mask</name>
        <initializer>((uint32_t)0x003C0000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" line="134" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" bodystart="134" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_c_c___private___defines_1ga8fd33db1092dfc565314b7bf395bba23" prot="public" static="no">
        <name>CFGR_PLLSRC_Mask</name>
        <initializer>((uint32_t)0x00010000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" line="135" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" bodystart="135" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_c_c___private___defines_1ga025835ddeb698b8c119ddf355b2fbded" prot="public" static="no">
        <name>CFGR_PLLXTPRE_Mask</name>
        <initializer>((uint32_t)0x00020000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" line="136" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" bodystart="136" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_c_c___private___defines_1gaefba904c88a72c7e2c12e8fcef38300a" prot="public" static="no">
        <name>CFGR_SWS_Mask</name>
        <initializer>((uint32_t)0x0000000C)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" line="137" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" bodystart="137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_c_c___private___defines_1ga41e0b286664f76c2057cffb134809c51" prot="public" static="no">
        <name>CFGR_SW_Mask</name>
        <initializer>((uint32_t)0xFFFFFFFC)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" line="138" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" bodystart="138" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_c_c___private___defines_1ga55937d93be56562243d92c507145112c" prot="public" static="no">
        <name>CFGR_HPRE_Reset_Mask</name>
        <initializer>((uint32_t)0xFFFFFF0F)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" line="139" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" bodystart="139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_c_c___private___defines_1gaca06c6cc484e08423a56cfca6928b9ae" prot="public" static="no">
        <name>CFGR_HPRE_Set_Mask</name>
        <initializer>((uint32_t)0x000000F0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" line="140" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" bodystart="140" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_c_c___private___defines_1gab02d8032f451eb5a1d139007ff57f22e" prot="public" static="no">
        <name>CFGR_PPRE1_Reset_Mask</name>
        <initializer>((uint32_t)0xFFFFF8FF)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" line="141" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" bodystart="141" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_c_c___private___defines_1ga74838e1873c5e4c46eef61a81b1bd2c5" prot="public" static="no">
        <name>CFGR_PPRE1_Set_Mask</name>
        <initializer>((uint32_t)0x00000700)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" line="142" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" bodystart="142" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_c_c___private___defines_1gab2ee73d52f48cb201e493e381928d1ae" prot="public" static="no">
        <name>CFGR_PPRE2_Reset_Mask</name>
        <initializer>((uint32_t)0xFFFFC7FF)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" line="143" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" bodystart="143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_c_c___private___defines_1ga63883951c986cf6dc1d6a8775f821af7" prot="public" static="no">
        <name>CFGR_PPRE2_Set_Mask</name>
        <initializer>((uint32_t)0x00003800)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" line="144" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" bodystart="144" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_c_c___private___defines_1ga12eb3f1b37b9101bf3810374bad68703" prot="public" static="no">
        <name>CFGR_ADCPRE_Reset_Mask</name>
        <initializer>((uint32_t)0xFFFF3FFF)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" line="145" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" bodystart="145" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_c_c___private___defines_1gaead9b35ba6e98274613c28d24bd228cc" prot="public" static="no">
        <name>CFGR_ADCPRE_Set_Mask</name>
        <initializer>((uint32_t)0x0000C000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" line="146" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" bodystart="146" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_c_c___private___defines_1ga415e9d29487f0ef4101a9c6e4f20151f" prot="public" static="no">
        <name>CSR_RMVF_Set</name>
        <initializer>((uint32_t)0x01000000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" line="149" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" bodystart="149" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_c_c___private___defines_1ga2be62bf481cd44de9ab604efe5595ff6" prot="public" static="no">
        <name>FLAG_Mask</name>
        <initializer>((uint8_t)0x1F)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" line="163" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" bodystart="163" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_c_c___private___defines_1gaab58c3f3f81bf1ab9a14cf3fececd8c4" prot="public" static="no">
        <name>CIR_BYTE2_ADDRESS</name>
        <initializer>((uint32_t)0x40021009)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" line="166" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" bodystart="166" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_c_c___private___defines_1ga43f47430582c9575970901533e525bb5" prot="public" static="no">
        <name>CIR_BYTE3_ADDRESS</name>
        <initializer>((uint32_t)0x4002100A)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" line="169" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" bodystart="169" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_c_c___private___defines_1ga5fea86b59ec4be059d922db57cca3b3f" prot="public" static="no">
        <name>CFGR_BYTE4_ADDRESS</name>
        <initializer>((uint32_t)0x40021007)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" line="172" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" bodystart="172" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_c_c___private___defines_1ga40b5a415d697b6af7babd8a208c92435" prot="public" static="no">
        <name>BDCR_ADDRESS</name>
        <initializer>(<ref refid="group___peripheral__memory__map_1ga9171f49478fa86d932f89e78e73b88b0" kindref="member">PERIPH_BASE</ref> + <ref refid="group___r_c_c___private___defines_1ga5f8a0c3cb5f5c835bf7eef09515138ad" kindref="member">BDCR_OFFSET</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" line="175" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" bodystart="175" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="group___r_c_c___private___variables_1gab4232f78d57fe4cfed7055005999ee44" prot="public" static="yes" mutable="no">
        <type><ref refid="core__sc300_8h_1af63697ed9952cc71e1225efe205f6cd3" kindref="member">__I</ref> uint8_t</type>
        <definition>__I uint8_t APBAHBPrescTable[16]</definition>
        <argsstring>[16]</argsstring>
        <name>APBAHBPrescTable</name>
        <initializer>= {0, 0, 0, 0, 1, 2, 3, 4, 1, 2, 3, 4, 6, 7, 8, 9}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" line="193" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" bodystart="193" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group___r_c_c___private___variables_1gaac0e741052209924a5352ef1e106e743" prot="public" static="yes" mutable="no">
        <type><ref refid="core__sc300_8h_1af63697ed9952cc71e1225efe205f6cd3" kindref="member">__I</ref> uint8_t</type>
        <definition>__I uint8_t ADCPrescTable[4]</definition>
        <argsstring>[4]</argsstring>
        <name>ADCPrescTable</name>
        <initializer>= {2, 4, 6, 8}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" line="194" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" bodystart="194" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group___r_c_c___private___functions_1ga413f6422be11b1334abe60b3bff2e062" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RCC_DeInit</definition>
        <argsstring>(void)</argsstring>
        <name>RCC_DeInit</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Resets the RCC clock configuration to the default reset state. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" line="217" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" bodystart="217" bodyend="258"/>
        <references refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" compoundref="stm32f10x_8h" startline="1443">RCC</references>
      </memberdef>
      <memberdef kind="function" id="group___r_c_c___private___functions_1ga432b3281546d23345642d55f8670a93d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RCC_HSEConfig</definition>
        <argsstring>(uint32_t RCC_HSE)</argsstring>
        <name>RCC_HSEConfig</name>
        <param>
          <type>uint32_t</type>
          <declname>RCC_HSE</declname>
        </param>
        <briefdescription>
<para>Configures the External High Speed oscillator (HSE). </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>HSE can not be stopped if it is used directly or through the PLL as system clock. </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>RCC_HSE</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the new state of the HSE. This parameter can be one of the following values: <itemizedlist>
<listitem><para>RCC_HSE_OFF: HSE oscillator OFF </para></listitem>
<listitem><para>RCC_HSE_ON: HSE oscillator ON </para></listitem>
<listitem><para>RCC_HSE_Bypass: HSE oscillator bypassed with external clock </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" line="270" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" bodystart="270" bodyend="295"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___h_s_e__configuration_1ga287bbcafd73d07ec915c2f793301908a" compoundref="stm32f10x__rcc_8h" startline="70">IS_RCC_HSE</references>
        <references refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" compoundref="stm32f10x_8h" startline="1443">RCC</references>
        <references refid="group___r_c_c___private___defines_1ga8185e6ea6e9abafcdee0e5f58e62805e" compoundref="stm32f10x__rcc_8c" startline="123">CR_HSEON_Reset</references>
        <references refid="group___r_c_c___private___defines_1ga98f5ef520febdb0a1cd8f407f8e5e62f" compoundref="stm32f10x__rcc_8c" startline="121">CR_HSEBYP_Reset</references>
        <references refid="group___h_s_e__configuration_1gabc4f70a44776c557af20496b04d9a9db" compoundref="stm32f10x__rcc_8h" startline="68">RCC_HSE_ON</references>
        <references refid="group___r_c_c___private___defines_1gaca6ef9e2f11b921355809a5eccfec864" compoundref="stm32f10x__rcc_8c" startline="124">CR_HSEON_Set</references>
        <references refid="group___h_s_e__configuration_1ga09061e9909d5f588baa7bfb0f7edd9fa" compoundref="stm32f10x__rcc_8h" startline="69">RCC_HSE_Bypass</references>
        <references refid="group___r_c_c___private___defines_1ga84972845ff646ce1d3902d54dd7b9bc6" compoundref="stm32f10x__rcc_8c" startline="122">CR_HSEBYP_Set</references>
      </memberdef>
      <memberdef kind="function" id="group___r_c_c___private___functions_1gae0f15692614dd048ee4110a056f001dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___exported__types_1ga8333b96c67f83cba354b3407fcbb6ee8" kindref="member">ErrorStatus</ref></type>
        <definition>ErrorStatus RCC_WaitForHSEStartUp</definition>
        <argsstring>(void)</argsstring>
        <name>RCC_WaitForHSEStartUp</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Waits for HSE start-up. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>An</parametername>
</parameternamelist>
<parameterdescription>
<para>ErrorStatus enumuration value:<itemizedlist>
<listitem><para>SUCCESS: HSE oscillator is stable and ready to use</para></listitem><listitem><para>ERROR: HSE oscillator not yet ready </para></listitem></itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" line="304" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" bodystart="304" bodyend="326"/>
        <references refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" compoundref="core__cm0_8h" startline="221">__IO</references>
        <references refid="group___exported__types_1gga8333b96c67f83cba354b3407fcbb6ee8a2fd6f336d08340583bd620a7f5694c90" compoundref="stm32f10x_8h" startline="524">ERROR</references>
        <references refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffa589b7d94a3d91d145720e2fed0eb3a05" compoundref="stm32f10x_8h" startline="519">RESET</references>
        <references refid="group___r_c_c___private___functions_1ga2897bdc52f272031c44fb1f72205d295" compoundref="stm32f10x__rcc_8c" startline="1326" endline="1362">RCC_GetFlagStatus</references>
        <references refid="group___r_c_c___flag_1ga173edf47bec93cf269a0e8d0fec9997c" compoundref="stm32f10x__rcc_8h" startline="596">RCC_FLAG_HSERDY</references>
        <references refid="group___library__configuration__section_1ga68ecbc9b0a1a40a1ec9d18d5e9747c4f" compoundref="stm32f10x_8h" startline="128">HSE_STARTUP_TIMEOUT</references>
        <references refid="group___exported__types_1gga8333b96c67f83cba354b3407fcbb6ee8ac7f69f7c9e5aea9b8f54cf02870e2bf8" compoundref="stm32f10x_8h" startline="524">SUCCESS</references>
      </memberdef>
      <memberdef kind="function" id="group___r_c_c___private___functions_1gaa2d6a35f5c2e0f86317c3beb222677fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RCC_AdjustHSICalibrationValue</definition>
        <argsstring>(uint8_t HSICalibrationValue)</argsstring>
        <name>RCC_AdjustHSICalibrationValue</name>
        <param>
          <type>uint8_t</type>
          <declname>HSICalibrationValue</declname>
        </param>
        <briefdescription>
<para>Adjusts the Internal High Speed oscillator (HSI) calibration value. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>HSICalibrationValue</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the calibration trimming value. This parameter must be a number between 0 and 0x1F. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" line="334" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" bodystart="334" bodyend="346"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___r_c_c___flag_1gafda50a08dc048f7c272bf04ec9c2c2b7" compoundref="stm32f10x__rcc_8h" startline="626">IS_RCC_CALIBRATION_VALUE</references>
        <references refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" compoundref="stm32f10x_8h" startline="1443">RCC</references>
        <references refid="group___r_c_c___private___defines_1gac6a6adccdfb5a34541e2cdf01daf98ce" compoundref="stm32f10x__rcc_8c" startline="125">CR_HSITRIM_Mask</references>
      </memberdef>
      <memberdef kind="function" id="group___r_c_c___private___functions_1ga0c6772a1e43765909495f57815ef69e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RCC_HSICmd</definition>
        <argsstring>(FunctionalState NewState)</argsstring>
        <name>RCC_HSICmd</name>
        <param>
          <type><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref></type>
          <declname>NewState</declname>
        </param>
        <briefdescription>
<para>Enables or disables the Internal High Speed oscillator (HSI). </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>HSI can not be stopped if it is used directly or through the PLL as system clock. </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>NewState</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of the HSI. This parameter can be: ENABLE or DISABLE. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" line="354" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" bodystart="354" bodyend="359"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" compoundref="stm32f10x_8h" startline="522">IS_FUNCTIONAL_STATE</references>
        <references refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" compoundref="core__cm0_8h" startline="221">__IO</references>
        <references refid="group___r_c_c___private___defines_1gac3290a833c0e35ec17d32c2d494e6133" compoundref="stm32f10x__rcc_8c" startline="54">CR_HSION_BB</references>
      </memberdef>
      <memberdef kind="function" id="group___r_c_c___private___functions_1ga0f67634cbe721f2c42f022d2a93229c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RCC_PLLConfig</definition>
        <argsstring>(uint32_t RCC_PLLSource, uint32_t RCC_PLLMul)</argsstring>
        <name>RCC_PLLConfig</name>
        <param>
          <type>uint32_t</type>
          <declname>RCC_PLLSource</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>RCC_PLLMul</declname>
        </param>
        <briefdescription>
<para>Configures the PLL clock source and multiplication factor. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This function must be used only when the PLL is disabled. </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>RCC_PLLSource</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the PLL entry clock source. For <bold>STM32_Connectivity_line_devices</bold> or <bold>STM32_Value_line_devices</bold>, this parameter can be one of the following values: <itemizedlist>
<listitem><para>RCC_PLLSource_HSI_Div2: HSI oscillator clock divided by 2 selected as PLL clock entry </para></listitem>
<listitem><para>RCC_PLLSource_PREDIV1: PREDIV1 clock selected as PLL clock entry For <bold>other_STM32_devices</bold>, this parameter can be one of the following values: </para></listitem>
<listitem><para>RCC_PLLSource_HSI_Div2: HSI oscillator clock divided by 2 selected as PLL clock entry </para></listitem>
<listitem><para>RCC_PLLSource_HSE_Div1: HSE oscillator clock selected as PLL clock entry </para></listitem>
<listitem><para>RCC_PLLSource_HSE_Div2: HSE oscillator clock divided by 2 selected as PLL clock entry </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>RCC_PLLMul</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the PLL multiplication factor. For <bold>STM32_Connectivity_line_devices</bold>, this parameter can be RCC_PLLMul_x where x:{[4,9], 6_5} For <bold>other_STM32_devices</bold>, this parameter can be RCC_PLLMul_x where x:[2,16] </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" line="378" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" bodystart="378" bodyend="393"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___p_l_l__entry__clock__source_1ga8a8a84a16989bb4e5aca1af65ccf9a1b" compoundref="stm32f10x__rcc_8h" startline="86">IS_RCC_PLL_SOURCE</references>
        <references refid="group___p_l_l__multiplication__factor_1gaad04edea77632618678f528dcb2b0cd5" compoundref="stm32f10x__rcc_8h" startline="118">IS_RCC_PLL_MUL</references>
        <references refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" compoundref="stm32f10x_8h" startline="1443">RCC</references>
        <references refid="group___r_c_c___private___defines_1gaea605b2eaea5332218130fc2d20d917c" compoundref="stm32f10x__rcc_8c" startline="131">CFGR_PLL_Mask</references>
      </memberdef>
      <memberdef kind="function" id="group___r_c_c___private___functions_1ga84dee53c75e58fdb53571716593c2272" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RCC_PLLCmd</definition>
        <argsstring>(FunctionalState NewState)</argsstring>
        <name>RCC_PLLCmd</name>
        <param>
          <type><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref></type>
          <declname>NewState</declname>
        </param>
        <briefdescription>
<para>Enables or disables the PLL. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>The PLL can not be disabled if it is used as system clock. </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>NewState</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of the PLL. This parameter can be: ENABLE or DISABLE. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" line="401" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" bodystart="401" bodyend="407"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" compoundref="stm32f10x_8h" startline="522">IS_FUNCTIONAL_STATE</references>
        <references refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" compoundref="core__cm0_8h" startline="221">__IO</references>
        <references refid="group___r_c_c___private___defines_1ga3f1fb2589cb8b5ac2f7121aba1135a5f" compoundref="stm32f10x__rcc_8c" startline="58">CR_PLLON_BB</references>
        <references refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" compoundref="stm32f10x_8h" startline="1443">RCC</references>
      </memberdef>
      <memberdef kind="function" id="group___r_c_c___private___functions_1ga3551a36a8f0a3dc96a74d6b939048337" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RCC_SYSCLKConfig</definition>
        <argsstring>(uint32_t RCC_SYSCLKSource)</argsstring>
        <name>RCC_SYSCLKConfig</name>
        <param>
          <type>uint32_t</type>
          <declname>RCC_SYSCLKSource</declname>
        </param>
        <briefdescription>
<para>Configures the system clock (SYSCLK). </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>RCC_SYSCLKSource</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the clock source used as system clock. This parameter can be one of the following values: <itemizedlist>
<listitem><para>RCC_SYSCLKSource_HSI: HSI selected as system clock </para></listitem>
<listitem><para>RCC_SYSCLKSource_HSE: HSE selected as system clock </para></listitem>
<listitem><para>RCC_SYSCLKSource_PLLCLK: PLL selected as system clock </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" line="564" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" bodystart="564" bodyend="576"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___system__clock__source_1gaae9d6172a72b0a90cb3703aa59258c57" compoundref="stm32f10x__rcc_8h" startline="292">IS_RCC_SYSCLK_SOURCE</references>
        <references refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" compoundref="stm32f10x_8h" startline="1443">RCC</references>
        <references refid="group___r_c_c___private___defines_1ga41e0b286664f76c2057cffb134809c51" compoundref="stm32f10x__rcc_8c" startline="138">CFGR_SW_Mask</references>
      </memberdef>
      <memberdef kind="function" id="group___r_c_c___private___functions_1gaaeb32311c208b2a980841c9c884a41ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t RCC_GetSYSCLKSource</definition>
        <argsstring>(void)</argsstring>
        <name>RCC_GetSYSCLKSource</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Returns the clock source used as system clock. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>clock source used as system clock. The returned value can be one of the following:<itemizedlist>
<listitem><para>0x00: HSI used as system clock</para></listitem><listitem><para>0x04: HSE used as system clock</para></listitem><listitem><para>0x08: PLL used as system clock </para></listitem></itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" line="587" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" bodystart="587" bodyend="590"/>
        <references refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" compoundref="stm32f10x_8h" startline="1443">RCC</references>
        <references refid="group___r_c_c___private___defines_1gaefba904c88a72c7e2c12e8fcef38300a" compoundref="stm32f10x__rcc_8c" startline="137">CFGR_SWS_Mask</references>
      </memberdef>
      <memberdef kind="function" id="group___r_c_c___private___functions_1ga9d0aec72e236c6cdf3a3a82dfb525491" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RCC_HCLKConfig</definition>
        <argsstring>(uint32_t RCC_SYSCLK)</argsstring>
        <name>RCC_HCLKConfig</name>
        <param>
          <type>uint32_t</type>
          <declname>RCC_SYSCLK</declname>
        </param>
        <briefdescription>
<para>Configures the AHB clock (HCLK). </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>RCC_SYSCLK</parametername>
</parameternamelist>
<parameterdescription>
<para>defines the AHB clock divider. This clock is derived from the system clock (SYSCLK). This parameter can be one of the following values: <itemizedlist>
<listitem><para>RCC_SYSCLK_Div1: AHB clock = SYSCLK </para></listitem>
<listitem><para>RCC_SYSCLK_Div2: AHB clock = SYSCLK/2 </para></listitem>
<listitem><para>RCC_SYSCLK_Div4: AHB clock = SYSCLK/4 </para></listitem>
<listitem><para>RCC_SYSCLK_Div8: AHB clock = SYSCLK/8 </para></listitem>
<listitem><para>RCC_SYSCLK_Div16: AHB clock = SYSCLK/16 </para></listitem>
<listitem><para>RCC_SYSCLK_Div64: AHB clock = SYSCLK/64 </para></listitem>
<listitem><para>RCC_SYSCLK_Div128: AHB clock = SYSCLK/128 </para></listitem>
<listitem><para>RCC_SYSCLK_Div256: AHB clock = SYSCLK/256 </para></listitem>
<listitem><para>RCC_SYSCLK_Div512: AHB clock = SYSCLK/512 </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" line="608" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" bodystart="608" bodyend="620"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___a_h_b__clock__source_1ga6e9f1c193a2f41bcb3c2f7fa8459b5b3" compoundref="stm32f10x__rcc_8h" startline="312">IS_RCC_HCLK</references>
        <references refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" compoundref="stm32f10x_8h" startline="1443">RCC</references>
        <references refid="group___r_c_c___private___defines_1ga55937d93be56562243d92c507145112c" compoundref="stm32f10x__rcc_8c" startline="139">CFGR_HPRE_Reset_Mask</references>
      </memberdef>
      <memberdef kind="function" id="group___r_c_c___private___functions_1ga448137346d4292985d4e7a61dd1a824f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RCC_PCLK1Config</definition>
        <argsstring>(uint32_t RCC_HCLK)</argsstring>
        <name>RCC_PCLK1Config</name>
        <param>
          <type>uint32_t</type>
          <declname>RCC_HCLK</declname>
        </param>
        <briefdescription>
<para>Configures the Low Speed APB clock (PCLK1). </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>RCC_HCLK</parametername>
</parameternamelist>
<parameterdescription>
<para>defines the APB1 clock divider. This clock is derived from the AHB clock (HCLK). This parameter can be one of the following values: <itemizedlist>
<listitem><para>RCC_HCLK_Div1: APB1 clock = HCLK </para></listitem>
<listitem><para>RCC_HCLK_Div2: APB1 clock = HCLK/2 </para></listitem>
<listitem><para>RCC_HCLK_Div4: APB1 clock = HCLK/4 </para></listitem>
<listitem><para>RCC_HCLK_Div8: APB1 clock = HCLK/8 </para></listitem>
<listitem><para>RCC_HCLK_Div16: APB1 clock = HCLK/16 </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" line="634" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" bodystart="634" bodyend="646"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___a_p_b1___a_p_b2__clock__source_1gab70f1257ea47c1da4def8e351af4d9f2" compoundref="stm32f10x__rcc_8h" startline="330">IS_RCC_PCLK</references>
        <references refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" compoundref="stm32f10x_8h" startline="1443">RCC</references>
        <references refid="group___r_c_c___private___defines_1gab02d8032f451eb5a1d139007ff57f22e" compoundref="stm32f10x__rcc_8c" startline="141">CFGR_PPRE1_Reset_Mask</references>
      </memberdef>
      <memberdef kind="function" id="group___r_c_c___private___functions_1ga09f9c010a4adca9e036da42c2ca6126a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RCC_PCLK2Config</definition>
        <argsstring>(uint32_t RCC_HCLK)</argsstring>
        <name>RCC_PCLK2Config</name>
        <param>
          <type>uint32_t</type>
          <declname>RCC_HCLK</declname>
        </param>
        <briefdescription>
<para>Configures the High Speed APB clock (PCLK2). </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>RCC_HCLK</parametername>
</parameternamelist>
<parameterdescription>
<para>defines the APB2 clock divider. This clock is derived from the AHB clock (HCLK). This parameter can be one of the following values: <itemizedlist>
<listitem><para>RCC_HCLK_Div1: APB2 clock = HCLK </para></listitem>
<listitem><para>RCC_HCLK_Div2: APB2 clock = HCLK/2 </para></listitem>
<listitem><para>RCC_HCLK_Div4: APB2 clock = HCLK/4 </para></listitem>
<listitem><para>RCC_HCLK_Div8: APB2 clock = HCLK/8 </para></listitem>
<listitem><para>RCC_HCLK_Div16: APB2 clock = HCLK/16 </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" line="660" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" bodystart="660" bodyend="672"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___a_p_b1___a_p_b2__clock__source_1gab70f1257ea47c1da4def8e351af4d9f2" compoundref="stm32f10x__rcc_8h" startline="330">IS_RCC_PCLK</references>
        <references refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" compoundref="stm32f10x_8h" startline="1443">RCC</references>
        <references refid="group___r_c_c___private___defines_1gab2ee73d52f48cb201e493e381928d1ae" compoundref="stm32f10x__rcc_8c" startline="143">CFGR_PPRE2_Reset_Mask</references>
      </memberdef>
      <memberdef kind="function" id="group___r_c_c___private___functions_1gaa953aa226e9ce45300d535941e4dfe2f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RCC_ITConfig</definition>
        <argsstring>(uint8_t RCC_IT, FunctionalState NewState)</argsstring>
        <name>RCC_ITConfig</name>
        <param>
          <type>uint8_t</type>
          <declname>RCC_IT</declname>
        </param>
        <param>
          <type><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref></type>
          <declname>NewState</declname>
        </param>
        <briefdescription>
<para>Enables or disables the specified RCC interrupts. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>RCC_IT</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the RCC interrupt sources to be enabled or disabled.</para></parameterdescription>
</parameteritem>
</parameterlist>
For <bold>STM32_Connectivity_line_devices</bold>, this parameter can be any combination of the following values <itemizedlist>
<listitem><para>RCC_IT_LSIRDY: LSI ready interrupt </para></listitem>
<listitem><para>RCC_IT_LSERDY: LSE ready interrupt </para></listitem>
<listitem><para>RCC_IT_HSIRDY: HSI ready interrupt </para></listitem>
<listitem><para>RCC_IT_HSERDY: HSE ready interrupt </para></listitem>
<listitem><para>RCC_IT_PLLRDY: PLL ready interrupt </para></listitem>
<listitem><para>RCC_IT_PLL2RDY: PLL2 ready interrupt </para></listitem>
<listitem><para>RCC_IT_PLL3RDY: PLL3 ready interrupt</para></listitem>
</itemizedlist>
For <bold>other_STM32_devices</bold>, this parameter can be any combination of the following values <itemizedlist>
<listitem><para>RCC_IT_LSIRDY: LSI ready interrupt </para></listitem>
<listitem><para>RCC_IT_LSERDY: LSE ready interrupt </para></listitem>
<listitem><para>RCC_IT_HSIRDY: HSI ready interrupt </para></listitem>
<listitem><para>RCC_IT_HSERDY: HSE ready interrupt </para></listitem>
<listitem><para>RCC_IT_PLLRDY: PLL ready interrupt</para></listitem>
</itemizedlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>NewState</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of the specified RCC interrupts. This parameter can be: ENABLE or DISABLE. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" line="700" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" bodystart="700" bodyend="715"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___r_c_c___interrupt__source_1ga710d72ccf88ddbec09b033c81a571a83" compoundref="stm32f10x__rcc_8h" startline="349">IS_RCC_IT</references>
        <references refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" compoundref="stm32f10x_8h" startline="522">IS_FUNCTIONAL_STATE</references>
        <references refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1ad3a9df141be0ccf10389b640f492b26d" compoundref="stm32f10x_8h" startline="521">DISABLE</references>
        <references refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" compoundref="core__cm0_8h" startline="221">__IO</references>
        <references refid="group___r_c_c___private___defines_1gaab58c3f3f81bf1ab9a14cf3fececd8c4" compoundref="stm32f10x__rcc_8c" startline="166">CIR_BYTE2_ADDRESS</references>
      </memberdef>
      <memberdef kind="function" id="group___r_c_c___private___functions_1ga895b3ff3d143c990f1cd0146aa260081" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RCC_USBCLKConfig</definition>
        <argsstring>(uint32_t RCC_USBCLKSource)</argsstring>
        <name>RCC_USBCLKConfig</name>
        <param>
          <type>uint32_t</type>
          <declname>RCC_USBCLKSource</declname>
        </param>
        <briefdescription>
<para>Configures the USB clock (USBCLK). </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>RCC_USBCLKSource</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the USB clock source. This clock is derived from the PLL output. This parameter can be one of the following values: <itemizedlist>
<listitem><para>RCC_USBCLKSource_PLLCLK_1Div5: PLL clock divided by 1,5 selected as USB clock source </para></listitem>
<listitem><para>RCC_USBCLKSource_PLLCLK_Div1: PLL clock selected as USB clock source </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" line="728" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" bodystart="728" bodyend="734"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___u_s_b___device__clock__source_1ga484f7834b5506d9879ed84660c894250" compoundref="stm32f10x__rcc_8h" startline="378">IS_RCC_USBCLK_SOURCE</references>
        <references refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" compoundref="core__cm0_8h" startline="221">__IO</references>
        <references refid="group___r_c_c___private___defines_1gabde4e60349b8412a79611c0aeb27c3a2" compoundref="stm32f10x__rcc_8c" startline="81">CFGR_USBPRE_BB</references>
      </memberdef>
      <memberdef kind="function" id="group___r_c_c___private___functions_1gadda89cdb838bf49e5fa10f3f774530a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RCC_ADCCLKConfig</definition>
        <argsstring>(uint32_t RCC_PCLK2)</argsstring>
        <name>RCC_ADCCLKConfig</name>
        <param>
          <type>uint32_t</type>
          <declname>RCC_PCLK2</declname>
        </param>
        <briefdescription>
<para>Configures the ADC clock (ADCCLK). </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>RCC_PCLK2</parametername>
</parameternamelist>
<parameterdescription>
<para>defines the ADC clock divider. This clock is derived from the APB2 clock (PCLK2). This parameter can be one of the following values: <itemizedlist>
<listitem><para>RCC_PCLK2_Div2: ADC clock = PCLK2/2 </para></listitem>
<listitem><para>RCC_PCLK2_Div4: ADC clock = PCLK2/4 </para></listitem>
<listitem><para>RCC_PCLK2_Div6: ADC clock = PCLK2/6 </para></listitem>
<listitem><para>RCC_PCLK2_Div8: ADC clock = PCLK2/8 </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" line="766" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" bodystart="766" bodyend="778"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___a_d_c__clock__source_1ga6a9c4fb239566f0f3d44c8cc266e528b" compoundref="stm32f10x__rcc_8h" startline="433">IS_RCC_ADCCLK</references>
        <references refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" compoundref="stm32f10x_8h" startline="1443">RCC</references>
        <references refid="group___r_c_c___private___defines_1ga12eb3f1b37b9101bf3810374bad68703" compoundref="stm32f10x__rcc_8c" startline="145">CFGR_ADCPRE_Reset_Mask</references>
        <references refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" compoundref="core__cm0_8h" startline="221">__IO</references>
      </memberdef>
      <memberdef kind="function" id="group___r_c_c___private___functions_1ga65209ab5c3589b249c7d70f978735ca6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RCC_LSEConfig</definition>
        <argsstring>(uint8_t RCC_LSE)</argsstring>
        <name>RCC_LSEConfig</name>
        <param>
          <type>uint8_t</type>
          <declname>RCC_LSE</declname>
        </param>
        <briefdescription>
<para>Configures the External Low Speed oscillator (LSE). </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>RCC_LSE</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the new state of the LSE. This parameter can be one of the following values: <itemizedlist>
<listitem><para>RCC_LSE_OFF: LSE oscillator OFF </para></listitem>
<listitem><para>RCC_LSE_ON: LSE oscillator ON </para></listitem>
<listitem><para>RCC_LSE_Bypass: LSE oscillator bypassed with external clock </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" line="829" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" bodystart="829" bodyend="854"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___l_s_e__configuration_1ga95d2678bf8f46e932e7cba75619a4d2c" compoundref="stm32f10x__rcc_8h" startline="446">IS_RCC_LSE</references>
        <references refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" compoundref="core__cm0_8h" startline="221">__IO</references>
        <references refid="group___r_c_c___private___defines_1ga40b5a415d697b6af7babd8a208c92435" compoundref="stm32f10x__rcc_8c" startline="175">BDCR_ADDRESS</references>
        <references refid="group___l_s_e__configuration_1ga6645c27708d0cad1a4ab61d2abb24c77" compoundref="stm32f10x__rcc_8h" startline="443">RCC_LSE_OFF</references>
        <references refid="group___l_s_e__configuration_1gac981ea636c2f215e4473901e0912f55a" compoundref="stm32f10x__rcc_8h" startline="444">RCC_LSE_ON</references>
        <references refid="group___l_s_e__configuration_1gac911af00bffa1bd1b1676f582a8a88e1" compoundref="stm32f10x__rcc_8h" startline="445">RCC_LSE_Bypass</references>
      </memberdef>
      <memberdef kind="function" id="group___r_c_c___private___functions_1ga81e3ca29fd154ac2019bba6936d6d5ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RCC_LSICmd</definition>
        <argsstring>(FunctionalState NewState)</argsstring>
        <name>RCC_LSICmd</name>
        <param>
          <type><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref></type>
          <declname>NewState</declname>
        </param>
        <briefdescription>
<para>Enables or disables the Internal Low Speed oscillator (LSI). </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>LSI can not be disabled if the IWDG is running. </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>NewState</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of the LSI. This parameter can be: ENABLE or DISABLE. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" line="862" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" bodystart="862" bodyend="867"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" compoundref="stm32f10x_8h" startline="522">IS_FUNCTIONAL_STATE</references>
        <references refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" compoundref="core__cm0_8h" startline="221">__IO</references>
        <references refid="group___r_c_c___private___defines_1gaa253e36e7e5fb02998c0e4d0388abc52" compoundref="stm32f10x__rcc_8c" startline="103">CSR_LSION_BB</references>
      </memberdef>
      <memberdef kind="function" id="group___r_c_c___private___functions_1ga1473d8a5a020642966359611c44181b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RCC_RTCCLKConfig</definition>
        <argsstring>(uint32_t RCC_RTCCLKSource)</argsstring>
        <name>RCC_RTCCLKConfig</name>
        <param>
          <type>uint32_t</type>
          <declname>RCC_RTCCLKSource</declname>
        </param>
        <briefdescription>
<para>Configures the RTC clock (RTCCLK). </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Once the RTC clock is selected it can&apos;t be changed unless the Backup domain is reset. </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>RCC_RTCCLKSource</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the RTC clock source. This parameter can be one of the following values: <itemizedlist>
<listitem><para>RCC_RTCCLKSource_LSE: LSE selected as RTC clock </para></listitem>
<listitem><para>RCC_RTCCLKSource_LSI: LSI selected as RTC clock </para></listitem>
<listitem><para>RCC_RTCCLKSource_HSE_Div128: HSE clock divided by 128 selected as RTC clock </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" line="879" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" bodystart="879" bodyend="885"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___r_t_c__clock__source_1gae76a0340b02b5342e756fa0d2112ebf5" compoundref="stm32f10x__rcc_8h" startline="459">IS_RCC_RTCCLK_SOURCE</references>
        <references refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" compoundref="stm32f10x_8h" startline="1443">RCC</references>
      </memberdef>
      <memberdef kind="function" id="group___r_c_c___private___functions_1ga9802f84846df2cea8e369234ed13b159" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RCC_RTCCLKCmd</definition>
        <argsstring>(FunctionalState NewState)</argsstring>
        <name>RCC_RTCCLKCmd</name>
        <param>
          <type><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref></type>
          <declname>NewState</declname>
        </param>
        <briefdescription>
<para>Enables or disables the RTC clock. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This function must be used only after the RTC clock was selected using the RCC_RTCCLKConfig function. </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>NewState</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of the RTC clock. This parameter can be: ENABLE or DISABLE. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" line="893" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" bodystart="893" bodyend="898"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" compoundref="stm32f10x_8h" startline="522">IS_FUNCTIONAL_STATE</references>
        <references refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" compoundref="core__cm0_8h" startline="221">__IO</references>
        <references refid="group___r_c_c___private___defines_1gaf70aaf70b0752ccb3a60307b2fb46038" compoundref="stm32f10x__rcc_8c" startline="92">BDCR_RTCEN_BB</references>
      </memberdef>
      <memberdef kind="function" id="group___r_c_c___private___functions_1ga3e9944fd1ed734275222bbb3e3f29993" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RCC_GetClocksFreq</definition>
        <argsstring>(RCC_ClocksTypeDef *RCC_Clocks)</argsstring>
        <name>RCC_GetClocksFreq</name>
        <param>
          <type><ref refid="struct_r_c_c___clocks_type_def" kindref="compound">RCC_ClocksTypeDef</ref> *</type>
          <declname>RCC_Clocks</declname>
        </param>
        <briefdescription>
<para>Returns the frequencies of different on chip clocks. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>RCC_Clocks</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a <ref refid="struct_r_c_c___clocks_type_def" kindref="compound">RCC_ClocksTypeDef</ref> structure which will hold the clocks frequencies. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>The result of this function could be not correct when using fractional value for HSE crystal. </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" line="908" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" bodystart="908" bodyend="1031"/>
        <references refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" compoundref="stm32f10x_8h" startline="1443">RCC</references>
        <references refid="group___r_c_c___private___defines_1gaefba904c88a72c7e2c12e8fcef38300a" compoundref="stm32f10x__rcc_8c" startline="137">CFGR_SWS_Mask</references>
        <references refid="struct_r_c_c___clocks_type_def_1a2ba325067f3d464ad7955358932563d8" compoundref="stm32f10x__rcc_8h" startline="48">RCC_ClocksTypeDef::SYSCLK_Frequency</references>
        <references refid="group___library__configuration__section_1gaaa8c76e274d0f6dd2cefb5d0b17fbc37" compoundref="stm32f10x_8h" startline="130">HSI_VALUE</references>
        <references refid="group___library__configuration__section_1gaeafcff4f57440c60e64812dddd13e7cb" compoundref="stm32f10x_8h" startline="119">HSE_VALUE</references>
        <references refid="group___r_c_c___private___defines_1ga26ac4de307d4c081867dc0344f54c17a" compoundref="stm32f10x__rcc_8c" startline="134">CFGR_PLLMull_Mask</references>
        <references refid="group___r_c_c___private___defines_1ga8fd33db1092dfc565314b7bf395bba23" compoundref="stm32f10x__rcc_8c" startline="135">CFGR_PLLSRC_Mask</references>
        <references refid="group___r_c_c___private___defines_1ga025835ddeb698b8c119ddf355b2fbded" compoundref="stm32f10x__rcc_8c" startline="136">CFGR_PLLXTPRE_Mask</references>
        <references refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffa589b7d94a3d91d145720e2fed0eb3a05" compoundref="stm32f10x_8h" startline="519">RESET</references>
        <references refid="group___r_c_c___private___defines_1gaca06c6cc484e08423a56cfca6928b9ae" compoundref="stm32f10x__rcc_8c" startline="140">CFGR_HPRE_Set_Mask</references>
        <referencedby refid="group___i2_c___private___functions_1gaac29465bca70fbc91c2f922ab67bb88e" compoundref="stm32f10x__i2c_8c" startline="191" endline="304">I2C_Init</referencedby>
        <referencedby refid="group___s_p_i___private___functions_1ga53661884ae4a9640df7cbc59187782f7" compoundref="stm32f10x__spi_8c" startline="219" endline="372">I2S_Init</referencedby>
        <referencedby refid="group___u_s_a_r_t___private___functions_1ga98da340ea0324002ba1b4263e91ab2ff" compoundref="stm32f10x__usart_8c" startline="176" endline="273">USART_Init</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___r_c_c___private___functions_1gae0b30d8598b8393bdba9c3fefba3a968" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RCC_AHBPeriphClockCmd</definition>
        <argsstring>(uint32_t RCC_AHBPeriph, FunctionalState NewState)</argsstring>
        <name>RCC_AHBPeriphClockCmd</name>
        <param>
          <type>uint32_t</type>
          <declname>RCC_AHBPeriph</declname>
        </param>
        <param>
          <type><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref></type>
          <declname>NewState</declname>
        </param>
        <briefdescription>
<para>Enables or disables the AHB peripheral clock. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>RCC_AHBPeriph</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the AHB peripheral to gates its clock.</para></parameterdescription>
</parameteritem>
</parameterlist>
For <bold>STM32_Connectivity_line_devices</bold>, this parameter can be any combination of the following values: <itemizedlist>
<listitem><para>RCC_AHBPeriph_DMA1 </para></listitem>
<listitem><para>RCC_AHBPeriph_DMA2 </para></listitem>
<listitem><para>RCC_AHBPeriph_SRAM </para></listitem>
<listitem><para>RCC_AHBPeriph_FLITF </para></listitem>
<listitem><para>RCC_AHBPeriph_CRC </para></listitem>
<listitem><para>RCC_AHBPeriph_OTG_FS </para></listitem>
<listitem><para>RCC_AHBPeriph_ETH_MAC </para></listitem>
<listitem><para>RCC_AHBPeriph_ETH_MAC_Tx </para></listitem>
<listitem><para>RCC_AHBPeriph_ETH_MAC_Rx</para></listitem>
</itemizedlist>
For <bold>other_STM32_devices</bold>, this parameter can be any combination of the following values: <itemizedlist>
<listitem><para>RCC_AHBPeriph_DMA1 </para></listitem>
<listitem><para>RCC_AHBPeriph_DMA2 </para></listitem>
<listitem><para>RCC_AHBPeriph_SRAM </para></listitem>
<listitem><para>RCC_AHBPeriph_FLITF </para></listitem>
<listitem><para>RCC_AHBPeriph_CRC </para></listitem>
<listitem><para>RCC_AHBPeriph_FSMC </para></listitem>
<listitem><para>RCC_AHBPeriph_SDIO</para></listitem>
</itemizedlist>
<simplesect kind="note"><para>SRAM and FLITF clock can be disabled only during sleep mode. </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>NewState</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of the specified peripheral clock. This parameter can be: ENABLE or DISABLE. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" line="1064" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" bodystart="1064" bodyend="1078"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___a_h_b__peripheral_1ga5fbf97a9c9f5742c94cde6ffe389aedc" compoundref="stm32f10x__rcc_8h" startline="479">IS_RCC_AHB_PERIPH</references>
        <references refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" compoundref="stm32f10x_8h" startline="522">IS_FUNCTIONAL_STATE</references>
        <references refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1ad3a9df141be0ccf10389b640f492b26d" compoundref="stm32f10x_8h" startline="521">DISABLE</references>
        <references refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" compoundref="stm32f10x_8h" startline="1443">RCC</references>
      </memberdef>
      <memberdef kind="function" id="group___r_c_c___private___functions_1ga56ff55caf8d835351916b40dd030bc87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RCC_APB2PeriphClockCmd</definition>
        <argsstring>(uint32_t RCC_APB2Periph, FunctionalState NewState)</argsstring>
        <name>RCC_APB2PeriphClockCmd</name>
        <param>
          <type>uint32_t</type>
          <declname>RCC_APB2Periph</declname>
        </param>
        <param>
          <type><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref></type>
          <declname>NewState</declname>
        </param>
        <briefdescription>
<para>Enables or disables the High Speed APB (APB2) peripheral clock. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>RCC_APB2Periph</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the APB2 peripheral to gates its clock. This parameter can be any combination of the following values: <itemizedlist>
<listitem><para>RCC_APB2Periph_AFIO, RCC_APB2Periph_GPIOA, RCC_APB2Periph_GPIOB, RCC_APB2Periph_GPIOC, RCC_APB2Periph_GPIOD, RCC_APB2Periph_GPIOE, RCC_APB2Periph_GPIOF, RCC_APB2Periph_GPIOG, RCC_APB2Periph_ADC1, RCC_APB2Periph_ADC2, RCC_APB2Periph_TIM1, RCC_APB2Periph_SPI1, RCC_APB2Periph_TIM8, RCC_APB2Periph_USART1, RCC_APB2Periph_ADC3, RCC_APB2Periph_TIM15, RCC_APB2Periph_TIM16, RCC_APB2Periph_TIM17, RCC_APB2Periph_TIM9, RCC_APB2Periph_TIM10, RCC_APB2Periph_TIM11 </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NewState</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of the specified peripheral clock. This parameter can be: ENABLE or DISABLE. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" line="1095" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" bodystart="1095" bodyend="1108"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___a_p_b2__peripheral_1ga89a2b95e60e90a51b26b53cc4c0e7b14" compoundref="stm32f10x__rcc_8h" startline="519">IS_RCC_APB2_PERIPH</references>
        <references refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" compoundref="stm32f10x_8h" startline="522">IS_FUNCTIONAL_STATE</references>
        <references refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1ad3a9df141be0ccf10389b640f492b26d" compoundref="stm32f10x_8h" startline="521">DISABLE</references>
        <references refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" compoundref="stm32f10x_8h" startline="1443">RCC</references>
        <referencedby refid="class_blink_led_1a38fcbc34c6ff8a1083b64bbbb309a54c" compoundref="_blink_led_8cpp" startline="11" endline="26">BlinkLed::powerUp</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___r_c_c___private___functions_1gaee7cc5d73af7fe1986fceff8afd3973e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RCC_APB1PeriphClockCmd</definition>
        <argsstring>(uint32_t RCC_APB1Periph, FunctionalState NewState)</argsstring>
        <name>RCC_APB1PeriphClockCmd</name>
        <param>
          <type>uint32_t</type>
          <declname>RCC_APB1Periph</declname>
        </param>
        <param>
          <type><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref></type>
          <declname>NewState</declname>
        </param>
        <briefdescription>
<para>Enables or disables the Low Speed APB (APB1) peripheral clock. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>RCC_APB1Periph</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the APB1 peripheral to gates its clock. This parameter can be any combination of the following values: <itemizedlist>
<listitem><para>RCC_APB1Periph_TIM2, RCC_APB1Periph_TIM3, RCC_APB1Periph_TIM4, RCC_APB1Periph_TIM5, RCC_APB1Periph_TIM6, RCC_APB1Periph_TIM7, RCC_APB1Periph_WWDG, RCC_APB1Periph_SPI2, RCC_APB1Periph_SPI3, RCC_APB1Periph_USART2, RCC_APB1Periph_USART3, RCC_APB1Periph_USART4, RCC_APB1Periph_USART5, RCC_APB1Periph_I2C1, RCC_APB1Periph_I2C2, RCC_APB1Periph_USB, RCC_APB1Periph_CAN1, RCC_APB1Periph_BKP, RCC_APB1Periph_PWR, RCC_APB1Periph_DAC, RCC_APB1Periph_CEC, RCC_APB1Periph_TIM12, RCC_APB1Periph_TIM13, RCC_APB1Periph_TIM14 </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NewState</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of the specified peripheral clock. This parameter can be: ENABLE or DISABLE. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" line="1126" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" bodystart="1126" bodyend="1139"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___a_p_b1__peripheral_1gab68e85308494436c4c55a69c42a79f36" compoundref="stm32f10x__rcc_8h" startline="554">IS_RCC_APB1_PERIPH</references>
        <references refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" compoundref="stm32f10x_8h" startline="522">IS_FUNCTIONAL_STATE</references>
        <references refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1ad3a9df141be0ccf10389b640f492b26d" compoundref="stm32f10x_8h" startline="521">DISABLE</references>
        <references refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" compoundref="stm32f10x_8h" startline="1443">RCC</references>
      </memberdef>
      <memberdef kind="function" id="group___r_c_c___private___functions_1gad94553850ac07106a27ee85fec37efdf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RCC_APB2PeriphResetCmd</definition>
        <argsstring>(uint32_t RCC_APB2Periph, FunctionalState NewState)</argsstring>
        <name>RCC_APB2PeriphResetCmd</name>
        <param>
          <type>uint32_t</type>
          <declname>RCC_APB2Periph</declname>
        </param>
        <param>
          <type><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref></type>
          <declname>NewState</declname>
        </param>
        <briefdescription>
<para>Forces or releases High Speed APB (APB2) peripheral reset. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>RCC_APB2Periph</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the APB2 peripheral to reset. This parameter can be any combination of the following values: <itemizedlist>
<listitem><para>RCC_APB2Periph_AFIO, RCC_APB2Periph_GPIOA, RCC_APB2Periph_GPIOB, RCC_APB2Periph_GPIOC, RCC_APB2Periph_GPIOD, RCC_APB2Periph_GPIOE, RCC_APB2Periph_GPIOF, RCC_APB2Periph_GPIOG, RCC_APB2Periph_ADC1, RCC_APB2Periph_ADC2, RCC_APB2Periph_TIM1, RCC_APB2Periph_SPI1, RCC_APB2Periph_TIM8, RCC_APB2Periph_USART1, RCC_APB2Periph_ADC3, RCC_APB2Periph_TIM15, RCC_APB2Periph_TIM16, RCC_APB2Periph_TIM17, RCC_APB2Periph_TIM9, RCC_APB2Periph_TIM10, RCC_APB2Periph_TIM11 </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NewState</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of the specified peripheral reset. This parameter can be: ENABLE or DISABLE. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" line="1185" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" bodystart="1185" bodyend="1198"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___a_p_b2__peripheral_1ga89a2b95e60e90a51b26b53cc4c0e7b14" compoundref="stm32f10x__rcc_8h" startline="519">IS_RCC_APB2_PERIPH</references>
        <references refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" compoundref="stm32f10x_8h" startline="522">IS_FUNCTIONAL_STATE</references>
        <references refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1ad3a9df141be0ccf10389b640f492b26d" compoundref="stm32f10x_8h" startline="521">DISABLE</references>
        <references refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" compoundref="stm32f10x_8h" startline="1443">RCC</references>
        <referencedby refid="group___a_d_c___private___functions_1ga31fa6bc09de17125e9db2830ce77c09b" compoundref="stm32f10x__adc_8c" startline="185" endline="214">ADC_DeInit</referencedby>
        <referencedby refid="group___g_p_i_o___private___functions_1gaa60bdf3182c44b5fa818f237042f52ee" compoundref="stm32f10x__gpio_8c" startline="108" endline="151">GPIO_DeInit</referencedby>
        <referencedby refid="group___g_p_i_o___private___functions_1ga7f645e6b6146818c3d6c19021e70170c" compoundref="stm32f10x__gpio_8c" startline="159" endline="163">GPIO_AFIODeInit</referencedby>
        <referencedby refid="group___s_p_i___private___functions_1gabe36880945fa56785283a9c0092124cc" compoundref="stm32f10x__spi_8c" startline="119" endline="148">SPI_I2S_DeInit</referencedby>
        <referencedby refid="group___t_i_m___private___functions_1ga1659cc0ce503ac151568e0c7c02b1ba5" compoundref="stm32f10x__tim_8c" startline="122" endline="215">TIM_DeInit</referencedby>
        <referencedby refid="group___u_s_a_r_t___private___functions_1ga2f8e1ce72da21b6539d8e1f299ec3b0d" compoundref="stm32f10x__usart_8c" startline="130" endline="163">USART_DeInit</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___r_c_c___private___functions_1gab197ae4369c10b92640a733b40ed2801" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RCC_APB1PeriphResetCmd</definition>
        <argsstring>(uint32_t RCC_APB1Periph, FunctionalState NewState)</argsstring>
        <name>RCC_APB1PeriphResetCmd</name>
        <param>
          <type>uint32_t</type>
          <declname>RCC_APB1Periph</declname>
        </param>
        <param>
          <type><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref></type>
          <declname>NewState</declname>
        </param>
        <briefdescription>
<para>Forces or releases Low Speed APB (APB1) peripheral reset. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>RCC_APB1Periph</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the APB1 peripheral to reset. This parameter can be any combination of the following values: <itemizedlist>
<listitem><para>RCC_APB1Periph_TIM2, RCC_APB1Periph_TIM3, RCC_APB1Periph_TIM4, RCC_APB1Periph_TIM5, RCC_APB1Periph_TIM6, RCC_APB1Periph_TIM7, RCC_APB1Periph_WWDG, RCC_APB1Periph_SPI2, RCC_APB1Periph_SPI3, RCC_APB1Periph_USART2, RCC_APB1Periph_USART3, RCC_APB1Periph_USART4, RCC_APB1Periph_USART5, RCC_APB1Periph_I2C1, RCC_APB1Periph_I2C2, RCC_APB1Periph_USB, RCC_APB1Periph_CAN1, RCC_APB1Periph_BKP, RCC_APB1Periph_PWR, RCC_APB1Periph_DAC, RCC_APB1Periph_CEC, RCC_APB1Periph_TIM12, RCC_APB1Periph_TIM13, RCC_APB1Periph_TIM14 </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NewState</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of the specified peripheral clock. This parameter can be: ENABLE or DISABLE. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" line="1216" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" bodystart="1216" bodyend="1229"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___a_p_b1__peripheral_1gab68e85308494436c4c55a69c42a79f36" compoundref="stm32f10x__rcc_8h" startline="554">IS_RCC_APB1_PERIPH</references>
        <references refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" compoundref="stm32f10x_8h" startline="522">IS_FUNCTIONAL_STATE</references>
        <references refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1ad3a9df141be0ccf10389b640f492b26d" compoundref="stm32f10x_8h" startline="521">DISABLE</references>
        <references refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" compoundref="stm32f10x_8h" startline="1443">RCC</references>
        <referencedby refid="group___c_a_n___private___functions_1ga002b74cd69574a14b17ad445090245cd" compoundref="stm32f10x__can_8c" startline="122" endline="141">CAN_DeInit</referencedby>
        <referencedby refid="group___c_e_c___private___functions_1ga604c3b15b51a46303c201fa3deac2212" compoundref="stm32f10x__cec_8c" startline="118" endline="124">CEC_DeInit</referencedby>
        <referencedby refid="group___d_a_c___private___functions_1ga1fae225204e1e049d6795319e99ba8bc" compoundref="stm32f10x__dac_8c" startline="98" endline="104">DAC_DeInit</referencedby>
        <referencedby refid="group___i2_c___private___functions_1ga2ee214364603059ad5d9089f749f5bfd" compoundref="stm32f10x__i2c_8c" startline="162" endline="181">I2C_DeInit</referencedby>
        <referencedby refid="group___p_w_r___private___functions_1gad03a0aac7bc3bc3a9fd012f3769a6990" compoundref="stm32f10x__pwr_8c" startline="112" endline="116">PWR_DeInit</referencedby>
        <referencedby refid="group___s_p_i___private___functions_1gabe36880945fa56785283a9c0092124cc" compoundref="stm32f10x__spi_8c" startline="119" endline="148">SPI_I2S_DeInit</referencedby>
        <referencedby refid="group___t_i_m___private___functions_1ga1659cc0ce503ac151568e0c7c02b1ba5" compoundref="stm32f10x__tim_8c" startline="122" endline="215">TIM_DeInit</referencedby>
        <referencedby refid="group___u_s_a_r_t___private___functions_1ga2f8e1ce72da21b6539d8e1f299ec3b0d" compoundref="stm32f10x__usart_8c" startline="130" endline="163">USART_DeInit</referencedby>
        <referencedby refid="group___w_w_d_g___private___functions_1ga7130f4dc861b9234b62e73f9f57f89a1" compoundref="stm32f10x__wwdg_8c" startline="102" endline="106">WWDG_DeInit</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___r_c_c___private___functions_1ga636c3b72f35391e67f12a551b15fa54a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RCC_BackupResetCmd</definition>
        <argsstring>(FunctionalState NewState)</argsstring>
        <name>RCC_BackupResetCmd</name>
        <param>
          <type><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref></type>
          <declname>NewState</declname>
        </param>
        <briefdescription>
<para>Forces or releases the Backup domain reset. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>NewState</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of the Backup domain reset. This parameter can be: ENABLE or DISABLE. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" line="1237" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" bodystart="1237" bodyend="1242"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" compoundref="stm32f10x_8h" startline="522">IS_FUNCTIONAL_STATE</references>
        <references refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" compoundref="core__cm0_8h" startline="221">__IO</references>
        <references refid="group___r_c_c___private___defines_1ga892fdf297b85b85cbaf0723649b31818" compoundref="stm32f10x__rcc_8c" startline="96">BDCR_BDRST_BB</references>
        <referencedby refid="group___b_k_p___private___functions_1gaabff4d8f5ebf4fd9a840bcc9042ca226" compoundref="stm32f10x__bkp_8c" startline="120" endline="124">BKP_DeInit</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___r_c_c___private___functions_1ga0ff1fd7b9a8a49cdda11b7d7261c3494" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RCC_ClockSecuritySystemCmd</definition>
        <argsstring>(FunctionalState NewState)</argsstring>
        <name>RCC_ClockSecuritySystemCmd</name>
        <param>
          <type><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref></type>
          <declname>NewState</declname>
        </param>
        <briefdescription>
<para>Enables or disables the Clock Security System. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>NewState</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of the Clock Security System.. This parameter can be: ENABLE or DISABLE. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" line="1250" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" bodystart="1250" bodyend="1255"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" compoundref="stm32f10x_8h" startline="522">IS_FUNCTIONAL_STATE</references>
        <references refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" compoundref="core__cm0_8h" startline="221">__IO</references>
        <references refid="group___r_c_c___private___defines_1gaca914aed10477ae4090fea0a9639b1ea" compoundref="stm32f10x__rcc_8c" startline="72">CR_CSSON_BB</references>
      </memberdef>
      <memberdef kind="function" id="group___r_c_c___private___functions_1ga8f62b86c6ca8ae6585ba1cec79431fe5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RCC_MCOConfig</definition>
        <argsstring>(uint8_t RCC_MCO)</argsstring>
        <name>RCC_MCOConfig</name>
        <param>
          <type>uint8_t</type>
          <declname>RCC_MCO</declname>
        </param>
        <briefdescription>
<para>Selects the clock source to output on MCO pin. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>RCC_MCO</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the clock source to output.</para></parameterdescription>
</parameteritem>
</parameterlist>
For <bold>STM32_Connectivity_line_devices</bold>, this parameter can be one of the following values: <itemizedlist>
<listitem><para>RCC_MCO_NoClock: No clock selected </para></listitem>
<listitem><para>RCC_MCO_SYSCLK: System clock selected </para></listitem>
<listitem><para>RCC_MCO_HSI: HSI oscillator clock selected </para></listitem>
<listitem><para>RCC_MCO_HSE: HSE oscillator clock selected </para></listitem>
<listitem><para>RCC_MCO_PLLCLK_Div2: PLL clock divided by 2 selected </para></listitem>
<listitem><para>RCC_MCO_PLL2CLK: PLL2 clock selected </para></listitem>
<listitem><para>RCC_MCO_PLL3CLK_Div2: PLL3 clock divided by 2 selected </para></listitem>
<listitem><para>RCC_MCO_XT1: External 3-25 MHz oscillator clock selected </para></listitem>
<listitem><para>RCC_MCO_PLL3CLK: PLL3 clock selected</para></listitem>
</itemizedlist>
For <bold>other_STM32_devices</bold>, this parameter can be one of the following values: <itemizedlist>
<listitem><para>RCC_MCO_NoClock: No clock selected </para></listitem>
<listitem><para>RCC_MCO_SYSCLK: System clock selected </para></listitem>
<listitem><para>RCC_MCO_HSI: HSI oscillator clock selected </para></listitem>
<listitem><para>RCC_MCO_HSE: HSE oscillator clock selected </para></listitem>
<listitem><para>RCC_MCO_PLLCLK_Div2: PLL clock divided by 2 selected</para></listitem>
</itemizedlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" line="1282" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" bodystart="1282" bodyend="1289"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___clock__source__to__output__on___m_c_o__pin_1ga0c2d4d6aa8881e01b8c06d8816284b73" compoundref="stm32f10x__rcc_8h" startline="571">IS_RCC_MCO</references>
        <references refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" compoundref="core__cm0_8h" startline="221">__IO</references>
        <references refid="group___r_c_c___private___defines_1ga5fea86b59ec4be059d922db57cca3b3f" compoundref="stm32f10x__rcc_8c" startline="172">CFGR_BYTE4_ADDRESS</references>
      </memberdef>
      <memberdef kind="function" id="group___r_c_c___private___functions_1ga2897bdc52f272031c44fb1f72205d295" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___exported__types_1ga89136caac2e14c55151f527ac02daaff" kindref="member">FlagStatus</ref></type>
        <definition>FlagStatus RCC_GetFlagStatus</definition>
        <argsstring>(uint8_t RCC_FLAG)</argsstring>
        <name>RCC_GetFlagStatus</name>
        <param>
          <type>uint8_t</type>
          <declname>RCC_FLAG</declname>
        </param>
        <briefdescription>
<para>Checks whether the specified RCC flag is set or not. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>RCC_FLAG</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the flag to check.</para></parameterdescription>
</parameteritem>
</parameterlist>
For <bold>STM32_Connectivity_line_devices</bold>, this parameter can be one of the following values: <itemizedlist>
<listitem><para>RCC_FLAG_HSIRDY: HSI oscillator clock ready </para></listitem>
<listitem><para>RCC_FLAG_HSERDY: HSE oscillator clock ready </para></listitem>
<listitem><para>RCC_FLAG_PLLRDY: PLL clock ready </para></listitem>
<listitem><para>RCC_FLAG_PLL2RDY: PLL2 clock ready </para></listitem>
<listitem><para>RCC_FLAG_PLL3RDY: PLL3 clock ready </para></listitem>
<listitem><para>RCC_FLAG_LSERDY: LSE oscillator clock ready </para></listitem>
<listitem><para>RCC_FLAG_LSIRDY: LSI oscillator clock ready </para></listitem>
<listitem><para>RCC_FLAG_PINRST: Pin reset </para></listitem>
<listitem><para>RCC_FLAG_PORRST: POR/PDR reset </para></listitem>
<listitem><para>RCC_FLAG_SFTRST: Software reset </para></listitem>
<listitem><para>RCC_FLAG_IWDGRST: Independent Watchdog reset </para></listitem>
<listitem><para>RCC_FLAG_WWDGRST: Window Watchdog reset </para></listitem>
<listitem><para>RCC_FLAG_LPWRRST: Low Power reset</para></listitem>
</itemizedlist>
For <bold>other_STM32_devices</bold>, this parameter can be one of the following values: <itemizedlist>
<listitem><para>RCC_FLAG_HSIRDY: HSI oscillator clock ready </para></listitem>
<listitem><para>RCC_FLAG_HSERDY: HSE oscillator clock ready </para></listitem>
<listitem><para>RCC_FLAG_PLLRDY: PLL clock ready </para></listitem>
<listitem><para>RCC_FLAG_LSERDY: LSE oscillator clock ready </para></listitem>
<listitem><para>RCC_FLAG_LSIRDY: LSI oscillator clock ready </para></listitem>
<listitem><para>RCC_FLAG_PINRST: Pin reset </para></listitem>
<listitem><para>RCC_FLAG_PORRST: POR/PDR reset </para></listitem>
<listitem><para>RCC_FLAG_SFTRST: Software reset </para></listitem>
<listitem><para>RCC_FLAG_IWDGRST: Independent Watchdog reset </para></listitem>
<listitem><para>RCC_FLAG_WWDGRST: Window Watchdog reset </para></listitem>
<listitem><para>RCC_FLAG_LPWRRST: Low Power reset</para></listitem>
</itemizedlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of RCC_FLAG (SET or RESET). </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" line="1326" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" bodystart="1326" bodyend="1362"/>
        <references refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffa589b7d94a3d91d145720e2fed0eb3a05" compoundref="stm32f10x_8h" startline="519">RESET</references>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___r_c_c___flag_1gaa27dea5bb62b26d0881e649770252158" compoundref="stm32f10x__rcc_8h" startline="608">IS_RCC_FLAG</references>
        <references refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" compoundref="stm32f10x_8h" startline="1443">RCC</references>
        <references refid="group___r_c_c___private___defines_1ga2be62bf481cd44de9ab604efe5595ff6" compoundref="stm32f10x__rcc_8c" startline="163">FLAG_Mask</references>
        <references refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffab44c8101cc294c074709ec1b14211792" compoundref="stm32f10x_8h" startline="519">SET</references>
        <referencedby refid="group___r_c_c___private___functions_1gae0f15692614dd048ee4110a056f001dc" compoundref="stm32f10x__rcc_8c" startline="304" endline="326">RCC_WaitForHSEStartUp</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___r_c_c___private___functions_1ga53f909dbb15a54124419084ebda97d72" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RCC_ClearFlag</definition>
        <argsstring>(void)</argsstring>
        <name>RCC_ClearFlag</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Clears the RCC reset flags. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>The reset flags are: RCC_FLAG_PINRST, RCC_FLAG_PORRST, RCC_FLAG_SFTRST, RCC_FLAG_IWDGRST, RCC_FLAG_WWDGRST, RCC_FLAG_LPWRRST </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" line="1371" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" bodystart="1371" bodyend="1375"/>
        <references refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" compoundref="stm32f10x_8h" startline="1443">RCC</references>
        <references refid="group___r_c_c___private___defines_1ga415e9d29487f0ef4101a9c6e4f20151f" compoundref="stm32f10x__rcc_8c" startline="149">CSR_RMVF_Set</references>
      </memberdef>
      <memberdef kind="function" id="group___r_c_c___private___functions_1ga6126c99f398ee4be410ad76ae3aee18f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___exported__types_1gaacbd7ed539db0aacd973a0f6eca34074" kindref="member">ITStatus</ref></type>
        <definition>ITStatus RCC_GetITStatus</definition>
        <argsstring>(uint8_t RCC_IT)</argsstring>
        <name>RCC_GetITStatus</name>
        <param>
          <type>uint8_t</type>
          <declname>RCC_IT</declname>
        </param>
        <briefdescription>
<para>Checks whether the specified RCC interrupt has occurred or not. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>RCC_IT</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the RCC interrupt source to check.</para></parameterdescription>
</parameteritem>
</parameterlist>
For <bold>STM32_Connectivity_line_devices</bold>, this parameter can be one of the following values: <itemizedlist>
<listitem><para>RCC_IT_LSIRDY: LSI ready interrupt </para></listitem>
<listitem><para>RCC_IT_LSERDY: LSE ready interrupt </para></listitem>
<listitem><para>RCC_IT_HSIRDY: HSI ready interrupt </para></listitem>
<listitem><para>RCC_IT_HSERDY: HSE ready interrupt </para></listitem>
<listitem><para>RCC_IT_PLLRDY: PLL ready interrupt </para></listitem>
<listitem><para>RCC_IT_PLL2RDY: PLL2 ready interrupt </para></listitem>
<listitem><para>RCC_IT_PLL3RDY: PLL3 ready interrupt </para></listitem>
<listitem><para>RCC_IT_CSS: Clock Security System interrupt</para></listitem>
</itemizedlist>
For <bold>other_STM32_devices</bold>, this parameter can be one of the following values: <itemizedlist>
<listitem><para>RCC_IT_LSIRDY: LSI ready interrupt </para></listitem>
<listitem><para>RCC_IT_LSERDY: LSE ready interrupt </para></listitem>
<listitem><para>RCC_IT_HSIRDY: HSI ready interrupt </para></listitem>
<listitem><para>RCC_IT_HSERDY: HSE ready interrupt </para></listitem>
<listitem><para>RCC_IT_PLLRDY: PLL ready interrupt </para></listitem>
<listitem><para>RCC_IT_CSS: Clock Security System interrupt</para></listitem>
</itemizedlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of RCC_IT (SET or RESET). </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" line="1402" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" bodystart="1402" bodyend="1420"/>
        <references refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffa589b7d94a3d91d145720e2fed0eb3a05" compoundref="stm32f10x_8h" startline="519">RESET</references>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___r_c_c___interrupt__source_1ga7a1b771d6d9c2d8346ab58a1f046f6a6" compoundref="stm32f10x__rcc_8h" startline="350">IS_RCC_GET_IT</references>
        <references refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" compoundref="stm32f10x_8h" startline="1443">RCC</references>
        <references refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffab44c8101cc294c074709ec1b14211792" compoundref="stm32f10x_8h" startline="519">SET</references>
      </memberdef>
      <memberdef kind="function" id="group___r_c_c___private___functions_1ga529842d165910f8f87e26115da36089b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RCC_ClearITPendingBit</definition>
        <argsstring>(uint8_t RCC_IT)</argsstring>
        <name>RCC_ClearITPendingBit</name>
        <param>
          <type>uint8_t</type>
          <declname>RCC_IT</declname>
        </param>
        <briefdescription>
<para>Clears the RCC&apos;s interrupt pending bits. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>RCC_IT</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the interrupt pending bit to clear.</para></parameterdescription>
</parameteritem>
</parameterlist>
For <bold>STM32_Connectivity_line_devices</bold>, this parameter can be any combination of the following values: <itemizedlist>
<listitem><para>RCC_IT_LSIRDY: LSI ready interrupt </para></listitem>
<listitem><para>RCC_IT_LSERDY: LSE ready interrupt </para></listitem>
<listitem><para>RCC_IT_HSIRDY: HSI ready interrupt </para></listitem>
<listitem><para>RCC_IT_HSERDY: HSE ready interrupt </para></listitem>
<listitem><para>RCC_IT_PLLRDY: PLL ready interrupt </para></listitem>
<listitem><para>RCC_IT_PLL2RDY: PLL2 ready interrupt </para></listitem>
<listitem><para>RCC_IT_PLL3RDY: PLL3 ready interrupt </para></listitem>
<listitem><para>RCC_IT_CSS: Clock Security System interrupt</para></listitem>
</itemizedlist>
For <bold>other_STM32_devices</bold>, this parameter can be any combination of the following values: <itemizedlist>
<listitem><para>RCC_IT_LSIRDY: LSI ready interrupt </para></listitem>
<listitem><para>RCC_IT_LSERDY: LSE ready interrupt </para></listitem>
<listitem><para>RCC_IT_HSIRDY: HSI ready interrupt </para></listitem>
<listitem><para>RCC_IT_HSERDY: HSE ready interrupt </para></listitem>
<listitem><para>RCC_IT_PLLRDY: PLL ready interrupt</para></listitem>
</itemizedlist>
<itemizedlist>
<listitem><para>RCC_IT_CSS: Clock Security System interrupt <parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para></listitem>
</itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" line="1448" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c" bodystart="1448" bodyend="1456"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___r_c_c___interrupt__source_1ga8374741e47d696accd1a72647650ba63" compoundref="stm32f10x__rcc_8h" startline="353">IS_RCC_CLEAR_IT</references>
        <references refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" compoundref="core__cm0_8h" startline="221">__IO</references>
        <references refid="group___r_c_c___private___defines_1ga43f47430582c9575970901533e525bb5" compoundref="stm32f10x__rcc_8c" startline="169">CIR_BYTE3_ADDRESS</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This file provides all the RCC firmware functions. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>MCD Application Team </para></simplesect>
<simplesect kind="version"><para>V3.5.0 </para></simplesect>
<simplesect kind="date"><para>11-March-2011 </para></simplesect>
<simplesect kind="attention"><para></para></simplesect>
THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.</para><para><heading level="2"><center><copy/> COPYRIGHT 2011 STMicroelectronics</center></heading>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="22"><highlight class="comment">/*<sp/>Includes<sp/>------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="stm32f10x__rcc_8h" kindref="compound">stm32f10x_rcc.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="comment">/*<sp/>------------<sp/>RCC<sp/>registers<sp/>bit<sp/>address<sp/>in<sp/>the<sp/>alias<sp/>region<sp/>-----------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="group___r_c_c___private___defines_1ga539e07c3b3c55f1f1d47231341fb11e1" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RCC_OFFSET<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(RCC_BASE<sp/>-<sp/>PERIPH_BASE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>---<sp/>CR<sp/>Register<sp/>---*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Alias<sp/>word<sp/>address<sp/>of<sp/>HSION<sp/>bit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="group___r_c_c___private___defines_1gafa1d3d0ea72132df651c76fc1bdffffc" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CR_OFFSET<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(RCC_OFFSET<sp/>+<sp/>0x00)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="group___r_c_c___private___defines_1ga3d3085e491cbef815d223afbe5bf1930" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HSION_BitNumber<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="group___r_c_c___private___defines_1gac3290a833c0e35ec17d32c2d494e6133" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CR_HSION_BB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(PERIPH_BB_BASE<sp/>+<sp/>(CR_OFFSET<sp/>*<sp/>32)<sp/>+<sp/>(HSION_BitNumber<sp/>*<sp/>4))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Alias<sp/>word<sp/>address<sp/>of<sp/>PLLON<sp/>bit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="group___r_c_c___private___defines_1gab24d7f5f8e4b3b717fd91b54f393f6a3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PLLON_BitNumber<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x18</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="group___r_c_c___private___defines_1ga3f1fb2589cb8b5ac2f7121aba1135a5f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CR_PLLON_BB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(PERIPH_BB_BASE<sp/>+<sp/>(CR_OFFSET<sp/>*<sp/>32)<sp/>+<sp/>(PLLON_BitNumber<sp/>*<sp/>4))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>STM32F10X_CL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>Alias<sp/>word<sp/>address<sp/>of<sp/>PLL2ON<sp/>bit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#define<sp/>PLL2ON_BitNumber<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x1A</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#define<sp/>CR_PLL2ON_BB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(PERIPH_BB_BASE<sp/>+<sp/>(CR_OFFSET<sp/>*<sp/>32)<sp/>+<sp/>(PLL2ON_BitNumber<sp/>*<sp/>4))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>Alias<sp/>word<sp/>address<sp/>of<sp/>PLL3ON<sp/>bit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#define<sp/>PLL3ON_BitNumber<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x1C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#define<sp/>CR_PLL3ON_BB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(PERIPH_BB_BASE<sp/>+<sp/>(CR_OFFSET<sp/>*<sp/>32)<sp/>+<sp/>(PLL3ON_BitNumber<sp/>*<sp/>4))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>STM32F10X_CL<sp/>*/</highlight><highlight class="preprocessor"><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Alias<sp/>word<sp/>address<sp/>of<sp/>CSSON<sp/>bit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="group___r_c_c___private___defines_1ga253fa44d87aabc55f0cd6628e77a51fd" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CSSON_BitNumber<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x13</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="group___r_c_c___private___defines_1gaca914aed10477ae4090fea0a9639b1ea" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CR_CSSON_BB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(PERIPH_BB_BASE<sp/>+<sp/>(CR_OFFSET<sp/>*<sp/>32)<sp/>+<sp/>(CSSON_BitNumber<sp/>*<sp/>4))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>---<sp/>CFGR<sp/>Register<sp/>---*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Alias<sp/>word<sp/>address<sp/>of<sp/>USBPRE<sp/>bit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="group___r_c_c___private___defines_1ga8682298330c3b9bae1992e4f1a0af985" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CFGR_OFFSET<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(RCC_OFFSET<sp/>+<sp/>0x04)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>STM32F10X_CL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="group___r_c_c___private___defines_1gad758d602b6d2b93a04cb8ada87c20c82" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#define<sp/>USBPRE_BitNumber<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="group___r_c_c___private___defines_1gabde4e60349b8412a79611c0aeb27c3a2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#define<sp/>CFGR_USBPRE_BB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(PERIPH_BB_BASE<sp/>+<sp/>(CFGR_OFFSET<sp/>*<sp/>32)<sp/>+<sp/>(USBPRE_BitNumber<sp/>*<sp/>4))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#define<sp/>OTGFSPRE_BitNumber<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#define<sp/>CFGR_OTGFSPRE_BB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(PERIPH_BB_BASE<sp/>+<sp/>(CFGR_OFFSET<sp/>*<sp/>32)<sp/>+<sp/>(OTGFSPRE_BitNumber<sp/>*<sp/>4))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>STM32F10X_CL<sp/>*/</highlight><highlight class="preprocessor"><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>---<sp/>BDCR<sp/>Register<sp/>---*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Alias<sp/>word<sp/>address<sp/>of<sp/>RTCEN<sp/>bit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="group___r_c_c___private___defines_1ga5f8a0c3cb5f5c835bf7eef09515138ad" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BDCR_OFFSET<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(RCC_OFFSET<sp/>+<sp/>0x20)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="group___r_c_c___private___defines_1ga9302c551752124766afc4cee65436405" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RTCEN_BitNumber<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x0F</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="group___r_c_c___private___defines_1gaf70aaf70b0752ccb3a60307b2fb46038" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BDCR_RTCEN_BB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(PERIPH_BB_BASE<sp/>+<sp/>(BDCR_OFFSET<sp/>*<sp/>32)<sp/>+<sp/>(RTCEN_BitNumber<sp/>*<sp/>4))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Alias<sp/>word<sp/>address<sp/>of<sp/>BDRST<sp/>bit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95" refid="group___r_c_c___private___defines_1gae6718158034388d8fde8caaa28ffe8b9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BDRST_BitNumber<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="group___r_c_c___private___defines_1ga892fdf297b85b85cbaf0723649b31818" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BDCR_BDRST_BB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(PERIPH_BB_BASE<sp/>+<sp/>(BDCR_OFFSET<sp/>*<sp/>32)<sp/>+<sp/>(BDRST_BitNumber<sp/>*<sp/>4))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>---<sp/>CSR<sp/>Register<sp/>---*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Alias<sp/>word<sp/>address<sp/>of<sp/>LSION<sp/>bit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101" refid="group___r_c_c___private___defines_1ga984cbe73312b6d3d355c5053763d499a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CSR_OFFSET<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(RCC_OFFSET<sp/>+<sp/>0x24)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102" refid="group___r_c_c___private___defines_1ga3f9dbe50769ce2a63ae12520433b9b40" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LSION_BitNumber<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103" refid="group___r_c_c___private___defines_1gaa253e36e7e5fb02998c0e4d0388abc52" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CSR_LSION_BB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(PERIPH_BB_BASE<sp/>+<sp/>(CSR_OFFSET<sp/>*<sp/>32)<sp/>+<sp/>(LSION_BitNumber<sp/>*<sp/>4))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>STM32F10X_CL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>---<sp/>CFGR2<sp/>Register<sp/>---*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>Alias<sp/>word<sp/>address<sp/>of<sp/>I2S2SRC<sp/>bit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#define<sp/>CFGR2_OFFSET<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(RCC_OFFSET<sp/>+<sp/>0x2C)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#define<sp/>I2S2SRC_BitNumber<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x11</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#define<sp/>CFGR2_I2S2SRC_BB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(PERIPH_BB_BASE<sp/>+<sp/>(CFGR2_OFFSET<sp/>*<sp/>32)<sp/>+<sp/>(I2S2SRC_BitNumber<sp/>*<sp/>4))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>Alias<sp/>word<sp/>address<sp/>of<sp/>I2S3SRC<sp/>bit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#define<sp/>I2S3SRC_BitNumber<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x12</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#define<sp/>CFGR2_I2S3SRC_BB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(PERIPH_BB_BASE<sp/>+<sp/>(CFGR2_OFFSET<sp/>*<sp/>32)<sp/>+<sp/>(I2S3SRC_BitNumber<sp/>*<sp/>4))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>STM32F10X_CL<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>----------------------<sp/>RCC<sp/>registers<sp/>bit<sp/>mask<sp/>------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>CR<sp/>register<sp/>bit<sp/>mask<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121" refid="group___r_c_c___private___defines_1ga98f5ef520febdb0a1cd8f407f8e5e62f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CR_HSEBYP_Reset<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0xFFFBFFFF)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122" refid="group___r_c_c___private___defines_1ga84972845ff646ce1d3902d54dd7b9bc6" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CR_HSEBYP_Set<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00040000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123" refid="group___r_c_c___private___defines_1ga8185e6ea6e9abafcdee0e5f58e62805e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CR_HSEON_Reset<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0xFFFEFFFF)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124" refid="group___r_c_c___private___defines_1gaca6ef9e2f11b921355809a5eccfec864" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CR_HSEON_Set<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00010000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125" refid="group___r_c_c___private___defines_1gac6a6adccdfb5a34541e2cdf01daf98ce" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CR_HSITRIM_Mask<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0xFFFFFF07)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>CFGR<sp/>register<sp/>bit<sp/>mask<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>(STM32F10X_LD_VL)<sp/>||<sp/>defined<sp/>(STM32F10X_MD_VL)<sp/>||<sp/>defined<sp/>(STM32F10X_HD_VL)<sp/>||<sp/>defined<sp/>(STM32F10X_CL)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#define<sp/>CFGR_PLL_Mask<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0xFFC2FFFF)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131" refid="group___r_c_c___private___defines_1gaea605b2eaea5332218130fc2d20d917c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#define<sp/>CFGR_PLL_Mask<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0xFFC0FFFF)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>STM32F10X_CL<sp/>*/</highlight><highlight class="preprocessor"><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134" refid="group___r_c_c___private___defines_1ga26ac4de307d4c081867dc0344f54c17a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CFGR_PLLMull_Mask<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x003C0000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135" refid="group___r_c_c___private___defines_1ga8fd33db1092dfc565314b7bf395bba23" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CFGR_PLLSRC_Mask<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00010000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136" refid="group___r_c_c___private___defines_1ga025835ddeb698b8c119ddf355b2fbded" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CFGR_PLLXTPRE_Mask<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00020000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137" refid="group___r_c_c___private___defines_1gaefba904c88a72c7e2c12e8fcef38300a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CFGR_SWS_Mask<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x0000000C)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138" refid="group___r_c_c___private___defines_1ga41e0b286664f76c2057cffb134809c51" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CFGR_SW_Mask<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0xFFFFFFFC)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139" refid="group___r_c_c___private___defines_1ga55937d93be56562243d92c507145112c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CFGR_HPRE_Reset_Mask<sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0xFFFFFF0F)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140" refid="group___r_c_c___private___defines_1gaca06c6cc484e08423a56cfca6928b9ae" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CFGR_HPRE_Set_Mask<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x000000F0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141" refid="group___r_c_c___private___defines_1gab02d8032f451eb5a1d139007ff57f22e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CFGR_PPRE1_Reset_Mask<sp/><sp/><sp/><sp/><sp/>((uint32_t)0xFFFFF8FF)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142" refid="group___r_c_c___private___defines_1ga74838e1873c5e4c46eef61a81b1bd2c5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CFGR_PPRE1_Set_Mask<sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000700)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143" refid="group___r_c_c___private___defines_1gab2ee73d52f48cb201e493e381928d1ae" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CFGR_PPRE2_Reset_Mask<sp/><sp/><sp/><sp/><sp/>((uint32_t)0xFFFFC7FF)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144" refid="group___r_c_c___private___defines_1ga63883951c986cf6dc1d6a8775f821af7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CFGR_PPRE2_Set_Mask<sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00003800)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145" refid="group___r_c_c___private___defines_1ga12eb3f1b37b9101bf3810374bad68703" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CFGR_ADCPRE_Reset_Mask<sp/><sp/><sp/><sp/>((uint32_t)0xFFFF3FFF)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146" refid="group___r_c_c___private___defines_1gaead9b35ba6e98274613c28d24bd228cc" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CFGR_ADCPRE_Set_Mask<sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x0000C000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>CSR<sp/>register<sp/>bit<sp/>mask<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149" refid="group___r_c_c___private___defines_1ga415e9d29487f0ef4101a9c6e4f20151f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CSR_RMVF_Set<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x01000000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>(STM32F10X_LD_VL)<sp/>||<sp/>defined<sp/>(STM32F10X_MD_VL)<sp/>||<sp/>defined<sp/>(STM32F10X_HD_VL)<sp/>||<sp/>defined<sp/>(STM32F10X_CL)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>CFGR2<sp/>register<sp/>bit<sp/>mask<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#define<sp/>CFGR2_PREDIV1SRC<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00010000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#define<sp/>CFGR2_PREDIV1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x0000000F)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>STM32F10X_CL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#define<sp/>CFGR2_PREDIV2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x000000F0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#define<sp/>CFGR2_PLL2MUL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000F00)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#define<sp/>CFGR2_PLL3MUL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x0000F000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>STM32F10X_CL<sp/>*/</highlight><highlight class="preprocessor"><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>RCC<sp/>Flag<sp/>Mask<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163" refid="group___r_c_c___private___defines_1ga2be62bf481cd44de9ab604efe5595ff6" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FLAG_Mask<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)0x1F)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>CIR<sp/>register<sp/>byte<sp/>2<sp/>(Bits[15:8])<sp/>base<sp/>address<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166" refid="group___r_c_c___private___defines_1gaab58c3f3f81bf1ab9a14cf3fececd8c4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CIR_BYTE2_ADDRESS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x40021009)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>CIR<sp/>register<sp/>byte<sp/>3<sp/>(Bits[23:16])<sp/>base<sp/>address<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169" refid="group___r_c_c___private___defines_1ga43f47430582c9575970901533e525bb5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CIR_BYTE3_ADDRESS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x4002100A)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>CFGR<sp/>register<sp/>byte<sp/>4<sp/>(Bits[31:24])<sp/>base<sp/>address<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172" refid="group___r_c_c___private___defines_1ga5fea86b59ec4be059d922db57cca3b3f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CFGR_BYTE4_ADDRESS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x40021007)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>BDCR<sp/>register<sp/>base<sp/>address<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175" refid="group___r_c_c___private___defines_1ga40b5a415d697b6af7babd8a208c92435" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BDCR_ADDRESS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(PERIPH_BASE<sp/>+<sp/>BDCR_OFFSET)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="core__cm0_8h_1af63697ed9952cc71e1225efe205f6cd3" kindref="member">__I</ref><sp/>uint8_t<sp/>APBAHBPrescTable[16]<sp/>=<sp/>{0,<sp/>0,<sp/>0,<sp/>0,<sp/>1,<sp/>2,<sp/>3,<sp/>4,<sp/>1,<sp/>2,<sp/>3,<sp/>4,<sp/>6,<sp/>7,<sp/>8,<sp/>9};</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="core__cm0_8h_1af63697ed9952cc71e1225efe205f6cd3" kindref="member">__I</ref><sp/>uint8_t<sp/>ADCPrescTable[4]<sp/>=<sp/>{2,<sp/>4,<sp/>6,<sp/>8};</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="217" refid="group___r_c_c___private___functions_1ga413f6422be11b1334abe60b3bff2e062" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___r_c_c___private___functions_1ga413f6422be11b1334abe60b3bff2e062" kindref="member">RCC_DeInit</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="218"><highlight class="normal">{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>HSION<sp/>bit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CR<sp/>|=<sp/>(uint32_t)0x00000001;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>SW,<sp/>HPRE,<sp/>PPRE1,<sp/>PPRE2,<sp/>ADCPRE<sp/>and<sp/>MCO<sp/>bits<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>STM32F10X_CL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR<sp/>&amp;=<sp/>(uint32_t)0xF8FF0000;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR<sp/>&amp;=<sp/>(uint32_t)0xF0FF0000;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>STM32F10X_CL<sp/>*/</highlight><highlight class="preprocessor"><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>HSEON,<sp/>CSSON<sp/>and<sp/>PLLON<sp/>bits<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CR<sp/>&amp;=<sp/>(uint32_t)0xFEF6FFFF;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>HSEBYP<sp/>bit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CR<sp/>&amp;=<sp/>(uint32_t)0xFFFBFFFF;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>PLLSRC,<sp/>PLLXTPRE,<sp/>PLLMUL<sp/>and<sp/>USBPRE/OTGFSPRE<sp/>bits<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR<sp/>&amp;=<sp/>(uint32_t)0xFF80FFFF;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>STM32F10X_CL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>PLL2ON<sp/>and<sp/>PLL3ON<sp/>bits<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CR<sp/>&amp;=<sp/>(uint32_t)0xEBFFFFFF;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Disable<sp/>all<sp/>interrupts<sp/>and<sp/>clear<sp/>pending<sp/>bits<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CIR<sp/>=<sp/>0x00FF0000;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>CFGR2<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR2<sp/>=<sp/>0x00000000;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined<sp/>(STM32F10X_LD_VL)<sp/>||<sp/>defined<sp/>(STM32F10X_MD_VL)<sp/>||<sp/>defined<sp/>(STM32F10X_HD_VL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Disable<sp/>all<sp/>interrupts<sp/>and<sp/>clear<sp/>pending<sp/>bits<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CIR<sp/>=<sp/>0x009F0000;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>CFGR2<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR2<sp/>=<sp/>0x00000000;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Disable<sp/>all<sp/>interrupts<sp/>and<sp/>clear<sp/>pending<sp/>bits<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CIR<sp/>=<sp/>0x009F0000;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>STM32F10X_CL<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal">}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="270" refid="group___r_c_c___private___functions_1ga432b3281546d23345642d55f8670a93d" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___r_c_c___private___functions_1ga432b3281546d23345642d55f8670a93d" kindref="member">RCC_HSEConfig</ref>(uint32_t<sp/>RCC_HSE)</highlight></codeline>
<codeline lineno="271"><highlight class="normal">{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___h_s_e__configuration_1ga287bbcafd73d07ec915c2f793301908a" kindref="member">IS_RCC_HSE</ref>(RCC_HSE));</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>HSEON<sp/>and<sp/>HSEBYP<sp/>bits<sp/>before<sp/>configuring<sp/>the<sp/>HSE<sp/>------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>HSEON<sp/>bit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CR<sp/>&amp;=<sp/><ref refid="group___r_c_c___private___defines_1ga8185e6ea6e9abafcdee0e5f58e62805e" kindref="member">CR_HSEON_Reset</ref>;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>HSEBYP<sp/>bit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CR<sp/>&amp;=<sp/><ref refid="group___r_c_c___private___defines_1ga98f5ef520febdb0a1cd8f407f8e5e62f" kindref="member">CR_HSEBYP_Reset</ref>;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Configure<sp/>HSE<sp/>(RCC_HSE_OFF<sp/>is<sp/>already<sp/>covered<sp/>by<sp/>the<sp/>code<sp/>section<sp/>above)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(RCC_HSE)</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group___h_s_e__configuration_1gabc4f70a44776c557af20496b04d9a9db" kindref="member">RCC_HSE_ON</ref>:</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>HSEON<sp/>bit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CR<sp/>|=<sp/><ref refid="group___r_c_c___private___defines_1gaca6ef9e2f11b921355809a5eccfec864" kindref="member">CR_HSEON_Set</ref>;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group___h_s_e__configuration_1ga09061e9909d5f588baa7bfb0f7edd9fa" kindref="member">RCC_HSE_Bypass</ref>:</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>HSEBYP<sp/>and<sp/>HSEON<sp/>bits<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CR<sp/>|=<sp/><ref refid="group___r_c_c___private___defines_1ga84972845ff646ce1d3902d54dd7b9bc6" kindref="member">CR_HSEBYP_Set</ref><sp/>|<sp/><ref refid="group___r_c_c___private___defines_1gaca6ef9e2f11b921355809a5eccfec864" kindref="member">CR_HSEON_Set</ref>;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="295"><highlight class="normal">}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="304" refid="group___r_c_c___private___functions_1gae0f15692614dd048ee4110a056f001dc" refkind="member"><highlight class="normal"><ref refid="group___exported__types_1ga8333b96c67f83cba354b3407fcbb6ee8" kindref="member">ErrorStatus</ref><sp/><ref refid="group___r_c_c___private___functions_1gae0f15692614dd048ee4110a056f001dc" kindref="member">RCC_WaitForHSEStartUp</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="305"><highlight class="normal">{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><ref refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" kindref="member">__IO</ref><sp/>uint32_t<sp/>StartUpCounter<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><ref refid="group___exported__types_1ga8333b96c67f83cba354b3407fcbb6ee8" kindref="member">ErrorStatus</ref><sp/>status<sp/>=<sp/><ref refid="group___exported__types_1gga8333b96c67f83cba354b3407fcbb6ee8a2fd6f336d08340583bd620a7f5694c90" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><ref refid="group___exported__types_1ga89136caac2e14c55151f527ac02daaff" kindref="member">FlagStatus</ref><sp/>HSEStatus<sp/>=<sp/><ref refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffa589b7d94a3d91d145720e2fed0eb3a05" kindref="member">RESET</ref>;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Wait<sp/>till<sp/>HSE<sp/>is<sp/>ready<sp/>and<sp/>if<sp/>Time<sp/>out<sp/>is<sp/>reached<sp/>exit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>HSEStatus<sp/>=<sp/><ref refid="group___r_c_c___private___functions_1ga2897bdc52f272031c44fb1f72205d295" kindref="member">RCC_GetFlagStatus</ref>(<ref refid="group___r_c_c___flag_1ga173edf47bec93cf269a0e8d0fec9997c" kindref="member">RCC_FLAG_HSERDY</ref>);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>StartUpCounter++;<sp/><sp/></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">((StartUpCounter<sp/>!=<sp/><ref refid="group___library__configuration__section_1ga68ecbc9b0a1a40a1ec9d18d5e9747c4f" kindref="member">HSE_STARTUP_TIMEOUT</ref>)<sp/>&amp;&amp;<sp/>(HSEStatus<sp/>==<sp/><ref refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffa589b7d94a3d91d145720e2fed0eb3a05" kindref="member">RESET</ref>));</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group___r_c_c___private___functions_1ga2897bdc52f272031c44fb1f72205d295" kindref="member">RCC_GetFlagStatus</ref>(<ref refid="group___r_c_c___flag_1ga173edf47bec93cf269a0e8d0fec9997c" kindref="member">RCC_FLAG_HSERDY</ref>)<sp/>!=<sp/><ref refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffa589b7d94a3d91d145720e2fed0eb3a05" kindref="member">RESET</ref>)</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group___exported__types_1gga8333b96c67f83cba354b3407fcbb6ee8ac7f69f7c9e5aea9b8f54cf02870e2bf8" kindref="member">SUCCESS</ref>;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group___exported__types_1gga8333b96c67f83cba354b3407fcbb6ee8a2fd6f336d08340583bd620a7f5694c90" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/>}<sp/><sp/></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(status);</highlight></codeline>
<codeline lineno="326"><highlight class="normal">}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="334" refid="group___r_c_c___private___functions_1gaa2d6a35f5c2e0f86317c3beb222677fc" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___r_c_c___private___functions_1gaa2d6a35f5c2e0f86317c3beb222677fc" kindref="member">RCC_AdjustHSICalibrationValue</ref>(uint8_t<sp/>HSICalibrationValue)</highlight></codeline>
<codeline lineno="335"><highlight class="normal">{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/>uint32_t<sp/>tmpreg<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___r_c_c___flag_1gafda50a08dc048f7c272bf04ec9c2c2b7" kindref="member">IS_RCC_CALIBRATION_VALUE</ref>(HSICalibrationValue));</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/>tmpreg<sp/>=<sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CR;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Clear<sp/>HSITRIM[4:0]<sp/>bits<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/>tmpreg<sp/>&amp;=<sp/><ref refid="group___r_c_c___private___defines_1gac6a6adccdfb5a34541e2cdf01daf98ce" kindref="member">CR_HSITRIM_Mask</ref>;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>the<sp/>HSITRIM[4:0]<sp/>bits<sp/>according<sp/>to<sp/>HSICalibrationValue<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/>tmpreg<sp/>|=<sp/>(uint32_t)HSICalibrationValue<sp/>&lt;&lt;<sp/>3;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Store<sp/>the<sp/>new<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CR<sp/>=<sp/>tmpreg;</highlight></codeline>
<codeline lineno="346"><highlight class="normal">}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="354" refid="group___r_c_c___private___functions_1ga0c6772a1e43765909495f57815ef69e2" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___r_c_c___private___functions_1ga0c6772a1e43765909495f57815ef69e2" kindref="member">RCC_HSICmd</ref>(<ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref><sp/>NewState)</highlight></codeline>
<codeline lineno="355"><highlight class="normal">{</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" kindref="member">IS_FUNCTIONAL_STATE</ref>(NewState));</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/>*(<ref refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" kindref="member">__IO</ref><sp/>uint32_t<sp/>*)<sp/><ref refid="group___r_c_c___private___defines_1gac3290a833c0e35ec17d32c2d494e6133" kindref="member">CR_HSION_BB</ref><sp/>=<sp/>(uint32_t)NewState;</highlight></codeline>
<codeline lineno="359"><highlight class="normal">}</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="378" refid="group___r_c_c___private___functions_1ga0f67634cbe721f2c42f022d2a93229c8" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___r_c_c___private___functions_1ga0f67634cbe721f2c42f022d2a93229c8" kindref="member">RCC_PLLConfig</ref>(uint32_t<sp/>RCC_PLLSource,<sp/>uint32_t<sp/>RCC_PLLMul)</highlight></codeline>
<codeline lineno="379"><highlight class="normal">{</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/>uint32_t<sp/>tmpreg<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___p_l_l__entry__clock__source_1ga8a8a84a16989bb4e5aca1af65ccf9a1b" kindref="member">IS_RCC_PLL_SOURCE</ref>(RCC_PLLSource));</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___p_l_l__multiplication__factor_1gaad04edea77632618678f528dcb2b0cd5" kindref="member">IS_RCC_PLL_MUL</ref>(RCC_PLLMul));</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/>tmpreg<sp/>=<sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Clear<sp/>PLLSRC,<sp/>PLLXTPRE<sp/>and<sp/>PLLMUL[3:0]<sp/>bits<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/>tmpreg<sp/>&amp;=<sp/><ref refid="group___r_c_c___private___defines_1gaea605b2eaea5332218130fc2d20d917c" kindref="member">CFGR_PLL_Mask</ref>;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>the<sp/>PLL<sp/>configuration<sp/>bits<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/>tmpreg<sp/>|=<sp/>RCC_PLLSource<sp/>|<sp/>RCC_PLLMul;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Store<sp/>the<sp/>new<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR<sp/>=<sp/>tmpreg;</highlight></codeline>
<codeline lineno="393"><highlight class="normal">}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="401" refid="group___r_c_c___private___functions_1ga84dee53c75e58fdb53571716593c2272" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___r_c_c___private___functions_1ga84dee53c75e58fdb53571716593c2272" kindref="member">RCC_PLLCmd</ref>(<ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref><sp/>NewState)</highlight></codeline>
<codeline lineno="402"><highlight class="normal">{</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" kindref="member">IS_FUNCTIONAL_STATE</ref>(NewState));</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/>*(<ref refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" kindref="member">__IO</ref><sp/>uint32_t<sp/>*)<sp/><ref refid="group___r_c_c___private___defines_1ga3f1fb2589cb8b5ac2f7121aba1135a5f" kindref="member">CR_PLLON_BB</ref><sp/>=<sp/>(uint32_t)NewState;</highlight></codeline>
<codeline lineno="407"><highlight class="normal">}</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>(STM32F10X_LD_VL)<sp/>||<sp/>defined<sp/>(STM32F10X_MD_VL)<sp/>||<sp/>defined<sp/>(STM32F10X_HD_VL)<sp/>||<sp/>defined<sp/>(STM32F10X_CL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RCC_PREDIV1Config(uint32_t<sp/>RCC_PREDIV1_Source,<sp/>uint32_t<sp/>RCC_PREDIV1_Div)</highlight></codeline>
<codeline lineno="427"><highlight class="normal">{</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/>uint32_t<sp/>tmpreg<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(IS_RCC_PREDIV1_SOURCE(RCC_PREDIV1_Source));</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(IS_RCC_PREDIV1(RCC_PREDIV1_Div));</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/>tmpreg<sp/>=<sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR2;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Clear<sp/>PREDIV1[3:0]<sp/>and<sp/>PREDIV1SRC<sp/>bits<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/>tmpreg<sp/>&amp;=<sp/>~(CFGR2_PREDIV1<sp/>|<sp/>CFGR2_PREDIV1SRC);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>the<sp/>PREDIV1<sp/>clock<sp/>source<sp/>and<sp/>division<sp/>factor<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/>tmpreg<sp/>|=<sp/>RCC_PREDIV1_Source<sp/>|<sp/>RCC_PREDIV1_Div<sp/>;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Store<sp/>the<sp/>new<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR2<sp/>=<sp/>tmpreg;</highlight></codeline>
<codeline lineno="441"><highlight class="normal">}</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>STM32F10X_CL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RCC_PREDIV2Config(uint32_t<sp/>RCC_PREDIV2_Div)</highlight></codeline>
<codeline lineno="455"><highlight class="normal">{</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/>uint32_t<sp/>tmpreg<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(IS_RCC_PREDIV2(RCC_PREDIV2_Div));</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/>tmpreg<sp/>=<sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR2;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Clear<sp/>PREDIV2[3:0]<sp/>bits<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/>tmpreg<sp/>&amp;=<sp/>~CFGR2_PREDIV2;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>the<sp/>PREDIV2<sp/>division<sp/>factor<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/>tmpreg<sp/>|=<sp/>RCC_PREDIV2_Div;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Store<sp/>the<sp/>new<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR2<sp/>=<sp/>tmpreg;</highlight></codeline>
<codeline lineno="468"><highlight class="normal">}</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RCC_PLL2Config(uint32_t<sp/>RCC_PLL2Mul)</highlight></codeline>
<codeline lineno="480"><highlight class="normal">{</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/>uint32_t<sp/>tmpreg<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(IS_RCC_PLL2_MUL(RCC_PLL2Mul));</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/>tmpreg<sp/>=<sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR2;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Clear<sp/>PLL2Mul[3:0]<sp/>bits<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/>tmpreg<sp/>&amp;=<sp/>~CFGR2_PLL2MUL;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>the<sp/>PLL2<sp/>configuration<sp/>bits<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/>tmpreg<sp/>|=<sp/>RCC_PLL2Mul;</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Store<sp/>the<sp/>new<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR2<sp/>=<sp/>tmpreg;</highlight></codeline>
<codeline lineno="493"><highlight class="normal">}</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RCC_PLL2Cmd(<ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref><sp/>NewState)</highlight></codeline>
<codeline lineno="506"><highlight class="normal">{</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" kindref="member">IS_FUNCTIONAL_STATE</ref>(NewState));</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/>*(<ref refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" kindref="member">__IO</ref><sp/>uint32_t<sp/>*)<sp/>CR_PLL2ON_BB<sp/>=<sp/>(uint32_t)NewState;</highlight></codeline>
<codeline lineno="511"><highlight class="normal">}</highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RCC_PLL3Config(uint32_t<sp/>RCC_PLL3Mul)</highlight></codeline>
<codeline lineno="524"><highlight class="normal">{</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/>uint32_t<sp/>tmpreg<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(IS_RCC_PLL3_MUL(RCC_PLL3Mul));</highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/>tmpreg<sp/>=<sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR2;</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Clear<sp/>PLL3Mul[3:0]<sp/>bits<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/>tmpreg<sp/>&amp;=<sp/>~CFGR2_PLL3MUL;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>the<sp/>PLL3<sp/>configuration<sp/>bits<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/>tmpreg<sp/>|=<sp/>RCC_PLL3Mul;</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Store<sp/>the<sp/>new<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR2<sp/>=<sp/>tmpreg;</highlight></codeline>
<codeline lineno="537"><highlight class="normal">}</highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RCC_PLL3Cmd(<ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref><sp/>NewState)</highlight></codeline>
<codeline lineno="547"><highlight class="normal">{</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" kindref="member">IS_FUNCTIONAL_STATE</ref>(NewState));</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/>*(<ref refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" kindref="member">__IO</ref><sp/>uint32_t<sp/>*)<sp/>CR_PLL3ON_BB<sp/>=<sp/>(uint32_t)NewState;</highlight></codeline>
<codeline lineno="552"><highlight class="normal">}</highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>STM32F10X_CL<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="564" refid="group___r_c_c___private___functions_1ga3551a36a8f0a3dc96a74d6b939048337" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___r_c_c___private___functions_1ga3551a36a8f0a3dc96a74d6b939048337" kindref="member">RCC_SYSCLKConfig</ref>(uint32_t<sp/>RCC_SYSCLKSource)</highlight></codeline>
<codeline lineno="565"><highlight class="normal">{</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/>uint32_t<sp/>tmpreg<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___system__clock__source_1gaae9d6172a72b0a90cb3703aa59258c57" kindref="member">IS_RCC_SYSCLK_SOURCE</ref>(RCC_SYSCLKSource));</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/>tmpreg<sp/>=<sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR;</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Clear<sp/>SW[1:0]<sp/>bits<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/>tmpreg<sp/>&amp;=<sp/><ref refid="group___r_c_c___private___defines_1ga41e0b286664f76c2057cffb134809c51" kindref="member">CFGR_SW_Mask</ref>;</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>SW[1:0]<sp/>bits<sp/>according<sp/>to<sp/>RCC_SYSCLKSource<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/>tmpreg<sp/>|=<sp/>RCC_SYSCLKSource;</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Store<sp/>the<sp/>new<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR<sp/>=<sp/>tmpreg;</highlight></codeline>
<codeline lineno="576"><highlight class="normal">}</highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight></codeline>
<codeline lineno="587" refid="group___r_c_c___private___functions_1gaaeb32311c208b2a980841c9c884a41ea" refkind="member"><highlight class="normal">uint8_t<sp/><ref refid="group___r_c_c___private___functions_1gaaeb32311c208b2a980841c9c884a41ea" kindref="member">RCC_GetSYSCLKSource</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="588"><highlight class="normal">{</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((uint8_t)(<ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR<sp/>&amp;<sp/><ref refid="group___r_c_c___private___defines_1gaefba904c88a72c7e2c12e8fcef38300a" kindref="member">CFGR_SWS_Mask</ref>));</highlight></codeline>
<codeline lineno="590"><highlight class="normal">}</highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight></codeline>
<codeline lineno="608" refid="group___r_c_c___private___functions_1ga9d0aec72e236c6cdf3a3a82dfb525491" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___r_c_c___private___functions_1ga9d0aec72e236c6cdf3a3a82dfb525491" kindref="member">RCC_HCLKConfig</ref>(uint32_t<sp/>RCC_SYSCLK)</highlight></codeline>
<codeline lineno="609"><highlight class="normal">{</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/>uint32_t<sp/>tmpreg<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___a_h_b__clock__source_1ga6e9f1c193a2f41bcb3c2f7fa8459b5b3" kindref="member">IS_RCC_HCLK</ref>(RCC_SYSCLK));</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/>tmpreg<sp/>=<sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR;</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Clear<sp/>HPRE[3:0]<sp/>bits<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/>tmpreg<sp/>&amp;=<sp/><ref refid="group___r_c_c___private___defines_1ga55937d93be56562243d92c507145112c" kindref="member">CFGR_HPRE_Reset_Mask</ref>;</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>HPRE[3:0]<sp/>bits<sp/>according<sp/>to<sp/>RCC_SYSCLK<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/>tmpreg<sp/>|=<sp/>RCC_SYSCLK;</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Store<sp/>the<sp/>new<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR<sp/>=<sp/>tmpreg;</highlight></codeline>
<codeline lineno="620"><highlight class="normal">}</highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight></codeline>
<codeline lineno="634" refid="group___r_c_c___private___functions_1ga448137346d4292985d4e7a61dd1a824f" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___r_c_c___private___functions_1ga448137346d4292985d4e7a61dd1a824f" kindref="member">RCC_PCLK1Config</ref>(uint32_t<sp/>RCC_HCLK)</highlight></codeline>
<codeline lineno="635"><highlight class="normal">{</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/>uint32_t<sp/>tmpreg<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___a_p_b1___a_p_b2__clock__source_1gab70f1257ea47c1da4def8e351af4d9f2" kindref="member">IS_RCC_PCLK</ref>(RCC_HCLK));</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/>tmpreg<sp/>=<sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR;</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Clear<sp/>PPRE1[2:0]<sp/>bits<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/>tmpreg<sp/>&amp;=<sp/><ref refid="group___r_c_c___private___defines_1gab02d8032f451eb5a1d139007ff57f22e" kindref="member">CFGR_PPRE1_Reset_Mask</ref>;</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>PPRE1[2:0]<sp/>bits<sp/>according<sp/>to<sp/>RCC_HCLK<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/>tmpreg<sp/>|=<sp/>RCC_HCLK;</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Store<sp/>the<sp/>new<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR<sp/>=<sp/>tmpreg;</highlight></codeline>
<codeline lineno="646"><highlight class="normal">}</highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight></codeline>
<codeline lineno="660" refid="group___r_c_c___private___functions_1ga09f9c010a4adca9e036da42c2ca6126a" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___r_c_c___private___functions_1ga09f9c010a4adca9e036da42c2ca6126a" kindref="member">RCC_PCLK2Config</ref>(uint32_t<sp/>RCC_HCLK)</highlight></codeline>
<codeline lineno="661"><highlight class="normal">{</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/>uint32_t<sp/>tmpreg<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___a_p_b1___a_p_b2__clock__source_1gab70f1257ea47c1da4def8e351af4d9f2" kindref="member">IS_RCC_PCLK</ref>(RCC_HCLK));</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/>tmpreg<sp/>=<sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR;</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Clear<sp/>PPRE2[2:0]<sp/>bits<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/>tmpreg<sp/>&amp;=<sp/><ref refid="group___r_c_c___private___defines_1gab2ee73d52f48cb201e493e381928d1ae" kindref="member">CFGR_PPRE2_Reset_Mask</ref>;</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>PPRE2[2:0]<sp/>bits<sp/>according<sp/>to<sp/>RCC_HCLK<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/>tmpreg<sp/>|=<sp/>RCC_HCLK<sp/>&lt;&lt;<sp/>3;</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Store<sp/>the<sp/>new<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR<sp/>=<sp/>tmpreg;</highlight></codeline>
<codeline lineno="672"><highlight class="normal">}</highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight></codeline>
<codeline lineno="700" refid="group___r_c_c___private___functions_1gaa953aa226e9ce45300d535941e4dfe2f" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___r_c_c___private___functions_1gaa953aa226e9ce45300d535941e4dfe2f" kindref="member">RCC_ITConfig</ref>(uint8_t<sp/>RCC_IT,<sp/><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref><sp/>NewState)</highlight></codeline>
<codeline lineno="701"><highlight class="normal">{</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___r_c_c___interrupt__source_1ga710d72ccf88ddbec09b033c81a571a83" kindref="member">IS_RCC_IT</ref>(RCC_IT));</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" kindref="member">IS_FUNCTIONAL_STATE</ref>(NewState));</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(NewState<sp/>!=<sp/><ref refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1ad3a9df141be0ccf10389b640f492b26d" kindref="member">DISABLE</ref>)</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Perform<sp/>Byte<sp/>access<sp/>to<sp/>RCC_CIR<sp/>bits<sp/>to<sp/>enable<sp/>the<sp/>selected<sp/>interrupts<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/>*(<ref refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" kindref="member">__IO</ref><sp/>uint8_t<sp/>*)<sp/><ref refid="group___r_c_c___private___defines_1gaab58c3f3f81bf1ab9a14cf3fececd8c4" kindref="member">CIR_BYTE2_ADDRESS</ref><sp/>|=<sp/>RCC_IT;</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Perform<sp/>Byte<sp/>access<sp/>to<sp/>RCC_CIR<sp/>bits<sp/>to<sp/>disable<sp/>the<sp/>selected<sp/>interrupts<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/>*(<ref refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" kindref="member">__IO</ref><sp/>uint8_t<sp/>*)<sp/><ref refid="group___r_c_c___private___defines_1gaab58c3f3f81bf1ab9a14cf3fececd8c4" kindref="member">CIR_BYTE2_ADDRESS</ref><sp/>&amp;=<sp/>(uint8_t)~RCC_IT;</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="715"><highlight class="normal">}</highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>STM32F10X_CL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight></codeline>
<codeline lineno="728" refid="group___r_c_c___private___functions_1ga895b3ff3d143c990f1cd0146aa260081" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___r_c_c___private___functions_1ga895b3ff3d143c990f1cd0146aa260081" kindref="member">RCC_USBCLKConfig</ref>(uint32_t<sp/>RCC_USBCLKSource)</highlight></codeline>
<codeline lineno="729"><highlight class="normal">{</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___u_s_b___device__clock__source_1ga484f7834b5506d9879ed84660c894250" kindref="member">IS_RCC_USBCLK_SOURCE</ref>(RCC_USBCLKSource));</highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/>*(<ref refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" kindref="member">__IO</ref><sp/>uint32_t<sp/>*)<sp/><ref refid="group___r_c_c___private___defines_1gabde4e60349b8412a79611c0aeb27c3a2" kindref="member">CFGR_USBPRE_BB</ref><sp/>=<sp/>RCC_USBCLKSource;</highlight></codeline>
<codeline lineno="734"><highlight class="normal">}</highlight></codeline>
<codeline lineno="735"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RCC_OTGFSCLKConfig(uint32_t<sp/>RCC_OTGFSCLKSource)</highlight></codeline>
<codeline lineno="747"><highlight class="normal">{</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(IS_RCC_OTGFSCLK_SOURCE(RCC_OTGFSCLKSource));</highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/>*(<ref refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" kindref="member">__IO</ref><sp/>uint32_t<sp/>*)<sp/>CFGR_OTGFSPRE_BB<sp/>=<sp/>RCC_OTGFSCLKSource;</highlight></codeline>
<codeline lineno="752"><highlight class="normal">}</highlight></codeline>
<codeline lineno="753"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>STM32F10X_CL<sp/>*/</highlight><highlight class="preprocessor"><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"></highlight></codeline>
<codeline lineno="766" refid="group___r_c_c___private___functions_1gadda89cdb838bf49e5fa10f3f774530a4" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___r_c_c___private___functions_1gadda89cdb838bf49e5fa10f3f774530a4" kindref="member">RCC_ADCCLKConfig</ref>(uint32_t<sp/>RCC_PCLK2)</highlight></codeline>
<codeline lineno="767"><highlight class="normal">{</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/>uint32_t<sp/>tmpreg<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___a_d_c__clock__source_1ga6a9c4fb239566f0f3d44c8cc266e528b" kindref="member">IS_RCC_ADCCLK</ref>(RCC_PCLK2));</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/>tmpreg<sp/>=<sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR;</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Clear<sp/>ADCPRE[1:0]<sp/>bits<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/>tmpreg<sp/>&amp;=<sp/><ref refid="group___r_c_c___private___defines_1ga12eb3f1b37b9101bf3810374bad68703" kindref="member">CFGR_ADCPRE_Reset_Mask</ref>;</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>ADCPRE[1:0]<sp/>bits<sp/>according<sp/>to<sp/>RCC_PCLK2<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/>tmpreg<sp/>|=<sp/>RCC_PCLK2;</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Store<sp/>the<sp/>new<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR<sp/>=<sp/>tmpreg;</highlight></codeline>
<codeline lineno="778"><highlight class="normal">}</highlight></codeline>
<codeline lineno="779"><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>STM32F10X_CL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="781"><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RCC_I2S2CLKConfig(uint32_t<sp/>RCC_I2S2CLKSource)</highlight></codeline>
<codeline lineno="793"><highlight class="normal">{</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(IS_RCC_I2S2CLK_SOURCE(RCC_I2S2CLKSource));</highlight></codeline>
<codeline lineno="796"><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/>*(<ref refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" kindref="member">__IO</ref><sp/>uint32_t<sp/>*)<sp/>CFGR2_I2S2SRC_BB<sp/>=<sp/>RCC_I2S2CLKSource;</highlight></codeline>
<codeline lineno="798"><highlight class="normal">}</highlight></codeline>
<codeline lineno="799"><highlight class="normal"></highlight></codeline>
<codeline lineno="811"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RCC_I2S3CLKConfig(uint32_t<sp/>RCC_I2S3CLKSource)</highlight></codeline>
<codeline lineno="812"><highlight class="normal">{</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(IS_RCC_I2S3CLK_SOURCE(RCC_I2S3CLKSource));</highlight></codeline>
<codeline lineno="815"><highlight class="normal"></highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/>*(<ref refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" kindref="member">__IO</ref><sp/>uint32_t<sp/>*)<sp/>CFGR2_I2S3SRC_BB<sp/>=<sp/>RCC_I2S3CLKSource;</highlight></codeline>
<codeline lineno="817"><highlight class="normal">}</highlight></codeline>
<codeline lineno="818"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>STM32F10X_CL<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal"></highlight></codeline>
<codeline lineno="829" refid="group___r_c_c___private___functions_1ga65209ab5c3589b249c7d70f978735ca6" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___r_c_c___private___functions_1ga65209ab5c3589b249c7d70f978735ca6" kindref="member">RCC_LSEConfig</ref>(uint8_t<sp/>RCC_LSE)</highlight></codeline>
<codeline lineno="830"><highlight class="normal">{</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___l_s_e__configuration_1ga95d2678bf8f46e932e7cba75619a4d2c" kindref="member">IS_RCC_LSE</ref>(RCC_LSE));</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>LSEON<sp/>and<sp/>LSEBYP<sp/>bits<sp/>before<sp/>configuring<sp/>the<sp/>LSE<sp/>------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>LSEON<sp/>bit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/>*(<ref refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" kindref="member">__IO</ref><sp/>uint8_t<sp/>*)<sp/><ref refid="group___r_c_c___private___defines_1ga40b5a415d697b6af7babd8a208c92435" kindref="member">BDCR_ADDRESS</ref><sp/>=<sp/><ref refid="group___l_s_e__configuration_1ga6645c27708d0cad1a4ab61d2abb24c77" kindref="member">RCC_LSE_OFF</ref>;</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>LSEBYP<sp/>bit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/>*(<ref refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" kindref="member">__IO</ref><sp/>uint8_t<sp/>*)<sp/><ref refid="group___r_c_c___private___defines_1ga40b5a415d697b6af7babd8a208c92435" kindref="member">BDCR_ADDRESS</ref><sp/>=<sp/><ref refid="group___l_s_e__configuration_1ga6645c27708d0cad1a4ab61d2abb24c77" kindref="member">RCC_LSE_OFF</ref>;</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Configure<sp/>LSE<sp/>(RCC_LSE_OFF<sp/>is<sp/>already<sp/>covered<sp/>by<sp/>the<sp/>code<sp/>section<sp/>above)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(RCC_LSE)</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group___l_s_e__configuration_1gac981ea636c2f215e4473901e0912f55a" kindref="member">RCC_LSE_ON</ref>:</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>LSEON<sp/>bit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*(<ref refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" kindref="member">__IO</ref><sp/>uint8_t<sp/>*)<sp/><ref refid="group___r_c_c___private___defines_1ga40b5a415d697b6af7babd8a208c92435" kindref="member">BDCR_ADDRESS</ref><sp/>=<sp/><ref refid="group___l_s_e__configuration_1gac981ea636c2f215e4473901e0912f55a" kindref="member">RCC_LSE_ON</ref>;</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group___l_s_e__configuration_1gac911af00bffa1bd1b1676f582a8a88e1" kindref="member">RCC_LSE_Bypass</ref>:</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>LSEBYP<sp/>and<sp/>LSEON<sp/>bits<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*(<ref refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" kindref="member">__IO</ref><sp/>uint8_t<sp/>*)<sp/><ref refid="group___r_c_c___private___defines_1ga40b5a415d697b6af7babd8a208c92435" kindref="member">BDCR_ADDRESS</ref><sp/>=<sp/><ref refid="group___l_s_e__configuration_1gac911af00bffa1bd1b1676f582a8a88e1" kindref="member">RCC_LSE_Bypass</ref><sp/>|<sp/><ref refid="group___l_s_e__configuration_1gac981ea636c2f215e4473901e0912f55a" kindref="member">RCC_LSE_ON</ref>;</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="854"><highlight class="normal">}</highlight></codeline>
<codeline lineno="855"><highlight class="normal"></highlight></codeline>
<codeline lineno="862" refid="group___r_c_c___private___functions_1ga81e3ca29fd154ac2019bba6936d6d5ed" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___r_c_c___private___functions_1ga81e3ca29fd154ac2019bba6936d6d5ed" kindref="member">RCC_LSICmd</ref>(<ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref><sp/>NewState)</highlight></codeline>
<codeline lineno="863"><highlight class="normal">{</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" kindref="member">IS_FUNCTIONAL_STATE</ref>(NewState));</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/>*(<ref refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" kindref="member">__IO</ref><sp/>uint32_t<sp/>*)<sp/><ref refid="group___r_c_c___private___defines_1gaa253e36e7e5fb02998c0e4d0388abc52" kindref="member">CSR_LSION_BB</ref><sp/>=<sp/>(uint32_t)NewState;</highlight></codeline>
<codeline lineno="867"><highlight class="normal">}</highlight></codeline>
<codeline lineno="868"><highlight class="normal"></highlight></codeline>
<codeline lineno="879" refid="group___r_c_c___private___functions_1ga1473d8a5a020642966359611c44181b0" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___r_c_c___private___functions_1ga1473d8a5a020642966359611c44181b0" kindref="member">RCC_RTCCLKConfig</ref>(uint32_t<sp/>RCC_RTCCLKSource)</highlight></codeline>
<codeline lineno="880"><highlight class="normal">{</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___r_t_c__clock__source_1gae76a0340b02b5342e756fa0d2112ebf5" kindref="member">IS_RCC_RTCCLK_SOURCE</ref>(RCC_RTCCLKSource));</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Select<sp/>the<sp/>RTC<sp/>clock<sp/>source<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;BDCR<sp/>|=<sp/>RCC_RTCCLKSource;</highlight></codeline>
<codeline lineno="885"><highlight class="normal">}</highlight></codeline>
<codeline lineno="886"><highlight class="normal"></highlight></codeline>
<codeline lineno="893" refid="group___r_c_c___private___functions_1ga9802f84846df2cea8e369234ed13b159" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___r_c_c___private___functions_1ga9802f84846df2cea8e369234ed13b159" kindref="member">RCC_RTCCLKCmd</ref>(<ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref><sp/>NewState)</highlight></codeline>
<codeline lineno="894"><highlight class="normal">{</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" kindref="member">IS_FUNCTIONAL_STATE</ref>(NewState));</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/>*(<ref refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" kindref="member">__IO</ref><sp/>uint32_t<sp/>*)<sp/><ref refid="group___r_c_c___private___defines_1gaf70aaf70b0752ccb3a60307b2fb46038" kindref="member">BDCR_RTCEN_BB</ref><sp/>=<sp/>(uint32_t)NewState;</highlight></codeline>
<codeline lineno="898"><highlight class="normal">}</highlight></codeline>
<codeline lineno="899"><highlight class="normal"></highlight></codeline>
<codeline lineno="908" refid="group___r_c_c___private___functions_1ga3e9944fd1ed734275222bbb3e3f29993" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___r_c_c___private___functions_1ga3e9944fd1ed734275222bbb3e3f29993" kindref="member">RCC_GetClocksFreq</ref>(<ref refid="struct_r_c_c___clocks_type_def" kindref="compound">RCC_ClocksTypeDef</ref>*<sp/>RCC_Clocks)</highlight></codeline>
<codeline lineno="909"><highlight class="normal">{</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/>uint32_t<sp/>tmp<sp/>=<sp/>0,<sp/>pllmull<sp/>=<sp/>0,<sp/>pllsource<sp/>=<sp/>0,<sp/>presc<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="911"><highlight class="normal"></highlight></codeline>
<codeline lineno="912"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/><sp/>STM32F10X_CL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/>uint32_t<sp/>prediv1source<sp/>=<sp/>0,<sp/>prediv1factor<sp/>=<sp/>0,<sp/>prediv2factor<sp/>=<sp/>0,<sp/>pll2mull<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="914"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>STM32F10X_CL<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="915"><highlight class="normal"></highlight></codeline>
<codeline lineno="916"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>(STM32F10X_LD_VL)<sp/>||<sp/>defined<sp/>(STM32F10X_MD_VL)<sp/>||<sp/>defined<sp/>(STM32F10X_HD_VL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/>uint32_t<sp/>prediv1factor<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="918"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>SYSCLK<sp/>source<sp/>-------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/>tmp<sp/>=<sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR<sp/>&amp;<sp/><ref refid="group___r_c_c___private___defines_1gaefba904c88a72c7e2c12e8fcef38300a" kindref="member">CFGR_SWS_Mask</ref>;</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(tmp)</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x00:<sp/><sp/></highlight><highlight class="comment">/*<sp/>HSI<sp/>used<sp/>as<sp/>system<sp/>clock<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>RCC_Clocks-&gt;<ref refid="struct_r_c_c___clocks_type_def_1a2ba325067f3d464ad7955358932563d8" kindref="member">SYSCLK_Frequency</ref><sp/>=<sp/><ref refid="group___library__configuration__section_1gaaa8c76e274d0f6dd2cefb5d0b17fbc37" kindref="member">HSI_VALUE</ref>;</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x04:<sp/><sp/></highlight><highlight class="comment">/*<sp/>HSE<sp/>used<sp/>as<sp/>system<sp/>clock<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>RCC_Clocks-&gt;<ref refid="struct_r_c_c___clocks_type_def_1a2ba325067f3d464ad7955358932563d8" kindref="member">SYSCLK_Frequency</ref><sp/>=<sp/><ref refid="group___library__configuration__section_1gaeafcff4f57440c60e64812dddd13e7cb" kindref="member">HSE_VALUE</ref>;</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x08:<sp/><sp/></highlight><highlight class="comment">/*<sp/>PLL<sp/>used<sp/>as<sp/>system<sp/>clock<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="932"><highlight class="normal"></highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>PLL<sp/>clock<sp/>source<sp/>and<sp/>multiplication<sp/>factor<sp/>----------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pllmull<sp/>=<sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR<sp/>&amp;<sp/><ref refid="group___r_c_c___private___defines_1ga26ac4de307d4c081867dc0344f54c17a" kindref="member">CFGR_PLLMull_Mask</ref>;</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pllsource<sp/>=<sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR<sp/>&amp;<sp/><ref refid="group___r_c_c___private___defines_1ga8fd33db1092dfc565314b7bf395bba23" kindref="member">CFGR_PLLSRC_Mask</ref>;</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="937"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>STM32F10X_CL<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pllmull<sp/>=<sp/>(<sp/>pllmull<sp/>&gt;&gt;<sp/>18)<sp/>+<sp/>2;</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pllsource<sp/>==<sp/>0x00)</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="comment">/*<sp/>HSI<sp/>oscillator<sp/>clock<sp/>divided<sp/>by<sp/>2<sp/>selected<sp/>as<sp/>PLL<sp/>clock<sp/>entry<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RCC_Clocks-&gt;<ref refid="struct_r_c_c___clocks_type_def_1a2ba325067f3d464ad7955358932563d8" kindref="member">SYSCLK_Frequency</ref><sp/>=<sp/>(<ref refid="group___library__configuration__section_1gaaa8c76e274d0f6dd2cefb5d0b17fbc37" kindref="member">HSI_VALUE</ref><sp/>&gt;&gt;<sp/>1)<sp/>*<sp/>pllmull;</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="946"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#if<sp/>defined<sp/>(STM32F10X_LD_VL)<sp/>||<sp/>defined<sp/>(STM32F10X_MD_VL)<sp/>||<sp/>defined<sp/>(STM32F10X_HD_VL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prediv1factor<sp/>=<sp/>(<ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR2<sp/>&amp;<sp/>CFGR2_PREDIV1)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>HSE<sp/>oscillator<sp/>clock<sp/>selected<sp/>as<sp/>PREDIV1<sp/>clock<sp/>entry<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RCC_Clocks-&gt;<ref refid="struct_r_c_c___clocks_type_def_1a2ba325067f3d464ad7955358932563d8" kindref="member">SYSCLK_Frequency</ref><sp/>=<sp/>(<ref refid="group___library__configuration__section_1gaeafcff4f57440c60e64812dddd13e7cb" kindref="member">HSE_VALUE</ref><sp/>/<sp/>prediv1factor)<sp/>*<sp/>pllmull;<sp/></highlight></codeline>
<codeline lineno="950"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>HSE<sp/>selected<sp/>as<sp/>PLL<sp/>clock<sp/>entry<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR<sp/>&amp;<sp/><ref refid="group___r_c_c___private___defines_1ga025835ddeb698b8c119ddf355b2fbded" kindref="member">CFGR_PLLXTPRE_Mask</ref>)<sp/>!=<sp/>(uint32_t)<ref refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffa589b7d94a3d91d145720e2fed0eb3a05" kindref="member">RESET</ref>)</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="comment">/*<sp/>HSE<sp/>oscillator<sp/>clock<sp/>divided<sp/>by<sp/>2<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RCC_Clocks-&gt;<ref refid="struct_r_c_c___clocks_type_def_1a2ba325067f3d464ad7955358932563d8" kindref="member">SYSCLK_Frequency</ref><sp/>=<sp/>(<ref refid="group___library__configuration__section_1gaeafcff4f57440c60e64812dddd13e7cb" kindref="member">HSE_VALUE</ref><sp/>&gt;&gt;<sp/>1)<sp/>*<sp/>pllmull;</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RCC_Clocks-&gt;<ref refid="struct_r_c_c___clocks_type_def_1a2ba325067f3d464ad7955358932563d8" kindref="member">SYSCLK_Frequency</ref><sp/>=<sp/><ref refid="group___library__configuration__section_1gaeafcff4f57440c60e64812dddd13e7cb" kindref="member">HSE_VALUE</ref><sp/>*<sp/>pllmull;</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="960"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="962"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pllmull<sp/>=<sp/>pllmull<sp/>&gt;&gt;<sp/>18;</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pllmull<sp/>!=<sp/>0x0D)</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pllmull<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">/*<sp/>PLL<sp/>multiplication<sp/>factor<sp/>=<sp/>PLL<sp/>input<sp/>clock<sp/>*<sp/>6.5<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pllmull<sp/>=<sp/>13<sp/>/<sp/>2;<sp/></highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pllsource<sp/>==<sp/>0x00)</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="comment">/*<sp/>HSI<sp/>oscillator<sp/>clock<sp/>divided<sp/>by<sp/>2<sp/>selected<sp/>as<sp/>PLL<sp/>clock<sp/>entry<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RCC_Clocks-&gt;<ref refid="struct_r_c_c___clocks_type_def_1a2ba325067f3d464ad7955358932563d8" kindref="member">SYSCLK_Frequency</ref><sp/>=<sp/>(<ref refid="group___library__configuration__section_1gaaa8c76e274d0f6dd2cefb5d0b17fbc37" kindref="member">HSI_VALUE</ref><sp/>&gt;&gt;<sp/>1)<sp/>*<sp/>pllmull;</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="comment">/*<sp/>PREDIV1<sp/>selected<sp/>as<sp/>PLL<sp/>clock<sp/>entry<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>PREDIV1<sp/>clock<sp/>source<sp/>and<sp/>division<sp/>factor<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prediv1source<sp/>=<sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR2<sp/>&amp;<sp/>CFGR2_PREDIV1SRC;</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prediv1factor<sp/>=<sp/>(<ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR2<sp/>&amp;<sp/>CFGR2_PREDIV1)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(prediv1source<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">/*<sp/>HSE<sp/>oscillator<sp/>clock<sp/>selected<sp/>as<sp/>PREDIV1<sp/>clock<sp/>entry<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RCC_Clocks-&gt;<ref refid="struct_r_c_c___clocks_type_def_1a2ba325067f3d464ad7955358932563d8" kindref="member">SYSCLK_Frequency</ref><sp/>=<sp/>(<ref refid="group___library__configuration__section_1gaeafcff4f57440c60e64812dddd13e7cb" kindref="member">HSE_VALUE</ref><sp/>/<sp/>prediv1factor)<sp/>*<sp/>pllmull;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="comment">/*<sp/>PLL2<sp/>clock<sp/>selected<sp/>as<sp/>PREDIV1<sp/>clock<sp/>entry<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>PREDIV2<sp/>division<sp/>factor<sp/>and<sp/>PLL2<sp/>multiplication<sp/>factor<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prediv2factor<sp/>=<sp/>((<ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR2<sp/>&amp;<sp/>CFGR2_PREDIV2)<sp/>&gt;&gt;<sp/>4)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pll2mull<sp/>=<sp/>((<ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR2<sp/>&amp;<sp/>CFGR2_PLL2MUL)<sp/>&gt;&gt;<sp/>8<sp/>)<sp/>+<sp/>2;<sp/></highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RCC_Clocks-&gt;<ref refid="struct_r_c_c___clocks_type_def_1a2ba325067f3d464ad7955358932563d8" kindref="member">SYSCLK_Frequency</ref><sp/>=<sp/>(((<ref refid="group___library__configuration__section_1gaeafcff4f57440c60e64812dddd13e7cb" kindref="member">HSE_VALUE</ref><sp/>/<sp/>prediv2factor)<sp/>*<sp/>pll2mull)<sp/>/<sp/>prediv1factor)<sp/>*<sp/>pllmull;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="998"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>STM32F10X_CL<sp/>*/</highlight><highlight class="preprocessor"><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"></highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>RCC_Clocks-&gt;<ref refid="struct_r_c_c___clocks_type_def_1a2ba325067f3d464ad7955358932563d8" kindref="member">SYSCLK_Frequency</ref><sp/>=<sp/><ref refid="group___library__configuration__section_1gaaa8c76e274d0f6dd2cefb5d0b17fbc37" kindref="member">HSI_VALUE</ref>;</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"></highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Compute<sp/>HCLK,<sp/>PCLK1,<sp/>PCLK2<sp/>and<sp/>ADCCLK<sp/>clocks<sp/>frequencies<sp/>----------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>HCLK<sp/>prescaler<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/>tmp<sp/>=<sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR<sp/>&amp;<sp/><ref refid="group___r_c_c___private___defines_1gaca06c6cc484e08423a56cfca6928b9ae" kindref="member">CFGR_HPRE_Set_Mask</ref>;</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/>tmp<sp/>=<sp/>tmp<sp/>&gt;&gt;<sp/>4;</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/>presc<sp/>=<sp/>APBAHBPrescTable[tmp];</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>HCLK<sp/>clock<sp/>frequency<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/>RCC_Clocks-&gt;<ref refid="struct_r_c_c___clocks_type_def_1a41b9859d33954117daf7fab42f804b92" kindref="member">HCLK_Frequency</ref><sp/>=<sp/>RCC_Clocks-&gt;<ref refid="struct_r_c_c___clocks_type_def_1a2ba325067f3d464ad7955358932563d8" kindref="member">SYSCLK_Frequency</ref><sp/>&gt;&gt;<sp/>presc;</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>PCLK1<sp/>prescaler<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/>tmp<sp/>=<sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR<sp/>&amp;<sp/><ref refid="group___r_c_c___private___defines_1ga74838e1873c5e4c46eef61a81b1bd2c5" kindref="member">CFGR_PPRE1_Set_Mask</ref>;</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/>tmp<sp/>=<sp/>tmp<sp/>&gt;&gt;<sp/>8;</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/>presc<sp/>=<sp/>APBAHBPrescTable[tmp];</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>PCLK1<sp/>clock<sp/>frequency<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/>RCC_Clocks-&gt;<ref refid="struct_r_c_c___clocks_type_def_1add4cfc63c35178d187107edc764e0b8f" kindref="member">PCLK1_Frequency</ref><sp/>=<sp/>RCC_Clocks-&gt;<ref refid="struct_r_c_c___clocks_type_def_1a41b9859d33954117daf7fab42f804b92" kindref="member">HCLK_Frequency</ref><sp/>&gt;&gt;<sp/>presc;</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>PCLK2<sp/>prescaler<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/>tmp<sp/>=<sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR<sp/>&amp;<sp/><ref refid="group___r_c_c___private___defines_1ga63883951c986cf6dc1d6a8775f821af7" kindref="member">CFGR_PPRE2_Set_Mask</ref>;</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/>tmp<sp/>=<sp/>tmp<sp/>&gt;&gt;<sp/>11;</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/>presc<sp/>=<sp/>APBAHBPrescTable[tmp];</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>PCLK2<sp/>clock<sp/>frequency<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/>RCC_Clocks-&gt;<ref refid="struct_r_c_c___clocks_type_def_1ad854f0b70a6c4cf6de6dbbdcbc99b856" kindref="member">PCLK2_Frequency</ref><sp/>=<sp/>RCC_Clocks-&gt;<ref refid="struct_r_c_c___clocks_type_def_1a41b9859d33954117daf7fab42f804b92" kindref="member">HCLK_Frequency</ref><sp/>&gt;&gt;<sp/>presc;</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>ADCCLK<sp/>prescaler<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/>tmp<sp/>=<sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR<sp/>&amp;<sp/><ref refid="group___r_c_c___private___defines_1gaead9b35ba6e98274613c28d24bd228cc" kindref="member">CFGR_ADCPRE_Set_Mask</ref>;</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/>tmp<sp/>=<sp/>tmp<sp/>&gt;&gt;<sp/>14;</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/>presc<sp/>=<sp/>ADCPrescTable[tmp];</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>ADCCLK<sp/>clock<sp/>frequency<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/>RCC_Clocks-&gt;<ref refid="struct_r_c_c___clocks_type_def_1aa3dad8af3bb364b6232cf5446d478e7d" kindref="member">ADCCLK_Frequency</ref><sp/>=<sp/>RCC_Clocks-&gt;<ref refid="struct_r_c_c___clocks_type_def_1ad854f0b70a6c4cf6de6dbbdcbc99b856" kindref="member">PCLK2_Frequency</ref><sp/>/<sp/>presc;</highlight></codeline>
<codeline lineno="1031"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"></highlight></codeline>
<codeline lineno="1064" refid="group___r_c_c___private___functions_1gae0b30d8598b8393bdba9c3fefba3a968" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___r_c_c___private___functions_1gae0b30d8598b8393bdba9c3fefba3a968" kindref="member">RCC_AHBPeriphClockCmd</ref>(uint32_t<sp/>RCC_AHBPeriph,<sp/><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref><sp/>NewState)</highlight></codeline>
<codeline lineno="1065"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___a_h_b__peripheral_1ga5fbf97a9c9f5742c94cde6ffe389aedc" kindref="member">IS_RCC_AHB_PERIPH</ref>(RCC_AHBPeriph));</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" kindref="member">IS_FUNCTIONAL_STATE</ref>(NewState));</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"></highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(NewState<sp/>!=<sp/><ref refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1ad3a9df141be0ccf10389b640f492b26d" kindref="member">DISABLE</ref>)</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;AHBENR<sp/>|=<sp/>RCC_AHBPeriph;</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;AHBENR<sp/>&amp;=<sp/>~RCC_AHBPeriph;</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1078"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"></highlight></codeline>
<codeline lineno="1095" refid="group___r_c_c___private___functions_1ga56ff55caf8d835351916b40dd030bc87" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___r_c_c___private___functions_1ga56ff55caf8d835351916b40dd030bc87" kindref="member">RCC_APB2PeriphClockCmd</ref>(uint32_t<sp/>RCC_APB2Periph,<sp/><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref><sp/>NewState)</highlight></codeline>
<codeline lineno="1096"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___a_p_b2__peripheral_1ga89a2b95e60e90a51b26b53cc4c0e7b14" kindref="member">IS_RCC_APB2_PERIPH</ref>(RCC_APB2Periph));</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" kindref="member">IS_FUNCTIONAL_STATE</ref>(NewState));</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(NewState<sp/>!=<sp/><ref refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1ad3a9df141be0ccf10389b640f492b26d" kindref="member">DISABLE</ref>)</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;APB2ENR<sp/>|=<sp/>RCC_APB2Periph;</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;APB2ENR<sp/>&amp;=<sp/>~RCC_APB2Periph;</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1108"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"></highlight></codeline>
<codeline lineno="1126" refid="group___r_c_c___private___functions_1gaee7cc5d73af7fe1986fceff8afd3973e" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___r_c_c___private___functions_1gaee7cc5d73af7fe1986fceff8afd3973e" kindref="member">RCC_APB1PeriphClockCmd</ref>(uint32_t<sp/>RCC_APB1Periph,<sp/><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref><sp/>NewState)</highlight></codeline>
<codeline lineno="1127"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___a_p_b1__peripheral_1gab68e85308494436c4c55a69c42a79f36" kindref="member">IS_RCC_APB1_PERIPH</ref>(RCC_APB1Periph));</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" kindref="member">IS_FUNCTIONAL_STATE</ref>(NewState));</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(NewState<sp/>!=<sp/><ref refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1ad3a9df141be0ccf10389b640f492b26d" kindref="member">DISABLE</ref>)</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;APB1ENR<sp/>|=<sp/>RCC_APB1Periph;</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;APB1ENR<sp/>&amp;=<sp/>~RCC_APB1Periph;</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1139"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"></highlight></codeline>
<codeline lineno="1141"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>STM32F10X_CL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1142"><highlight class="normal"></highlight></codeline>
<codeline lineno="1153"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RCC_AHBPeriphResetCmd(uint32_t<sp/>RCC_AHBPeriph,<sp/><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref><sp/>NewState)</highlight></codeline>
<codeline lineno="1154"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(IS_RCC_AHB_PERIPH_RESET(RCC_AHBPeriph));</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" kindref="member">IS_FUNCTIONAL_STATE</ref>(NewState));</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"></highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(NewState<sp/>!=<sp/><ref refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1ad3a9df141be0ccf10389b640f492b26d" kindref="member">DISABLE</ref>)</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;AHBRSTR<sp/>|=<sp/>RCC_AHBPeriph;</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;AHBRSTR<sp/>&amp;=<sp/>~RCC_AHBPeriph;</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1167"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>STM32F10X_CL<sp/>*/</highlight><highlight class="preprocessor"><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1169"><highlight class="normal"></highlight></codeline>
<codeline lineno="1185" refid="group___r_c_c___private___functions_1gad94553850ac07106a27ee85fec37efdf" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___r_c_c___private___functions_1gad94553850ac07106a27ee85fec37efdf" kindref="member">RCC_APB2PeriphResetCmd</ref>(uint32_t<sp/>RCC_APB2Periph,<sp/><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref><sp/>NewState)</highlight></codeline>
<codeline lineno="1186"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___a_p_b2__peripheral_1ga89a2b95e60e90a51b26b53cc4c0e7b14" kindref="member">IS_RCC_APB2_PERIPH</ref>(RCC_APB2Periph));</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" kindref="member">IS_FUNCTIONAL_STATE</ref>(NewState));</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(NewState<sp/>!=<sp/><ref refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1ad3a9df141be0ccf10389b640f492b26d" kindref="member">DISABLE</ref>)</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;APB2RSTR<sp/>|=<sp/>RCC_APB2Periph;</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;APB2RSTR<sp/>&amp;=<sp/>~RCC_APB2Periph;</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1198"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"></highlight></codeline>
<codeline lineno="1216" refid="group___r_c_c___private___functions_1gab197ae4369c10b92640a733b40ed2801" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___r_c_c___private___functions_1gab197ae4369c10b92640a733b40ed2801" kindref="member">RCC_APB1PeriphResetCmd</ref>(uint32_t<sp/>RCC_APB1Periph,<sp/><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref><sp/>NewState)</highlight></codeline>
<codeline lineno="1217"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___a_p_b1__peripheral_1gab68e85308494436c4c55a69c42a79f36" kindref="member">IS_RCC_APB1_PERIPH</ref>(RCC_APB1Periph));</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" kindref="member">IS_FUNCTIONAL_STATE</ref>(NewState));</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(NewState<sp/>!=<sp/><ref refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1ad3a9df141be0ccf10389b640f492b26d" kindref="member">DISABLE</ref>)</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;APB1RSTR<sp/>|=<sp/>RCC_APB1Periph;</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;APB1RSTR<sp/>&amp;=<sp/>~RCC_APB1Periph;</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1229"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"></highlight></codeline>
<codeline lineno="1237" refid="group___r_c_c___private___functions_1ga636c3b72f35391e67f12a551b15fa54a" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___r_c_c___private___functions_1ga636c3b72f35391e67f12a551b15fa54a" kindref="member">RCC_BackupResetCmd</ref>(<ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref><sp/>NewState)</highlight></codeline>
<codeline lineno="1238"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" kindref="member">IS_FUNCTIONAL_STATE</ref>(NewState));</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/>*(<ref refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" kindref="member">__IO</ref><sp/>uint32_t<sp/>*)<sp/><ref refid="group___r_c_c___private___defines_1ga892fdf297b85b85cbaf0723649b31818" kindref="member">BDCR_BDRST_BB</ref><sp/>=<sp/>(uint32_t)NewState;</highlight></codeline>
<codeline lineno="1242"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"></highlight></codeline>
<codeline lineno="1250" refid="group___r_c_c___private___functions_1ga0ff1fd7b9a8a49cdda11b7d7261c3494" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___r_c_c___private___functions_1ga0ff1fd7b9a8a49cdda11b7d7261c3494" kindref="member">RCC_ClockSecuritySystemCmd</ref>(<ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref><sp/>NewState)</highlight></codeline>
<codeline lineno="1251"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" kindref="member">IS_FUNCTIONAL_STATE</ref>(NewState));</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/>*(<ref refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" kindref="member">__IO</ref><sp/>uint32_t<sp/>*)<sp/><ref refid="group___r_c_c___private___defines_1gaca914aed10477ae4090fea0a9639b1ea" kindref="member">CR_CSSON_BB</ref><sp/>=<sp/>(uint32_t)NewState;</highlight></codeline>
<codeline lineno="1255"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"></highlight></codeline>
<codeline lineno="1282" refid="group___r_c_c___private___functions_1ga8f62b86c6ca8ae6585ba1cec79431fe5" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___r_c_c___private___functions_1ga8f62b86c6ca8ae6585ba1cec79431fe5" kindref="member">RCC_MCOConfig</ref>(uint8_t<sp/>RCC_MCO)</highlight></codeline>
<codeline lineno="1283"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___clock__source__to__output__on___m_c_o__pin_1ga0c2d4d6aa8881e01b8c06d8816284b73" kindref="member">IS_RCC_MCO</ref>(RCC_MCO));</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"></highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Perform<sp/>Byte<sp/>access<sp/>to<sp/>MCO<sp/>bits<sp/>to<sp/>select<sp/>the<sp/>MCO<sp/>source<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/>*(<ref refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" kindref="member">__IO</ref><sp/>uint8_t<sp/>*)<sp/><ref refid="group___r_c_c___private___defines_1ga5fea86b59ec4be059d922db57cca3b3f" kindref="member">CFGR_BYTE4_ADDRESS</ref><sp/>=<sp/>RCC_MCO;</highlight></codeline>
<codeline lineno="1289"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"></highlight></codeline>
<codeline lineno="1326" refid="group___r_c_c___private___functions_1ga2897bdc52f272031c44fb1f72205d295" refkind="member"><highlight class="normal"><ref refid="group___exported__types_1ga89136caac2e14c55151f527ac02daaff" kindref="member">FlagStatus</ref><sp/><ref refid="group___r_c_c___private___functions_1ga2897bdc52f272031c44fb1f72205d295" kindref="member">RCC_GetFlagStatus</ref>(uint8_t<sp/>RCC_FLAG)</highlight></codeline>
<codeline lineno="1327"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/>uint32_t<sp/>tmp<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/>uint32_t<sp/>statusreg<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><ref refid="group___exported__types_1ga89136caac2e14c55151f527ac02daaff" kindref="member">FlagStatus</ref><sp/>bitstatus<sp/>=<sp/><ref refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffa589b7d94a3d91d145720e2fed0eb3a05" kindref="member">RESET</ref>;</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___r_c_c___flag_1gaa27dea5bb62b26d0881e649770252158" kindref="member">IS_RCC_FLAG</ref>(RCC_FLAG));</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"></highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>the<sp/>RCC<sp/>register<sp/>index<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/>tmp<sp/>=<sp/>RCC_FLAG<sp/>&gt;&gt;<sp/>5;</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tmp<sp/>==<sp/>1)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>flag<sp/>to<sp/>check<sp/>is<sp/>in<sp/>CR<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/>statusreg<sp/>=<sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CR;</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tmp<sp/>==<sp/>2)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>flag<sp/>to<sp/>check<sp/>is<sp/>in<sp/>BDCR<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/>statusreg<sp/>=<sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;BDCR;</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>flag<sp/>to<sp/>check<sp/>is<sp/>in<sp/>CSR<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/>statusreg<sp/>=<sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CSR;</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"></highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>the<sp/>flag<sp/>position<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/>tmp<sp/>=<sp/>RCC_FLAG<sp/>&amp;<sp/><ref refid="group___r_c_c___private___defines_1ga2be62bf481cd44de9ab604efe5595ff6" kindref="member">FLAG_Mask</ref>;</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((statusreg<sp/>&amp;<sp/>((uint32_t)1<sp/>&lt;&lt;<sp/>tmp))<sp/>!=<sp/>(uint32_t)<ref refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffa589b7d94a3d91d145720e2fed0eb3a05" kindref="member">RESET</ref>)</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/>bitstatus<sp/>=<sp/><ref refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffab44c8101cc294c074709ec1b14211792" kindref="member">SET</ref>;</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/><sp/>bitstatus<sp/>=<sp/><ref refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffa589b7d94a3d91d145720e2fed0eb3a05" kindref="member">RESET</ref>;</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"></highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Return<sp/>the<sp/>flag<sp/>status<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bitstatus;</highlight></codeline>
<codeline lineno="1362"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"></highlight></codeline>
<codeline lineno="1371" refid="group___r_c_c___private___functions_1ga53f909dbb15a54124419084ebda97d72" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___r_c_c___private___functions_1ga53f909dbb15a54124419084ebda97d72" kindref="member">RCC_ClearFlag</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1372"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>RMVF<sp/>bit<sp/>to<sp/>clear<sp/>the<sp/>reset<sp/>flags<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CSR<sp/>|=<sp/><ref refid="group___r_c_c___private___defines_1ga415e9d29487f0ef4101a9c6e4f20151f" kindref="member">CSR_RMVF_Set</ref>;</highlight></codeline>
<codeline lineno="1375"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"></highlight></codeline>
<codeline lineno="1402" refid="group___r_c_c___private___functions_1ga6126c99f398ee4be410ad76ae3aee18f" refkind="member"><highlight class="normal"><ref refid="group___exported__types_1gaacbd7ed539db0aacd973a0f6eca34074" kindref="member">ITStatus</ref><sp/><ref refid="group___r_c_c___private___functions_1ga6126c99f398ee4be410ad76ae3aee18f" kindref="member">RCC_GetITStatus</ref>(uint8_t<sp/>RCC_IT)</highlight></codeline>
<codeline lineno="1403"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/><ref refid="group___exported__types_1gaacbd7ed539db0aacd973a0f6eca34074" kindref="member">ITStatus</ref><sp/>bitstatus<sp/>=<sp/><ref refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffa589b7d94a3d91d145720e2fed0eb3a05" kindref="member">RESET</ref>;</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___r_c_c___interrupt__source_1ga7a1b771d6d9c2d8346ab58a1f046f6a6" kindref="member">IS_RCC_GET_IT</ref>(RCC_IT));</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"></highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>status<sp/>of<sp/>the<sp/>specified<sp/>RCC<sp/>interrupt<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CIR<sp/>&amp;<sp/>RCC_IT)<sp/>!=<sp/>(uint32_t)<ref refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffa589b7d94a3d91d145720e2fed0eb3a05" kindref="member">RESET</ref>)</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/><sp/><sp/>bitstatus<sp/>=<sp/><ref refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffab44c8101cc294c074709ec1b14211792" kindref="member">SET</ref>;</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/><sp/>bitstatus<sp/>=<sp/><ref refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffa589b7d94a3d91d145720e2fed0eb3a05" kindref="member">RESET</ref>;</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"></highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Return<sp/>the<sp/>RCC_IT<sp/>status<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/>bitstatus;</highlight></codeline>
<codeline lineno="1420"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"></highlight></codeline>
<codeline lineno="1448" refid="group___r_c_c___private___functions_1ga529842d165910f8f87e26115da36089b" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___r_c_c___private___functions_1ga529842d165910f8f87e26115da36089b" kindref="member">RCC_ClearITPendingBit</ref>(uint8_t<sp/>RCC_IT)</highlight></codeline>
<codeline lineno="1449"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___r_c_c___interrupt__source_1ga8374741e47d696accd1a72647650ba63" kindref="member">IS_RCC_CLEAR_IT</ref>(RCC_IT));</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"></highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Perform<sp/>Byte<sp/>access<sp/>to<sp/>RCC_CIR[23:16]<sp/>bits<sp/>to<sp/>clear<sp/>the<sp/>selected<sp/>interrupt</highlight></codeline>
<codeline lineno="1454"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>pending<sp/>bits<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/>*(<ref refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" kindref="member">__IO</ref><sp/>uint8_t<sp/>*)<sp/><ref refid="group___r_c_c___private___defines_1ga43f47430582c9575970901533e525bb5" kindref="member">CIR_BYTE3_ADDRESS</ref><sp/>=<sp/>RCC_IT;</highlight></codeline>
<codeline lineno="1456"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1457"><highlight class="normal"></highlight></codeline>
<codeline lineno="1470"><highlight class="comment">/*******************<sp/>(C)<sp/>COPYRIGHT<sp/>2011<sp/>STMicroelectronics<sp/>*****END<sp/>OF<sp/>FILE****/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_rcc.c"/>
  </compounddef>
</doxygen>
