<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="stm32f10x__bkp_8c" kind="file" language="C++">
    <compoundname>stm32f10x_bkp.c</compoundname>
    <includes refid="stm32f10x__bkp_8h" local="yes">stm32f10x_bkp.h</includes>
    <includes refid="stm32f10x__rcc_8h" local="yes">stm32f10x_rcc.h</includes>
    <incdepgraph>
      <node id="856">
        <label>system_stm32f10x.h</label>
        <link refid="system__stm32f10x_8h"/>
      </node>
      <node id="853">
        <label>stdint.h</label>
      </node>
      <node id="852">
        <label>core_cm3.h</label>
        <link refid="core__cm3_8h"/>
        <childnode refid="853" relation="include">
        </childnode>
        <childnode refid="854" relation="include">
        </childnode>
        <childnode refid="855" relation="include">
        </childnode>
      </node>
      <node id="855">
        <label>core_cmFunc.h</label>
        <link refid="core__cm_func_8h"/>
      </node>
      <node id="857">
        <label>stm32f10x_rcc.h</label>
        <link refid="stm32f10x__rcc_8h"/>
        <childnode refid="851" relation="include">
        </childnode>
      </node>
      <node id="854">
        <label>core_cmInstr.h</label>
        <link refid="core__cm_instr_8h"/>
      </node>
      <node id="851">
        <label>stm32f10x.h</label>
        <link refid="stm32f10x_8h"/>
        <childnode refid="852" relation="include">
        </childnode>
        <childnode refid="856" relation="include">
        </childnode>
        <childnode refid="853" relation="include">
        </childnode>
      </node>
      <node id="850">
        <label>stm32f10x_bkp.h</label>
        <link refid="stm32f10x__bkp_8h"/>
        <childnode refid="851" relation="include">
        </childnode>
      </node>
      <node id="849">
        <label>C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_bkp.c</label>
        <link refid="stm32f10x__bkp_8c"/>
        <childnode refid="850" relation="include">
        </childnode>
        <childnode refid="857" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="group___b_k_p___private___defines_1gaaaf71f474657e7c0c5b0d6ba9697cf5d" prot="public" static="no">
        <name>BKP_OFFSET</name>
        <initializer>(<ref refid="group___peripheral__memory__map_1gaa15d5a9f40794105397ba5ea567c4ae1" kindref="member">BKP_BASE</ref> - <ref refid="group___peripheral__memory__map_1ga9171f49478fa86d932f89e78e73b88b0" kindref="member">PERIPH_BASE</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_bkp.c" line="48" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_bkp.c" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___b_k_p___private___defines_1gafa1d3d0ea72132df651c76fc1bdffffc" prot="public" static="no">
        <name>CR_OFFSET</name>
        <initializer>(<ref refid="group___b_k_p___private___defines_1gaaaf71f474657e7c0c5b0d6ba9697cf5d" kindref="member">BKP_OFFSET</ref> + 0x30)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_bkp.c" line="53" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_bkp.c" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___b_k_p___private___defines_1ga4af1869d665b8804104b6754c787820a" prot="public" static="no">
        <name>TPAL_BitNumber</name>
        <initializer>0x01</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_bkp.c" line="54" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_bkp.c" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___b_k_p___private___defines_1gaa36e52f37b9fa6982bd224a6dcb86f78" prot="public" static="no">
        <name>CR_TPAL_BB</name>
        <initializer>(<ref refid="group___peripheral__memory__map_1gaed7efc100877000845c236ccdc9e144a" kindref="member">PERIPH_BB_BASE</ref> + (<ref refid="group___r_c_c___private___defines_1gafa1d3d0ea72132df651c76fc1bdffffc" kindref="member">CR_OFFSET</ref> * 32) + (<ref refid="group___b_k_p___private___defines_1ga4af1869d665b8804104b6754c787820a" kindref="member">TPAL_BitNumber</ref> * 4))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_bkp.c" line="55" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_bkp.c" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___b_k_p___private___defines_1ga8c68be900246b028ff4af93ad119eb98" prot="public" static="no">
        <name>TPE_BitNumber</name>
        <initializer>0x00</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_bkp.c" line="58" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_bkp.c" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___b_k_p___private___defines_1ga6c11e801c2c1aa87ec2feaefe12bbb96" prot="public" static="no">
        <name>CR_TPE_BB</name>
        <initializer>(<ref refid="group___peripheral__memory__map_1gaed7efc100877000845c236ccdc9e144a" kindref="member">PERIPH_BB_BASE</ref> + (<ref refid="group___r_c_c___private___defines_1gafa1d3d0ea72132df651c76fc1bdffffc" kindref="member">CR_OFFSET</ref> * 32) + (<ref refid="group___b_k_p___private___defines_1ga8c68be900246b028ff4af93ad119eb98" kindref="member">TPE_BitNumber</ref> * 4))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_bkp.c" line="59" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_bkp.c" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___b_k_p___private___defines_1ga984cbe73312b6d3d355c5053763d499a" prot="public" static="no">
        <name>CSR_OFFSET</name>
        <initializer>(<ref refid="group___b_k_p___private___defines_1gaaaf71f474657e7c0c5b0d6ba9697cf5d" kindref="member">BKP_OFFSET</ref> + 0x34)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_bkp.c" line="64" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_bkp.c" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___b_k_p___private___defines_1gac62e6ae9548498efa47fb72637545117" prot="public" static="no">
        <name>TPIE_BitNumber</name>
        <initializer>0x02</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_bkp.c" line="65" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_bkp.c" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___b_k_p___private___defines_1ga1f6dcf729994613b21f554ca371d393c" prot="public" static="no">
        <name>CSR_TPIE_BB</name>
        <initializer>(<ref refid="group___peripheral__memory__map_1gaed7efc100877000845c236ccdc9e144a" kindref="member">PERIPH_BB_BASE</ref> + (<ref refid="group___r_c_c___private___defines_1ga984cbe73312b6d3d355c5053763d499a" kindref="member">CSR_OFFSET</ref> * 32) + (<ref refid="group___b_k_p___private___defines_1gac62e6ae9548498efa47fb72637545117" kindref="member">TPIE_BitNumber</ref> * 4))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_bkp.c" line="66" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_bkp.c" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___b_k_p___private___defines_1gac8b1b82c7029c05e720c50585762bcf2" prot="public" static="no">
        <name>TIF_BitNumber</name>
        <initializer>0x09</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_bkp.c" line="69" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_bkp.c" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___b_k_p___private___defines_1ga8d9e7cac2321fae6d257e8c1316264e3" prot="public" static="no">
        <name>CSR_TIF_BB</name>
        <initializer>(<ref refid="group___peripheral__memory__map_1gaed7efc100877000845c236ccdc9e144a" kindref="member">PERIPH_BB_BASE</ref> + (<ref refid="group___r_c_c___private___defines_1ga984cbe73312b6d3d355c5053763d499a" kindref="member">CSR_OFFSET</ref> * 32) + (<ref refid="group___b_k_p___private___defines_1gac8b1b82c7029c05e720c50585762bcf2" kindref="member">TIF_BitNumber</ref> * 4))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_bkp.c" line="70" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_bkp.c" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___b_k_p___private___defines_1gaeb8676e7543d93df60cf7c63fd795672" prot="public" static="no">
        <name>TEF_BitNumber</name>
        <initializer>0x08</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_bkp.c" line="73" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_bkp.c" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___b_k_p___private___defines_1gad60539cc791a26701d414aee529ea203" prot="public" static="no">
        <name>CSR_TEF_BB</name>
        <initializer>(<ref refid="group___peripheral__memory__map_1gaed7efc100877000845c236ccdc9e144a" kindref="member">PERIPH_BB_BASE</ref> + (<ref refid="group___r_c_c___private___defines_1ga984cbe73312b6d3d355c5053763d499a" kindref="member">CSR_OFFSET</ref> * 32) + (<ref refid="group___b_k_p___private___defines_1gaeb8676e7543d93df60cf7c63fd795672" kindref="member">TEF_BitNumber</ref> * 4))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_bkp.c" line="74" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_bkp.c" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___b_k_p___private___defines_1ga61a540c5dd9d18e936b8fd3e01f7f6ff" prot="public" static="no">
        <name>RTCCR_CAL_MASK</name>
        <initializer>((uint16_t)0xFF80)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_bkp.c" line="79" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_bkp.c" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___b_k_p___private___defines_1ga4bda91755d5ae28e9e487e946917a1ec" prot="public" static="no">
        <name>RTCCR_MASK</name>
        <initializer>((uint16_t)0xFC7F)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_bkp.c" line="80" column="9" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_bkp.c" bodystart="80" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group___b_k_p___private___functions_1gaabff4d8f5ebf4fd9a840bcc9042ca226" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BKP_DeInit</definition>
        <argsstring>(void)</argsstring>
        <name>BKP_DeInit</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Deinitializes the BKP peripheral registers to their default reset values. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_bkp.c" line="120" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_bkp.c" bodystart="120" bodyend="124"/>
        <references refid="group___r_c_c___exported___functions_1ga636c3b72f35391e67f12a551b15fa54a" compoundref="stm32f10x__rcc_8c" startline="1237" endline="1242">RCC_BackupResetCmd</references>
        <references refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1a7d46875fa3ebd2c34d2756950eda83bf" compoundref="stm32f10x_8h" startline="521">ENABLE</references>
        <references refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1ad3a9df141be0ccf10389b640f492b26d" compoundref="stm32f10x_8h" startline="521">DISABLE</references>
      </memberdef>
      <memberdef kind="function" id="group___b_k_p___private___functions_1gae216446d641d075fb575ce6dbe2ff4c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BKP_TamperPinLevelConfig</definition>
        <argsstring>(uint16_t BKP_TamperPinLevel)</argsstring>
        <name>BKP_TamperPinLevelConfig</name>
        <param>
          <type>uint16_t</type>
          <declname>BKP_TamperPinLevel</declname>
        </param>
        <briefdescription>
<para>Configures the Tamper Pin active level. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>BKP_TamperPinLevel</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the Tamper Pin active level. This parameter can be one of the following values: <itemizedlist>
<listitem><para>BKP_TamperPinLevel_High: Tamper pin active on high level </para></listitem>
<listitem><para>BKP_TamperPinLevel_Low: Tamper pin active on low level </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_bkp.c" line="134" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_bkp.c" bodystart="134" bodyend="139"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___tamper___pin__active__level_1gae7cd3bd314605f7752062c814b850c23" compoundref="stm32f10x__bkp_8h" startline="60">IS_BKP_TAMPER_PIN_LEVEL</references>
        <references refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" compoundref="core__cm0_8h" startline="221">__IO</references>
        <references refid="group___b_k_p___private___defines_1gaa36e52f37b9fa6982bd224a6dcb86f78" compoundref="stm32f10x__bkp_8c" startline="55">CR_TPAL_BB</references>
      </memberdef>
      <memberdef kind="function" id="group___b_k_p___private___functions_1ga3a0cdff9ad8238ade2c67e2b70f530ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BKP_TamperPinCmd</definition>
        <argsstring>(FunctionalState NewState)</argsstring>
        <name>BKP_TamperPinCmd</name>
        <param>
          <type><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref></type>
          <declname>NewState</declname>
        </param>
        <briefdescription>
<para>Enables or disables the Tamper Pin activation. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>NewState</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of the Tamper Pin activation. This parameter can be: ENABLE or DISABLE. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_bkp.c" line="147" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_bkp.c" bodystart="147" bodyend="152"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" compoundref="stm32f10x_8h" startline="522">IS_FUNCTIONAL_STATE</references>
        <references refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" compoundref="core__cm0_8h" startline="221">__IO</references>
        <references refid="group___b_k_p___private___defines_1ga6c11e801c2c1aa87ec2feaefe12bbb96" compoundref="stm32f10x__bkp_8c" startline="59">CR_TPE_BB</references>
      </memberdef>
      <memberdef kind="function" id="group___b_k_p___private___functions_1gab8dbd0c4773f6edb98a28c8ff6a2ead0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BKP_ITConfig</definition>
        <argsstring>(FunctionalState NewState)</argsstring>
        <name>BKP_ITConfig</name>
        <param>
          <type><ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref></type>
          <declname>NewState</declname>
        </param>
        <briefdescription>
<para>Enables or disables the Tamper Pin Interrupt. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>NewState</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of the Tamper Pin Interrupt. This parameter can be: ENABLE or DISABLE. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_bkp.c" line="160" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_bkp.c" bodystart="160" bodyend="165"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" compoundref="stm32f10x_8h" startline="522">IS_FUNCTIONAL_STATE</references>
        <references refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" compoundref="core__cm0_8h" startline="221">__IO</references>
        <references refid="group___b_k_p___private___defines_1ga1f6dcf729994613b21f554ca371d393c" compoundref="stm32f10x__bkp_8c" startline="66">CSR_TPIE_BB</references>
      </memberdef>
      <memberdef kind="function" id="group___b_k_p___private___functions_1ga3d1b22b3c6a79f7b423616a0af1885bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BKP_RTCOutputConfig</definition>
        <argsstring>(uint16_t BKP_RTCOutputSource)</argsstring>
        <name>BKP_RTCOutputConfig</name>
        <param>
          <type>uint16_t</type>
          <declname>BKP_RTCOutputSource</declname>
        </param>
        <briefdescription>
<para>Select the RTC output source to output on the Tamper pin. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>BKP_RTCOutputSource</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the RTC output source. This parameter can be one of the following values: <itemizedlist>
<listitem><para>BKP_RTCOutputSource_None: no RTC output on the Tamper pin. </para></listitem>
<listitem><para>BKP_RTCOutputSource_CalibClock: output the RTC clock with frequency divided by 64 on the Tamper pin. </para></listitem>
<listitem><para>BKP_RTCOutputSource_Alarm: output the RTC Alarm pulse signal on the Tamper pin. </para></listitem>
<listitem><para>BKP_RTCOutputSource_Second: output the RTC Second pulse signal on the Tamper pin. </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_bkp.c" line="180" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_bkp.c" bodystart="180" bodyend="193"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___r_t_c__output__source__to__output__on__the___tamper__pin_1gac59454ee255feb55b5e14c34b70c99da" compoundref="stm32f10x__bkp_8h" startline="74">IS_BKP_RTC_OUTPUT_SOURCE</references>
        <references refid="group___peripheral__declaration_1gaa38716de06974ea948ad34ef7bfee00b" compoundref="stm32f10x_8h" startline="1402">BKP</references>
        <references refid="group___b_k_p___private___defines_1ga4bda91755d5ae28e9e487e946917a1ec" compoundref="stm32f10x__bkp_8c" startline="80">RTCCR_MASK</references>
      </memberdef>
      <memberdef kind="function" id="group___b_k_p___private___functions_1gad34db08a944450d2e7d56d0fd8db2bca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BKP_SetRTCCalibrationValue</definition>
        <argsstring>(uint8_t CalibrationValue)</argsstring>
        <name>BKP_SetRTCCalibrationValue</name>
        <param>
          <type>uint8_t</type>
          <declname>CalibrationValue</declname>
        </param>
        <briefdescription>
<para>Sets RTC Clock Calibration value. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>CalibrationValue</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the RTC Clock Calibration value. This parameter must be a number between 0 and 0x7F. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_bkp.c" line="201" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_bkp.c" bodystart="201" bodyend="226"/>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___data___backup___register_1gafc3386eaa5383b64e9d706e5fe8dc1cf" compoundref="stm32f10x__bkp_8h" startline="144">IS_BKP_CALIBRATION_VALUE</references>
        <references refid="group___peripheral__declaration_1gaa38716de06974ea948ad34ef7bfee00b" compoundref="stm32f10x_8h" startline="1402">BKP</references>
        <references refid="group___b_k_p___private___defines_1ga61a540c5dd9d18e936b8fd3e01f7f6ff" compoundref="stm32f10x__bkp_8c" startline="79">RTCCR_CAL_MASK</references>
      </memberdef>
      <memberdef kind="function" id="group___b_k_p___private___functions_1ga18d220387db651b3cb71fad5c092e041" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BKP_WriteBackupRegister</definition>
        <argsstring>(uint16_t BKP_DR, uint16_t Data)</argsstring>
        <name>BKP_WriteBackupRegister</name>
        <param>
          <type>uint16_t</type>
          <declname>BKP_DR</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>Data</declname>
        </param>
        <briefdescription>
<para>Writes user data to the specified Data Backup Register. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>BKP_DR</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the Data Backup Register. This parameter can be BKP_DRx where x:[1, 42] </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Data</parametername>
</parameternamelist>
<parameterdescription>
<para>data to write </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_bkp.c" line="235" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_bkp.c" bodystart="235" bodyend="246"/>
        <references refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" compoundref="core__cm0_8h" startline="221">__IO</references>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___data___backup___register_1gaff069cf5458ccf0a94e2f784e2d610b8" compoundref="stm32f10x__bkp_8h" startline="129">IS_BKP_DR</references>
        <references refid="group___peripheral__memory__map_1gaa15d5a9f40794105397ba5ea567c4ae1" compoundref="stm32f10x_8h" startline="1308">BKP_BASE</references>
      </memberdef>
      <memberdef kind="function" id="group___b_k_p___private___functions_1ga359d8fbc945e0f4e34fedbe037d842c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t BKP_ReadBackupRegister</definition>
        <argsstring>(uint16_t BKP_DR)</argsstring>
        <name>BKP_ReadBackupRegister</name>
        <param>
          <type>uint16_t</type>
          <declname>BKP_DR</declname>
        </param>
        <briefdescription>
<para>Reads data from the specified Data Backup Register. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>BKP_DR</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the Data Backup Register. This parameter can be BKP_DRx where x:[1, 42] </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>content of the specified Data Backup Register </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_bkp.c" line="254" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_bkp.c" bodystart="254" bodyend="265"/>
        <references refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" compoundref="core__cm0_8h" startline="221">__IO</references>
        <references refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" compoundref="stm32f10x__conf_8h" startline="72">assert_param</references>
        <references refid="group___data___backup___register_1gaff069cf5458ccf0a94e2f784e2d610b8" compoundref="stm32f10x__bkp_8h" startline="129">IS_BKP_DR</references>
        <references refid="group___peripheral__memory__map_1gaa15d5a9f40794105397ba5ea567c4ae1" compoundref="stm32f10x_8h" startline="1308">BKP_BASE</references>
      </memberdef>
      <memberdef kind="function" id="group___b_k_p___private___functions_1gacc9aedde760383f0bd146f0d77a547db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___exported__types_1ga89136caac2e14c55151f527ac02daaff" kindref="member">FlagStatus</ref></type>
        <definition>FlagStatus BKP_GetFlagStatus</definition>
        <argsstring>(void)</argsstring>
        <name>BKP_GetFlagStatus</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Checks whether the Tamper Pin Event flag is set or not. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of the Tamper Pin Event flag (SET or RESET). </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_bkp.c" line="272" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_bkp.c" bodystart="272" bodyend="275"/>
        <references refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" compoundref="core__cm0_8h" startline="221">__IO</references>
        <references refid="group___b_k_p___private___defines_1gad60539cc791a26701d414aee529ea203" compoundref="stm32f10x__bkp_8c" startline="74">CSR_TEF_BB</references>
      </memberdef>
      <memberdef kind="function" id="group___b_k_p___private___functions_1ga3f3aea5b0a3d8d5d79b0b506928351ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BKP_ClearFlag</definition>
        <argsstring>(void)</argsstring>
        <name>BKP_ClearFlag</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Clears Tamper Pin Event pending flag. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_bkp.c" line="282" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_bkp.c" bodystart="282" bodyend="286"/>
        <references refid="group___peripheral__declaration_1gaa38716de06974ea948ad34ef7bfee00b" compoundref="stm32f10x_8h" startline="1402">BKP</references>
        <references refid="group___peripheral___registers___bits___definition_1gad8cec91d3c30db07961227bcea5c5452" compoundref="stm32f10x_8h" startline="1668">BKP_CSR_CTE</references>
      </memberdef>
      <memberdef kind="function" id="group___b_k_p___private___functions_1ga99566c9f1f17f499020606cb63511494" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___exported__types_1gaacbd7ed539db0aacd973a0f6eca34074" kindref="member">ITStatus</ref></type>
        <definition>ITStatus BKP_GetITStatus</definition>
        <argsstring>(void)</argsstring>
        <name>BKP_GetITStatus</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Checks whether the Tamper Pin Interrupt has occurred or not. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of the Tamper Pin Interrupt (SET or RESET). </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_bkp.c" line="293" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_bkp.c" bodystart="293" bodyend="296"/>
        <references refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" compoundref="core__cm0_8h" startline="221">__IO</references>
        <references refid="group___b_k_p___private___defines_1ga8d9e7cac2321fae6d257e8c1316264e3" compoundref="stm32f10x__bkp_8c" startline="70">CSR_TIF_BB</references>
      </memberdef>
      <memberdef kind="function" id="group___b_k_p___private___functions_1ga6a93ef8e40959bb10fea670e2040ad74" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BKP_ClearITPendingBit</definition>
        <argsstring>(void)</argsstring>
        <name>BKP_ClearITPendingBit</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Clears Tamper Pin Interrupt pending bit. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_bkp.c" line="303" column="1" bodyfile="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_bkp.c" bodystart="303" bodyend="307"/>
        <references refid="group___peripheral__declaration_1gaa38716de06974ea948ad34ef7bfee00b" compoundref="stm32f10x_8h" startline="1402">BKP</references>
        <references refid="group___peripheral___registers___bits___definition_1gad7dc97ae504ef58fb2137c1fdd02fc4e" compoundref="stm32f10x_8h" startline="1669">BKP_CSR_CTI</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This file provides all the BKP firmware functions. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>MCD Application Team </para></simplesect>
<simplesect kind="version"><para>V3.5.0 </para></simplesect>
<simplesect kind="date"><para>11-March-2011 </para></simplesect>
<simplesect kind="attention"><para></para></simplesect>
THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.</para><para><heading level="2"><center><copy/> COPYRIGHT 2011 STMicroelectronics</center></heading>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="22"><highlight class="comment">/*<sp/>Includes<sp/>------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="stm32f10x__bkp_8h" kindref="compound">stm32f10x_bkp.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="stm32f10x__rcc_8h" kindref="compound">stm32f10x_rcc.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="comment">/*<sp/>------------<sp/>BKP<sp/>registers<sp/>bit<sp/>address<sp/>in<sp/>the<sp/>alias<sp/>region<sp/>---------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="group___b_k_p___private___defines_1gaaaf71f474657e7c0c5b0d6ba9697cf5d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BKP_OFFSET<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(BKP_BASE<sp/>-<sp/>PERIPH_BASE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>---<sp/>CR<sp/>Register<sp/>----*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Alias<sp/>word<sp/>address<sp/>of<sp/>TPAL<sp/>bit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="group___b_k_p___private___defines_1gafa1d3d0ea72132df651c76fc1bdffffc" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CR_OFFSET<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(BKP_OFFSET<sp/>+<sp/>0x30)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="group___b_k_p___private___defines_1ga4af1869d665b8804104b6754c787820a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TPAL_BitNumber<sp/><sp/><sp/><sp/>0x01</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="group___b_k_p___private___defines_1gaa36e52f37b9fa6982bd224a6dcb86f78" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CR_TPAL_BB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(PERIPH_BB_BASE<sp/>+<sp/>(CR_OFFSET<sp/>*<sp/>32)<sp/>+<sp/>(TPAL_BitNumber<sp/>*<sp/>4))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Alias<sp/>word<sp/>address<sp/>of<sp/>TPE<sp/>bit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="group___b_k_p___private___defines_1ga8c68be900246b028ff4af93ad119eb98" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TPE_BitNumber<sp/><sp/><sp/><sp/><sp/>0x00</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="group___b_k_p___private___defines_1ga6c11e801c2c1aa87ec2feaefe12bbb96" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CR_TPE_BB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(PERIPH_BB_BASE<sp/>+<sp/>(CR_OFFSET<sp/>*<sp/>32)<sp/>+<sp/>(TPE_BitNumber<sp/>*<sp/>4))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>---<sp/>CSR<sp/>Register<sp/>---*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Alias<sp/>word<sp/>address<sp/>of<sp/>TPIE<sp/>bit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="group___b_k_p___private___defines_1ga984cbe73312b6d3d355c5053763d499a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CSR_OFFSET<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(BKP_OFFSET<sp/>+<sp/>0x34)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="group___b_k_p___private___defines_1gac62e6ae9548498efa47fb72637545117" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TPIE_BitNumber<sp/><sp/><sp/><sp/>0x02</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="group___b_k_p___private___defines_1ga1f6dcf729994613b21f554ca371d393c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CSR_TPIE_BB<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(PERIPH_BB_BASE<sp/>+<sp/>(CSR_OFFSET<sp/>*<sp/>32)<sp/>+<sp/>(TPIE_BitNumber<sp/>*<sp/>4))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Alias<sp/>word<sp/>address<sp/>of<sp/>TIF<sp/>bit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="group___b_k_p___private___defines_1gac8b1b82c7029c05e720c50585762bcf2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TIF_BitNumber<sp/><sp/><sp/><sp/><sp/>0x09</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="group___b_k_p___private___defines_1ga8d9e7cac2321fae6d257e8c1316264e3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CSR_TIF_BB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(PERIPH_BB_BASE<sp/>+<sp/>(CSR_OFFSET<sp/>*<sp/>32)<sp/>+<sp/>(TIF_BitNumber<sp/>*<sp/>4))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Alias<sp/>word<sp/>address<sp/>of<sp/>TEF<sp/>bit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="group___b_k_p___private___defines_1gaeb8676e7543d93df60cf7c63fd795672" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TEF_BitNumber<sp/><sp/><sp/><sp/><sp/>0x08</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="group___b_k_p___private___defines_1gad60539cc791a26701d414aee529ea203" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CSR_TEF_BB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(PERIPH_BB_BASE<sp/>+<sp/>(CSR_OFFSET<sp/>*<sp/>32)<sp/>+<sp/>(TEF_BitNumber<sp/>*<sp/>4))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>----------------------<sp/>BKP<sp/>registers<sp/>bit<sp/>mask<sp/>------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>RTCCR<sp/>register<sp/>bit<sp/>mask<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="group___b_k_p___private___defines_1ga61a540c5dd9d18e936b8fd3e01f7f6ff" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RTCCR_CAL_MASK<sp/><sp/><sp/><sp/>((uint16_t)0xFF80)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="group___b_k_p___private___defines_1ga4bda91755d5ae28e9e487e946917a1ec" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RTCCR_MASK<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint16_t)0xFC7F)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="120" refid="group___b_k_p___private___functions_1gaabff4d8f5ebf4fd9a840bcc9042ca226" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___b_k_p___private___functions_1gaabff4d8f5ebf4fd9a840bcc9042ca226" kindref="member">BKP_DeInit</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="121"><highlight class="normal">{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><ref refid="group___r_c_c___exported___functions_1ga636c3b72f35391e67f12a551b15fa54a" kindref="member">RCC_BackupResetCmd</ref>(<ref refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1a7d46875fa3ebd2c34d2756950eda83bf" kindref="member">ENABLE</ref>);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><ref refid="group___r_c_c___exported___functions_1ga636c3b72f35391e67f12a551b15fa54a" kindref="member">RCC_BackupResetCmd</ref>(<ref refid="group___exported__types_1ggac9a7e9a35d2513ec15c3b537aaa4fba1ad3a9df141be0ccf10389b640f492b26d" kindref="member">DISABLE</ref>);</highlight></codeline>
<codeline lineno="124"><highlight class="normal">}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="134" refid="group___b_k_p___private___functions_1gae216446d641d075fb575ce6dbe2ff4c1" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___b_k_p___private___functions_1gae216446d641d075fb575ce6dbe2ff4c1" kindref="member">BKP_TamperPinLevelConfig</ref>(uint16_t<sp/>BKP_TamperPinLevel)</highlight></codeline>
<codeline lineno="135"><highlight class="normal">{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___tamper___pin__active__level_1gae7cd3bd314605f7752062c814b850c23" kindref="member">IS_BKP_TAMPER_PIN_LEVEL</ref>(BKP_TamperPinLevel));</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>*(<ref refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" kindref="member">__IO</ref><sp/>uint32_t<sp/>*)<sp/><ref refid="group___b_k_p___private___defines_1gaa36e52f37b9fa6982bd224a6dcb86f78" kindref="member">CR_TPAL_BB</ref><sp/>=<sp/>BKP_TamperPinLevel;</highlight></codeline>
<codeline lineno="139"><highlight class="normal">}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="147" refid="group___b_k_p___private___functions_1ga3a0cdff9ad8238ade2c67e2b70f530ac" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___b_k_p___private___functions_1ga3a0cdff9ad8238ade2c67e2b70f530ac" kindref="member">BKP_TamperPinCmd</ref>(<ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref><sp/>NewState)</highlight></codeline>
<codeline lineno="148"><highlight class="normal">{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" kindref="member">IS_FUNCTIONAL_STATE</ref>(NewState));</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/>*(<ref refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" kindref="member">__IO</ref><sp/>uint32_t<sp/>*)<sp/><ref refid="group___b_k_p___private___defines_1ga6c11e801c2c1aa87ec2feaefe12bbb96" kindref="member">CR_TPE_BB</ref><sp/>=<sp/>(uint32_t)NewState;</highlight></codeline>
<codeline lineno="152"><highlight class="normal">}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="160" refid="group___b_k_p___private___functions_1gab8dbd0c4773f6edb98a28c8ff6a2ead0" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___b_k_p___private___functions_1gab8dbd0c4773f6edb98a28c8ff6a2ead0" kindref="member">BKP_ITConfig</ref>(<ref refid="group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1" kindref="member">FunctionalState</ref><sp/>NewState)</highlight></codeline>
<codeline lineno="161"><highlight class="normal">{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___exported__types_1gaffaf7c3f537d7a3370b1bbdda67a2bf6" kindref="member">IS_FUNCTIONAL_STATE</ref>(NewState));</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>*(<ref refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" kindref="member">__IO</ref><sp/>uint32_t<sp/>*)<sp/><ref refid="group___b_k_p___private___defines_1ga1f6dcf729994613b21f554ca371d393c" kindref="member">CSR_TPIE_BB</ref><sp/>=<sp/>(uint32_t)NewState;</highlight></codeline>
<codeline lineno="165"><highlight class="normal">}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="180" refid="group___b_k_p___private___functions_1ga3d1b22b3c6a79f7b423616a0af1885bf" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___b_k_p___private___functions_1ga3d1b22b3c6a79f7b423616a0af1885bf" kindref="member">BKP_RTCOutputConfig</ref>(uint16_t<sp/>BKP_RTCOutputSource)</highlight></codeline>
<codeline lineno="181"><highlight class="normal">{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/>uint16_t<sp/>tmpreg<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___r_t_c__output__source__to__output__on__the___tamper__pin_1gac59454ee255feb55b5e14c34b70c99da" kindref="member">IS_BKP_RTC_OUTPUT_SOURCE</ref>(BKP_RTCOutputSource));</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/>tmpreg<sp/>=<sp/><ref refid="group___peripheral__declaration_1gaa38716de06974ea948ad34ef7bfee00b" kindref="member">BKP</ref>-&gt;RTCCR;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Clear<sp/>CCO,<sp/>ASOE<sp/>and<sp/>ASOS<sp/>bits<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/>tmpreg<sp/>&amp;=<sp/><ref refid="group___b_k_p___private___defines_1ga4bda91755d5ae28e9e487e946917a1ec" kindref="member">RTCCR_MASK</ref>;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>CCO,<sp/>ASOE<sp/>and<sp/>ASOS<sp/>bits<sp/>according<sp/>to<sp/>BKP_RTCOutputSource<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/>tmpreg<sp/>|=<sp/>BKP_RTCOutputSource;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Store<sp/>the<sp/>new<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><ref refid="group___peripheral__declaration_1gaa38716de06974ea948ad34ef7bfee00b" kindref="member">BKP</ref>-&gt;RTCCR<sp/>=<sp/>tmpreg;</highlight></codeline>
<codeline lineno="193"><highlight class="normal">}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="201" refid="group___b_k_p___private___functions_1gad34db08a944450d2e7d56d0fd8db2bca" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___b_k_p___private___functions_1gad34db08a944450d2e7d56d0fd8db2bca" kindref="member">BKP_SetRTCCalibrationValue</ref>(uint8_t<sp/>CalibrationValue)</highlight></codeline>
<codeline lineno="202"><highlight class="normal">{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/>uint16_t<sp/>tmpreg<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___data___backup___register_1gafc3386eaa5383b64e9d706e5fe8dc1cf" kindref="member">IS_BKP_CALIBRATION_VALUE</ref>(CalibrationValue));</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/>tmpreg<sp/>=<sp/><ref refid="group___peripheral__declaration_1gaa38716de06974ea948ad34ef7bfee00b" kindref="member">BKP</ref>-&gt;RTCCR;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Clear<sp/>CAL[6:0]<sp/>bits<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/>tmpreg<sp/>&amp;=<sp/><ref refid="group___b_k_p___private___defines_1ga61a540c5dd9d18e936b8fd3e01f7f6ff" kindref="member">RTCCR_CAL_MASK</ref>;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>CAL[6:0]<sp/>bits<sp/>according<sp/>to<sp/>CalibrationValue<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>[ILG]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>defined<sp/>(<sp/>__GNUC__<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#pragma<sp/>GCC<sp/>diagnostic<sp/>push</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#pragma<sp/>GCC<sp/>diagnostic<sp/>ignored<sp/>&quot;-Wconversion&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/>tmpreg<sp/>|=<sp/>CalibrationValue;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>[ILG]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>defined<sp/>(<sp/>__GNUC__<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#pragma<sp/>GCC<sp/>diagnostic<sp/>pop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Store<sp/>the<sp/>new<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><ref refid="group___peripheral__declaration_1gaa38716de06974ea948ad34ef7bfee00b" kindref="member">BKP</ref>-&gt;RTCCR<sp/>=<sp/>tmpreg;</highlight></codeline>
<codeline lineno="226"><highlight class="normal">}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="235" refid="group___b_k_p___private___functions_1ga18d220387db651b3cb71fad5c092e041" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___b_k_p___private___functions_1ga18d220387db651b3cb71fad5c092e041" kindref="member">BKP_WriteBackupRegister</ref>(uint16_t<sp/>BKP_DR,<sp/>uint16_t<sp/>Data)</highlight></codeline>
<codeline lineno="236"><highlight class="normal">{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><ref refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" kindref="member">__IO</ref><sp/>uint32_t<sp/>tmp<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___data___backup___register_1gaff069cf5458ccf0a94e2f784e2d610b8" kindref="member">IS_BKP_DR</ref>(BKP_DR));</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/>tmp<sp/>=<sp/>(uint32_t)<ref refid="group___peripheral__memory__map_1gaa15d5a9f40794105397ba5ea567c4ae1" kindref="member">BKP_BASE</ref>;<sp/></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/>tmp<sp/>+=<sp/>BKP_DR;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/>*(<ref refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" kindref="member">__IO</ref><sp/>uint32_t<sp/>*)<sp/>tmp<sp/>=<sp/>Data;</highlight></codeline>
<codeline lineno="246"><highlight class="normal">}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="254" refid="group___b_k_p___private___functions_1ga359d8fbc945e0f4e34fedbe037d842c8" refkind="member"><highlight class="normal">uint16_t<sp/><ref refid="group___b_k_p___private___functions_1ga359d8fbc945e0f4e34fedbe037d842c8" kindref="member">BKP_ReadBackupRegister</ref>(uint16_t<sp/>BKP_DR)</highlight></codeline>
<codeline lineno="255"><highlight class="normal">{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><ref refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" kindref="member">__IO</ref><sp/>uint32_t<sp/>tmp<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><ref refid="stm32f10x__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___data___backup___register_1gaff069cf5458ccf0a94e2f784e2d610b8" kindref="member">IS_BKP_DR</ref>(BKP_DR));</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/>tmp<sp/>=<sp/>(uint32_t)<ref refid="group___peripheral__memory__map_1gaa15d5a9f40794105397ba5ea567c4ae1" kindref="member">BKP_BASE</ref>;<sp/></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/>tmp<sp/>+=<sp/>BKP_DR;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*(<ref refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" kindref="member">__IO</ref><sp/>uint16_t<sp/>*)<sp/>tmp);</highlight></codeline>
<codeline lineno="265"><highlight class="normal">}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="272" refid="group___b_k_p___private___functions_1gacc9aedde760383f0bd146f0d77a547db" refkind="member"><highlight class="normal"><ref refid="group___exported__types_1ga89136caac2e14c55151f527ac02daaff" kindref="member">FlagStatus</ref><sp/><ref refid="group___b_k_p___private___functions_1gacc9aedde760383f0bd146f0d77a547db" kindref="member">BKP_GetFlagStatus</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="273"><highlight class="normal">{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="group___exported__types_1ga89136caac2e14c55151f527ac02daaff" kindref="member">FlagStatus</ref>)(*(<ref refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" kindref="member">__IO</ref><sp/>uint32_t<sp/>*)<sp/><ref refid="group___b_k_p___private___defines_1gad60539cc791a26701d414aee529ea203" kindref="member">CSR_TEF_BB</ref>);</highlight></codeline>
<codeline lineno="275"><highlight class="normal">}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="282" refid="group___b_k_p___private___functions_1ga3f3aea5b0a3d8d5d79b0b506928351ea" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___b_k_p___private___functions_1ga3f3aea5b0a3d8d5d79b0b506928351ea" kindref="member">BKP_ClearFlag</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="283"><highlight class="normal">{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>CTE<sp/>bit<sp/>to<sp/>clear<sp/>Tamper<sp/>Pin<sp/>Event<sp/>flag<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><ref refid="group___peripheral__declaration_1gaa38716de06974ea948ad34ef7bfee00b" kindref="member">BKP</ref>-&gt;CSR<sp/>|=<sp/><ref refid="group___peripheral___registers___bits___definition_1gad8cec91d3c30db07961227bcea5c5452" kindref="member">BKP_CSR_CTE</ref>;</highlight></codeline>
<codeline lineno="286"><highlight class="normal">}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="293" refid="group___b_k_p___private___functions_1ga99566c9f1f17f499020606cb63511494" refkind="member"><highlight class="normal"><ref refid="group___exported__types_1gaacbd7ed539db0aacd973a0f6eca34074" kindref="member">ITStatus</ref><sp/><ref refid="group___b_k_p___private___functions_1ga99566c9f1f17f499020606cb63511494" kindref="member">BKP_GetITStatus</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="294"><highlight class="normal">{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="group___exported__types_1gaacbd7ed539db0aacd973a0f6eca34074" kindref="member">ITStatus</ref>)(*(<ref refid="core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be" kindref="member">__IO</ref><sp/>uint32_t<sp/>*)<sp/><ref refid="group___b_k_p___private___defines_1ga8d9e7cac2321fae6d257e8c1316264e3" kindref="member">CSR_TIF_BB</ref>);</highlight></codeline>
<codeline lineno="296"><highlight class="normal">}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="303" refid="group___b_k_p___private___functions_1ga6a93ef8e40959bb10fea670e2040ad74" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___b_k_p___private___functions_1ga6a93ef8e40959bb10fea670e2040ad74" kindref="member">BKP_ClearITPendingBit</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="304"><highlight class="normal">{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>CTI<sp/>bit<sp/>to<sp/>clear<sp/>Tamper<sp/>Pin<sp/>Interrupt<sp/>pending<sp/>bit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><ref refid="group___peripheral__declaration_1gaa38716de06974ea948ad34ef7bfee00b" kindref="member">BKP</ref>-&gt;CSR<sp/>|=<sp/><ref refid="group___peripheral___registers___bits___definition_1gad7dc97ae504ef58fb2137c1fdd02fc4e" kindref="member">BKP_CSR_CTI</ref>;</highlight></codeline>
<codeline lineno="307"><highlight class="normal">}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="comment">/*******************<sp/>(C)<sp/>COPYRIGHT<sp/>2011<sp/>STMicroelectronics<sp/>*****END<sp/>OF<sp/>FILE****/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/Users/anilj/Desktop/cmsis/sorc/system/src/stm32f1-stdperiph/stm32f10x_bkp.c"/>
  </compounddef>
</doxygen>
